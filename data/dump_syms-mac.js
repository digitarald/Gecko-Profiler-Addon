// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module['getMemory'] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;
buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 31264;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_iostream_cpp() } });
  

/* memory initializer */ allocate([232,21,0,0,244,50,0,0,16,22,0,0,35,51,0,0,32,0,0,0,0,0,0,0,232,21,0,0,159,53,0,0,16,22,0,0,199,53,0,0,16,3,0,0,0,0,0,0,16,22,0,0,9,54,0,0,80,3,0,0,0,0,0,0,232,21,0,0,185,57,0,0,16,22,0,0,239,57,0,0,144,0,0,0,0,0,0,0,16,22,0,0,39,58,0,0,80,0,0,0,0,0,0,0,16,22,0,0,89,58,0,0,80,0,0,0,0,0,0,0,16,22,0,0,145,58,0,0,152,0,0,0,0,0,0,0,232,21,0,0,82,63,0,0,16,22,0,0,49,63,0,0,144,0,0,0,0,0,0,0,16,22,0,0,111,63,0,0,184,0,0,0,0,0,0,0,232,21,0,0,31,64,0,0,16,22,0,0,65,64,0,0,208,0,0,0,0,0,0,0,232,21,0,0,104,64,0,0,16,22,0,0,133,64,0,0,208,0,0,0,0,0,0,0,16,22,0,0,167,64,0,0,208,0,0,0,0,0,0,0,16,22,0,0,205,66,0,0,8,1,0,0,0,0,0,0,232,21,0,0,190,67,0,0,232,21,0,0,224,67,0,0,16,22,0,0,214,68,0,0,40,1,0,0,0,0,0,0,232,21,0,0,254,69,0,0,232,21,0,0,30,70,0,0,232,21,0,0,94,81,0,0,16,22,0,0,47,81,0,0,56,1,0,0,0,0,0,0,16,22,0,0,131,81,0,0,56,1,0,0,0,0,0,0,16,22,0,0,175,81,0,0,56,1,0,0,0,0,0,0,16,22,0,0,223,81,0,0,56,1,0,0,0,0,0,0,16,22,0,0,13,82,0,0,56,1,0,0,0,0,0,0,16,22,0,0,60,82,0,0,56,1,0,0,0,0,0,0,16,22,0,0,107,82,0,0,56,1,0,0,0,0,0,0,232,21,0,0,158,82,0,0,232,21,0,0,184,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,22,0,0,48,83,0,0,224,1,0,0,0,0,0,0,232,21,0,0,192,87,0,0,16,22,0,0,246,87,0,0,248,1,0,0,0,0,0,0,232,21,0,0,43,88,0,0,232,21,0,0,104,88,0,0,232,21,0,0,150,88,0,0,16,22,0,0,140,93,0,0,32,2,0,0,0,0,0,0,232,21,0,0,189,93,0,0,16,22,0,0,25,97,0,0,56,2,0,0,0,0,0,0,232,21,0,0,38,97,0,0,232,21,0,0,51,97,0,0,16,22,0,0,64,97,0,0,64,2,0,0,0,0,0,0,16,22,0,0,97,97,0,0,72,2,0,0,0,0,0,0,16,22,0,0,167,97,0,0,72,2,0,0,0,0,0,0,16,22,0,0,131,97,0,0,104,2,0,0,0,0,0,0,16,22,0,0,201,97,0,0,88,2,0,0,0,0,0,0,16,22,0,0,238,97,0,0,88,2,0,0,0,0,0,0,16,22,0,0,208,110,0,0,24,3,0,0,0,0,0,0,16,22,0,0,15,111,0,0,24,3,0,0,0,0,0,0,16,22,0,0,39,111,0,0,16,3,0,0,0,0,0,0,16,22,0,0,64,111,0,0,16,3,0,0,0,0,0,0,232,21,0,0,88,111,0,0,16,22,0,0,106,111,0,0,232,2,0,0,0,0,0,0,16,22,0,0,148,111,0,0,232,2,0,0,0,0,0,0,232,21,0,0,190,111,0,0,232,21,0,0,239,111,0,0,56,22,0,0,32,112,0,0,0,0,0,0,1,0,0,0,240,2,0,0,3,244,255,255,56,22,0,0,79,112,0,0,0,0,0,0,1,0,0,0,0,3,0,0,3,244,255,255,56,22,0,0,126,112,0,0,0,0,0,0,1,0,0,0,240,2,0,0,3,244,255,255,56,22,0,0,173,112,0,0,0,0,0,0,1,0,0,0,0,3,0,0,3,244,255,255,16,22,0,0,253,112,0,0,112,10,0,0,0,0,0,0,56,22,0,0,19,113,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,160,9,0,0,2,0,0,0,56,22,0,0,37,113,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,168,9,0,0,2,0,0,0,56,22,0,0,71,113,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,168,9,0,0,2,0,0,0,56,22,0,0,106,113,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,168,9,0,0,2,0,0,0,16,22,0,0,141,113,0,0,240,3,0,0,0,0,0,0,16,22,0,0,175,113,0,0,240,3,0,0,0,0,0,0,56,22,0,0,210,113,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,168,9,0,0,2,0,0,0,16,22,0,0,244,113,0,0,128,3,0,0,0,0,0,0,16,22,0,0,10,114,0,0,128,3,0,0,0,0,0,0,16,22,0,0,30,114,0,0,128,3,0,0,0,0,0,0,56,22,0,0,50,114,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,160,9,0,0,2,0,0,0,16,22,0,0,68,114,0,0,128,3,0,0,0,0,0,0,16,22,0,0,89,114,0,0,128,3,0,0,0,0,0,0,56,22,0,0,110,114,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,176,9,0,0,0,0,0,0,56,22,0,0,178,114,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,200,9,0,0,0,0,0,0,56,22,0,0,246,114,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,224,9,0,0,0,0,0,0,56,22,0,0,58,115,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,248,9,0,0,0,0,0,0,56,22,0,0,126,115,0,0,0,0,0,0,3,0,0,0,128,3,0,0,2,0,0,0,16,10,0,0,2,0,0,0,24,10,0,0,0,8,0,0,56,22,0,0,195,115,0,0,0,0,0,0,3,0,0,0,128,3,0,0,2,0,0,0,16,10,0,0,2,0,0,0,32,10,0,0,0,8,0,0,56,22,0,0,8,116,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,40,10,0,0,0,8,0,0,56,22,0,0,77,116,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,40,10,0,0,0,8,0,0,56,22,0,0,146,116,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,48,10,0,0,2,0,0,0,56,22,0,0,174,116,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,48,10,0,0,2,0,0,0,56,22,0,0,202,116,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,48,10,0,0,2,0,0,0,56,22,0,0,230,116,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,48,10,0,0,2,0,0,0,56,22,0,0,2,117,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,56,10,0,0,0,0,0,0,56,22,0,0,72,117,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,64,10,0,0,0,0,0,0,56,22,0,0,142,117,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,72,10,0,0,0,0,0,0,56,22,0,0,212,117,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,80,10,0,0,0,0,0,0,56,22,0,0,26,118,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,88,10,0,0,2,0,0,0,56,22,0,0,47,118,0,0,0,0,0,0,2,0,0,0,128,3,0,0,2,0,0,0,88,10,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,21,0,0,232,121,0,0,232,21,0,0,209,121,0,0,56,22,0,0,187,121,0,0,0,0,0,0,1,0,0,0,104,10,0,0,0,0,0,0,56,22,0,0,140,121,0,0,0,0,0,0,1,0,0,0,104,10,0,0,0,0,0,0,56,22,0,0,118,121,0,0,0,0,0,0,1,0,0,0,96,10,0,0,0,0,0,0,56,22,0,0,71,121,0,0,0,0,0,0,1,0,0,0,96,10,0,0,0,0,0,0,232,21,0,0,52,121,0,0,232,21,0,0,18,121,0,0,232,21,0,0,240,120,0,0,232,21,0,0,219,120,0,0,232,21,0,0,198,120,0,0,232,21,0,0,173,120,0,0,232,21,0,0,148,120,0,0,232,21,0,0,123,120,0,0,232,21,0,0,98,120,0,0,232,21,0,0,74,120,0,0,232,21,0,0,93,121,0,0,232,21,0,0,162,121,0,0,232,21,0,0,253,121,0,0,0,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,16,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,123,57,0,0,128,57,0,0,133,57,0,0,138,57,0,0,143,57,0,0,148,57,0,0,153,57,0,0,158,57,0,0,163,57,0,0,168,57,0,0,42,57,0,0,186,56,0,0,191,56,0,0,196,56,0,0,201,56,0,0,206,56,0,0,211,56,0,0,216,56,0,0,221,56,0,0,51,57,0,0,78,57,0,0,84,56,0,0,90,56,0,0,96,56,0,0,102,56,0,0,108,56,0,0,114,56,0,0,120,56,0,0,126,56,0,0,226,56,0,0,231,56,0,0,236,56,0,0,241,56,0,0,246,56,0,0,251,56,0,0,0,57,0,0,5,57,0,0,113,57,0,0,118,57,0,0,106,57,0,0,18,57,0,0,22,57,0,0,26,57,0,0,30,57,0,0,34,57,0,0,38,57,0,0,87,57,0,0,176,57,0,0,96,57,0,0,100,57,0,0,1,56,0,0,6,56,0,0,11,56,0,0,16,56,0,0,21,56,0,0,26,56,0,0,31,56,0,0,36,56,0,0,41,56,0,0,45,56,0,0,49,56,0,0,54,56,0,0,59,56,0,0,64,56,0,0,69,56,0,0,74,56,0,0,79,56,0,0,84,56,0,0,90,56,0,0,96,56,0,0,102,56,0,0,108,56,0,0,114,56,0,0,120,56,0,0,126,56,0,0,132,56,0,0,138,56,0,0,144,56,0,0,151,56,0,0,158,56,0,0,165,56,0,0,172,56,0,0,179,56,0,0,186,56,0,0,191,56,0,0,196,56,0,0,201,56,0,0,206,56,0,0,211,56,0,0,216,56,0,0,221,56,0,0,226,56,0,0,231,56,0,0,236,56,0,0,241,56,0,0,246,56,0,0,251,56,0,0,0,57,0,0,5,57,0,0,10,57,0,0,18,57,0,0,22,57,0,0,26,57,0,0,30,57,0,0,34,57,0,0,38,57,0,0,42,57,0,0,51,57,0,0,60,57,0,0,69,57,0,0,78,57,0,0,87,57,0,0,96,57,0,0,100,57,0,0,106,57,0,0,113,57,0,0,118,57,0,0,58,55,0,0,61,55,0,0,64,55,0,0,67,55,0,0,70,55,0,0,73,55,0,0,76,55,0,0,79,55,0,0,82,55,0,0,85,55,0,0,88,55,0,0,92,55,0,0,96,55,0,0,193,54,0,0,100,55,0,0,103,55,0,0,106,55,0,0,109,55,0,0,112,55,0,0,115,55,0,0,118,55,0,0,121,55,0,0,124,55,0,0,127,55,0,0,130,55,0,0,134,55,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,139,55,0,0,142,55,0,0,145,55,0,0,148,55,0,0,151,55,0,0,154,55,0,0,157,55,0,0,160,55,0,0,163,55,0,0,166,55,0,0,169,55,0,0,173,55,0,0,177,55,0,0,181,55,0,0,185,55,0,0,189,55,0,0,193,55,0,0,197,55,0,0,201,55,0,0,205,55,0,0,209,55,0,0,213,55,0,0,217,55,0,0,221,55,0,0,225,55,0,0,229,55,0,0,233,55,0,0,237,55,0,0,241,55,0,0,245,55,0,0,249,55,0,0,253,55,0,0,106,55,0,0,109,55,0,0,112,55,0,0,115,55,0,0,118,55,0,0,121,55,0,0,124,55,0,0,127,55,0,0,79,54,0,0,82,54,0,0,85,54,0,0,88,54,0,0,91,54,0,0,94,54,0,0,97,54,0,0,100,54,0,0,103,54,0,0,106,54,0,0,109,54,0,0,113,54,0,0,117,54,0,0,121,54,0,0,125,54,0,0,129,54,0,0,133,54,0,0,137,54,0,0,141,54,0,0,145,54,0,0,149,54,0,0,153,54,0,0,157,54,0,0,161,54,0,0,165,54,0,0,169,54,0,0,173,54,0,0,177,54,0,0,181,54,0,0,185,54,0,0,189,54,0,0,193,54,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,84,118,0,0,196,54,0,0,199,54,0,0,202,54,0,0,205,54,0,0,208,54,0,0,211,54,0,0,214,54,0,0,217,54,0,0,220,54,0,0,223,54,0,0,226,54,0,0,230,54,0,0,234,54,0,0,238,54,0,0,242,54,0,0,246,54,0,0,250,54,0,0,254,54,0,0,2,55,0,0,6,55,0,0,10,55,0,0,14,55,0,0,18,55,0,0,22,55,0,0,26,55,0,0,30,55,0,0,34,55,0,0,38,55,0,0,42,55,0,0,46,55,0,0,50,55,0,0,54,55,0,0,12,16,0,0,228,15,0,0,248,15,0,0,32,16,0,0,56,0,0,0,0,0,0,0,80,3,0,0,5,0,0,0,6,0,0,0,200,255,255,255,200,255,255,255,80,3,0,0,7,0,0,0,8,0,0,0,56,0,0,0,0,0,0,0,56,0,0,0,9,0,0,0,10,0,0,0,200,255,255,255,200,255,255,255,56,0,0,0,11,0,0,0,12,0,0,0,0,0,0,0,40,0,0,0,13,0,0,0,14,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,128,0,0,0,15,0,0,0,16,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,5,0,0,0,17,0,0,0,1,0,0,0,6,0,0,0,0,0,0,0,72,0,0,0,18,0,0,0,19,0,0,0,2,0,0,0,8,0,0,0,3,0,0,0,5,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,80,0,0,0,20,0,0,0,21,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,9,0,0,0,7,0,0,0,22,0,0,0,0,0,0,0,96,0,0,0,23,0,0,0,24,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,7,0,0,0,25,0,0,0,0,0,0,0,112,0,0,0,26,0,0,0,27,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,11,0,0,0,8,0,0,0,22,0,0,0,0,0,0,0,168,0,0,0,28,0,0,0,29,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,188,17,0,0,212,17,0,0,236,17,0,0,156,17,0,0,160,17,0,0,164,17,0,0,0,0,0,0,232,0,0,0,30,0,0,0,31,0,0,0,12,0,0,0,4,0,0,0,0,0,0,0,216,0,0,0,30,0,0,0,32,0,0,0,12,0,0,0,5,0,0,0,0,0,0,0,192,0,0,0,30,0,0,0,33,0,0,0,13,0,0,0,6,0,0,0,0,0,0,0,248,0,0,0,34,0,0,0,35,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,5,0,0,0,5,0,0,0,10,0,0,0,8,0,0,0,0,0,0,0,16,1,0,0,36,0,0,0,37,0,0,0,0,0,0,0,24,1,0,0,38,0,0,0,39,0,0,0,2,0,0,0,11,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,9,0,0,0,0,0,0,0,48,1,0,0,40,0,0,0,41,0,0,0,7,0,0,0,10,0,0,0,14,0,0,0,15,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,16,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,184,1,0,0,42,0,0,0,43,0,0,0,0,0,0,0,176,1,0,0,44,0,0,0,45,0,0,0,0,0,0,0,80,1,0,0,46,0,0,0,47,0,0,0,6,0,0,0,3,0,0,0,14,0,0,0,7,0,0,0,11,0,0,0,0,0,0,0,64,1,0,0,46,0,0,0,48,0,0,0,7,0,0,0,4,0,0,0,15,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,160,1,0,0,49,0,0,0,50,0,0,0,8,0,0,0,5,0,0,0,16,0,0,0,7,0,0,0,11,0,0,0,0,0,0,0,144,1,0,0,46,0,0,0,51,0,0,0,9,0,0,0,6,0,0,0,17,0,0,0,7,0,0,0,11,0,0,0,0,0,0,0,128,1,0,0,46,0,0,0,52,0,0,0,10,0,0,0,7,0,0,0,18,0,0,0,7,0,0,0,11,0,0,0,0,0,0,0,112,1,0,0,46,0,0,0,53,0,0,0,11,0,0,0,8,0,0,0,19,0,0,0,7,0,0,0,11,0,0,0,0,0,0,0,96,1,0,0,54,0,0,0,55,0,0,0,12,0,0,0,9,0,0,0,20,0,0,0,7,0,0,0,11,0,0,0,161,87,0,0,7,0,0,0,3,0,0,0,1,0,0,0,5,83,0,0,246,82,0,0,7,0,0,1,3,0,0,0,1,0,0,0,17,83,0,0,253,82,0,0,12,0,0,0,0,0,0,0,1,0,0,0,30,83,0,0,218,82,0,0,12,0,0,1,0,0,0,0,1,0,0,0,34,83,0,0,1,83,0,0,18,0,0,0,0,0,0,0,2,0,0,0,40,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,1,0,0,56,0,0,0,57,0,0,0,6,0,0,0,10,0,0,0,7,0,0,0,0,0,0,0,232,1,0,0,58,0,0,0,59,0,0,0,9,0,0,0,8,0,0,0,0,0,0,0,0,2,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,0,0,0,0,8,2,0,0,65,0,0,0,66,0,0,0,67,0,0,0,17,0,0,0,68,0,0,0,69,0,0,0,12,0,0,0,13,0,0,0,10,0,0,0,11,0,0,0,14,0,0,0,70,0,0,0,12,0,0,0,0,0,0,0,16,2,0,0,71,0,0,0,72,0,0,0,11,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,40,2,0,0,73,0,0,0,74,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,88,2,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,8,0,0,0,9,0,0,0,18,0,0,0,13,0,0,0,0,0,0,0,136,2,0,0,75,0,0,0,79,0,0,0,77,0,0,0,78,0,0,0,8,0,0,0,10,0,0,0,19,0,0,0,14,0,0,0,0,0,0,0,152,2,0,0,75,0,0,0,80,0,0,0,77,0,0,0,78,0,0,0,8,0,0,0,11,0,0,0,20,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,157,107,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([168,2,0,0,81,0,0,0,82,0,0,0,13,0,0,0,10,0,0,0,12,0,0,0,16,0,0,0,22,0,0,0,23,0,0,0,11,0,0,0,24,0,0,0,25,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,184,2,0,0,81,0,0,0,83,0,0,0,14,0,0,0,10,0,0,0,12,0,0,0,16,0,0,0,26,0,0,0,23,0,0,0,11,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,13,0,0,0,15,0,0,0,0,0,0,0,200,2,0,0,84,0,0,0,85,0,0,0,15,0,0,0,1,0,0,0,13,0,0,0,17,0,0,0,29,0,0,0,4,0,0,0,2,0,0,0,30,0,0,0,6,0,0,0,16,0,0,0,14,0,0,0,17,0,0,0,0,0,0,0,216,2,0,0,84,0,0,0,86,0,0,0,16,0,0,0,1,0,0,0,13,0,0,0,17,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,31,0,0,0,32,0,0,0,18,0,0,0,3,0,0,0,19,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,211,0,0,0,1,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,121,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,143,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,169,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,187,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,209,0,0,0,0,0,0,0,16,3,0,0,84,0,0,0,87,0,0,0,1,0,0,0,1,0,0,0,13,0,0,0,17,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,30,0,0,0,6,0,0,0,16,0,0,0,3,0,0,0,19,0,0,0,0,0,0,0,24,3,0,0,81,0,0,0,88,0,0,0,17,0,0,0,10,0,0,0,12,0,0,0,16,0,0,0,26,0,0,0,23,0,0,0,11,0,0,0,24,0,0,0,25,0,0,0,12,0,0,0,13,0,0,0,15,0,0,0,8,0,0,0,0,0,0,0,32,3,0,0,89,0,0,0,90,0,0,0,248,255,255,255,248,255,255,255,32,3,0,0,91,0,0,0,92,0,0,0,8,0,0,0,0,0,0,0,56,3,0,0,93,0,0,0,94,0,0,0,248,255,255,255,248,255,255,255,56,3,0,0,95,0,0,0,96,0,0,0,4,0,0,0,0,0,0,0,80,3,0,0,5,0,0,0,6,0,0,0,252,255,255,255,252,255,255,255,80,3,0,0,7,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,104,3,0,0,97,0,0,0,98,0,0,0,252,255,255,255,252,255,255,255,104,3,0,0,99,0,0,0,100,0,0,0,0,0,0,0,232,2,0,0,101,0,0,0,102,0,0,0,0,0,0,0,96,4,0,0,103,0,0,0,104,0,0,0,105,0,0,0,13,0,0,0,18,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,4,0,0,106,0,0,0,107,0,0,0,105,0,0,0,14,0,0,0,19,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,4,0,0,108,0,0,0,109,0,0,0,105,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,4,0,0,110,0,0,0,111,0,0,0,105,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,112,0,0,0,113,0,0,0,105,0,0,0,15,0,0,0,16,0,0,0,25,0,0,0,17,0,0,0,26,0,0,0,1,0,0,0,2,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,5,0,0,114,0,0,0,115,0,0,0,105,0,0,0,19,0,0,0,20,0,0,0,27,0,0,0,21,0,0,0,28,0,0,0,3,0,0,0,4,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,5,0,0,116,0,0,0,117,0,0,0,105,0,0,0,33,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,3,0,0,0,248,255,255,255,64,5,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,5,0,0,118,0,0,0,119,0,0,0,105,0,0,0,41,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,4,0,0,0,248,255,255,255,104,5,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,5,0,0,120,0,0,0,121,0,0,0,105,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,5,0,0,122,0,0,0,123,0,0,0,105,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,5,0,0,124,0,0,0,125,0,0,0,105,0,0,0,49,0,0,0,50,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,51,0,0,0,22,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,5,0,0,126,0,0,0,127,0,0,0,105,0,0,0,52,0,0,0,53,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,54,0,0,0,28,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,6,0,0,128,0,0,0,129,0,0,0,105,0,0,0,55,0,0,0,56,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,57,0,0,0,34,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,6,0,0,130,0,0,0,131,0,0,0,105,0,0,0,58,0,0,0,59,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,60,0,0,0,40,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,6,0,0,132,0,0,0,133,0,0,0,105,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,6,0,0,134,0,0,0,135,0,0,0,105,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,6,0,0,136,0,0,0,137,0,0,0,105,0,0,0,1,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,6,0,0,138,0,0,0,139,0,0,0,105,0,0,0,2,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,6,0,0,140,0,0,0,141,0,0,0,105,0,0,0,17,0,0,0,14,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,6,0,0,142,0,0,0,143,0,0,0,105,0,0,0,18,0,0,0,15,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,4,0,0,144,0,0,0,145,0,0,0,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,4,0,0,146,0,0,0,147,0,0,0,105,0,0,0,20,0,0,0,19,0,0,0,21,0,0,0,20,0,0,0,22,0,0,0,12,0,0,0,21,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,4,0,0,148,0,0,0,149,0,0,0,105,0,0,0,5,0,0,0,6,0,0,0,24,0,0,0,61,0,0,0,62,0,0,0,25,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,4,0,0,150,0,0,0,151,0,0,0,105,0,0,0,64,0,0,0,65,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,0,0,0,0,176,4,0,0,152,0,0,0,153,0,0,0,105,0,0,0,66,0,0,0,67,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,0,0,0,0,128,3,0,0,154,0,0,0,155,0,0,0,105,0,0,0,0,0,0,0,144,3,0,0,154,0,0,0,156,0,0,0,105,0,0,0,22,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,23,0,0,0,23,0,0,0,24,0,0,0,24,0,0,0,25,0,0,0,16,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,176,3,0,0,154,0,0,0,157,0,0,0,105,0,0,0,7,0,0,0,8,0,0,0,27,0,0,0,68,0,0,0,69,0,0,0,28,0,0,0,70,0,0,0,0,0,0,0,208,3,0,0,154,0,0,0,158,0,0,0,105,0,0,0,9,0,0,0,10,0,0,0,29,0,0,0,71,0,0,0,72,0,0,0,30,0,0,0,73,0,0,0,0,0,0,0,240,3,0,0,154,0,0,0,159,0,0,0,105,0,0,0,11,0,0,0,12,0,0,0,31,0,0,0,74,0,0,0,75,0,0,0,32,0,0,0,76,0,0,0,0,0,0,0,16,4,0,0,154,0,0,0,160,0,0,0,105,0,0,0,11,0,0,0,12,0,0,0,31,0,0,0,74,0,0,0,75,0,0,0,32,0,0,0,76,0,0,0,0,0,0,0,32,4,0,0,154,0,0,0,161,0,0,0,105,0,0,0,11,0,0,0,12,0,0,0,31,0,0,0,74,0,0,0,75,0,0,0,32,0,0,0,76,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,54,68,119,97,114,102,67,70,73,84,111,77,111,100,117,108,101,56,82,101,112,111,114,116,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,54,68,119,97,114,102,67,70,73,84,111,77,111,100,117,108,101,69,0,33,101,110,116,114,121,95,0,115,114,99,47,99,111,109,109,111,110,47,100,119,97,114,102,95,99,102,105,95,116,111,95,109,111,100,117,108,101,46,99,99,0,69,110,116,114,121,0,101,110,116,114,121,95,0,82,101,103,105,115,116,101,114,78,97,109,101,0,105,32,61,61,32,107,67,70,65,82,101,103,105,115,116,101,114,0,117,110,110,97,109,101,100,95,114,101,103,105,115,116,101,114,37,117,0,82,101,99,111,114,100,0,32,43,32,94,0,32,43,0,37,115,44,32,115,101,99,116,105,111,110,32,39,37,115,39,58,32,116,104,101,32,99,97,108,108,32,102,114,97,109,101,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,122,120,32,114,101,102,101,114,115,32,116,111,32,114,101,103,105,115,116,101,114,32,37,100,44,32,119,104,111,115,101,32,110,97,109,101,32,119,101,32,100,111,110,39,116,32,107,110,111,119,10,0,37,115,44,32,115,101,99,116,105,111,110,32,39,37,115,39,58,32,116,104,101,32,99,97,108,108,32,102,114,97,109,101,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,122,120,32,115,101,116,115,32,116,104,101,32,114,117,108,101,32,102,111,114,32,114,101,103,105,115,116,101,114,32,39,37,115,39,32,116,111,32,39,117,110,100,101,102,105,110,101,100,39,44,32,98,117,116,32,116,104,101,32,66,114,101,97,107,112,97,100,32,115,121,109,98,111,108,32,102,105,108,101,32,102,111,114,109,97,116,32,99,97,110,110,111,116,32,101,120,112,114,101,115,115,32,116,104,105,115,10,0,37,115,44,32,115,101,99,116,105,111,110,32,39,37,115,39,58,32,116,104,101,32,99,97,108,108,32,102,114,97,109,101,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,122,120,32,117,115,101,115,32,97,32,68,87,65,82,70,32,101,120,112,114,101,115,115,105,111,110,32,116,111,32,100,101,115,99,114,105,98,101,32,104,111,119,32,116,111,32,114,101,99,111,118,101,114,32,114,101,103,105,115,116,101,114,32,39,37,115,39,44,32,32,98,117,116,32,116,104,105,115,32,116,114,97,110,115,108,97,116,111,114,32,99,97,110,110,111,116,32,121,101,116,32,116,114,97,110,115,108,97,116,101,32,68,87,65,82,70,32,101,120,112,114,101,115,115,105,111,110,115,32,116,111,32,66,114,101,97,107,112,97,100,32,112,111,115,116,102,105,120,32,101,120,112,114,101,115,115,105,111,110,115,10,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,55,72,97,110,100,108,101,114,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,120,48,0,120,49,0,120,50,0,120,51,0,120,52,0,120,53,0,120,54,0,120,55,0,120,56,0,120,57,0,120,49,48,0,120,49,49,0,120,49,50,0,120,49,51,0,120,49,52,0,120,49,53,0,120,49,54,0,120,49,55,0,120,49,56,0,120,49,57,0,120,50,48,0,120,50,49,0,120,50,50,0,120,50,51,0,120,50,52,0,120,50,53,0,120,50,54,0,120,50,55,0,120,50,56,0,120,50,57,0,120,51,48,0,115,112,0,118,48,0,118,49,0,118,50,0,118,51,0,118,52,0,118,53,0,118,54,0,118,55,0,118,56,0,118,57,0,118,49,48,0,118,49,49,0,118,49,50,0,118,49,51,0,118,49,52,0,118,49,53,0,118,49,54,0,118,49,55,0,118,49,56,0,118,49,57,0,118,50,48,0,118,50,49,0,118,50,50,0,118,50,51,0,118,50,52,0,118,50,53,0,118,50,54,0,118,50,55,0,118,50,56,0,118,50,57,0,118,51,48,0,118,51,49,0,114,48,0,114,49,0,114,50,0,114,51,0,114,52,0,114,53,0,114,54,0,114,55,0,114,56,0,114,57,0,114,49,48,0,114,49,49,0,114,49,50,0,108,114,0,112,99,0,102,48,0,102,49,0,102,50,0,102,51,0,102,52,0,102,53,0,102,54,0,102,55,0,102,112,115,0,99,112,115,114,0,115,48,0,115,49,0,115,50,0,115,51,0,115,52,0,115,53,0,115,54,0,115,55,0,115,56,0,115,57,0,115,49,48,0,115,49,49,0,115,49,50,0,115,49,51,0,115,49,52,0,115,49,53,0,115,49,54,0,115,49,55,0,115,49,56,0,115,49,57,0,115,50,48,0,115,50,49,0,115,50,50,0,115,50,51,0,115,50,52,0,115,50,53,0,115,50,54,0,115,50,55,0,115,50,56,0,115,50,57,0,115,51,48,0,115,51,49,0,36,114,97,120,0,36,114,100,120,0,36,114,99,120,0,36,114,98,120,0,36,114,115,105,0,36,114,100,105,0,36,114,98,112,0,36,114,115,112,0,36,114,56,0,36,114,57,0,36,114,49,48,0,36,114,49,49,0,36,114,49,50,0,36,114,49,51,0,36,114,49,52,0,36,114,49,53,0,36,114,105,112,0,36,120,109,109,48,0,36,120,109,109,49,0,36,120,109,109,50,0,36,120,109,109,51,0,36,120,109,109,52,0,36,120,109,109,53,0,36,120,109,109,54,0,36,120,109,109,55,0,36,120,109,109,56,0,36,120,109,109,57,0,36,120,109,109,49,48,0,36,120,109,109,49,49,0,36,120,109,109,49,50,0,36,120,109,109,49,51,0,36,120,109,109,49,52,0,36,120,109,109,49,53,0,36,115,116,48,0,36,115,116,49,0,36,115,116,50,0,36,115,116,51,0,36,115,116,52,0,36,115,116,53,0,36,115,116,54,0,36,115,116,55,0,36,109,109,48,0,36,109,109,49,0,36,109,109,50,0,36,109,109,51,0,36,109,109,52,0,36,109,109,53,0,36,109,109,54,0,36,109,109,55,0,36,114,102,108,97,103,115,0,36,101,115,0,36,99,115,0,36,115,115,0,36,100,115,0,36,102,115,0,36,103,115,0,36,117,110,117,115,101,100,49,0,36,117,110,117,115,101,100,50,0,36,102,115,46,98,97,115,101,0,36,103,115,46,98,97,115,101,0,36,117,110,117,115,101,100,51,0,36,117,110,117,115,101,100,52,0,36,116,114,0,36,108,100,116,114,0,36,109,120,99,115,114,0,36,102,99,119,0,36,102,115,119,0,36,101,97,120,0,36,101,99,120,0,36,101,100,120,0,36,101,98,120,0,36,101,115,112,0,36,101,98,112,0,36,101,115,105,0,36,101,100,105,0,36,101,105,112,0,36,101,102,108,97,103,115,0,36,117,110,117,115,101,100,53,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,53,68,119,97,114,102,67,85,84,111,77,111,100,117,108,101,49,53,87,97,114,110,105,110,103,82,101,112,111,114,116,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,53,68,119,97,114,102,67,85,84,111,77,111,100,117,108,101,49,55,71,101,110,101,114,105,99,68,73,69,72,97,110,100,108,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,53,68,119,97,114,102,67,85,84,111,77,111,100,117,108,101,49,49,70,117,110,99,72,97,110,100,108,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,53,68,119,97,114,102,67,85,84,111,77,111,100,117,108,101,49,55,78,97,109,101,100,83,99,111,112,101,72,97,110,100,108,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,53,68,119,97,114,102,67,85,84,111,77,111,100,117,108,101,69,0,112,116,114,95,32,33,61,32,78,85,76,76,0,60,110,97,109,101,32,111,109,105,116,116,101,100,62,0,37,115,58,32,105,110,32,99,111,109,112,105,108,97,116,105,111,110,32,117,110,105,116,32,39,37,115,39,32,40,111,102,102,115,101,116,32,48,120,37,108,108,120,41,58,10,0,37,115,58,32,116,104,101,32,68,73,69,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,104,97,115,32,97,32,68,87,95,65,84,95,115,112,101,99,105,102,105,99,97,116,105,111,110,32,97,116,116,114,105,98,117,116,101,32,114,101,102,101,114,114,105,110,103,32,116,111,32,116,104,101,32,100,105,101,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,44,32,119,104,105,99,104,32,101,105,116,104,101,114,32,119,97,115,32,110,111,116,32,109,97,114,107,101,100,32,97,115,32,97,32,100,101,99,108,97,114,97,116,105,111,110,44,32,111,114,32,99,111,109,101,115,32,108,97,116,101,114,32,105,110,32,116,104,101,32,102,105,108,101,10,0,37,115,58,32,116,104,101,32,68,73,69,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,104,97,115,32,97,32,68,87,95,65,84,95,97,98,115,116,114,97,99,116,95,111,114,105,103,105,110,32,97,116,116,114,105,98,117,116,101,32,114,101,102,101,114,114,105,110,103,32,116,111,32,116,104,101,32,100,105,101,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,44,32,119,104,105,99,104,32,101,105,116,104,101,114,32,119,97,115,32,110,111,116,32,109,97,114,107,101,100,32,97,115,32,97,110,32,105,110,108,105,110,101,44,32,111,114,32,99,111,109,101,115,32,108,97,116,101,114,32,105,110,32,116,104,101,32,102,105,108,101,10,0,37,115,58,32,119,97,114,110,105,110,103,58,32,99,111,117,108,100,110,39,116,32,102,105,110,100,32,68,87,65,82,70,32,39,37,115,39,32,115,101,99,116,105,111,110,10,0,37,115,58,32,119,97,114,110,105,110,103,58,32,108,105,110,101,32,110,117,109,98,101,114,32,100,97,116,97,32,111,102,102,115,101,116,32,98,101,121,111,110,100,32,101,110,100,32,111,102,32,39,46,100,101,98,117,103,95,108,105,110,101,39,32,115,101,99,116,105,111,110,10,0,37,115,58,32,119,97,114,110,105,110,103,58,32,115,107,105,112,112,105,110,103,32,117,110,112,97,105,114,101,100,32,108,105,110,101,115,47,102,117,110,99,116,105,111,110,115,58,10,0,32,40,122,101,114,111,45,108,101,110,103,116,104,41,0,32,32,32,32,102,117,110,99,116,105,111,110,37,115,58,32,37,115,10,0,32,32,32,32,108,105,110,101,37,115,58,32,37,115,58,37,100,32,97,116,32,48,120,37,108,108,120,10,0,37,115,58,32,119,97,114,110,105,110,103,58,32,102,117,110,99,116,105,111,110,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,104,97,115,32,110,111,32,110,97,109,101,10,0,37,115,58,32,119,97,114,110,105,110,103,58,32,102,97,105,108,101,100,32,116,111,32,100,101,109,97,110,103,108,101,32,37,115,32,119,105,116,104,32,101,114,114,111,114,32,37,100,10,0,37,115,58,32,119,97,114,110,105,110,103,58,32,116,104,101,32,68,73,69,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,104,97,115,32,97,32,68,87,95,70,79,82,77,95,114,101,102,95,97,100,100,114,32,97,116,116,114,105,98,117,116,101,32,119,105,116,104,32,97,110,32,105,110,116,101,114,45,67,85,32,114,101,102,101,114,101,110,99,101,32,116,111,32,48,120,37,108,108,120,44,32,98,117,116,32,105,110,116,101,114,45,67,85,32,114,101,102,101,114,101,110,99,101,32,104,97,110,100,108,105,110,103,32,105,115,32,116,117,114,110,101,100,32,111,102,102,46,10,0,46,100,101,98,117,103,95,108,105,110,101,0,95,95,100,101,98,117,103,95,108,105,110,101,0,33,102,117,110,99,32,124,124,32,99,117,114,114,101,110,116,32,60,32,102,117,110,99,45,62,97,100,100,114,101,115,115,32,124,124,32,119,105,116,104,105,110,40,42,102,117,110,99,44,32,99,117,114,114,101,110,116,41,0,115,114,99,47,99,111,109,109,111,110,47,100,119,97,114,102,95,99,117,95,116,111,95,109,111,100,117,108,101,46,99,99,0,65,115,115,105,103,110,76,105,110,101,115,84,111,70,117,110,99,116,105,111,110,115,0,33,108,105,110,101,32,124,124,32,99,117,114,114,101,110,116,32,60,32,108,105,110,101,45,62,97,100,100,114,101,115,115,32,124,124,32,119,105,116,104,105,110,40,42,108,105,110,101,44,32,99,117,114,114,101,110,116,41,0,110,101,120,116,95,116,114,97,110,115,105,116,105,111,110,32,62,32,99,117,114,114,101,110,116,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,52,82,111,111,116,68,73,69,72,97,110,100,108,101,114,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,48,68,73,69,72,97,110,100,108,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,55,68,119,97,114,102,76,105,110,101,84,111,77,111,100,117,108,101,69,0,119,97,114,110,105,110,103,58,32,68,87,65,82,70,32,108,105,110,101,32,110,117,109,98,101,114,32,100,97,116,97,32,114,101,102,101,114,115,32,116,111,32,117,110,100,101,102,105,110,101,100,32,100,105,114,101,99,116,111,114,121,32,110,117,109,98,101,114,115,10,0,119,97,114,110,105,110,103,58,32,68,87,65,82,70,32,108,105,110,101,32,110,117,109,98,101,114,32,100,97,116,97,32,114,101,102,101,114,115,32,116,111,32,117,110,100,101,102,105,110,101,100,32,102,105,108,101,32,110,117,109,98,101,114,115,10,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,53,76,105,110,101,73,110,102,111,72,97,110,100,108,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,55,65,115,115,101,109,98,108,101,114,76,97,110,103,117,97,103,101,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,56,76,97,110,103,117,97,103,101,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,50,74,97,118,97,76,97,110,103,117,97,103,101,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,49,67,80,80,76,97,110,103,117,97,103,101,69,0,33,102,117,110,99,116,105,111,110,45,62,110,97,109,101,46,101,109,112,116,121,40,41,0,115,114,99,47,99,111,109,109,111,110,47,109,111,100,117,108,101,46,99,99,0,65,100,100,70,117,110,99,116,105,111,110,0,101,114,114,111,114,32,119,114,105,116,105,110,103,32,115,121,109,98,111,108,32,102,105,108,101,58,32,37,115,10,0,58,32,0,77,79,68,85,76,69,32,0,70,73,76,69,32,0,70,85,78,67,32,0,80,85,66,76,73,67,32,0,32,48,32,0,83,84,65,67,75,32,67,70,73,32,73,78,73,84,32,0,83,84,65,67,75,32,67,70,73,32,0,118,97,108,117,101,95,115,105,122,101,32,61,61,32,52,32,124,124,32,118,97,108,117,101,95,115,105,122,101,32,61,61,32,56,0,115,114,99,47,99,111,109,109,111,110,47,115,116,97,98,115,95,114,101,97,100,101,114,46,99,99,0,69,110,116,114,121,73,116,101,114,97,116,111,114,0,115,121,109,98,111,108,32,37,100,58,32,110,97,109,101,32,111,102,102,115,101,116,32,111,117,116,115,105,100,101,32,116,104,101,32,115,116,114,105,110,103,32,115,101,99,116,105,111,110,10,0,33,105,116,101,114,97,116,111,114,95,45,62,97,116,95,101,110,100,32,38,38,32,105,116,101,114,97,116,111,114,95,45,62,116,121,112,101,32,61,61,32,78,95,83,79,0,80,114,111,99,101,115,115,67,111,109,112,105,108,97,116,105,111,110,85,110,105,116,0,33,105,116,101,114,97,116,111,114,95,45,62,97,116,95,101,110,100,32,38,38,32,40,105,116,101,114,97,116,111,114,95,45,62,116,121,112,101,32,38,32,78,95,83,84,65,66,41,32,61,61,32,48,32,38,38,32,40,105,116,101,114,97,116,111,114,95,45,62,116,121,112,101,32,38,32,78,95,84,89,80,69,41,32,61,61,32,78,95,83,69,67,84,0,80,114,111,99,101,115,115,69,120,116,101,114,110,0,33,105,116,101,114,97,116,111,114,95,45,62,97,116,95,101,110,100,32,38,38,32,105,116,101,114,97,116,111,114,95,45,62,116,121,112,101,32,61,61,32,78,95,70,85,78,0,80,114,111,99,101,115,115,70,117,110,99,116,105,111,110,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,51,83,116,97,98,115,84,111,77,111,100,117,108,101,69,0,33,105,110,95,99,111,109,112,105,108,97,116,105,111,110,95,117,110,105,116,95,0,115,114,99,47,99,111,109,109,111,110,47,115,116,97,98,115,95,116,111,95,109,111,100,117,108,101,46,99,99,0,83,116,97,114,116,67,111,109,112,105,108,97,116,105,111,110,85,110,105,116,0,105,110,95,99,111,109,112,105,108,97,116,105,111,110,95,117,110,105,116,95,0,69,110,100,67,111,109,112,105,108,97,116,105,111,110,85,110,105,116,0,33,99,117,114,114,101,110,116,95,102,117,110,99,116,105,111,110,95,0,83,116,97,114,116,70,117,110,99,116,105,111,110,0,99,117,114,114,101,110,116,95,102,117,110,99,116,105,111,110,95,0,69,110,100,70,117,110,99,116,105,111,110,0,76,105,110,101,0,99,117,114,114,101,110,116,95,115,111,117,114,99,101,95,102,105,108,101,95,0,95,95,90,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,50,83,116,97,98,115,72,97,110,100,108,101,114,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,48,66,121,116,101,82,101,97,100,101,114,69,0,115,105,122,101,32,61,61,32,52,32,124,124,32,115,105,122,101,32,61,61,32,56,0,115,114,99,47,99,111,109,109,111,110,47,100,119,97,114,102,47,98,121,116,101,114,101,97,100,101,114,46,99,99,0,83,101,116,65,100,100,114,101,115,115,83,105,122,101,0,101,110,99,111,100,105,110,103,32,33,61,32,68,87,95,69,72,95,80,69,95,111,109,105,116,0,82,101,97,100,69,110,99,111,100,101,100,80,111,105,110,116,101,114,0,104,97,118,101,95,115,101,99,116,105,111,110,95,98,97,115,101,95,0,104,97,118,101,95,116,101,120,116,95,98,97,115,101,95,0,104,97,118,101,95,100,97,116,97,95,98,97,115,101,95,0,104,97,118,101,95,102,117,110,99,116,105,111,110,95,98,97,115,101,95,0,65,100,100,114,101,115,115,83,105,122,101,40,41,32,61,61,32,115,105,122,101,111,102,40,117,105,110,116,54,52,41,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,68,73,69,68,105,115,112,97,116], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+7400);
/* memory initializer */ allocate([99,104,101,114,69,0,33,100,105,101,95,104,97,110,100,108,101,114,115,95,46,101,109,112,116,121,40,41,0,115,114,99,47,99,111,109,109,111,110,47,100,119,97,114,102,47,100,119,97,114,102,50,100,105,101,104,97,110,100,108,101,114,46,99,99,0,69,110,100,68,73,69,0,101,110,116,114,121,45,62,111,102,102,115,101,116,95,32,61,61,32,111,102,102,115,101,116,0,111,102,102,115,101,116,32,61,61,32,99,117,114,114,101,110,116,46,111,102,102,115,101,116,95,0,80,114,111,99,101,115,115,65,116,116,114,105,98,117,116,101,85,110,115,105,103,110,101,100,0,80,114,111,99,101,115,115,65,116,116,114,105,98,117,116,101,83,105,103,110,101,100,0,80,114,111,99,101,115,115,65,116,116,114,105,98,117,116,101,82,101,102,101,114,101,110,99,101,0,80,114,111,99,101,115,115,65,116,116,114,105,98,117,116,101,66,117,102,102,101,114,0,80,114,111,99,101,115,115,65,116,116,114,105,98,117,116,101,83,116,114,105,110,103,0,80,114,111,99,101,115,115,65,116,116,114,105,98,117,116,101,83,105,103,110,97,116,117,114,101,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,68,119,97,114,102,50,72,97,110,100,108,101,114,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,56,82,101,112,111,114,116,101,114,69,0,46,100,101,98,117,103,95,97,98,98,114,101,118,0,95,95,100,101,98,117,103,95,97,98,98,114,101,118,0,105,116,101,114,32,33,61,32,115,101,99,116,105,111,110,115,95,46,101,110,100,40,41,0,115,114,99,47,99,111,109,109,111,110,47,100,119,97,114,102,47,100,119,97,114,102,50,114,101,97,100,101,114,46,99,99,0,82,101,97,100,65,98,98,114,101,118,115,0,97,98,98,114,101,118,112,116,114,32,60,32,97,98,98,114,101,118,95,115,116,97,114,116,32,43,32,97,98,98,114,101,118,95,108,101,110,103,116,104,0,97,98,98,114,101,118,46,110,117,109,98,101,114,32,61,61,32,97,98,98,114,101,118,115,95,45,62,115,105,122,101,40,41,0,104,101,97,100,101,114,95,46,118,101,114,115,105,111,110,32,62,61,32,50,0,83,107,105,112,65,116,116,114,105,98,117,116,101,0,85,110,104,97,110,100,108,101,100,32,102,111,114,109,32,116,121,112,101,0,104,101,97,100,101,114,112,116,114,32,43,32,52,32,60,32,98,117,102,102,101,114,95,32,43,32,98,117,102,102,101,114,95,108,101,110,103,116,104,95,0,82,101,97,100,72,101,97,100,101,114,0,104,101,97,100,101,114,112,116,114,32,43,32,50,32,60,32,98,117,102,102,101,114,95,32,43,32,98,117,102,102,101,114,95,108,101,110,103,116,104,95,0,104,101,97,100,101,114,112,116,114,32,43,32,114,101,97,100,101,114,95,45,62,79,102,102,115,101,116,83,105,122,101,40,41,32,60,32,98,117,102,102,101,114,95,32,43,32,98,117,102,102,101,114,95,108,101,110,103,116,104,95,0,116,104,105,115,45,62,111,102,102,115,101,116,95,114,101,97,100,101,114,95,0,46,47,115,114,99,47,99,111,109,109,111,110,47,100,119,97,114,102,47,98,121,116,101,114,101,97,100,101,114,45,105,110,108,46,104,0,82,101,97,100,79,102,102,115,101,116,0,104,101,97,100,101,114,112,116,114,32,43,32,49,32,60,32,98,117,102,102,101,114,95,32,43,32,98,117,102,102,101,114,95,108,101,110,103,116,104,95,0,98,117,102,102,101,114,95,32,43,32,105,110,105,116,105,97,108,95,108,101,110,103,116,104,95,115,105,122,101,32,43,32,104,101,97,100,101,114,95,46,108,101,110,103,116,104,32,60,61,32,98,117,102,102,101,114,95,32,43,32,98,117,102,102,101,114,95,108,101,110,103,116,104,95,0,46,100,101,98,117,103,95,105,110,102,111,0,83,116,97,114,116,0,46,100,101,98,117,103,95,115,116,114,0,95,95,100,101,98,117,103,95,115,116,114,0,116,104,105,115,45,62,97,100,100,114,101,115,115,95,114,101,97,100,101,114,95,0,82,101,97,100,65,100,100,114,101,115,115,0,80,114,111,99,101,115,115,65,116,116,114,105,98,117,116,101,0,115,116,114,105,110,103,95,98,117,102,102,101,114,95,32,33,61,32,78,85,76,76,0,115,116,114,105,110,103,95,98,117,102,102,101,114,95,32,43,32,111,102,102,115,101,116,32,60,32,115,116,114,105,110,103,95,98,117,102,102,101,114,95,32,43,32,115,116,114,105,110,103,95,98,117,102,102,101,114,95,108,101,110,103,116,104,95,0,85,110,104,97,110,100,108,101,100,32,102,111,114,109,32,116,121,112,101,10,0,98,117,102,102,101,114,95,32,43,32,105,110,105,116,105,97,108,95,108,101,110,103,116,104,95,115,105,122,101,32,43,32,104,101,97,100,101,114,95,46,116,111,116,97,108,95,108,101,110,103,116,104,32,60,61,32,98,117,102,102,101,114,95,32,43,32,98,117,102,102,101,114,95,108,101,110,103,116,104,95,0,114,101,97,100,101,114,95,45,62,65,100,100,114,101,115,115,83,105,122,101,40,41,32,33,61,32,48,0,114,101,103,32,33,61,32,72,97,110,100,108,101,114,58,58,107,67,70,65,82,101,103,105,115,116,101,114,0,82,101,103,105,115,116,101,114,82,117,108,101,0,83,101,116,82,101,103,105,115,116,101,114,82,117,108,101,0,114,117,108,101,0,72,97,110,100,108,101,84,114,97,110,115,105,116,105,111,110,84,111,0,110,101,119,95,105,116,32,61,61,32,110,101,119,95,114,117,108,101,115,46,114,101,103,105,115,116,101,114,115,95,46,101,110,100,40,41,0,101,110,116,114,121,95,45,62,107,105,110,100,32,33,61,32,107,85,110,107,110,111,119,110,0,68,111,73,110,115,116,114,117,99,116,105,111,110,0,99,117,114,115,111,114,95,32,60,32,101,110,116,114,121,95,45,62,101,110,100,0,111,0,97,0,49,0,50,0,52,0,56,0,114,111,0,114,115,0,114,0,115,0,101,0,114,101,0,80,97,114,115,101,79,112,101,114,97,110,100,115,0,111,102,102,115,101,116,95,115,105,122,101,32,61,61,32,56,0,82,101,97,100,69,110,116,114,121,80,114,111,108,111,103,117,101,0,99,105,101,45,62,107,105,110,100,32,61,61,32,107,67,73,69,0,82,101,97,100,67,73,69,70,105,101,108,100,115,0,107,105,110,100,32,61,61,32,67,97,108,108,70,114,97,109,101,73,110,102,111,58,58,107,84,101,114,109,105,110,97,116,111,114,0,75,105,110,100,78,97,109,101,0,99,111,109,109,111,110,32,105,110,102,111,114,109,97,116,105,111,110,32,101,110,116,114,121,0,102,114,97,109,101,32,100,101,115,99,114,105,112,116,105,111,110,32,101,110,116,114,121,0,46,101,104,95,102,114,97,109,101,32,115,101,113,117,101,110,99,101,32,116,101,114,109,105,110,97,116,111,114,0,101,110,116,114,121,0,37,115,58,32,67,70,73,32,37,115,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,101,110,116,114,121,32,101,110,100,115,32,101,97,114,108,121,10,0,37,115,58,32,67,70,73,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,115,97,119,32,101,110,100,45,111,102,45,100,97,116,97,32,109,97,114,107,101,114,32,98,101,102,111,114,101,32,101,110,100,32,111,102,32,115,101,99,116,105,111,110,32,99,111,110,116,101,110,116,115,10,0,37,115,58,32,67,70,73,32,102,114,97,109,101,32,100,101,115,99,114,105,112,116,105,111,110,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,67,73,69,32,112,111,105,110,116,101,114,32,105,115,32,111,117,116,32,111,102,32,114,97,110,103,101,58,32,48,120,37,108,108,120,10,0,37,115,58,32,67,70,73,32,102,114,97,109,101,32,100,101,115,99,114,105,112,116,105,111,110,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,67,73,69,32,112,111,105,110,116,101,114,32,100,111,101,115,32,110,111,116,32,112,111,105,110,116,32,116,111,32,97,32,67,73,69,58,32,48,120,37,108,108,120,10,0,37,115,58,32,67,70,73,32,102,114,97,109,101,32,100,101,115,99,114,105,112,116,105,111,110,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,67,73,69,32,115,112,101,99,105,102,105,101,115,32,117,110,114,101,99,111,103,110,105,122,101,100,32,118,101,114,115,105,111,110,58,32,37,100,10,0,37,115,58,32,67,70,73,32,102,114,97,109,101,32,100,101,115,99,114,105,112,116,105,111,110,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,67,73,69,32,115,112,101,99,105,102,105,101,115,32,117,110,114,101,99,111,103,110,105,122,101,100,32,97,117,103,109,101,110,116,97,116,105,111,110,58,32,39,37,115,39,10,0,37,115,58,32,67,70,73,32,99,111,109,109,111,110,32,105,110,102,111,114,109,97,116,105,111,110,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,39,122,39,32,97,117,103,109,101,110,116,97,116,105,111,110,32,115,112,101,99,105,102,105,101,115,32,105,110,118,97,108,105,100,32,112,111,105,110,116,101,114,32,101,110,99,111,100,105,110,103,58,32,48,120,37,48,50,120,10,0,37,115,58,32,67,70,73,32,99,111,109,109,111,110,32,105,110,102,111,114,109,97,116,105,111,110,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,39,122,39,32,97,117,103,109,101,110,116,97,116,105,111,110,32,115,112,101,99,105,102,105,101,115,32,97,32,112,111,105,110,116,101,114,32,101,110,99,111,100,105,110,103,32,102,111,114,32,119,104,105,99,104,32,119,101,32,104,97,118,101,32,110,111,32,98,97,115,101,32,97,100,100,114,101,115,115,58,32,48,120,37,48,50,120,10,0,37,115,58,32,67,70,73,32,99,111,109,109,111,110,32,105,110,102,111,114,109,97,116,105,111,110,32,101,110,116,114,121,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,39,37,115,39,58,32,116,104,101,32,68,87,95,67,70,65,95,114,101,115,116,111,114,101,32,105,110,115,116,114,117,99,116,105,111,110,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,105,110,32,97,32,99,111,109,109,111,110,32,105,110,102,111,114,109,97,116,105,111,110,32,101,110,116,114,121,10,0,37,115,58,32,67,70,73,32,37,115,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,115,101,99,116,105,111,110,32,39,37,115,39,58,32,116,104,101,32,105,110,115,116,114,117,99,116,105,111,110,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,115,32,117,110,114,101,99,111,103,110,105,122,101,100,10,0,37,115,58,32,67,70,73,32,37,115,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,115,101,99,116,105,111,110,32,39,37,115,39,58,32,116,104,101,32,105,110,115,116,114,117,99,116,105,111,110,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,97,115,115,117,109,101,115,32,116,104,97,116,32,97,32,67,70,65,32,114,117,108,101,32,104,97,115,32,98,101,101,110,32,115,101,116,44,32,98,117,116,32,110,111,110,101,32,104,97,115,32,98,101,101,110,32,115,101,116,10,0,37,115,58,32,67,70,73,32,37,115,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,115,101,99,116,105,111,110,32,39,37,115,39,58,32,116,104,101,32,68,87,95,67,70,65,95,114,101,115,116,111,114,101,95,115,116,97,116,101,32,105,110,115,116,114,117,99,116,105,111,110,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,115,104,111,117,108,100,32,112,111,112,32,97,32,115,97,118,101,100,32,115,116,97,116,101,32,102,114,111,109,32,116,104,101,32,115,116,97,99,107,44,32,98,117,116,32,116,104,101,32,115,116,97,99,107,32,105,115,32,101,109,112,116,121,10,0,37,115,58,32,67,70,73,32,37,115,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,105,110,32,115,101,99,116,105,111,110,32,39,37,115,39,58,32,116,104,101,32,68,87,95,67,70,65,95,114,101,115,116,111,114,101,95,115,116,97,116,101,32,105,110,115,116,114,117,99,116,105,111,110,32,97,116,32,111,102,102,115,101,116,32,48,120,37,108,108,120,32,119,111,117,108,100,32,99,108,101,97,114,32,116,104,101,32,67,70,65,32,114,117,108,101,32,105,110,32,101,102,102,101,99,116,10,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,49,51,86,97,108,79,102,102,115,101,116,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,52,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,49,48,79,102,102,115,101,116,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,49,52,69,120,112,114,101,115,115,105,111,110,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,49,50,82,101,103,105,115,116,101,114,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,49,51,83,97,109,101,86,97,108,117,101,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,49,51,85,110,100,101,102,105,110,101,100,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,51,67,97,108,108,70,114,97,109,101,73,110,102,111,49,55,86,97,108,69,120,112,114,101,115,115,105,111,110,82,117,108,101,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,56,76,105,110,101,73,110,102,111,69,0,78,49,50,100,119,97,114,102,50,114,101,97,100,101,114,49,53,67,111,109,112,105,108,97,116,105,111,110,85,110,105,116,69,0,97,114,109,54,52,0,97,114,109,32,54,52,0,97,114,109,118,55,115,0,97,114,109,32,118,55,115,0,120,56,54,95,54,52,0,97,114,109,0,112,112,99,0,73,110,116,101,108,32,56,48,120,56,54,0,73,110,116,101,108,32,120,56,54,45,54,52,0,65,82,77,0,65,82,77,54,52,0,80,111,119,101,114,80,67,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,49,68,117,109,112,83,121,109,98,111,108,115,49,55,76,111,97,100,67,111,109,109,97,110,100,68,117,109,112,101,114,69,0,67,111,117,108,100,32,110,111,116,32,97,99,99,101,115,115,32,111,98,106,101,99,116,32,102,105,108,101,32,37,115,58,32,37,115,10,0,47,67,111,110,116,101,110,116,115,47,82,101,115,111,117,114,99,101,115,47,68,87,65,82,70,0,46,46,0,85,110,97,98,108,101,32,116,111,32,102,105,110,100,32,68,87,65,82,70,45,98,101,97,114,105,110,103,32,102,105,108,101,32,105,110,32,98,117,110,100,108,101,58,32,37,115,10,0,84,111,111,32,109,97,110,121,32,68,87,65,82,70,32,102,105,108,101,115,32,105,110,32,98,117,110,100,108,101,58,32,37,115,10,0,114,98,0,97,114,114,97,121,95,32,33,61,32,78,85,76,76,0,46,47,115,114,99,47,99,111,109,109,111,110,47,115,99,111,112,101,100,95,112,116,114,46,104,0,69,114,114,111,114,32,114,101,97,100,105,110,103,32,111,98,106,101,99,116,32,102,105,108,101,58,32,37,115,58,32,37,115,10,0,70,97,116,32,98,105,110,97,114,121,32,102,105,108,101,32,99,111,110,116,97,105,110,115,32,42,110,111,42,32,97,114,99,104,105,116,101,99,116,117,114,101,115,58,32,37,115,10,0,98,101,115,116,95,109,97,116,99,104,32,61,61,32,78,85,76,76,0,115,114,99,47,99,111,109,109,111,110,47,109,97,99,47,100,117,109,112,95,115,121,109,115,46,99,99,0,70,105,110,100,66,101,115,116,77,97,116,99,104,70,111,114,65,114,99,104,105,116,101,99,116,117,114,101,0,70,97,105,108,101,100,32,116,111,32,102,105,110,100,32,97,110,32,101,120,97,99,116,32,109,97,116,99,104,32,102,111,114,32,97,110,32,111,98,106,101,99,116,32,102,105,108,101,32,119,105,116,104,32,99,112,117,32,116,121,112,101,58,32,37,100,32,97,110,100,32,99,112,117,32,115,117,98,116,121,112,101,58,32,37,100,46,32,70,117,114,116,104,101,114,109,111,114,101,44,32,97,116,32,108,101,97,115,116,32,111,110,101,32,111,98,106,101,99,116,32,102,105,108,101,32,105,115,32,108,97,114,103,101,114,32,116,104,97,110,32,50,42,42,51,50,46,10,0,85,110,97,98,108,101,32,116,111,32,99,97,108,99,117,108,97,116,101,32,85,85,73,68,32,111,102,32,109,97,99,104,45,111,32,98,105,110,97,114,121,32,37,115,33,10,0,95,95,100,101,98,117,103,95,105,110,102,111,0,100,101,98,117,103,95,105,110,102,111,95,101,110,116,114,121,32,33,61,32,102,105,108,101,95,99,111,110,116,101,120,116,46,115,101,99,116,105,111,110,95,109,97,112,40,41,46,101,110,100,40,41,0,82,101,97,100,68,119,97,114,102,0,37,115,58,32,95,95,68,87,65,82,70,32,115,101,103,109,101,110,116,32,111,102,32,102,105,108,101,32,104,97,115,32,110,111,32,95,95,100,101,98,117,103,95,105,110,102,111,32,115,101,99,116,105,111,110,10,0,37,115,58,32,99,97,110,110,111,116,32,99,111,110,118,101,114,116,32,68,87,65,82,70,32,99,97,108,108,32,102,114,97,109,101,32,105,110,102,111,114,109,97,116,105,111,110,32,102,111,114,32,0,97,114,99,104,105,116,101,99,116,117,114,101,32,39,37,115,39,0,97,114,99,104,105,116,101,99,116,117,114,101,32,37,100,44,37,100,0,32,116,111,32,66,114,101,97,107,112,97,100,32,115,121,109,98,111,108,32,102,105,108,101,58,32,110,111,32,114,101,103,105,115,116,101,114,32,110,97,109,101,32,116,97,98,108,101,10,0,46,99,102,97,0,46,114,97,0,95,95,84,69,88,84,0,95,95,101,104,95,102,114,97,109,101,0,95,95,68,87,65,82,70,0,95,95,100,101,98,117,103,95,102,114,97,109,101,0,37,115,58,32,111,98,106,101,99,116,32,102,105,108,101,32,99,111,110,116,97,105,110,115,32,109,111,114,101,32,116,104,97,110,32,111,110,101,32,97,114,99,104,105,116,101,99,116,117,114,101,44,32,110,111,110,101,32,111,102,32,119,104,105,99,104,32,109,97,116,99,104,32,116,104,101,32,99,117,114,114,101,110,116,32,97,114,99,104,105,116,101,99,116,117,114,101,59,32,115,112,101,99,105,102,121,32,97,110,32,97,114,99,104,105,116,101,99,116,117,114,101,32,101,120,112,108,105,99,105,116,108,121,32,119,105,116,104,32,39,45,97,32,65,82,67,72,39,32,116,111,32,114,101,115,111,108,118,101,32,116,104,101,32,97,109,98,105,103,117,105,116,121,10,0,115,101,108,101,99,116,101,100,95,111,98,106,101,99,116,95,102,105,108,101,95,0,82,101,97,100,83,121,109,98,111,108,68,97,116,97,0,105,51,56,54,0,120,56,54,0,44,32,97,114,99,104,105,116,101,99,116,117,114,101,32,0,48,0,109,97,99,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,54,109,97,99,104,95,111,54,82,101,97,100,101,114,49,56,76,111,97,100,67,111,109,109,97,110,100,72,97,110,100,108,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,49,68,117,109,112,83,121,109,98,111,108,115,49,56,68,117,109,112,101,114,76,105,110,101,84,111,77,111,100,117,108,101,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,49,53,68,119,97,114,102,67,85,84,111,77,111,100,117,108,101,49,57,76,105,110,101,84,111,77,111,100,117,108,101,72,97,110,100,108,101,114,69,0,37,115,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,54,109,97,99,104,95,111,57,70,97,116,82,101,97,100,101,114,56,82,101,112,111,114,116,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,54,109,97,99,104,95,111,54,82,101,97,100,101,114,56,82,101,112,111,114,116,101,114,69,0,37,115,58,32,102,105,108,101,32,105,115,32,110,101,105,116,104,101,114,32,97,32,102,97,116,32,98,105,110,97,114,121,32,102,105,108,101,32,110,111,114,32,97,32,77,97,99,104,45,79,32,111,98,106,101,99,116,32,102,105,108,101,10,0,37,115,58,32,102,105,108,101,32,116,111,111,32,115,104,111,114,116,32,102,111,114,32,116,104,101,32,100,97,116,97,32,105,116,32,99,108,97,105,109,115,32,116,111,32,99,111,110,116,97,105,110,10,0,37,115,58,32,102,105,108,101,32,116,111,111,32,115,104,111,114,116,32,102,111,114,32,116,104,101,32,111,98,106,101,99,116,32,102,105,108,101,115,32,105,116,32,99,108,97,105,109,115,32,116,111,32,99,111,110,116,97,105,110,10,0,115,116,97,114,116,32,60,61,32,101,110,100,0,46,47,115,114,99,47,99,111,109,109,111,110,47,98,121,116,101,95,99,117,114,115,111,114,46,104,0,83,105,122,101,0,37,115,58,32,102,105,108,101,32,105,115,32,110,111,116,32,97,32,77,97,99,104,45,79,32,111,98,106,101,99,116,32,102,105,108,101,10,0,37,115,58,32,67,80,85,32,116,121,112,101,32,37,100,44,32,115,117,98,116,121,112,101,32,37,100,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,101,120,112,101,99,116,101,100,32,116,121,112,101,32,37,100,44,32,115,117,98,116,121,112,101,32,37,100,10,0,37,115,58,32,102,105,108,101,32,100,111,101,115,32,110,111,116,32,99,111,110,116,97,105,110,32,97,32,99,111,109,112,108,101,116,101,32,77,97,99,104,45,79,32,104,101,97,100,101,114,10,0,37,115,58,32,102,105,108,101,32,116,111,111,32,115,104,111,114,116,32,116,111,32,104,111,108,100,32,108,111,97,100,32,99,111,109,109,97,110,100,32,114,101,103,105,111,110,32,103,105,118,101,110,32,105,110,32,77,97,99,104,45,79,32,104,101,97,100,101,114,10,0,37,115,58,32,102,105,108,101,39,115,32,104,101,97,100,101,114,32,99,108,97,105,109,115,32,116,104,101,114,101,32,97,114,101,32,37,108,100,32,108,111,97,100,32,99,111,109,109,97,110,100,115,44,32,98,117,116,32,108,111,97,100,32,99,111,109,109,97,110,100,32,35,37,108,100,0,44,32,111,102,32,116,121,112,101,32,37,100,44,0,32,101,120,116,101,110,100,115,32,98,101,121,111,110,100,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,108,111,97,100,32,99,111,109,109,97,110,100,32,114,101,103,105,111,110,10,0,37,115,58,32,116,104,101,32,99,111,110,116,101,110,116,115,32,111,102,32,108,111,97,100,32,99,111,109,109,97,110,100,32,35,37,108,100,44,32,111,102,32,116,121,112,101,32,37,100,44,32,101,120,116,101,110,100,32,98,101,121,111,110,100,32,116,104,101,32,115,105,122,101,32,103,105,118,101,110,32,105,110,32,116,104,101,32,108,111,97,100,32,99,111,109,109,97,110,100,39,115,32,104,101,97,100,101,114,10,0,37,115,58,32,116,104,101,32,108,111,97,100,32,99,111,109,109,97,110,100,32,102,111,114,32,115,101,103,109,101,110,116,32,39,37,115,39,32,105,115,32,116,111,111,32,115,104,111,114,116,32,116,111,32,104,111,108,100,32,116,104,101,32,115,101,99,116,105,111,110,32,104,101,97,100,101,114,115,32,105,116,32,99,108,97,105,109,115,32,116,111,32,104,97,118,101,10,0,37,115,58,32,116,104,101,32,115,101,103,109,101,110,116,32,39,37,115,39,32,99,108,97,105,109,115,32,105,116,115,32,99,111,110,116,101,110,116,115,32,108,105,101,32,98,101,121,111,110,100,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,102,105,108,101,10,0,37,115,58,32,116,104,101,32,115,101,99,116,105,111,110,32,39,37,115,39,32,105,110,32,115,101,103,109,101,110,116,32,39,37,115,39,32,99,108,97,105,109,115,32,105,116,115,32,99,111,110,116,101,110,116,115,32,108,105,101,32,111,117,116,115,105,100,101,32,116,104,101,32,115,101,103,109,101,110,116,39,115,32,99,111,110,116,101,110,116,115,10,0,37,115,58,32,116,104,101,32,76,67,95,83,89,77,84,65,66,32,108,111,97,100,32,99,111,109,109,97,110,100,32,99,108,97,105,109,115,32,116,104,97,116,32,116,104,101,32,115,121,109,98,111,108,32,116,97,98,108,101,39,115,32,99,111,110,116,101,110,116,115,32,97,114,101,32,108,111,99,97,116,101,100,32,98,101,121,111,110,100,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,102,105,108,101,10,0,37,115,58,32,67,80,85,32,116,121,112,101,32,37,100,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,10,0,33,98,117,102,102,101,114,95,46,115,116,97,114,116,0,115,114,99,47,99,111,109,109,111,110,47,109,97,99,47,109,97,99,104,111,95,114,101,97,100,101,114,46,99,99,0,82,101,97,100,0,98,117,102,102,101,114,95,45,62,115,116,97,114,116,32,60,61,32,104,101,114,101,32,38,38,32,104,101,114,101,32,60,61,32,98,117,102,102,101,114,95,45,62,101,110,100,0,115,101,116,95,104,101,114,101,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,54,109,97,99,104,95,111,54,82,101,97,100,101,114,49,51,83,101,99,116,105,111,110,77,97,112,112,101,114,69,0,78,49,53,103,111,111,103,108,101,95,98,114,101,97,107,112,97,100,54,109,97,99,104,95,111,54,82,101,97,100,101,114,49,52,83,101,99,116,105,111,110,72,97,110,100,108,101,114,69,0,97,114,99,104,0,115,114,99,47,99,111,109,109,111,110,47,109,97,99,47,109,97,99,104,111,95,119,97,108,107,101,114,46,99,99,0,87,97,108,107,72,101,97,100,101,114,0,97,58,103,58,99,104,114,63,0,37,115,58,32,73,110,118,97,108,105,100,32,97,114,99,104,105,116,101,99,116,117,114,101,58,32,37,115,10,0,77,117,115,116,32,115,112,101,99,105,102,121,32,77,97,99,104,45,111,32,102,105,108,101,10,0,37,115,58,32,110,111,32,97,114,99,104,105,116,101,99,116,117,114,101,32,39,37,115,39,32,105,115,32,112,114,101,115,101,110,116,32,105,110,32,102,105,108,101,46,10,0,116,104,101,32,102,105,108,101,39,115,32,97,114,99,104,105,116,101,99,116,117,114,101,32,105,115,58,32,0,97,114,99,104,105,116,101,99,116,117,114,101,115,32,112,114,101,115,101,110,116,32,105,110,32,116,104,101,32,102,105,108,101,32,97,114,101,58,10,0,37,115,32,40,37,115,41,10,0,117,110,114,101,99,111,103,110,105,122,101,100,32,99,112,117,32,116,121,112,101,32,48,120,37,120,44,32,115,117,98,116,121,112,101,32,48,120,37,120,10,0,67,97,110,110,111,116,32,103,101,110,101,114,97,116,101,32,97,32,115,121,109,98,111,108,32,102,105,108,101,32,102,114,111,109,32,115,112,108,105,116,32,115,111,117,114,99,101,115,32,116,104,97,116,32,100,111,32,110,111,116,32,109,97,116,99,104,46,10,0,79,117,116,112,117,116,32,97,32,66,114,101,97,107,112,97,100,32,115,121,109,98,111,108,32,102,105,108,101,32,102,114,111,109,32,97,32,77,97,99,104,45,111,32,102,105,108,101,46,10,0,85,115,97,103,101,58,32,37,115,32,91,45,97,32,65,82,67,72,73,84,69,67,84,85,82,69,93,32,91,45,99,93,32,91,45,103,32,100,83,89,77,32,112,97,116,104,93,32,60,77,97,99,104,45,111,32,102,105,108,101,62,10,0,9,45,97,58,32,65,114,99,104,105,116,101,99,116,117,114,101,32,116,121,112,101,32,91,100,101,102,97,117,108,116,58,32,110,97,116,105,118,101,44,32,111,114,32,119,104,97,116,101,118,101,114,32,105,115,10,0,9,32,32,32,32,105,110,32,116,104,101,32,102,105,108,101,44,32,105,102,32,105,116,32,99,111,110,116,97,105,110,115,32,111,110,108,121,32,111,110,101,32,97,114,99,104,105,116,101,99,116,117,114,101,93,10,0,9,45,103,58,32,68,101,98,117,103,32,115,121,109,98,111,108,32,102,105,108,101,32,40,100,83,89,77,41,32,116,111,32,100,117,109,112,32,105,110,32,97,100,100,105,116,105,111,110,32,116,111,32,116,104,101,32,77,97,99,104,45,111,32,102,105,108,101,10,0,9,45,99,58,32,68,111,32,110,111,116,32,103,101,110,101,114,97,116,101,32,67,70,73,32,115,101,99,116,105,111,110,10,0,9,45,114,58,32,68,111,32,110,111,116,32,104,97,110,100,108,101,32,105,110,116,101,114,45,99,111,109,112,105,108,97,116,105,111,110,32,117,110,105,116,32,114,101,102,101,114,101,110,99,101,115,10,0,9,45,104,58,32,85,115,97,103,101,10,0,9,45,63,58,32,85,115,97,103,101,10,0,58,32,105,108,108,101,103,97,108,32,111,112,116,105,111,110,58,32,0,10,0,58,32,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,58,32,0,83,116,57,98,97,100,95,97,108,108,111,99,0,83,116,57,101,120,99,101,112,116,105,111,110,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,85,115,101,114,115,47,109,115,116,97,110,103,101,47,99,111,100,101,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,49,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,32,40,0,41,0,95,98,108,111,99,107,95,105,110,118,111,107,101,0,105,110,118,111,99,97,116,105,111,110,32,102,117,110,99,116,105,111,110,32,102,111,114,32,98,108,111,99,107,32,105,110,32,0,32,99,111,110,115,116,0,32,118,111,108,97,116,105,108,101,0,32,114,101,115,116,114,105,99,116,0,32,91,0,32,91,93,0,93,0,32,99,111,109,112,108,101,120,0,40,0,44,32,0,32,38,0,32,38,38,0,32,0,32,105,109,97,103,105,110,97,114,121,0,58,58,42,0,38,38,0,111,98,106,99,95,111,98,106,101,99,116,60,0,42,0,105,100,0,38,0,111,98,106,99,112,114,111,116,111,0,60,0,62,0,32,118,101,99,116,111,114,91,0,112,105,120,101,108,32,118,101,99,116,111,114,91,0,100,101,99,108,116,121,112,101,40,0,115,116,100,58,58,97,108,108,111,99,97,116,111,114,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,0,115,116,100,58,58,115,116,114,105,110,103,0,115,116,100,58,58,105,115,116,114,101,97,109,0,115,116,100,58,58,111,115,116,114,101,97,109,0,115,116,100,58,58,105,111,115,116,114,101,97,109,0,115,116,100,0,58,58,0,58,58,115,116,114,105,110,103,32,108,105,116,101,114,97,108,0,115,116,100,58,58,0,126,0,39,117,110,110,97,109,101,100,0,39,108,97,109,98,100,97,39,40,0,111,112,101,114,97,116,111,114,38,38,0,111,112,101,114,97,116,111,114,38,0,111,112,101,114,97,116,111,114,38,61,0,111,112,101,114,97,116,111,114,61,0,111,112,101,114,97,116,111,114,40,41,0,111,112,101,114,97,116,111,114,44,0,111,112,101,114,97,116,111,114,126,0,111,112,101,114,97,116,111,114,32,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,91,93,0,111,112,101,114,97,116,111,114,42,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,0,111,112,101,114,97,116,111,114,47,0,111,112,101,114,97,116,111,114,47,61,0,111,112,101,114,97,116,111,114,94,0,111,112,101,114,97,116,111,114,94,61,0,111,112,101,114,97,116,111,114,61,61,0,111,112,101,114,97,116,111,114,62,61,0,111,112,101,114,97,116,111,114,62,0,111,112,101,114,97,116,111,114,91,93,0,111,112,101,114,97,116,111,114,60,61,0,111,112,101,114,97,116,111,114,34,34,32,0,111,112,101,114,97,116,111,114,60,60,0,111,112,101,114,97,116,111,114,60,60,61,0,111,112,101,114,97,116,111,114,60,0,111,112,101,114,97,116,111,114,45,0,111,112,101,114,97,116,111,114,45,61,0,111,112,101,114,97,116,111,114,42,61,0,111,112,101,114,97,116,111,114,45,45,0,111,112,101,114,97,116,111,114,32,110,101,119,91,93,0,111,112,101,114,97,116,111,114,33,61,0,111,112,101,114,97,116,111,114,33,0,111,112,101,114,97,116,111,114,32,110,101,119,0,111,112,101,114,97,116,111,114,124,124,0,111,112,101,114,97,116,111,114,124,0,111,112,101,114,97,116,111,114,124,61,0,111,112,101,114,97,116,111,114,45,62,42,0,111,112,101,114,97,116,111,114,43,0,111,112,101,114,97,116,111,114,43,61,0,111,112,101,114,97,116,111,114,43,43,0,111,112,101,114,97,116,111,114,45,62,0,111,112,101,114,97,116,111,114,63,0,111,112,101,114,97,116,111,114,37,0,111,112,101,114,97,116,111,114,37,61,0,111,112,101,114,97,116,111,114,62,62,0,111,112,101,114,97,116,111,114,62,62,61,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,44,32,115,116,100,58,58,97,108,108,111,99,97,116,111,114,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,115,116,114,105,110,103,0,115,116,100,58,58,98,97,115,105,99,95,105,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,111,115,116,114,101,97,109,0,115,116,100,58,58,98,97,115,105,99,95,105,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,98,97,115,105,99,95,105,111,115,116,114,101,97,109,0,95,71,76,79,66,65,76,95,95,78,0,40,97,110,111,110,121,109,111,117,115,32,110,97,109,101,115,112,97,99,101,41,0,32,62,0,119,99,104,97,114,95,116,0,99,104,97,114,0,115,105,103,110,101,100,32,99,104,97,114,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,115,104,111,114,116,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,117,0,117,108,0,117,108,108,0,95,95,105,110,116,49,50,56,0,117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,50,56,0,37,97,102,0,37,97,0,37,76,97,76,0,38,61,0,61,0,97,108,105,103,110,111,102,32,40,0,99,111,110,115,116,95,99,97,115,116,60,0,62,40,0,44,0,41,40,0,100,101,108,101,116,101,91,93,32,0,100,121,110,97,109,105,99,95,99,97,115,116,60,0,100,101,108,101,116,101,32,0,46,42,0,47,0,47,61,0,94,0,94,61,0,61,61,0,62,61,0,41,91,0,60,61,0,60,60,0,60,60,61,0,45,0,45,61,0,42,61,0,45,45,0,41,45,45,0,91,93,32,0,41,32,0,33,61,0,33,0,110,111,101,120,99,101,112,116,32,40,0,124,124,0,124,0,124,61,0,45,62,42,0,43,0,43,61,0,43,43,0,41,43,43,0,45,62,0,41,32,63,32,40,0,41,32,58,32,40,0,114,101,105,110,116,101,114,112,114,101,116,95,99,97,115,116,60,0,37,0,37,61,0,62,62,0,62,62,61,0,115,116,97,116,105,99,95,99,97,115,116,60,0,115,105,122,101,111,102,32,40,0,115,105,122,101,111,102,46,46,46,40,0,116,121,112,101,105,100,40,0,116,104,114,111,119,0,116,104,114,111,119,32,0,102,112,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,118,111,105,100,0,98,111,111,108,0,105,110,116,0,117,110,115,105,103,110,101,100,32,105,110,116,0,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,108,111,110,103,32,108,111,110,103,0,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,0,102,108,111,97,116,0,100,111,117,98,108,101,0,108,111,110,103,32,100,111,117,98,108,101,0,95,95,102,108,111,97,116,49,50,56,0,46,46,46,0,100,101,99,105,109,97,108,54,52,0,100,101,99,105,109,97,108,49,50,56,0,100,101,99,105,109,97,108,51,50,0,100,101,99,105,109,97,108,49,54,0,99,104,97,114,51,50,95,116,0,99,104,97,114,49,54,95,116,0,97,117,116,111,0,115,116,100,58,58,110,117,108,108,112,116,114,95,116,0,118,116,97,98,108,101,32,102,111,114,32,0,86,84,84,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,102,111,114,32,0,116,121,112,101,105,110,102,111,32,110,97,109,101,32,102,111,114,32,0,99,111,118,97,114,105,97,110,116,32,114,101,116,117,114,110,32,116,104,117,110,107,32,116,111,32,0,99,111,110,115,116,114,117,99,116,105,111,110,32,118,116,97,98,108,101,32,102,111,114,32,0,45,105,110,45,0,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,110,111,110,45,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,103,117,97,114,100,32,118,97,114,105,97,98,108,101,32,102,111,114,32,0,114,101,102,101,114,101,110,99,101,32,116,101,109,112,111,114,97,114,121,32,102,111,114,32,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,105,110,102,105,110,105,116,121,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+17640);
/* memory initializer */ allocate([11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,37,112,0,67,0,37,0,0,0,0,0,108,0,108,108,0,0,76,0,37,112,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,37,72,58,37,77,37,72,58,37,77,58,37,83,48,49,50,51,52,53,54,55,56,57,0,37,76,102,0,48,49,50,51,52,53,54,55,56,57,0,37,46,48,76,102,0,33,34,118,101,99,116,111,114,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,47,85,115,101,114,115,47,109,115,116,97,110,103,101,47,99,111,100,101,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,49,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,95,95,116,104,114,111,119,95,111,117,116,95,111,102,95,114,97,110,103,101,0,116,114,117,101,0,102,97,108,115,101,0,83,117,110,100,97,121,0,77,111,110,100,97,121,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,84,104,117,114,115,100,97,121,0,70,114,105,100,97,121,0,83,97,116,117,114,100,97,121,0,83,117,110,0,77,111,110,0,84,117,101,0,87,101,100,0,84,104,117,0,70,114,105,0,83,97,116,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,77,97,114,99,104,0,65,112,114,105,108,0,77,97,121,0,74,117,110,101,0,74,117,108,121,0,65,117,103,117,115,116,0,83,101,112,116,101,109,98,101,114,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,68,101,99,101,109,98,101,114,0,74,97,110,0,70,101,98,0,77,97,114,0,65,112,114,0,74,117,110,0,74,117,108,0,65,117,103,0,83,101,112,0,79,99,116,0,78,111,118,0,68,101,99,0,65,77,0,80,77,0,37,109,47,37,100,47,37,121,0,37,72,58,37,77,58,37,83,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,37,73,58,37,77,58,37,83,32,37,112,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+27880);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function ___libgenSplitName(path) {
      if (path === 0 || HEAP8[((path)>>0)] === 0) {
        // Null or empty results in '.'.
        var me = ___libgenSplitName;
        if (!me.ret) {
          me.ret = allocate([46, 0], 'i8', ALLOC_NORMAL);
        }
        return [me.ret, -1];
      } else {
        var slash = 47;
        var allSlashes = true;
        var slashPositions = [];
        for (var i = 0; HEAP8[(((path)+(i))>>0)] !== 0; i++) {
          if (HEAP8[(((path)+(i))>>0)] === slash) {
            slashPositions.push(i);
          } else {
            allSlashes = false;
          }
        }
        var length = i;
        if (allSlashes) {
          // All slashes result in a single slash.
          HEAP8[(((path)+(1))>>0)]=0;
          return [path, -1];
        } else {
          // Strip trailing slashes.
          while (slashPositions.length &&
                 slashPositions[slashPositions.length - 1] == length - 1) {
            HEAP8[(((path)+(slashPositions.pop(i)))>>0)]=0;
            length--;
          }
          return [path, slashPositions.pop()];
        }
      }
    }function _basename(path) {
      // char *basename(char *path);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/basename.html
      var result = ___libgenSplitName(path);
      return result[0] + result[1] + 1;
    }

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(lookup.node.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      return _close(fd);
    }

  function _pthread_mutex_lock() {}

  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }


  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }


  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        // If Module['websocket'] has already been defined (e.g. for configuring
        // the subprotocol/url) use that, if not initialise it to a new object.
        Module['websocket'] = (Module['websocket'] && 
                               ('object' === typeof Module['websocket'])) ? Module['websocket'] : {};
  
        // Add the Event registration mechanism to the exported websocket configuration
        // object so we can register network callbacks from native JavaScript too.
        // For more documentation see system/include/emscripten/emscripten.h
        Module['websocket']._callbacks = {};
        Module['websocket']['on'] = function(event, callback) {
  	    if ('function' === typeof callback) {
  		  this._callbacks[event] = callback;
          }
  	    return this;
        };
  
        Module['websocket'].emit = function(event, param) {
  	    if ('function' === typeof this._callbacks[event]) {
  		  this._callbacks[event].call(this, param);
          }
        };
  
        // If debug is enabled register simple default logging callbacks for each Event.
  
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          error: null, // Used in getsockopt for SOL_SOCKET/SO_ERROR test
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces '//' comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the '#' for '//' again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                var parts = addr.split('/');
                url = url + parts[0] + ":" + port + "/" + parts.slice(1).join('/');
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
  
            Module['websocket'].emit('open', sock.stream.fd);
  
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
            Module['websocket'].emit('message', sock.stream.fd);
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('close', function() {
              Module['websocket'].emit('close', sock.stream.fd);
            });
            peer.socket.on('error', function(error) {
              // Although the ws library may pass errors that may be more descriptive than
              // ECONNREFUSED they are not necessarily the expected error code e.g. 
              // ENOTFOUND on getaddrinfo seems to be node.js specific, so using ECONNREFUSED
              // is still probably the most useful thing to do.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onclose = function() {
              Module['websocket'].emit('close', sock.stream.fd);
            };
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
            peer.socket.onerror = function(error) {
              // The WebSocket spec only allows a 'simple event' to be thrown on error,
              // so we only really know as much as ECONNREFUSED.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          Module['websocket'].emit('listen', sock.stream.fd); // Send Event with listen fd.
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
              Module['websocket'].emit('connection', newsock.stream.fd);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
              Module['websocket'].emit('connection', sock.stream.fd);
            }
          });
          sock.server.on('closed', function() {
            Module['websocket'].emit('close', sock.stream.fd);
            sock.server = null;
          });
          sock.server.on('error', function(error) {
            // Although the ws library may pass errors that may be more descriptive than
            // ECONNREFUSED they are not necessarily the expected error code e.g. 
            // ENOTFOUND on getaddrinfo seems to be node.js specific, so using EHOSTUNREACH
            // is still probably the most useful thing to do. This error shouldn't
            // occur in a well written app as errors should get trapped in the compiled
            // app's own getaddrinfo call.
            sock.error = ERRNO_CODES.EHOSTUNREACH; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
            Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'EHOSTUNREACH: Host is unreachable']);
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_bitshift64Ashr"] = _bitshift64Ashr;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)>>0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return (bytesRead / size)|0;
    }

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 3) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

  function _access(path, amode) {
      // int access(const char *path, int amode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/access.html
      path = Pointer_stringify(path);
      if (amode & ~7) {
        // need a valid mode
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      var node;
      try {
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
      var perms = '';
      if (amode & 4) perms += 'r';
      if (amode & 2) perms += 'w';
      if (amode & 1) perms += 'x';
      if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      }
      return 0;
    }

  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  function _pthread_cond_wait() {
      return 0;
    }

  function _opendir(dirname) {
      // DIR *opendir(const char *dirname);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/opendir.html
      // NOTE: Calculating absolute path redundantly since we need to associate it
      //       with the opened stream.
      var path = Pointer_stringify(dirname);
      if (!path) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      var node;
      try {
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
      } catch (e) {
        FS.handleFSError(e);
        return 0;
      }
      if (!FS.isDir(node.mode)) {
        ___setErrNo(ERRNO_CODES.ENOTDIR);
        return 0;
      }
      var fd = _open(dirname, 0, allocate([0, 0, 0, 0], 'i32', ALLOC_STACK));
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

   
  Module["_llvm_bswap_i32"] = _llvm_bswap_i32;

  function ___cxa_guard_release() {}

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  function _stat(path, buf, dontResolveLastLink) {
      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/stat.html
      // int stat(const char *path, struct stat *buf);
      // NOTE: dontResolveLastLink is a shortcut for lstat(). It should never be
      //       used in client code.
      path = typeof path !== 'string' ? Pointer_stringify(path) : path;
      try {
        var stat = dontResolveLastLink ? FS.lstat(path) : FS.stat(path);
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      } catch (e) {
        if (e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
          // an error occurred while trying to look up the path; we should just report ENOTDIR
          e.setErrno(ERRNO_CODES.ENOTDIR);
        }
        FS.handleFSError(e);
        return -1;
      }
    }

  
  function _readdir_r(dirp, entry, result) {
      // int readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/readdir_r.html
      var stream = FS.getStreamFromPtr(dirp);
      if (!stream) {
        return ___setErrNo(ERRNO_CODES.EBADF);
      }
      if (!stream.currReading) {
        try {
          // load the list of entries now, then readdir will traverse that list, to ignore changes to files
          stream.currReading = FS.readdir(stream.path);
        } catch (e) {
          return FS.handleFSError(e);
        }
      }
      if (stream.position < 0 || stream.position >= stream.currReading.length) {
        HEAP32[((result)>>2)]=0;
        return 0;
      }
      var id;
      var type;
      var name = stream.currReading[stream.position++];
      if (!name.indexOf('.')) {
        id = 1;
        type = 4;
      } else {
        try {
          // child may have been removed since we started to read this directory
          var child = FS.lookupNode(stream.node, name);
        } catch (e) {
          // skip to the next entry (not infinite since position is incremented until currReading.length)
          return _readdir_r(dirp, entry, result);
        }
        id = child.id;
        type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.
               FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.
               FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.
               8;                             // DT_REG, regular file.
      }
      HEAP32[((entry)>>2)]=id;
      HEAP32[(((entry)+(4))>>2)]=stream.position;
      HEAP32[(((entry)+(8))>>2)]=268;
      for (var i = 0; i < name.length; i++) {
        HEAP8[(((entry + 11)+(i))>>0)]=name.charCodeAt(i);
      }
      HEAP8[(((entry + 11)+(i))>>0)]=0;
      HEAP8[(((entry)+(10))>>0)]=type;
      HEAP32[((result)>>2)]=entry;
      return 0;
    }function _readdir(dirp) {
      // struct dirent *readdir(DIR *dirp);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/readdir_r.html
      var stream = FS.getStreamFromPtr(dirp);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      // TODO Is it supposed to be safe to execute multiple readdirs?
      if (!_readdir.entry) _readdir.entry = _malloc(268);
      if (!_readdir.result) _readdir.result = _malloc(4);
      var err = _readdir_r(dirp, _readdir.entry, _readdir.result);
      if (err) {
        ___setErrNo(err);
        return 0;
      }
      return HEAP32[((_readdir.result)>>2)];
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }


  function _feof(stream) {
      // int feof(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/feof.html
      stream = FS.getStreamFromPtr(stream);
      return Number(stream && stream.eof);
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;


  
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)>>0)];
      }
    }function _getc() {
  return _fgetc.apply(null, arguments)
  }


  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  function _free() {
  }
  Module["_free"] = _free;function _freelocale(locale) {
      _free(locale);
    }

   
  Module["_memmove"] = _memmove;

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _ceilf=Math_ceil;

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  var _llvm_ctlz_i32=true;

  function _ferror(stream) {
      // int ferror(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ferror.html
      stream = FS.getStreamFromPtr(stream);
      return Number(stream && stream.error);
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function _closedir(dirp) {
      // int closedir(DIR *dirp);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/closedir.html
      var fd = _fileno(dirp);
      var stream = FS.getStream(fd);
      if (stream.currReading) stream.currReading = null;
      return _close(fd);
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }


  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);



FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
__ATINIT__.push(function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_readdir_r": _readdir_r, "_pthread_cond_wait": _pthread_cond_wait, "_send": _send, "_pthread_key_create": _pthread_key_create, "_fread": _fread, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_access": _access, "_vfprintf": _vfprintf, "_ungetc": _ungetc, "___assert_fail": ___assert_fail, "_feof": _feof, "___cxa_allocate_exception": ___cxa_allocate_exception, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_sbrk": _sbrk, "___ctype_toupper_loc": ___ctype_toupper_loc, "_fflush": _fflush, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_opendir": _opendir, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_pthread_mutex_lock": _pthread_mutex_lock, "___setErrNo": ___setErrNo, "_ceilf": _ceilf, "_uselocale": _uselocale, "_catgets": _catgets, "___libgenSplitName": ___libgenSplitName, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "_basename": _basename, "___resumeException": ___resumeException, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_sysconf": _sysconf, "_fopen": _fopen, "_close": _close, "_strftime": _strftime, "__arraySum": __arraySum, "_newlocale": _newlocale, "_calloc": _calloc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_atexit": _atexit, "_readdir": _readdir, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_pread": _pread, "_pthread_getspecific": _pthread_getspecific, "_open": _open, "_fclose": _fclose, "__reallyNegative": __reallyNegative, "_getc": _getc, "_write": _write, "__isLeapYear": __isLeapYear, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___errno_location": ___errno_location, "_stat": _stat, "_ferror": _ferror, "_recv": _recv, "_pthread_setspecific": _pthread_setspecific, "_fgetc": _fgetc, "___cxa_atexit": ___cxa_atexit, "_mkport": _mkport, "___cxa_throw": ___cxa_throw, "_freelocale": _freelocale, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_fputc": _fputc, "__exit": __exit, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_fprintf": _fprintf, "_strerror": _strerror, "__formatString": __formatString, "_closedir": _closedir, "_catopen": _catopen, "_exit": _exit, "_read": _read, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle, "_stderr": _stderr, "_stdin": _stdin, "_stdout": _stdout };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;
  var _stderr=env._stderr|0;
  var _stdin=env._stdin|0;
  var _stdout=env._stdout|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_iiiiiiiiii=env.invoke_iiiiiiiiii;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _readdir_r=env._readdir_r;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _send=env._send;
  var _pthread_key_create=env._pthread_key_create;
  var _fread=env._fread;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _access=env._access;
  var _vfprintf=env._vfprintf;
  var _ungetc=env._ungetc;
  var ___assert_fail=env.___assert_fail;
  var _feof=env._feof;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _sbrk=env._sbrk;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var _fflush=env._fflush;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _opendir=env._opendir;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var ___setErrNo=env.___setErrNo;
  var _ceilf=env._ceilf;
  var _uselocale=env._uselocale;
  var _catgets=env._catgets;
  var ___libgenSplitName=env.___libgenSplitName;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var _basename=env._basename;
  var ___resumeException=env.___resumeException;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var _sysconf=env._sysconf;
  var _fopen=env._fopen;
  var _close=env._close;
  var _strftime=env._strftime;
  var __arraySum=env.__arraySum;
  var _newlocale=env._newlocale;
  var _calloc=env._calloc;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _atexit=env._atexit;
  var _readdir=env._readdir;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _pread=env._pread;
  var _pthread_getspecific=env._pthread_getspecific;
  var _open=env._open;
  var _fclose=env._fclose;
  var __reallyNegative=env.__reallyNegative;
  var _getc=env._getc;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___errno_location=env.___errno_location;
  var _stat=env._stat;
  var _ferror=env._ferror;
  var _recv=env._recv;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fgetc=env._fgetc;
  var ___cxa_atexit=env.___cxa_atexit;
  var _mkport=env._mkport;
  var ___cxa_throw=env.___cxa_throw;
  var _freelocale=env._freelocale;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _fputc=env._fputc;
  var __exit=env.__exit;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _fprintf=env._fprintf;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _closedir=env._closedir;
  var _catopen=env._catopen;
  var _exit=env._exit;
  var _read=env._read;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i105 = 0, $$0$i$i$i113 = 0, $$0$i$i$i123 = 0, $$0$i$i$i131 = 0, $$0$i$i$i136 = 0, $$0$i$i$i148 = 0, $$0$i$i$i153 = 0, $$0$i$i$i17 = 0, $$0$i$i$i181 = 0, $$0$i$i$i191509 = 0, $$0$i$i$i22 = 0, $$0$i$i$i27 = 0, $$0$i$i$i29 = 0, $$0$i$i$i31 = 0, $$0$i$i$i38 = 0, $$0$i$i$i43 = 0, $$0$i$i$i51 = 0, $$0$i$i$i56 = 0, $$0$i$i$i61 = 0, $$0$i$i$i66 = 0, $$0$i$i$i71 = 0, $$0$i$i$i76 = 0, $$0$i$i$i81 = 0, $$0$i$i$i87 = 0, $$0$i$i$i95 = 0, $$01$i$i = 0, $$03$i$i = 0, $$08$i = 0, $$1$i$i = 0, $$1$i263 = 0, $$12$i$i = 0, $$13$i259$ph = 0, $$14$i$i = 0, $$2$i$i = 0, $$in = 0, $$lcssa667 = 0, $$lcssa674 = 0, $$lcssa682 = 0, $$lcssa690 = 0, $$lcssa698 = 0, $$lcssa706 = 0, $$ph390 = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i203 = 0, $$pre$i$i$i21$i = 0, $$pre$i$i$i36$i = 0, $$pre$i$i$i52$i = 0, $$pre$i$i$i71$i = 0, $0 = 0, $1 = 0, $10 = 0, $1001 = 0, $1003 = 0, $1006 = 0, $101 = 0, $1010 = 0, $1013 = 0, $1018 = 0, $1019 = 0, $1022 = 0, $1023 = 0, $1025 = 0, $1026 = 0, $1035 = 0, $1038 = 0, $104 = 0, $1043 = 0, $1044 = 0, $1049 = 0, $1051 = 0, $1054 = 0, $1058 = 0, $1061 = 0, $1066 = 0, $1067 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1073 = 0, $1074 = 0, $108 = 0, $1083 = 0, $1086 = 0, $1094 = 0, $1096 = 0, $11 = 0, $1100 = 0, $1101 = 0, $1103 = 0, $1110 = 0, $1112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1126 = 0, $1129 = 0, $113 = 0, $1132 = 0, $1133 = 0, $1139 = 0, $1141 = 0, $1145 = 0, $115 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1159 = 0, $1161 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1168 = 0, $117 = 0, $1178 = 0, $1179 = 0, $1180 = 0, $1181 = 0, $1184 = 0, $1187 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1205 = 0, $1210 = 0, $1217 = 0, $1219 = 0, $122 = 0, $1223 = 0, $1226 = 0, $1228 = 0, $123 = 0, $1233 = 0, $1237 = 0, $124 = 0, $1245 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $126 = 0, $1269 = 0, $1270 = 0, $1271 = 0, $1274 = 0, $1277 = 0, $1283 = 0, $1289 = 0, $1290 = 0, $1291 = 0, $1297 = 0, $1299 = 0, $13 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1306 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $1322 = 0, $1325 = 0, $1328 = 0, $1329 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1346 = 0, $1351 = 0, $1358 = 0, $136 = 0, $1360 = 0, $1364 = 0, $1367 = 0, $1369 = 0, $1374 = 0, $1378 = 0, $1386 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1397 = 0, $14 = 0, $1402 = 0, $1409 = 0, $1411 = 0, $1415 = 0, $1418 = 0, $1420 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1432 = 0, $1436 = 0, $1439 = 0, $1443 = 0, $1444 = 0, $1446 = 0, $1449 = 0, $1455 = 0, $1458 = 0, $147 = 0, $1470 = 0, $1474 = 0, $1475 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $15 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1508 = 0, $1511 = 0, $1517 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1531 = 0, $1533 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1540 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1556 = 0, $1559 = 0, $1562 = 0, $1563 = 0, $1568 = 0, $1569 = 0, $1570 = 0, $1571 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1577 = 0, $1582 = 0, $1589 = 0, $1591 = 0, $1595 = 0, $1598 = 0, $16 = 0, $1600 = 0, $1605 = 0, $1609 = 0, $1617 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $164 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1646 = 0, $1649 = 0, $165 = 0, $1655 = 0, $166 = 0, $1661 = 0, $1662 = 0, $1668 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $168 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1693 = 0, $1696 = 0, $1699 = 0, $17 = 0, $1700 = 0, $1705 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1729 = 0, $1732 = 0, $1743 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $1750 = 0, $1753 = 0, $1755 = 0, $1766 = 0, $1768 = 0, $1769 = 0, $1776 = 0, $1778 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $1792 = 0, $1795 = 0, $1798 = 0, $1799 = 0, $18 = 0, $1805 = 0, $1807 = 0, $181 = 0, $1811 = 0, $1813 = 0, $1815 = 0, $1817 = 0, $1818 = 0, $182 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1831 = 0, $1832 = 0, $1834 = 0, $1839 = 0, $1846 = 0, $1848 = 0, $1853 = 0, $1858 = 0, $186 = 0, $1860 = 0, $1866 = 0, $1869 = 0, $1871 = 0, $1881 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1889 = 0, $189 = 0, $1891 = 0, $1892 = 0, $1894 = 0, $1895 = 0, $1897 = 0, $19 = 0, $1903 = 0, $1912 = 0, $1915 = 0, $1917 = 0, $1927 = 0, $1930 = 0, $1933 = 0, $1935 = 0, $1942 = 0, $1945 = 0, $1947 = 0, $195 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1961 = 0, $1963 = 0, $1966 = 0, $1967 = 0, $197 = 0, $1970 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1977 = 0, $1984 = 0, $1986 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2003 = 0, $2006 = 0, $2007 = 0, $2013 = 0, $2015 = 0, $2019 = 0, $202 = 0, $2023 = 0, $2027 = 0, $2029 = 0, $2033 = 0, $2034 = 0, $2036 = 0, $204 = 0, $2043 = 0, $2045 = 0, $205 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2059 = 0, $2062 = 0, $2065 = 0, $2066 = 0, $2072 = 0, $2074 = 0, $2078 = 0, $208 = 0, $2080 = 0, $2082 = 0, $2083 = 0, $209 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2097 = 0, $2099 = 0, $21 = 0, $211 = 0, $2110 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2117 = 0, $212 = 0, $2124 = 0, $2126 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $214 = 0, $2140 = 0, $2143 = 0, $2146 = 0, $2147 = 0, $2153 = 0, $2155 = 0, $2159 = 0, $2161 = 0, $2163 = 0, $2169 = 0, $2170 = 0, $2171 = 0, $2177 = 0, $2179 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2186 = 0, $219 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $2202 = 0, $2205 = 0, $2208 = 0, $2209 = 0, $2214 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $2220 = 0, $2221 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2238 = 0, $2241 = 0, $2247 = 0, $2251 = 0, $2253 = 0, $2257 = 0, $2258 = 0, $226 = 0, $2260 = 0, $2267 = 0, $2269 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2283 = 0, $2286 = 0, $2289 = 0, $2290 = 0, $2296 = 0, $2298 = 0, $23 = 0, $2308 = 0, $2309 = 0, $2311 = 0, $2317 = 0, $2318 = 0, $2322 = 0, $2326 = 0, $2329 = 0, $233 = 0, $2332 = 0, $2335 = 0, $2337 = 0, $2347 = 0, $2348 = 0, $2351 = 0, $2354 = 0, $2355 = 0, $2357 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0, $2371 = 0, $2373 = 0, $2376 = 0, $2377 = 0, $238 = 0, $2382 = 0, $2385 = 0, $2386 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2398 = 0, $24 = 0, $240 = 0, $2402 = 0, $2405 = 0, $2408 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2432 = 0, $2434 = 0, $2438 = 0, $2441 = 0, $2444 = 0, $2446 = 0, $2459 = 0, $2461 = 0, $2465 = 0, $2466 = 0, $2468 = 0, $2475 = 0, $2477 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2491 = 0, $2494 = 0, $2497 = 0, $2498 = 0, $25 = 0, $250 = 0, $2504 = 0, $2506 = 0, $2510 = 0, $2512 = 0, $2516 = 0, $2518 = 0, $2522 = 0, $2523 = 0, $2525 = 0, $2532 = 0, $2534 = 0, $254 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2548 = 0, $255 = 0, $2551 = 0, $2554 = 0, $2555 = 0, $2561 = 0, $2563 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $258 = 0, $259 = 0, $26 = 0, $261 = 0, $262 = 0, $264 = 0, $269 = 0, $27 = 0, $276 = 0, $278 = 0, $28 = 0, $283 = 0, $288 = 0, $29 = 0, $290 = 0, $298 = 0, $3 = 0, $30 = 0, $301 = 0, $308 = 0, $309 = 0, $31 = 0, $318 = 0, $32 = 0, $321 = 0, $324 = 0, $326 = 0, $33 = 0, $336 = 0, $34 = 0, $341 = 0, $342 = 0, $344 = 0, $345 = 0, $35 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $359 = 0, $36 = 0, $360 = 0, $365 = 0, $367 = 0, $37 = 0, $370 = 0, $374 = 0, $377 = 0, $38 = 0, $382 = 0, $383 = 0, $386 = 0, $387 = 0, $389 = 0, $39 = 0, $390 = 0, $399 = 0, $4 = 0, $40 = 0, $402 = 0, $407 = 0, $408 = 0, $41 = 0, $410 = 0, $411 = 0, $415 = 0, $416 = 0, $418 = 0, $42 = 0, $422 = 0, $424 = 0, $429 = 0, $43 = 0, $434 = 0, $436 = 0, $44 = 0, $441 = 0, $442 = 0, $443 = 0, $446 = 0, $449 = 0, $45 = 0, $451 = 0, $458 = 0, $46 = 0, $465 = 0, $467 = 0, $47 = 0, $470 = 0, $474 = 0, $477 = 0, $48 = 0, $482 = 0, $483 = 0, $486 = 0, $487 = 0, $489 = 0, $49 = 0, $490 = 0, $499 = 0, $5 = 0, $50 = 0, $502 = 0, $510 = 0, $512 = 0, $516 = 0, $517 = 0, $519 = 0, $526 = 0, $528 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $542 = 0, $545 = 0, $548 = 0, $549 = 0, $555 = 0, $557 = 0, $56 = 0, $561 = 0, $562 = 0, $565 = 0, $566 = 0, $569 = 0, $57 = 0, $571 = 0, $574 = 0, $575 = 0, $577 = 0, $584 = 0, $586 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $6 = 0, $600 = 0, $603 = 0, $606 = 0, $607 = 0, $613 = 0, $615 = 0, $620 = 0, $624 = 0, $626 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $64 = 0, $641 = 0, $644 = 0, $648 = 0, $657 = 0, $658 = 0, $664 = 0, $669 = 0, $679 = 0, $681 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $698 = 0, $7 = 0, $70 = 0, $703 = 0, $705 = 0, $716 = 0, $718 = 0, $72 = 0, $722 = 0, $723 = 0, $725 = 0, $73 = 0, $732 = 0, $734 = 0, $74 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $748 = 0, $75 = 0, $751 = 0, $754 = 0, $755 = 0, $76 = 0, $761 = 0, $763 = 0, $767 = 0, $768 = 0, $77 = 0, $771 = 0, $772 = 0, $775 = 0, $777 = 0, $780 = 0, $781 = 0, $783 = 0, $79 = 0, $790 = 0, $792 = 0, $8 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $806 = 0, $809 = 0, $812 = 0, $813 = 0, $819 = 0, $82 = 0, $821 = 0, $826 = 0, $827 = 0, $829 = 0, $831 = 0, $832 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $846 = 0, $856 = 0, $857 = 0, $858 = 0, $86 = 0, $861 = 0, $863 = 0, $873 = 0, $876 = 0, $883 = 0, $885 = 0, $888 = 0, $892 = 0, $895 = 0, $9 = 0, $900 = 0, $901 = 0, $904 = 0, $905 = 0, $907 = 0, $908 = 0, $917 = 0, $920 = 0, $925 = 0, $926 = 0, $929 = 0, $934 = 0, $936 = 0, $939 = 0, $943 = 0, $946 = 0, $95 = 0, $951 = 0, $952 = 0, $955 = 0, $956 = 0, $958 = 0, $959 = 0, $96 = 0, $968 = 0, $97 = 0, $971 = 0, $976 = 0, $979 = 0, $98 = 0, $981 = 0, $991 = 0, $994 = 0, $__p$0$i$i$i508 = 0, $__p$0$ph$i$i$i = 0, $__v$i$i$i = 0, $args = 0, $cv = 0, $k$0$i515 = 0, $k$0560 = 0, $k11$0540 = 0, $k15$0543 = 0, $k2$0$i516 = 0, $k20$0550 = 0, $k5$0533 = 0, $k8$0536 = 0, $num1$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $phitmp$i$i$i$i$i$i$i240 = 0, $phitmp$i2$i$i$i$i$i$i243 = 0, $proto = 0, $ref_qual$0$i$ph$ph = 0, $ref_qual$0$i$ph521 = 0, $ref_qual$0$i$ph521$lcssa = 0, $t$0$i = 0, $t$1$i$be = 0, $t$1$i$ph$ph = 0, $t$1$i$ph520 = 0, $t$1$i518 = 0, $t$1$i518$lcssa = 0, $t12$0$i = 0, $template_args = 0, $type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 784 | 0;
 $__v$i$i$i = sp + 752 | 0;
 $0 = sp + 728 | 0;
 $1 = sp + 716 | 0;
 $2 = sp + 704 | 0;
 $3 = sp + 680 | 0;
 $4 = sp + 656 | 0;
 $5 = sp + 632 | 0;
 $6 = sp + 620 | 0;
 $num1$i = sp + 608 | 0;
 $7 = sp + 596 | 0;
 $8 = sp + 584 | 0;
 $9 = sp + 572 | 0;
 $cv = sp + 568 | 0;
 $10 = sp + 552 | 0;
 $11 = sp + 544 | 0;
 $12 = sp + 528 | 0;
 $13 = sp + 520 | 0;
 $14 = sp + 504 | 0;
 $15 = sp + 496 | 0;
 $16 = sp + 480 | 0;
 $17 = sp + 472 | 0;
 $18 = sp + 456 | 0;
 $19 = sp + 452 | 0;
 $20 = sp + 440 | 0;
 $21 = sp + 428 | 0;
 $22 = sp + 416 | 0;
 $23 = sp + 404 | 0;
 $args = sp + 392 | 0;
 $24 = sp + 376 | 0;
 $25 = sp + 368 | 0;
 $type = sp + 356 | 0;
 $26 = sp + 344 | 0;
 $27 = sp + 320 | 0;
 $28 = sp + 308 | 0;
 $29 = sp + 296 | 0;
 $30 = sp + 284 | 0;
 $proto = sp + 272 | 0;
 $31 = sp + 248 | 0;
 $32 = sp + 236 | 0;
 $33 = sp + 224 | 0;
 $34 = sp + 212 | 0;
 $35 = sp + 200 | 0;
 $36 = sp + 176 | 0;
 $37 = sp + 164 | 0;
 $38 = sp + 152 | 0;
 $39 = sp + 136 | 0;
 $40 = sp + 128 | 0;
 $41 = sp + 112 | 0;
 $42 = sp + 108 | 0;
 $template_args = sp + 96 | 0;
 $43 = sp + 80 | 0;
 $44 = sp + 72 | 0;
 $45 = sp + 56 | 0;
 $46 = sp + 48 | 0;
 $47 = sp + 32 | 0;
 $48 = sp + 24 | 0;
 $49 = sp + 8 | 0;
 $50 = sp;
 L1 : do if (($first | 0) == ($last | 0)) $$0 = $first; else {
  switch (HEAP8[$first >> 0] | 0) {
  case 75:
  case 86:
  case 114:
   {
    HEAP32[$cv >> 2] = 0;
    $54 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first, $last, $cv) | 0;
    if (($54 | 0) == ($first | 0)) {
     $$0 = $first;
     break L1;
    }
    $56 = HEAP8[$54 >> 0] | 0;
    $57 = $db + 4 | 0;
    $63 = ((HEAP32[$57 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
    $64 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($54, $last, $db) | 0;
    $70 = ((HEAP32[$57 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
    if (($64 | 0) == ($54 | 0)) {
     $$0 = $first;
     break L1;
    }
    $72 = $56 << 24 >> 24 == 70;
    $73 = $db + 20 | 0;
    $74 = HEAP32[$73 >> 2] | 0;
    if ($72) {
     $75 = $74 + -16 | 0;
     $77 = $74;
     do {
      $76 = $77 + -16 | 0;
      HEAP32[$73 >> 2] = $76;
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($76);
      $77 = HEAP32[$73 >> 2] | 0;
     } while (($77 | 0) != ($75 | 0));
     $86 = $75;
    } else $86 = $74;
    $79 = $db + 16 | 0;
    $82 = HEAP32[$db + 12 >> 2] | 0;
    $84 = HEAP32[$db + 24 >> 2] | 0;
    if ($86 >>> 0 < $84 >>> 0) {
     HEAP32[$86 >> 2] = 0;
     HEAP32[$86 + 4 >> 2] = 0;
     HEAP32[$86 + 8 >> 2] = 0;
     HEAP32[$86 + 12 >> 2] = $82;
     HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 16;
    } else {
     $95 = HEAP32[$79 >> 2] | 0;
     $96 = $86 - $95 | 0;
     $97 = $96 >> 4;
     $98 = $97 + 1 | 0;
     if (($96 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($79);
     $101 = $84 - $95 | 0;
     if ($101 >> 4 >>> 0 < 1073741823) {
      $104 = $101 >> 3;
      $$0$i$i$i38 = $104 >>> 0 < $98 >>> 0 ? $98 : $104;
     } else $$0$i$i$i38 = 2147483647;
     __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i38, $97, $db + 28 | 0);
     $107 = $__v$i$i$i + 8 | 0;
     $108 = HEAP32[$107 >> 2] | 0;
     HEAP32[$108 >> 2] = 0;
     HEAP32[$108 + 4 >> 2] = 0;
     HEAP32[$108 + 8 >> 2] = 0;
     HEAP32[$108 + 12 >> 2] = $82;
     HEAP32[$107 >> 2] = $108 + 16;
     __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($79, $__v$i$i$i);
     __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
    }
    $113 = HEAP32[$cv >> 2] | 0;
    $115 = ($113 & 1 | 0) == 0;
    $117 = ($113 & 2 | 0) == 0;
    $119 = ($113 & 4 | 0) == 0;
    $120 = $__v$i$i$i + 8 | 0;
    if ($63 >>> 0 < $70 >>> 0) $k$0560 = $63; else {
     $$0 = $64;
     break L1;
    }
    while (1) {
     if ($72) {
      $122 = HEAP32[$db >> 2] | 0;
      $123 = $122 + ($k$0560 * 24 | 0) + 12 | 0;
      $124 = HEAP8[$123 >> 0] | 0;
      $126 = ($124 & 1) == 0;
      if ($126) {
       $$in = ($124 & 255) >>> 1;
       $136 = $123 + 1 | 0;
      } else {
       $$in = HEAP32[$122 + ($k$0560 * 24 | 0) + 16 >> 2] | 0;
       $136 = HEAP32[$122 + ($k$0560 * 24 | 0) + 20 >> 2] | 0;
      }
      $134 = $$in + -2 | 0;
      if ((HEAP8[$136 + $134 >> 0] | 0) == 38) $p$0 = $$in + -3 | 0; else {
       if ($126) {
        $147 = ($124 & 255) >>> 1;
        $149 = $123 + 1 | 0;
       } else {
        $147 = HEAP32[$122 + ($k$0560 * 24 | 0) + 16 >> 2] | 0;
        $149 = HEAP32[$122 + ($k$0560 * 24 | 0) + 20 >> 2] | 0;
       }
       $p$0 = (HEAP8[$149 + ($147 + -1) >> 0] | 0) == 38 ? $134 : $$in;
      }
      if ($115) $p$1 = $p$0; else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($123, $p$0, 25528) | 0;
       $p$1 = $p$0 + 6 | 0;
      }
      if ($117) $p$2 = $p$1; else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k$0560 * 24 | 0) + 12 | 0, $p$1, 25535) | 0;
       $p$2 = $p$1 + 9 | 0;
      }
      if (!$119) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k$0560 * 24 | 0) + 12 | 0, $p$2, 25545) | 0;
     } else {
      if (!$115) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$db >> 2] | 0) + ($k$0560 * 24 | 0) | 0, 25528) | 0;
      if (!$117) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$db >> 2] | 0) + ($k$0560 * 24 | 0) | 0, 25535) | 0;
      if (!$119) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$db >> 2] | 0) + ($k$0560 * 24 | 0) | 0, 25545) | 0;
     }
     $164 = HEAP32[$73 >> 2] | 0;
     $165 = $164 + -16 | 0;
     $166 = HEAP32[$db >> 2] | 0;
     $167 = $166 + ($k$0560 * 24 | 0) | 0;
     $168 = $164 + -12 | 0;
     $169 = HEAP32[$168 >> 2] | 0;
     if (($169 | 0) == (HEAP32[$164 + -8 >> 2] | 0)) {
      $181 = $169 - (HEAP32[$165 >> 2] | 0) | 0;
      $182 = ($181 | 0) / 24 | 0;
      $183 = $182 + 1 | 0;
      if (($181 | 0) < -24) {
       $$lcssa706 = $165;
       break;
      }
      if ($182 >>> 0 < 1073741823) {
       $186 = $182 << 1;
       $$0$i$i$i43 = $186 >>> 0 < $183 >>> 0 ? $183 : $186;
      } else $$0$i$i$i43 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i43, $182, $164 + -4 | 0);
      $189 = HEAP32[$120 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($189, $167);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($189 + 12 | 0, $166 + ($k$0560 * 24 | 0) + 12 | 0);
      HEAP32[$120 >> 2] = $189 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($165, $__v$i$i$i);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($169, $167);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($169 + 12 | 0, $166 + ($k$0560 * 24 | 0) + 12 | 0);
      HEAP32[$168 >> 2] = (HEAP32[$168 >> 2] | 0) + 24;
     }
     $k$0560 = $k$0560 + 1 | 0;
     if ($k$0560 >>> 0 >= $70 >>> 0) {
      $$0 = $64;
      break L1;
     }
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa706);
    break;
   }
  default:
   {}
  }
  $195 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
  if (($195 | 0) == ($first | 0)) {
   $197 = HEAP8[$first >> 0] | 0;
   L65 : do switch ($197 << 24 >> 24 | 0) {
   case 65:
    {
     do if ($197 << 24 >> 24 == 65) {
      $200 = $first + 1 | 0;
      if (($200 | 0) == ($last | 0)) $$0$i = $first; else {
       $202 = HEAP8[$200 >> 0] | 0;
       if ($202 << 24 >> 24 == 95) {
        $204 = $first + 2 | 0;
        $205 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($204, $last, $db) | 0;
        if (($205 | 0) == ($204 | 0)) {
         $$0$i = $first;
         break;
        }
        $208 = $db + 4 | 0;
        $209 = HEAP32[$208 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($209 | 0)) {
         $$0$i = $first;
         break;
        }
        $211 = $209 + -12 | 0;
        $212 = HEAP8[$211 >> 0] | 0;
        $214 = ($212 & 1) == 0;
        $219 = $214 ? ($212 & 255) >>> 1 : HEAP32[$209 + -8 >> 2] | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($__v$i$i$i, $214 ? $211 + 1 | 0 : HEAP32[$209 + -4 >> 2] | 0, $219 >>> 0 < 2 ? $219 : 2);
        $226 = HEAP8[$__v$i$i$i >> 0] | 0;
        $228 = ($226 & 1) == 0;
        $233 = $228 ? ($226 & 255) >>> 1 : HEAP32[$__v$i$i$i + 4 >> 2] | 0;
        $238 = $233 >>> 0 > 2;
        $240 = _memcmp($228 ? $__v$i$i$i + 1 | 0 : HEAP32[$__v$i$i$i + 8 >> 2] | 0, 25555, $238 ? 2 : $233) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($__v$i$i$i);
        if (!((($240 | 0) == 0 ? ($233 >>> 0 < 2 ? -1 : $238 & 1) : $240) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj((HEAP32[$208 >> 2] | 0) + -12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$208 >> 2] | 0) + -12 | 0, 0, 25558) | 0;
        $$0$i = $205;
        break;
       }
       if (($202 + -49 & 255) < 9) {
        $250 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($200, $last) | 0;
        if (($250 | 0) == ($last | 0)) {
         $$0$i = $first;
         break;
        }
        if ((HEAP8[$250 >> 0] | 0) != 95) {
         $$0$i = $first;
         break;
        }
        $254 = $250 + 1 | 0;
        $255 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($254, $last, $db) | 0;
        if (($255 | 0) == ($254 | 0)) {
         $$0$i = $first;
         break;
        }
        $258 = $db + 4 | 0;
        $259 = HEAP32[$258 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($259 | 0)) {
         $$0$i = $first;
         break;
        }
        $261 = $259 + -12 | 0;
        $262 = HEAP8[$261 >> 0] | 0;
        $264 = ($262 & 1) == 0;
        $269 = $264 ? ($262 & 255) >>> 1 : HEAP32[$259 + -8 >> 2] | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $264 ? $261 + 1 | 0 : HEAP32[$259 + -4 >> 2] | 0, $269 >>> 0 < 2 ? $269 : 2);
        $276 = HEAP8[$0 >> 0] | 0;
        $278 = ($276 & 1) == 0;
        $283 = $278 ? ($276 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0;
        $288 = $283 >>> 0 > 2;
        $290 = _memcmp($278 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, 25555, $288 ? 2 : $283) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
        if (!((($290 | 0) == 0 ? ($283 >>> 0 < 2 ? -1 : $288 & 1) : $290) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj((HEAP32[$258 >> 2] | 0) + -12 | 0);
        $298 = (HEAP32[$258 >> 2] | 0) + -12 | 0;
        $301 = $250 - $200 | 0;
        if ($301 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($3);
        if ($301 >>> 0 < 11) {
         HEAP8[$3 >> 0] = $301 << 1;
         $__p$0$ph$i$i$i = $3 + 1 | 0;
        } else {
         $308 = $301 + 16 & -16;
         $309 = _malloc($308) | 0;
         HEAP32[$3 + 8 >> 2] = $309;
         HEAP32[$3 >> 2] = $308 | 1;
         HEAP32[$3 + 4 >> 2] = $301;
         $__p$0$ph$i$i$i = $309;
        }
        if (($200 | 0) != ($250 | 0)) {
         $$0$i$i$i191509 = $200;
         $__p$0$i$i$i508 = $__p$0$ph$i$i$i;
         while (1) {
          HEAP8[$__p$0$i$i$i508 >> 0] = HEAP8[$$0$i$i$i191509 >> 0] | 0;
          $$0$i$i$i191509 = $$0$i$i$i191509 + 1 | 0;
          if (($$0$i$i$i191509 | 0) == ($250 | 0)) break; else $__p$0$i$i$i508 = $__p$0$i$i$i508 + 1 | 0;
         }
        }
        HEAP8[$__p$0$ph$i$i$i + $301 >> 0] = 0;
        $318 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 25555) | 0;
        HEAP32[$2 >> 2] = HEAP32[$318 >> 2];
        HEAP32[$2 + 4 >> 2] = HEAP32[$318 + 4 >> 2];
        HEAP32[$2 + 8 >> 2] = HEAP32[$318 + 8 >> 2];
        HEAP32[$318 >> 2] = 0;
        HEAP32[$318 + 4 >> 2] = 0;
        HEAP32[$318 + 8 >> 2] = 0;
        $321 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25562) | 0;
        HEAP32[$1 >> 2] = HEAP32[$321 >> 2];
        HEAP32[$1 + 4 >> 2] = HEAP32[$321 + 4 >> 2];
        HEAP32[$1 + 8 >> 2] = HEAP32[$321 + 8 >> 2];
        HEAP32[$321 >> 2] = 0;
        HEAP32[$321 + 4 >> 2] = 0;
        HEAP32[$321 + 8 >> 2] = 0;
        $324 = HEAP8[$1 >> 0] | 0;
        $326 = ($324 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($298, 0, $326 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0, $326 ? ($324 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
        $$0$i = $255;
        break;
       }
       $336 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($200, $last, $db) | 0;
       if (($336 | 0) == ($200 | 0) | ($336 | 0) == ($last | 0)) $$0$i = $first; else if ((HEAP8[$336 >> 0] | 0) == 95) {
        $341 = $336 + 1 | 0;
        $342 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($341, $last, $db) | 0;
        if (($342 | 0) == ($341 | 0)) $$0$i = $first; else {
         $344 = $db + 4 | 0;
         $345 = HEAP32[$344 >> 2] | 0;
         if ((($345 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$0$i = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($4, $345 + -24 | 0);
          $353 = HEAP32[$344 >> 2] | 0;
          $354 = $353 + -24 | 0;
          $356 = $353;
          do {
           $355 = $356 + -24 | 0;
           HEAP32[$344 >> 2] = $355;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($355);
           $356 = HEAP32[$344 >> 2] | 0;
          } while (($356 | 0) != ($354 | 0));
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5, $353 + -48 | 0);
          $359 = HEAP32[$344 >> 2] | 0;
          $360 = $359 + -24 | 0;
          do if (!(HEAP8[$360 >> 0] & 1)) {
           HEAP8[$360 + 1 >> 0] = 0;
           HEAP8[$360 >> 0] = 0;
          } else {
           $365 = $359 + -16 | 0;
           HEAP8[HEAP32[$365 >> 2] >> 0] = 0;
           $367 = $359 + -20 | 0;
           HEAP32[$367 >> 2] = 0;
           $$pre$i$i$i$i203 = HEAP8[$360 >> 0] | 0;
           if (!($$pre$i$i$i$i203 & 1)) {
            $374 = $$pre$i$i$i$i203;
            $383 = 10;
           } else {
            $370 = HEAP32[$360 >> 2] | 0;
            $374 = $370 & 255;
            $383 = ($370 & -2) + -1 | 0;
           }
           if (!($374 & 1)) {
            $377 = ($374 & 255) >>> 1;
            if (($374 & 255) < 22) {
             $2567 = 1;
             $382 = 10;
             $402 = $377;
            } else {
             $2567 = 1;
             $382 = ($377 + 16 & 240) + -1 | 0;
             $402 = $377;
            }
           } else {
            $2567 = 0;
            $382 = 10;
            $402 = 0;
           }
           if (($382 | 0) != ($383 | 0)) {
            if (($382 | 0) == 10) {
             $389 = $360 + 1 | 0;
             $390 = HEAP32[$365 >> 2] | 0;
             if ($2567) {
              _memcpy($389 | 0, $390 | 0, (($374 & 255) >>> 1) + 1 | 0) | 0;
              _free($390);
             } else {
              HEAP8[$389 >> 0] = HEAP8[$390 >> 0] | 0;
              _free($390);
             }
             HEAP8[$360 >> 0] = $402 << 1;
             break;
            }
            $386 = $382 + 1 | 0;
            $387 = _malloc($386) | 0;
            if (!($382 >>> 0 <= $383 >>> 0 & ($387 | 0) == 0)) {
             if ($2567) _memcpy($387 | 0, $360 + 1 | 0, (($374 & 255) >>> 1) + 1 | 0) | 0; else {
              $399 = HEAP32[$365 >> 2] | 0;
              HEAP8[$387 >> 0] = HEAP8[$399 >> 0] | 0;
              _free($399);
             }
             HEAP32[$360 >> 2] = $386 | 1;
             HEAP32[$367 >> 2] = $402;
             HEAP32[$365 >> 2] = $387;
            }
           }
          } while (0);
          HEAP32[$360 >> 2] = HEAP32[$4 >> 2];
          HEAP32[$360 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
          HEAP32[$360 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
          HEAP32[$4 >> 2] = 0;
          HEAP32[$4 + 4 >> 2] = 0;
          HEAP32[$4 + 8 >> 2] = 0;
          $407 = $4 + 12 | 0;
          $408 = HEAP8[$407 >> 0] | 0;
          $410 = ($408 & 1) == 0;
          $411 = $4 + 16 | 0;
          $415 = $410 ? ($408 & 255) >>> 1 : HEAP32[$411 >> 2] | 0;
          $416 = $4 + 20 | 0;
          $418 = $407 + 1 | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($6, $410 ? $418 : HEAP32[$416 >> 2] | 0, $415 >>> 0 < 2 ? $415 : 2);
          $422 = HEAP8[$6 >> 0] | 0;
          $424 = ($422 & 1) == 0;
          $429 = $424 ? ($422 & 255) >>> 1 : HEAP32[$6 + 4 >> 2] | 0;
          $434 = $429 >>> 0 > 2;
          $436 = _memcmp($424 ? $6 + 1 | 0 : HEAP32[$6 + 8 >> 2] | 0, 25555, $434 ? 2 : $429) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
          if (!((($436 | 0) == 0 ? ($429 >>> 0 < 2 ? -1 : $434 & 1) : $436) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($407);
          $441 = HEAP32[$344 >> 2] | 0;
          $442 = $441 + -12 | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $5);
          $443 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($9, 0, 25555) | 0;
          HEAP32[$8 >> 2] = HEAP32[$443 >> 2];
          HEAP32[$8 + 4 >> 2] = HEAP32[$443 + 4 >> 2];
          HEAP32[$8 + 8 >> 2] = HEAP32[$443 + 8 >> 2];
          HEAP32[$443 >> 2] = 0;
          HEAP32[$443 + 4 >> 2] = 0;
          HEAP32[$443 + 8 >> 2] = 0;
          $446 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 25562) | 0;
          HEAP32[$7 >> 2] = HEAP32[$446 >> 2];
          HEAP32[$7 + 4 >> 2] = HEAP32[$446 + 4 >> 2];
          HEAP32[$7 + 8 >> 2] = HEAP32[$446 + 8 >> 2];
          HEAP32[$446 >> 2] = 0;
          HEAP32[$446 + 4 >> 2] = 0;
          HEAP32[$446 + 8 >> 2] = 0;
          $449 = HEAP8[$407 >> 0] | 0;
          $451 = ($449 & 1) == 0;
          $458 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $451 ? $418 : HEAP32[$416 >> 2] | 0, $451 ? ($449 & 255) >>> 1 : HEAP32[$411 >> 2] | 0) | 0;
          HEAP32[$num1$i >> 2] = HEAP32[$458 >> 2];
          HEAP32[$num1$i + 4 >> 2] = HEAP32[$458 + 4 >> 2];
          HEAP32[$num1$i + 8 >> 2] = HEAP32[$458 + 8 >> 2];
          HEAP32[$458 >> 2] = 0;
          HEAP32[$458 + 4 >> 2] = 0;
          HEAP32[$458 + 8 >> 2] = 0;
          do if (!(HEAP8[$442 >> 0] & 1)) {
           HEAP8[$442 + 1 >> 0] = 0;
           HEAP8[$442 >> 0] = 0;
          } else {
           $465 = $441 + -4 | 0;
           HEAP8[HEAP32[$465 >> 2] >> 0] = 0;
           $467 = $441 + -8 | 0;
           HEAP32[$467 >> 2] = 0;
           $$pre$i$i$i36$i = HEAP8[$442 >> 0] | 0;
           if (!($$pre$i$i$i36$i & 1)) {
            $474 = $$pre$i$i$i36$i;
            $483 = 10;
           } else {
            $470 = HEAP32[$442 >> 2] | 0;
            $474 = $470 & 255;
            $483 = ($470 & -2) + -1 | 0;
           }
           do if (!($474 & 1)) {
            $477 = ($474 & 255) >>> 1;
            if (($474 & 255) < 22) {
             $2568 = 1;
             $482 = 10;
             $502 = $477;
             break;
            }
            $2568 = 1;
            $482 = ($477 + 16 & 240) + -1 | 0;
            $502 = $477;
           } else {
            $2568 = 0;
            $482 = 10;
            $502 = 0;
           } while (0);
           if (($482 | 0) != ($483 | 0)) {
            if (($482 | 0) == 10) {
             $489 = $442 + 1 | 0;
             $490 = HEAP32[$465 >> 2] | 0;
             if ($2568) {
              _memcpy($489 | 0, $490 | 0, (($474 & 255) >>> 1) + 1 | 0) | 0;
              _free($490);
             } else {
              HEAP8[$489 >> 0] = HEAP8[$490 >> 0] | 0;
              _free($490);
             }
             HEAP8[$442 >> 0] = $502 << 1;
             break;
            }
            $486 = $482 + 1 | 0;
            $487 = _malloc($486) | 0;
            if ($482 >>> 0 <= $483 >>> 0 & ($487 | 0) == 0) break;
            if ($2568) _memcpy($487 | 0, $442 + 1 | 0, (($474 & 255) >>> 1) + 1 | 0) | 0; else {
             $499 = HEAP32[$465 >> 2] | 0;
             HEAP8[$487 >> 0] = HEAP8[$499 >> 0] | 0;
             _free($499);
            }
            HEAP32[$442 >> 2] = $486 | 1;
            HEAP32[$467 >> 2] = $502;
            HEAP32[$465 >> 2] = $487;
           }
          } while (0);
          HEAP32[$442 >> 2] = HEAP32[$num1$i >> 2];
          HEAP32[$442 + 4 >> 2] = HEAP32[$num1$i + 4 >> 2];
          HEAP32[$442 + 8 >> 2] = HEAP32[$num1$i + 8 >> 2];
          HEAP32[$num1$i >> 2] = 0;
          HEAP32[$num1$i + 4 >> 2] = 0;
          HEAP32[$num1$i + 8 >> 2] = 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num1$i);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
          $$0$i = $342;
         }
        }
       } else $$0$i = $first;
      }
     } else $$0$i = $first; while (0);
     if (($$0$i | 0) == ($first | 0)) {
      $$0 = $first;
      break L1;
     }
     $510 = HEAP32[$db + 4 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($510 | 0)) {
      $$0 = $first;
      break L1;
     }
     $512 = $db + 16 | 0;
     HEAP32[$11 >> 2] = HEAP32[$db + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($10, $510 + -24 | 0, $11);
     $516 = $db + 20 | 0;
     $517 = HEAP32[$516 >> 2] | 0;
     $519 = HEAP32[$db + 24 >> 2] | 0;
     if ($517 >>> 0 < $519 >>> 0) {
      HEAP32[$517 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
      HEAP32[$517 >> 2] = HEAP32[$10 >> 2];
      $526 = $10 + 4 | 0;
      HEAP32[$517 + 4 >> 2] = HEAP32[$526 >> 2];
      $528 = $10 + 8 | 0;
      HEAP32[$517 + 8 >> 2] = HEAP32[$528 >> 2];
      HEAP32[$528 >> 2] = 0;
      HEAP32[$526 >> 2] = 0;
      HEAP32[$10 >> 2] = 0;
      HEAP32[$516 >> 2] = (HEAP32[$516 >> 2] | 0) + 16;
     } else {
      $536 = HEAP32[$512 >> 2] | 0;
      $537 = $517 - $536 | 0;
      $538 = $537 >> 4;
      $539 = $538 + 1 | 0;
      if (($537 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($512);
      $542 = $519 - $536 | 0;
      if ($542 >> 4 >>> 0 < 1073741823) {
       $545 = $542 >> 3;
       $$0$i$i$i56 = $545 >>> 0 < $539 >>> 0 ? $539 : $545;
      } else $$0$i$i$i56 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i56, $538, $db + 28 | 0);
      $548 = $__v$i$i$i + 8 | 0;
      $549 = HEAP32[$548 >> 2] | 0;
      HEAP32[$549 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
      HEAP32[$549 >> 2] = HEAP32[$10 >> 2];
      $555 = $10 + 4 | 0;
      HEAP32[$549 + 4 >> 2] = HEAP32[$555 >> 2];
      $557 = $10 + 8 | 0;
      HEAP32[$549 + 8 >> 2] = HEAP32[$557 >> 2];
      HEAP32[$557 >> 2] = 0;
      HEAP32[$555 >> 2] = 0;
      HEAP32[$10 >> 2] = 0;
      HEAP32[$548 >> 2] = $549 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($512, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($10);
     $$0 = $$0$i;
     break L1;
     break;
    }
   case 67:
    {
     $561 = $first + 1 | 0;
     $562 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($561, $last, $db) | 0;
     if (($562 | 0) == ($561 | 0)) {
      $$0 = $first;
      break L1;
     }
     $565 = $db + 4 | 0;
     $566 = HEAP32[$565 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($566 | 0)) {
      $$0 = $first;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($566 + -24 | 0, 25564) | 0;
     $569 = $db + 16 | 0;
     $571 = (HEAP32[$565 >> 2] | 0) + -24 | 0;
     HEAP32[$13 >> 2] = HEAP32[$db + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($12, $571, $13);
     $574 = $db + 20 | 0;
     $575 = HEAP32[$574 >> 2] | 0;
     $577 = HEAP32[$db + 24 >> 2] | 0;
     if ($575 >>> 0 < $577 >>> 0) {
      HEAP32[$575 + 12 >> 2] = HEAP32[$12 + 12 >> 2];
      HEAP32[$575 >> 2] = HEAP32[$12 >> 2];
      $584 = $12 + 4 | 0;
      HEAP32[$575 + 4 >> 2] = HEAP32[$584 >> 2];
      $586 = $12 + 8 | 0;
      HEAP32[$575 + 8 >> 2] = HEAP32[$586 >> 2];
      HEAP32[$586 >> 2] = 0;
      HEAP32[$584 >> 2] = 0;
      HEAP32[$12 >> 2] = 0;
      HEAP32[$574 >> 2] = (HEAP32[$574 >> 2] | 0) + 16;
     } else {
      $594 = HEAP32[$569 >> 2] | 0;
      $595 = $575 - $594 | 0;
      $596 = $595 >> 4;
      $597 = $596 + 1 | 0;
      if (($595 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($569);
      $600 = $577 - $594 | 0;
      if ($600 >> 4 >>> 0 < 1073741823) {
       $603 = $600 >> 3;
       $$0$i$i$i61 = $603 >>> 0 < $597 >>> 0 ? $597 : $603;
      } else $$0$i$i$i61 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i61, $596, $db + 28 | 0);
      $606 = $__v$i$i$i + 8 | 0;
      $607 = HEAP32[$606 >> 2] | 0;
      HEAP32[$607 + 12 >> 2] = HEAP32[$12 + 12 >> 2];
      HEAP32[$607 >> 2] = HEAP32[$12 >> 2];
      $613 = $12 + 4 | 0;
      HEAP32[$607 + 4 >> 2] = HEAP32[$613 >> 2];
      $615 = $12 + 8 | 0;
      HEAP32[$607 + 8 >> 2] = HEAP32[$615 >> 2];
      HEAP32[$615 >> 2] = 0;
      HEAP32[$613 >> 2] = 0;
      HEAP32[$12 >> 2] = 0;
      HEAP32[$606 >> 2] = $607 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($569, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($12);
     $$0 = $562;
     break L1;
     break;
    }
   case 70:
    {
     do if ($197 << 24 >> 24 == 70) {
      $620 = $first + 1 | 0;
      if (($620 | 0) != ($last | 0)) {
       if ((HEAP8[$620 >> 0] | 0) == 89) {
        $624 = $first + 2 | 0;
        if (($624 | 0) == ($last | 0)) break; else $t$0$i = $624;
       } else $t$0$i = $620;
       $626 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$0$i, $last, $db) | 0;
       if (($626 | 0) != ($t$0$i | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($__v$i$i$i, 25573, 1);
        $628 = $db + 4 | 0;
        $629 = $__v$i$i$i + 4 | 0;
        $630 = $0 + 8 | 0;
        $631 = $0 + 1 | 0;
        $632 = $0 + 4 | 0;
        L191 : do if (($626 | 0) == ($last | 0)) label = 144; else {
         $ref_qual$0$i$ph521 = 0;
         $t$1$i$ph520 = $626;
         L192 : while (1) {
          $t$1$i518 = $t$1$i$ph520;
          L194 : while (1) {
           switch (HEAP8[$t$1$i518 >> 0] | 0) {
           case 69:
            {
             $ref_qual$0$i$ph521$lcssa = $ref_qual$0$i$ph521;
             $t$1$i518$lcssa = $t$1$i518;
             break L192;
             break;
            }
           case 118:
            {
             $t$1$i$be = $t$1$i518 + 1 | 0;
             break;
            }
           case 82:
            {
             $644 = $t$1$i518 + 1 | 0;
             if (($644 | 0) == ($last | 0)) label = 154; else if ((HEAP8[$644 >> 0] | 0) == 69) {
              $ref_qual$0$i$ph$ph = 1;
              $t$1$i$ph$ph = $644;
              break L194;
             } else label = 154;
             break;
            }
           case 79:
            {
             $648 = $t$1$i518 + 1 | 0;
             if (($648 | 0) == ($last | 0)) label = 154; else if ((HEAP8[$648 >> 0] | 0) == 69) {
              $ref_qual$0$i$ph$ph = 2;
              $t$1$i$ph$ph = $648;
              break L194;
             } else label = 154;
             break;
            }
           default:
            label = 154;
           }
           if ((label | 0) == 154) {
            label = 0;
            $657 = ((HEAP32[$628 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
            $658 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$1$i518, $last, $db) | 0;
            $664 = ((HEAP32[$628 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
            if (($658 | 0) == ($t$1$i518 | 0) | ($658 | 0) == ($last | 0)) break L191;
            if ($657 >>> 0 < $664 >>> 0) {
             $k$0$i515 = $657;
             do {
              $669 = HEAP8[$__v$i$i$i >> 0] | 0;
              if ((($669 & 1) == 0 ? ($669 & 255) >>> 1 : HEAP32[$629 >> 2] | 0) >>> 0 > 1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($__v$i$i$i, 25575) | 0;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, (HEAP32[$db >> 2] | 0) + ($k$0$i515 * 24 | 0) | 0);
              $679 = HEAP8[$0 >> 0] | 0;
              $681 = ($679 & 1) == 0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i, $681 ? $631 : HEAP32[$630 >> 2] | 0, $681 ? ($679 & 255) >>> 1 : HEAP32[$632 >> 2] | 0) | 0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
              $k$0$i515 = $k$0$i515 + 1 | 0;
             } while ($k$0$i515 >>> 0 < $664 >>> 0);
            }
            if ($657 >>> 0 < $664 >>> 0) {
             $k2$0$i516 = $657;
             do {
              $690 = HEAP32[$628 >> 2] | 0;
              $691 = $690 + -24 | 0;
              $693 = $690;
              do {
               $692 = $693 + -24 | 0;
               HEAP32[$628 >> 2] = $692;
               __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($692);
               $693 = HEAP32[$628 >> 2] | 0;
              } while (($693 | 0) != ($691 | 0));
              $k2$0$i516 = $k2$0$i516 + 1 | 0;
             } while ($k2$0$i516 >>> 0 < $664 >>> 0);
             $t$1$i$be = $658;
            } else $t$1$i$be = $658;
           }
           if (($t$1$i$be | 0) == ($last | 0)) {
            label = 144;
            break L191;
           } else $t$1$i518 = $t$1$i$be;
          }
          if (($t$1$i$ph$ph | 0) == ($last | 0)) {
           label = 144;
           break L191;
          } else {
           $ref_qual$0$i$ph521 = $ref_qual$0$i$ph$ph;
           $t$1$i$ph520 = $t$1$i$ph$ph;
          }
         }
         $641 = $t$1$i518$lcssa + 1 | 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($__v$i$i$i, 25478) | 0;
         switch ($ref_qual$0$i$ph521$lcssa | 0) {
         case 1:
          {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($__v$i$i$i, 25578) | 0;
           break;
          }
         case 2:
          {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($__v$i$i$i, 25581) | 0;
           break;
          }
         default:
          {}
         }
         $698 = HEAP32[$628 >> 2] | 0;
         if ((HEAP32[$db >> 2] | 0) != ($698 | 0)) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($698 + -24 | 0, 25585) | 0;
          $703 = HEAP8[$__v$i$i$i >> 0] | 0;
          $705 = ($703 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj((HEAP32[$628 >> 2] | 0) + -12 | 0, 0, $705 ? $__v$i$i$i + 1 | 0 : HEAP32[$__v$i$i$i + 8 >> 2] | 0, $705 ? ($703 & 255) >>> 1 : HEAP32[$629 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($__v$i$i$i);
          if (($641 | 0) == ($first | 0)) {
           $$0 = $first;
           break L1;
          }
          $716 = HEAP32[$628 >> 2] | 0;
          if ((HEAP32[$db >> 2] | 0) == ($716 | 0)) {
           $$0 = $first;
           break L1;
          }
          $718 = $db + 16 | 0;
          HEAP32[$15 >> 2] = HEAP32[$db + 12 >> 2];
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($14, $716 + -24 | 0, $15);
          $722 = $db + 20 | 0;
          $723 = HEAP32[$722 >> 2] | 0;
          $725 = HEAP32[$db + 24 >> 2] | 0;
          if ($723 >>> 0 < $725 >>> 0) {
           HEAP32[$723 + 12 >> 2] = HEAP32[$14 + 12 >> 2];
           HEAP32[$723 >> 2] = HEAP32[$14 >> 2];
           $732 = $14 + 4 | 0;
           HEAP32[$723 + 4 >> 2] = HEAP32[$732 >> 2];
           $734 = $14 + 8 | 0;
           HEAP32[$723 + 8 >> 2] = HEAP32[$734 >> 2];
           HEAP32[$734 >> 2] = 0;
           HEAP32[$732 >> 2] = 0;
           HEAP32[$14 >> 2] = 0;
           HEAP32[$722 >> 2] = (HEAP32[$722 >> 2] | 0) + 16;
          } else {
           $742 = HEAP32[$718 >> 2] | 0;
           $743 = $723 - $742 | 0;
           $744 = $743 >> 4;
           $745 = $744 + 1 | 0;
           if (($743 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($718);
           $748 = $725 - $742 | 0;
           if ($748 >> 4 >>> 0 < 1073741823) {
            $751 = $748 >> 3;
            $$0$i$i$i66 = $751 >>> 0 < $745 >>> 0 ? $745 : $751;
           } else $$0$i$i$i66 = 2147483647;
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i66, $744, $db + 28 | 0);
           $754 = $__v$i$i$i + 8 | 0;
           $755 = HEAP32[$754 >> 2] | 0;
           HEAP32[$755 + 12 >> 2] = HEAP32[$14 + 12 >> 2];
           HEAP32[$755 >> 2] = HEAP32[$14 >> 2];
           $761 = $14 + 4 | 0;
           HEAP32[$755 + 4 >> 2] = HEAP32[$761 >> 2];
           $763 = $14 + 8 | 0;
           HEAP32[$755 + 8 >> 2] = HEAP32[$763 >> 2];
           HEAP32[$763 >> 2] = 0;
           HEAP32[$761 >> 2] = 0;
           HEAP32[$14 >> 2] = 0;
           HEAP32[$754 >> 2] = $755 + 16;
           __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($718, $__v$i$i$i);
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
          }
          __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($14);
          $$0 = $641;
          break L1;
         }
        } while (0);
        if ((label | 0) == 144) {
         $635 = HEAP32[$628 >> 2] | 0;
         $636 = $635 + -24 | 0;
         $638 = $635;
         do {
          $637 = $638 + -24 | 0;
          HEAP32[$628 >> 2] = $637;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($637);
          $638 = HEAP32[$628 >> 2] | 0;
         } while (($638 | 0) != ($636 | 0));
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($__v$i$i$i);
       }
      }
     } while (0);
     $$0 = $first;
     break L1;
     break;
    }
   case 71:
    {
     $767 = $first + 1 | 0;
     $768 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($767, $last, $db) | 0;
     if (($768 | 0) == ($767 | 0)) {
      $$0 = $first;
      break L1;
     }
     $771 = $db + 4 | 0;
     $772 = HEAP32[$771 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($772 | 0)) {
      $$0 = $first;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($772 + -24 | 0, 25587) | 0;
     $775 = $db + 16 | 0;
     $777 = (HEAP32[$771 >> 2] | 0) + -24 | 0;
     HEAP32[$17 >> 2] = HEAP32[$db + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($16, $777, $17);
     $780 = $db + 20 | 0;
     $781 = HEAP32[$780 >> 2] | 0;
     $783 = HEAP32[$db + 24 >> 2] | 0;
     if ($781 >>> 0 < $783 >>> 0) {
      HEAP32[$781 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
      HEAP32[$781 >> 2] = HEAP32[$16 >> 2];
      $790 = $16 + 4 | 0;
      HEAP32[$781 + 4 >> 2] = HEAP32[$790 >> 2];
      $792 = $16 + 8 | 0;
      HEAP32[$781 + 8 >> 2] = HEAP32[$792 >> 2];
      HEAP32[$792 >> 2] = 0;
      HEAP32[$790 >> 2] = 0;
      HEAP32[$16 >> 2] = 0;
      HEAP32[$780 >> 2] = (HEAP32[$780 >> 2] | 0) + 16;
     } else {
      $800 = HEAP32[$775 >> 2] | 0;
      $801 = $781 - $800 | 0;
      $802 = $801 >> 4;
      $803 = $802 + 1 | 0;
      if (($801 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($775);
      $806 = $783 - $800 | 0;
      if ($806 >> 4 >>> 0 < 1073741823) {
       $809 = $806 >> 3;
       $$0$i$i$i71 = $809 >>> 0 < $803 >>> 0 ? $803 : $809;
      } else $$0$i$i$i71 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i71, $802, $db + 28 | 0);
      $812 = $__v$i$i$i + 8 | 0;
      $813 = HEAP32[$812 >> 2] | 0;
      HEAP32[$813 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
      HEAP32[$813 >> 2] = HEAP32[$16 >> 2];
      $819 = $16 + 4 | 0;
      HEAP32[$813 + 4 >> 2] = HEAP32[$819 >> 2];
      $821 = $16 + 8 | 0;
      HEAP32[$813 + 8 >> 2] = HEAP32[$821 >> 2];
      HEAP32[$821 >> 2] = 0;
      HEAP32[$819 >> 2] = 0;
      HEAP32[$16 >> 2] = 0;
      HEAP32[$812 >> 2] = $813 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($775, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($16);
     $$0 = $768;
     break L1;
     break;
    }
   case 77:
    {
     if ($197 << 24 >> 24 == 77) {
      $826 = $first + 1 | 0;
      $827 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($826, $last, $db) | 0;
      if (($827 | 0) == ($826 | 0)) $$08$i = $first; else {
       $829 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($827, $last, $db) | 0;
       if (($829 | 0) == ($827 | 0)) $$08$i = $first; else {
        $831 = $db + 4 | 0;
        $832 = HEAP32[$831 >> 2] | 0;
        if ((($832 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$08$i = $first; else {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($__v$i$i$i, $832 + -24 | 0);
         $840 = HEAP32[$831 >> 2] | 0;
         $841 = $840 + -24 | 0;
         $843 = $840;
         do {
          $842 = $843 + -24 | 0;
          HEAP32[$831 >> 2] = $842;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($842);
          $843 = HEAP32[$831 >> 2] | 0;
         } while (($843 | 0) != ($841 | 0));
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($0, $840 + -48 | 0);
         $846 = $__v$i$i$i + 12 | 0;
         $856 = HEAP32[$831 >> 2] | 0;
         $857 = $856 + -24 | 0;
         if ((HEAP8[((HEAP8[$846 >> 0] & 1) == 0 ? $846 + 1 | 0 : HEAP32[$__v$i$i$i + 20 >> 2] | 0) >> 0] | 0) == 40) {
          $858 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($__v$i$i$i, 25573) | 0;
          HEAP32[$3 >> 2] = HEAP32[$858 >> 2];
          HEAP32[$3 + 4 >> 2] = HEAP32[$858 + 4 >> 2];
          HEAP32[$3 + 8 >> 2] = HEAP32[$858 + 8 >> 2];
          HEAP32[$858 >> 2] = 0;
          HEAP32[$858 + 4 >> 2] = 0;
          HEAP32[$858 + 8 >> 2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $0);
          $861 = HEAP8[$4 >> 0] | 0;
          $863 = ($861 & 1) == 0;
          $873 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $863 ? $4 + 1 | 0 : HEAP32[$4 + 8 >> 2] | 0, $863 ? ($861 & 255) >>> 1 : HEAP32[$4 + 4 >> 2] | 0) | 0;
          HEAP32[$2 >> 2] = HEAP32[$873 >> 2];
          HEAP32[$2 + 4 >> 2] = HEAP32[$873 + 4 >> 2];
          HEAP32[$2 + 8 >> 2] = HEAP32[$873 + 8 >> 2];
          HEAP32[$873 >> 2] = 0;
          HEAP32[$873 + 4 >> 2] = 0;
          HEAP32[$873 + 8 >> 2] = 0;
          $876 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25598) | 0;
          HEAP32[$1 >> 2] = HEAP32[$876 >> 2];
          HEAP32[$1 + 4 >> 2] = HEAP32[$876 + 4 >> 2];
          HEAP32[$1 + 8 >> 2] = HEAP32[$876 + 8 >> 2];
          HEAP32[$876 >> 2] = 0;
          HEAP32[$876 + 4 >> 2] = 0;
          HEAP32[$876 + 8 >> 2] = 0;
          do if (!(HEAP8[$857 >> 0] & 1)) {
           HEAP8[$857 + 1 >> 0] = 0;
           HEAP8[$857 >> 0] = 0;
          } else {
           $883 = $856 + -16 | 0;
           HEAP8[HEAP32[$883 >> 2] >> 0] = 0;
           $885 = $856 + -20 | 0;
           HEAP32[$885 >> 2] = 0;
           $$pre$i$i$i$i = HEAP8[$857 >> 0] | 0;
           if (!($$pre$i$i$i$i & 1)) {
            $892 = $$pre$i$i$i$i;
            $901 = 10;
           } else {
            $888 = HEAP32[$857 >> 2] | 0;
            $892 = $888 & 255;
            $901 = ($888 & -2) + -1 | 0;
           }
           if (!($892 & 1)) {
            $895 = ($892 & 255) >>> 1;
            if (($892 & 255) < 22) {
             $2569 = 1;
             $900 = 10;
             $920 = $895;
            } else {
             $2569 = 1;
             $900 = ($895 + 16 & 240) + -1 | 0;
             $920 = $895;
            }
           } else {
            $2569 = 0;
            $900 = 10;
            $920 = 0;
           }
           if (($900 | 0) != ($901 | 0)) {
            if (($900 | 0) == 10) {
             $907 = $857 + 1 | 0;
             $908 = HEAP32[$883 >> 2] | 0;
             if ($2569) {
              _memcpy($907 | 0, $908 | 0, (($892 & 255) >>> 1) + 1 | 0) | 0;
              _free($908);
             } else {
              HEAP8[$907 >> 0] = HEAP8[$908 >> 0] | 0;
              _free($908);
             }
             HEAP8[$857 >> 0] = $920 << 1;
             break;
            }
            $904 = $900 + 1 | 0;
            $905 = _malloc($904) | 0;
            if (!($900 >>> 0 <= $901 >>> 0 & ($905 | 0) == 0)) {
             if ($2569) _memcpy($905 | 0, $857 + 1 | 0, (($892 & 255) >>> 1) + 1 | 0) | 0; else {
              $917 = HEAP32[$883 >> 2] | 0;
              HEAP8[$905 >> 0] = HEAP8[$917 >> 0] | 0;
              _free($917);
             }
             HEAP32[$857 >> 2] = $904 | 1;
             HEAP32[$885 >> 2] = $920;
             HEAP32[$883 >> 2] = $905;
            }
           }
          } while (0);
          HEAP32[$857 >> 2] = HEAP32[$1 >> 2];
          HEAP32[$857 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
          HEAP32[$857 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
          HEAP32[$1 >> 2] = 0;
          HEAP32[$1 + 4 >> 2] = 0;
          HEAP32[$1 + 8 >> 2] = 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          $925 = HEAP32[$831 >> 2] | 0;
          $926 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($846, 0, 25478) | 0;
          HEAP32[$5 >> 2] = HEAP32[$926 >> 2];
          HEAP32[$5 + 4 >> 2] = HEAP32[$926 + 4 >> 2];
          HEAP32[$5 + 8 >> 2] = HEAP32[$926 + 8 >> 2];
          HEAP32[$926 >> 2] = 0;
          HEAP32[$926 + 4 >> 2] = 0;
          HEAP32[$926 + 8 >> 2] = 0;
          $929 = $925 + -12 | 0;
          do if (!(HEAP8[$929 >> 0] & 1)) {
           HEAP8[$929 + 1 >> 0] = 0;
           HEAP8[$929 >> 0] = 0;
          } else {
           $934 = $925 + -4 | 0;
           HEAP8[HEAP32[$934 >> 2] >> 0] = 0;
           $936 = $925 + -8 | 0;
           HEAP32[$936 >> 2] = 0;
           $$pre$i$i$i21$i = HEAP8[$929 >> 0] | 0;
           if (!($$pre$i$i$i21$i & 1)) {
            $943 = $$pre$i$i$i21$i;
            $952 = 10;
           } else {
            $939 = HEAP32[$929 >> 2] | 0;
            $943 = $939 & 255;
            $952 = ($939 & -2) + -1 | 0;
           }
           if (!($943 & 1)) {
            $946 = ($943 & 255) >>> 1;
            if (($943 & 255) < 22) {
             $2570 = 1;
             $951 = 10;
             $971 = $946;
            } else {
             $2570 = 1;
             $951 = ($946 + 16 & 240) + -1 | 0;
             $971 = $946;
            }
           } else {
            $2570 = 0;
            $951 = 10;
            $971 = 0;
           }
           if (($951 | 0) != ($952 | 0)) {
            if (($951 | 0) == 10) {
             $958 = $929 + 1 | 0;
             $959 = HEAP32[$934 >> 2] | 0;
             if ($2570) {
              _memcpy($958 | 0, $959 | 0, (($943 & 255) >>> 1) + 1 | 0) | 0;
              _free($959);
             } else {
              HEAP8[$958 >> 0] = HEAP8[$959 >> 0] | 0;
              _free($959);
             }
             HEAP8[$929 >> 0] = $971 << 1;
             break;
            }
            $955 = $951 + 1 | 0;
            $956 = _malloc($955) | 0;
            if (!($951 >>> 0 <= $952 >>> 0 & ($956 | 0) == 0)) {
             if ($2570) _memcpy($956 | 0, $929 + 1 | 0, (($943 & 255) >>> 1) + 1 | 0) | 0; else {
              $968 = HEAP32[$934 >> 2] | 0;
              HEAP8[$956 >> 0] = HEAP8[$968 >> 0] | 0;
              _free($968);
             }
             HEAP32[$929 >> 2] = $955 | 1;
             HEAP32[$936 >> 2] = $971;
             HEAP32[$934 >> 2] = $956;
            }
           }
          } while (0);
          HEAP32[$929 >> 2] = HEAP32[$5 >> 2];
          HEAP32[$929 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
          HEAP32[$929 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
          HEAP32[$5 >> 2] = 0;
          HEAP32[$5 + 4 >> 2] = 0;
          HEAP32[$5 + 8 >> 2] = 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
         } else {
          $976 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($__v$i$i$i, 25585) | 0;
          HEAP32[$7 >> 2] = HEAP32[$976 >> 2];
          HEAP32[$7 + 4 >> 2] = HEAP32[$976 + 4 >> 2];
          HEAP32[$7 + 8 >> 2] = HEAP32[$976 + 8 >> 2];
          HEAP32[$976 >> 2] = 0;
          HEAP32[$976 + 4 >> 2] = 0;
          HEAP32[$976 + 8 >> 2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8, $0);
          $979 = HEAP8[$8 >> 0] | 0;
          $981 = ($979 & 1) == 0;
          $991 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $981 ? $8 + 1 | 0 : HEAP32[$8 + 8 >> 2] | 0, $981 ? ($979 & 255) >>> 1 : HEAP32[$8 + 4 >> 2] | 0) | 0;
          HEAP32[$num1$i >> 2] = HEAP32[$991 >> 2];
          HEAP32[$num1$i + 4 >> 2] = HEAP32[$991 + 4 >> 2];
          HEAP32[$num1$i + 8 >> 2] = HEAP32[$991 + 8 >> 2];
          HEAP32[$991 >> 2] = 0;
          HEAP32[$991 + 4 >> 2] = 0;
          HEAP32[$991 + 8 >> 2] = 0;
          $994 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($num1$i, 25598) | 0;
          HEAP32[$6 >> 2] = HEAP32[$994 >> 2];
          HEAP32[$6 + 4 >> 2] = HEAP32[$994 + 4 >> 2];
          HEAP32[$6 + 8 >> 2] = HEAP32[$994 + 8 >> 2];
          HEAP32[$994 >> 2] = 0;
          HEAP32[$994 + 4 >> 2] = 0;
          HEAP32[$994 + 8 >> 2] = 0;
          do if (!(HEAP8[$857 >> 0] & 1)) {
           HEAP8[$857 + 1 >> 0] = 0;
           HEAP8[$857 >> 0] = 0;
          } else {
           $1001 = $856 + -16 | 0;
           HEAP8[HEAP32[$1001 >> 2] >> 0] = 0;
           $1003 = $856 + -20 | 0;
           HEAP32[$1003 >> 2] = 0;
           $$pre$i$i$i52$i = HEAP8[$857 >> 0] | 0;
           if (!($$pre$i$i$i52$i & 1)) {
            $1010 = $$pre$i$i$i52$i;
            $1019 = 10;
           } else {
            $1006 = HEAP32[$857 >> 2] | 0;
            $1010 = $1006 & 255;
            $1019 = ($1006 & -2) + -1 | 0;
           }
           if (!($1010 & 1)) {
            $1013 = ($1010 & 255) >>> 1;
            if (($1010 & 255) < 22) {
             $1018 = 10;
             $1038 = $1013;
             $2571 = 1;
            } else {
             $1018 = ($1013 + 16 & 240) + -1 | 0;
             $1038 = $1013;
             $2571 = 1;
            }
           } else {
            $1018 = 10;
            $1038 = 0;
            $2571 = 0;
           }
           if (($1018 | 0) != ($1019 | 0)) {
            if (($1018 | 0) == 10) {
             $1025 = $857 + 1 | 0;
             $1026 = HEAP32[$1001 >> 2] | 0;
             if ($2571) {
              _memcpy($1025 | 0, $1026 | 0, (($1010 & 255) >>> 1) + 1 | 0) | 0;
              _free($1026);
             } else {
              HEAP8[$1025 >> 0] = HEAP8[$1026 >> 0] | 0;
              _free($1026);
             }
             HEAP8[$857 >> 0] = $1038 << 1;
             break;
            }
            $1022 = $1018 + 1 | 0;
            $1023 = _malloc($1022) | 0;
            if (!($1018 >>> 0 <= $1019 >>> 0 & ($1023 | 0) == 0)) {
             if ($2571) _memcpy($1023 | 0, $857 + 1 | 0, (($1010 & 255) >>> 1) + 1 | 0) | 0; else {
              $1035 = HEAP32[$1001 >> 2] | 0;
              HEAP8[$1023 >> 0] = HEAP8[$1035 >> 0] | 0;
              _free($1035);
             }
             HEAP32[$857 >> 2] = $1022 | 1;
             HEAP32[$1003 >> 2] = $1038;
             HEAP32[$1001 >> 2] = $1023;
            }
           }
          } while (0);
          HEAP32[$857 >> 2] = HEAP32[$6 >> 2];
          HEAP32[$857 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
          HEAP32[$857 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
          HEAP32[$6 >> 2] = 0;
          HEAP32[$6 + 4 >> 2] = 0;
          HEAP32[$6 + 8 >> 2] = 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num1$i);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
          $1043 = HEAP32[$831 >> 2] | 0;
          $1044 = $1043 + -12 | 0;
          do if (!(HEAP8[$1044 >> 0] & 1)) {
           HEAP8[$1044 + 1 >> 0] = 0;
           HEAP8[$1044 >> 0] = 0;
          } else {
           $1049 = $1043 + -4 | 0;
           HEAP8[HEAP32[$1049 >> 2] >> 0] = 0;
           $1051 = $1043 + -8 | 0;
           HEAP32[$1051 >> 2] = 0;
           $$pre$i$i$i71$i = HEAP8[$1044 >> 0] | 0;
           if (!($$pre$i$i$i71$i & 1)) {
            $1058 = $$pre$i$i$i71$i;
            $1067 = 10;
           } else {
            $1054 = HEAP32[$1044 >> 2] | 0;
            $1058 = $1054 & 255;
            $1067 = ($1054 & -2) + -1 | 0;
           }
           if (!($1058 & 1)) {
            $1061 = ($1058 & 255) >>> 1;
            if (($1058 & 255) < 22) {
             $1066 = 10;
             $1086 = $1061;
             $2572 = 1;
            } else {
             $1066 = ($1061 + 16 & 240) + -1 | 0;
             $1086 = $1061;
             $2572 = 1;
            }
           } else {
            $1066 = 10;
            $1086 = 0;
            $2572 = 0;
           }
           if (($1066 | 0) != ($1067 | 0)) {
            if (($1066 | 0) == 10) {
             $1073 = $1044 + 1 | 0;
             $1074 = HEAP32[$1049 >> 2] | 0;
             if ($2572) {
              _memcpy($1073 | 0, $1074 | 0, (($1058 & 255) >>> 1) + 1 | 0) | 0;
              _free($1074);
             } else {
              HEAP8[$1073 >> 0] = HEAP8[$1074 >> 0] | 0;
              _free($1074);
             }
             HEAP8[$1044 >> 0] = $1086 << 1;
             break;
            }
            $1070 = $1066 + 1 | 0;
            $1071 = _malloc($1070) | 0;
            if (!($1066 >>> 0 <= $1067 >>> 0 & ($1071 | 0) == 0)) {
             if ($2572) _memcpy($1071 | 0, $1044 + 1 | 0, (($1058 & 255) >>> 1) + 1 | 0) | 0; else {
              $1083 = HEAP32[$1049 >> 2] | 0;
              HEAP8[$1071 >> 0] = HEAP8[$1083 >> 0] | 0;
              _free($1083);
             }
             HEAP32[$1044 >> 2] = $1070 | 1;
             HEAP32[$1051 >> 2] = $1086;
             HEAP32[$1049 >> 2] = $1071;
            }
           }
          } while (0);
          HEAP32[$1044 >> 2] = HEAP32[$846 >> 2];
          HEAP32[$1044 + 4 >> 2] = HEAP32[$846 + 4 >> 2];
          HEAP32[$1044 + 8 >> 2] = HEAP32[$846 + 8 >> 2];
          HEAP32[$846 >> 2] = 0;
          HEAP32[$846 + 4 >> 2] = 0;
          HEAP32[$846 + 8 >> 2] = 0;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($__v$i$i$i);
         $$08$i = $829;
        }
       }
      }
     } else $$08$i = $first;
     if (($$08$i | 0) == ($first | 0)) {
      $$0 = $first;
      break L1;
     }
     $1094 = HEAP32[$db + 4 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($1094 | 0)) {
      $$0 = $first;
      break L1;
     }
     $1096 = $db + 16 | 0;
     HEAP32[$19 >> 2] = HEAP32[$db + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($18, $1094 + -24 | 0, $19);
     $1100 = $db + 20 | 0;
     $1101 = HEAP32[$1100 >> 2] | 0;
     $1103 = HEAP32[$db + 24 >> 2] | 0;
     if ($1101 >>> 0 < $1103 >>> 0) {
      HEAP32[$1101 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
      HEAP32[$1101 >> 2] = HEAP32[$18 >> 2];
      $1110 = $18 + 4 | 0;
      HEAP32[$1101 + 4 >> 2] = HEAP32[$1110 >> 2];
      $1112 = $18 + 8 | 0;
      HEAP32[$1101 + 8 >> 2] = HEAP32[$1112 >> 2];
      HEAP32[$1112 >> 2] = 0;
      HEAP32[$1110 >> 2] = 0;
      HEAP32[$18 >> 2] = 0;
      HEAP32[$1100 >> 2] = (HEAP32[$1100 >> 2] | 0) + 16;
     } else {
      $1120 = HEAP32[$1096 >> 2] | 0;
      $1121 = $1101 - $1120 | 0;
      $1122 = $1121 >> 4;
      $1123 = $1122 + 1 | 0;
      if (($1121 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1096);
      $1126 = $1103 - $1120 | 0;
      if ($1126 >> 4 >>> 0 < 1073741823) {
       $1129 = $1126 >> 3;
       $$0$i$i$i76 = $1129 >>> 0 < $1123 >>> 0 ? $1123 : $1129;
      } else $$0$i$i$i76 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i76, $1122, $db + 28 | 0);
      $1132 = $__v$i$i$i + 8 | 0;
      $1133 = HEAP32[$1132 >> 2] | 0;
      HEAP32[$1133 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
      HEAP32[$1133 >> 2] = HEAP32[$18 >> 2];
      $1139 = $18 + 4 | 0;
      HEAP32[$1133 + 4 >> 2] = HEAP32[$1139 >> 2];
      $1141 = $18 + 8 | 0;
      HEAP32[$1133 + 8 >> 2] = HEAP32[$1141 >> 2];
      HEAP32[$1141 >> 2] = 0;
      HEAP32[$1139 >> 2] = 0;
      HEAP32[$18 >> 2] = 0;
      HEAP32[$1132 >> 2] = $1133 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1096, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($18);
     $$0 = $$08$i;
     break L1;
     break;
    }
   case 79:
    {
     $1145 = $db + 4 | 0;
     $1151 = ((HEAP32[$1145 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     $1152 = $first + 1 | 0;
     $1153 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1152, $last, $db) | 0;
     $1159 = ((HEAP32[$1145 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     if (($1153 | 0) == ($1152 | 0)) {
      $$0 = $first;
      break L1;
     }
     $1161 = $db + 16 | 0;
     $1164 = HEAP32[$db + 12 >> 2] | 0;
     $1165 = $db + 20 | 0;
     $1166 = HEAP32[$1165 >> 2] | 0;
     $1168 = HEAP32[$db + 24 >> 2] | 0;
     if ($1166 >>> 0 < $1168 >>> 0) {
      HEAP32[$1166 >> 2] = 0;
      HEAP32[$1166 + 4 >> 2] = 0;
      HEAP32[$1166 + 8 >> 2] = 0;
      HEAP32[$1166 + 12 >> 2] = $1164;
      HEAP32[$1165 >> 2] = (HEAP32[$1165 >> 2] | 0) + 16;
     } else {
      $1178 = HEAP32[$1161 >> 2] | 0;
      $1179 = $1166 - $1178 | 0;
      $1180 = $1179 >> 4;
      $1181 = $1180 + 1 | 0;
      if (($1179 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1161);
      $1184 = $1168 - $1178 | 0;
      if ($1184 >> 4 >>> 0 < 1073741823) {
       $1187 = $1184 >> 3;
       $$0$i$i$i81 = $1187 >>> 0 < $1181 >>> 0 ? $1181 : $1187;
      } else $$0$i$i$i81 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i81, $1180, $db + 28 | 0);
      $1190 = $__v$i$i$i + 8 | 0;
      $1191 = HEAP32[$1190 >> 2] | 0;
      HEAP32[$1191 >> 2] = 0;
      HEAP32[$1191 + 4 >> 2] = 0;
      HEAP32[$1191 + 8 >> 2] = 0;
      HEAP32[$1191 + 12 >> 2] = $1164;
      HEAP32[$1190 >> 2] = $1191 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1161, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     $1196 = $20 + 4 | 0;
     $1197 = $20 + 8 | 0;
     $1198 = $20 + 1 | 0;
     $1199 = $__v$i$i$i + 8 | 0;
     if ($1151 >>> 0 < $1159 >>> 0) $k5$0533 = $1151; else {
      $$0 = $1153;
      break L1;
     }
     while (1) {
      $1201 = HEAP32[$db >> 2] | 0;
      $1202 = $1201 + ($k5$0533 * 24 | 0) + 12 | 0;
      $1203 = HEAP8[$1202 >> 0] | 0;
      $1205 = ($1203 & 1) == 0;
      $1210 = $1205 ? ($1203 & 255) >>> 1 : HEAP32[$1201 + ($k5$0533 * 24 | 0) + 16 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($20, $1205 ? $1202 + 1 | 0 : HEAP32[$1201 + ($k5$0533 * 24 | 0) + 20 >> 2] | 0, $1210 >>> 0 < 2 ? $1210 : 2);
      $1217 = HEAP8[$20 >> 0] | 0;
      $1219 = ($1217 & 1) == 0;
      $1223 = $1219 ? ($1217 & 255) >>> 1 : HEAP32[$1196 >> 2] | 0;
      $1226 = $1223 >>> 0 > 2;
      $1228 = _memcmp($1219 ? $1198 : HEAP32[$1197 >> 2] | 0, 25555, $1226 ? 2 : $1223) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
      $1233 = HEAP32[$db >> 2] | 0;
      if (!((($1228 | 0) == 0 ? ($1223 >>> 0 < 2 ? -1 : $1226 & 1) : $1228) | 0)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1233 + ($k5$0533 * 24 | 0) | 0, 25475) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k5$0533 * 24 | 0) + 12 | 0, 0, 25478) | 0;
      } else {
       $1237 = $1233 + ($k5$0533 * 24 | 0) + 12 | 0;
       if (!(HEAP8[$1237 >> 0] & 1)) $1245 = $1237 + 1 | 0; else $1245 = HEAP32[$1233 + ($k5$0533 * 24 | 0) + 20 >> 2] | 0;
       if ((HEAP8[$1245 >> 0] | 0) == 40) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1233 + ($k5$0533 * 24 | 0) | 0, 25573) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k5$0533 * 24 | 0) + 12 | 0, 0, 25478) | 0;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$db >> 2] | 0) + ($k5$0533 * 24 | 0) | 0, 25602) | 0;
      $1252 = HEAP32[$1165 >> 2] | 0;
      $1253 = $1252 + -16 | 0;
      $1254 = HEAP32[$db >> 2] | 0;
      $1255 = $1254 + ($k5$0533 * 24 | 0) | 0;
      $1256 = $1252 + -12 | 0;
      $1257 = HEAP32[$1256 >> 2] | 0;
      if (($1257 | 0) == (HEAP32[$1252 + -8 >> 2] | 0)) {
       $1269 = $1257 - (HEAP32[$1253 >> 2] | 0) | 0;
       $1270 = ($1269 | 0) / 24 | 0;
       $1271 = $1270 + 1 | 0;
       if (($1269 | 0) < -24) {
        $$lcssa667 = $1253;
        break;
       }
       if ($1270 >>> 0 < 1073741823) {
        $1274 = $1270 << 1;
        $$0$i$i$i87 = $1274 >>> 0 < $1271 >>> 0 ? $1271 : $1274;
       } else $$0$i$i$i87 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i87, $1270, $1252 + -4 | 0);
       $1277 = HEAP32[$1199 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1277, $1255);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1277 + 12 | 0, $1254 + ($k5$0533 * 24 | 0) + 12 | 0);
       HEAP32[$1199 >> 2] = $1277 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1253, $__v$i$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1257, $1255);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1257 + 12 | 0, $1254 + ($k5$0533 * 24 | 0) + 12 | 0);
       HEAP32[$1256 >> 2] = (HEAP32[$1256 >> 2] | 0) + 24;
      }
      $k5$0533 = $k5$0533 + 1 | 0;
      if ($k5$0533 >>> 0 >= $1159 >>> 0) {
       $$0 = $1153;
       break L1;
      }
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa667);
     break;
    }
   case 80:
    {
     $1283 = $db + 4 | 0;
     $1289 = ((HEAP32[$1283 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     $1290 = $first + 1 | 0;
     $1291 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1290, $last, $db) | 0;
     $1297 = ((HEAP32[$1283 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     if (($1291 | 0) == ($1290 | 0)) {
      $$0 = $first;
      break L1;
     }
     $1299 = $db + 16 | 0;
     $1302 = HEAP32[$db + 12 >> 2] | 0;
     $1303 = $db + 20 | 0;
     $1304 = HEAP32[$1303 >> 2] | 0;
     $1306 = HEAP32[$db + 24 >> 2] | 0;
     if ($1304 >>> 0 < $1306 >>> 0) {
      HEAP32[$1304 >> 2] = 0;
      HEAP32[$1304 + 4 >> 2] = 0;
      HEAP32[$1304 + 8 >> 2] = 0;
      HEAP32[$1304 + 12 >> 2] = $1302;
      HEAP32[$1303 >> 2] = (HEAP32[$1303 >> 2] | 0) + 16;
     } else {
      $1316 = HEAP32[$1299 >> 2] | 0;
      $1317 = $1304 - $1316 | 0;
      $1318 = $1317 >> 4;
      $1319 = $1318 + 1 | 0;
      if (($1317 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1299);
      $1322 = $1306 - $1316 | 0;
      if ($1322 >> 4 >>> 0 < 1073741823) {
       $1325 = $1322 >> 3;
       $$0$i$i$i95 = $1325 >>> 0 < $1319 >>> 0 ? $1319 : $1325;
      } else $$0$i$i$i95 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i95, $1318, $db + 28 | 0);
      $1328 = $__v$i$i$i + 8 | 0;
      $1329 = HEAP32[$1328 >> 2] | 0;
      HEAP32[$1329 >> 2] = 0;
      HEAP32[$1329 + 4 >> 2] = 0;
      HEAP32[$1329 + 8 >> 2] = 0;
      HEAP32[$1329 + 12 >> 2] = $1302;
      HEAP32[$1328 >> 2] = $1329 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1299, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     $1334 = $21 + 4 | 0;
     $1335 = $21 + 8 | 0;
     $1336 = $21 + 1 | 0;
     $1337 = $22 + 4 | 0;
     $1338 = $22 + 8 | 0;
     $1339 = $22 + 1 | 0;
     $1340 = $__v$i$i$i + 8 | 0;
     if ($1289 >>> 0 < $1297 >>> 0) $k8$0536 = $1289; else {
      $$0 = $1291;
      break L1;
     }
     while (1) {
      $1342 = HEAP32[$db >> 2] | 0;
      $1343 = $1342 + ($k8$0536 * 24 | 0) + 12 | 0;
      $1344 = HEAP8[$1343 >> 0] | 0;
      $1346 = ($1344 & 1) == 0;
      $1351 = $1346 ? ($1344 & 255) >>> 1 : HEAP32[$1342 + ($k8$0536 * 24 | 0) + 16 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($21, $1346 ? $1343 + 1 | 0 : HEAP32[$1342 + ($k8$0536 * 24 | 0) + 20 >> 2] | 0, $1351 >>> 0 < 2 ? $1351 : 2);
      $1358 = HEAP8[$21 >> 0] | 0;
      $1360 = ($1358 & 1) == 0;
      $1364 = $1360 ? ($1358 & 255) >>> 1 : HEAP32[$1334 >> 2] | 0;
      $1367 = $1364 >>> 0 > 2;
      $1369 = _memcmp($1360 ? $1336 : HEAP32[$1335 >> 2] | 0, 25555, $1367 ? 2 : $1364) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
      $1374 = HEAP32[$db >> 2] | 0;
      if (!((($1369 | 0) == 0 ? ($1364 >>> 0 < 2 ? -1 : $1367 & 1) : $1369) | 0)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1374 + ($k8$0536 * 24 | 0) | 0, 25475) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k8$0536 * 24 | 0) + 12 | 0, 0, 25478) | 0;
      } else {
       $1378 = $1374 + ($k8$0536 * 24 | 0) + 12 | 0;
       if (!(HEAP8[$1378 >> 0] & 1)) $1386 = $1378 + 1 | 0; else $1386 = HEAP32[$1374 + ($k8$0536 * 24 | 0) + 20 >> 2] | 0;
       if ((HEAP8[$1386 >> 0] | 0) == 40) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1374 + ($k8$0536 * 24 | 0) | 0, 25573) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k8$0536 * 24 | 0) + 12 | 0, 0, 25478) | 0;
       }
      }
      $1393 = HEAP32[$db >> 2] | 0;
      $1394 = $1393 + ($k8$0536 * 24 | 0) | 0;
      do if ((HEAP8[$1290 >> 0] | 0) == 85) {
       $1395 = HEAP8[$1394 >> 0] | 0;
       $1397 = ($1395 & 1) == 0;
       $1402 = $1397 ? ($1395 & 255) >>> 1 : HEAP32[$1393 + ($k8$0536 * 24 | 0) + 4 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($22, $1397 ? $1394 + 1 | 0 : HEAP32[$1393 + ($k8$0536 * 24 | 0) + 8 >> 2] | 0, $1402 >>> 0 < 12 ? $1402 : 12);
       $1409 = HEAP8[$22 >> 0] | 0;
       $1411 = ($1409 & 1) == 0;
       $1415 = $1411 ? ($1409 & 255) >>> 1 : HEAP32[$1337 >> 2] | 0;
       $1418 = $1415 >>> 0 > 12;
       $1420 = _memcmp($1411 ? $1339 : HEAP32[$1338 >> 2] | 0, 25605, $1418 ? 12 : $1415) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
       $1425 = HEAP32[$db >> 2] | 0;
       $1426 = $1425 + ($k8$0536 * 24 | 0) | 0;
       if (!((($1420 | 0) == 0 ? ($1415 >>> 0 < 12 ? -1 : $1418 & 1) : $1420) | 0)) {
        $1428 = HEAP8[$1426 >> 0] | 0;
        if (!($1428 & 1)) {
         $1432 = ($1428 & 255) >>> 1;
         $1443 = $1432 >>> 0 < 11 ? $1432 : 11;
         $1444 = $1432;
         $1446 = 10;
         $1449 = $1428;
        } else {
         $1436 = HEAP32[$1425 + ($k8$0536 * 24 | 0) + 4 >> 2] | 0;
         $1439 = HEAP32[$1426 >> 2] | 0;
         $1443 = $1436 >>> 0 < 11 ? $1436 : 11;
         $1444 = $1436;
         $1446 = ($1439 & -2) + -1 | 0;
         $1449 = $1439 & 255;
        }
        if (($1443 - $1444 + $1446 | 0) >>> 0 < 2) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($1426, $1446, 2 - $1443 + $1444 - $1446 | 0, $1444, 0, $1443, 2, 25620);
         break;
        }
        if (!($1449 & 1)) $1458 = $1426 + 1 | 0; else $1458 = HEAP32[$1425 + ($k8$0536 * 24 | 0) + 8 >> 2] | 0;
        do if (($1443 | 0) == 2) {
         $$1$i$i = 0;
         $$12$i$i = 25620;
         $$14$i$i = 2;
         $2573 = 2;
         label = 339;
        } else {
         $1455 = $1444 - $1443 | 0;
         if (($1444 | 0) == ($1443 | 0)) {
          $$1$i$i = 0;
          $$12$i$i = 25620;
          $$14$i$i = 2;
          $2573 = $1443;
          label = 339;
         } else {
          if ($1443 >>> 0 > 2) {
           HEAP8[$1458 >> 0] = 105;
           HEAP8[$1458 + 1 >> 0] = 100;
           _memmove($1458 + 2 | 0, $1458 + $1443 | 0, $1455 | 0) | 0;
           $$2$i$i = 2;
           $1474 = $1443;
           break;
          }
          do if ($1458 >>> 0 < 25620 >>> 0 & ($1458 + $1444 | 0) >>> 0 > 25620 >>> 0) if (($1458 + $1443 | 0) >>> 0 > 25620 >>> 0) {
           _memcpy($1458 | 0, 25620, $1443 | 0) | 0;
           $$0$i$i = $1443;
           $$01$i$i = 25622;
           $$03$i$i = 2 - $1443 | 0;
           $1470 = 0;
           break;
          } else {
           $$0$i$i = 0;
           $$01$i$i = 25620 + (2 - $1443) | 0;
           $$03$i$i = 2;
           $1470 = $1443;
           break;
          } else {
           $$0$i$i = 0;
           $$01$i$i = 25620;
           $$03$i$i = 2;
           $1470 = $1443;
          } while (0);
          _memmove($1458 + ($$0$i$i + $$03$i$i) | 0, $1458 + ($$0$i$i + $1470) | 0, $1455 | 0) | 0;
          $$1$i$i = $$0$i$i;
          $$12$i$i = $$01$i$i;
          $$14$i$i = $$03$i$i;
          $2573 = $1470;
          label = 339;
         }
        } while (0);
        if ((label | 0) == 339) {
         label = 0;
         _memmove($1458 + $$1$i$i | 0, $$12$i$i | 0, $$14$i$i | 0) | 0;
         $$2$i$i = $$14$i$i;
         $1474 = $2573;
        }
        $1475 = $$2$i$i - $1474 + $1444 | 0;
        if (!(HEAP8[$1426 >> 0] & 1)) HEAP8[$1426 >> 0] = $1475 << 1; else HEAP32[$1425 + ($k8$0536 * 24 | 0) + 4 >> 2] = $1475;
        HEAP8[$1458 + $1475 >> 0] = 0;
       } else {
        $1427 = $1426;
        label = 322;
       }
      } else {
       $1427 = $1394;
       label = 322;
      } while (0);
      if ((label | 0) == 322) {
       label = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1427, 25618) | 0;
      }
      $1486 = HEAP32[$1303 >> 2] | 0;
      $1487 = $1486 + -16 | 0;
      $1488 = HEAP32[$db >> 2] | 0;
      $1489 = $1488 + ($k8$0536 * 24 | 0) | 0;
      $1490 = $1486 + -12 | 0;
      $1491 = HEAP32[$1490 >> 2] | 0;
      if (($1491 | 0) == (HEAP32[$1486 + -8 >> 2] | 0)) {
       $1503 = $1491 - (HEAP32[$1487 >> 2] | 0) | 0;
       $1504 = ($1503 | 0) / 24 | 0;
       $1505 = $1504 + 1 | 0;
       if (($1503 | 0) < -24) {
        $$lcssa674 = $1487;
        break;
       }
       if ($1504 >>> 0 < 1073741823) {
        $1508 = $1504 << 1;
        $$0$i$i$i105 = $1508 >>> 0 < $1505 >>> 0 ? $1505 : $1508;
       } else $$0$i$i$i105 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i105, $1504, $1486 + -4 | 0);
       $1511 = HEAP32[$1340 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1511, $1489);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1511 + 12 | 0, $1488 + ($k8$0536 * 24 | 0) + 12 | 0);
       HEAP32[$1340 >> 2] = $1511 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1487, $__v$i$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1491, $1489);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1491 + 12 | 0, $1488 + ($k8$0536 * 24 | 0) + 12 | 0);
       HEAP32[$1490 >> 2] = (HEAP32[$1490 >> 2] | 0) + 24;
      }
      $k8$0536 = $k8$0536 + 1 | 0;
      if ($k8$0536 >>> 0 >= $1297 >>> 0) {
       $$0 = $1291;
       break L1;
      }
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa674);
     break;
    }
   case 82:
    {
     $1517 = $db + 4 | 0;
     $1523 = ((HEAP32[$1517 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     $1524 = $first + 1 | 0;
     $1525 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1524, $last, $db) | 0;
     $1531 = ((HEAP32[$1517 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     if (($1525 | 0) == ($1524 | 0)) {
      $$0 = $first;
      break L1;
     }
     $1533 = $db + 16 | 0;
     $1536 = HEAP32[$db + 12 >> 2] | 0;
     $1537 = $db + 20 | 0;
     $1538 = HEAP32[$1537 >> 2] | 0;
     $1540 = HEAP32[$db + 24 >> 2] | 0;
     if ($1538 >>> 0 < $1540 >>> 0) {
      HEAP32[$1538 >> 2] = 0;
      HEAP32[$1538 + 4 >> 2] = 0;
      HEAP32[$1538 + 8 >> 2] = 0;
      HEAP32[$1538 + 12 >> 2] = $1536;
      HEAP32[$1537 >> 2] = (HEAP32[$1537 >> 2] | 0) + 16;
     } else {
      $1550 = HEAP32[$1533 >> 2] | 0;
      $1551 = $1538 - $1550 | 0;
      $1552 = $1551 >> 4;
      $1553 = $1552 + 1 | 0;
      if (($1551 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1533);
      $1556 = $1540 - $1550 | 0;
      if ($1556 >> 4 >>> 0 < 1073741823) {
       $1559 = $1556 >> 3;
       $$0$i$i$i113 = $1559 >>> 0 < $1553 >>> 0 ? $1553 : $1559;
      } else $$0$i$i$i113 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i113, $1552, $db + 28 | 0);
      $1562 = $__v$i$i$i + 8 | 0;
      $1563 = HEAP32[$1562 >> 2] | 0;
      HEAP32[$1563 >> 2] = 0;
      HEAP32[$1563 + 4 >> 2] = 0;
      HEAP32[$1563 + 8 >> 2] = 0;
      HEAP32[$1563 + 12 >> 2] = $1536;
      HEAP32[$1562 >> 2] = $1563 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1533, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     $1568 = $23 + 4 | 0;
     $1569 = $23 + 8 | 0;
     $1570 = $23 + 1 | 0;
     $1571 = $__v$i$i$i + 8 | 0;
     if ($1523 >>> 0 < $1531 >>> 0) $k11$0540 = $1523; else {
      $$0 = $1525;
      break L1;
     }
     while (1) {
      $1573 = HEAP32[$db >> 2] | 0;
      $1574 = $1573 + ($k11$0540 * 24 | 0) + 12 | 0;
      $1575 = HEAP8[$1574 >> 0] | 0;
      $1577 = ($1575 & 1) == 0;
      $1582 = $1577 ? ($1575 & 255) >>> 1 : HEAP32[$1573 + ($k11$0540 * 24 | 0) + 16 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($23, $1577 ? $1574 + 1 | 0 : HEAP32[$1573 + ($k11$0540 * 24 | 0) + 20 >> 2] | 0, $1582 >>> 0 < 2 ? $1582 : 2);
      $1589 = HEAP8[$23 >> 0] | 0;
      $1591 = ($1589 & 1) == 0;
      $1595 = $1591 ? ($1589 & 255) >>> 1 : HEAP32[$1568 >> 2] | 0;
      $1598 = $1595 >>> 0 > 2;
      $1600 = _memcmp($1591 ? $1570 : HEAP32[$1569 >> 2] | 0, 25555, $1598 ? 2 : $1595) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
      $1605 = HEAP32[$db >> 2] | 0;
      if (!((($1600 | 0) == 0 ? ($1595 >>> 0 < 2 ? -1 : $1598 & 1) : $1600) | 0)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1605 + ($k11$0540 * 24 | 0) | 0, 25475) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k11$0540 * 24 | 0) + 12 | 0, 0, 25478) | 0;
      } else {
       $1609 = $1605 + ($k11$0540 * 24 | 0) + 12 | 0;
       if (!(HEAP8[$1609 >> 0] & 1)) $1617 = $1609 + 1 | 0; else $1617 = HEAP32[$1605 + ($k11$0540 * 24 | 0) + 20 >> 2] | 0;
       if ((HEAP8[$1617 >> 0] | 0) == 40) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1605 + ($k11$0540 * 24 | 0) | 0, 25573) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$db >> 2] | 0) + ($k11$0540 * 24 | 0) + 12 | 0, 0, 25478) | 0;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$db >> 2] | 0) + ($k11$0540 * 24 | 0) | 0, 25623) | 0;
      $1624 = HEAP32[$1537 >> 2] | 0;
      $1625 = $1624 + -16 | 0;
      $1626 = HEAP32[$db >> 2] | 0;
      $1627 = $1626 + ($k11$0540 * 24 | 0) | 0;
      $1628 = $1624 + -12 | 0;
      $1629 = HEAP32[$1628 >> 2] | 0;
      if (($1629 | 0) == (HEAP32[$1624 + -8 >> 2] | 0)) {
       $1641 = $1629 - (HEAP32[$1625 >> 2] | 0) | 0;
       $1642 = ($1641 | 0) / 24 | 0;
       $1643 = $1642 + 1 | 0;
       if (($1641 | 0) < -24) {
        $$lcssa682 = $1625;
        break;
       }
       if ($1642 >>> 0 < 1073741823) {
        $1646 = $1642 << 1;
        $$0$i$i$i123 = $1646 >>> 0 < $1643 >>> 0 ? $1643 : $1646;
       } else $$0$i$i$i123 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i123, $1642, $1624 + -4 | 0);
       $1649 = HEAP32[$1571 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1649, $1627);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1649 + 12 | 0, $1626 + ($k11$0540 * 24 | 0) + 12 | 0);
       HEAP32[$1571 >> 2] = $1649 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1625, $__v$i$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1629, $1627);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1629 + 12 | 0, $1626 + ($k11$0540 * 24 | 0) + 12 | 0);
       HEAP32[$1628 >> 2] = (HEAP32[$1628 >> 2] | 0) + 24;
      }
      $k11$0540 = $k11$0540 + 1 | 0;
      if ($k11$0540 >>> 0 >= $1531 >>> 0) {
       $$0 = $1525;
       break L1;
      }
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa682);
     break;
    }
   case 84:
    {
     $1655 = $db + 4 | 0;
     $1661 = ((HEAP32[$1655 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     $1662 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
     $1668 = ((HEAP32[$1655 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
     if (($1662 | 0) == ($first | 0)) {
      $$0 = $first;
      break L1;
     }
     $1670 = $db + 16 | 0;
     $1671 = $db + 12 | 0;
     $1673 = HEAP32[$1671 >> 2] | 0;
     $1674 = $db + 20 | 0;
     $1675 = HEAP32[$1674 >> 2] | 0;
     $1676 = $db + 24 | 0;
     $1677 = HEAP32[$1676 >> 2] | 0;
     if ($1675 >>> 0 < $1677 >>> 0) {
      HEAP32[$1675 >> 2] = 0;
      HEAP32[$1675 + 4 >> 2] = 0;
      HEAP32[$1675 + 8 >> 2] = 0;
      HEAP32[$1675 + 12 >> 2] = $1673;
      HEAP32[$1674 >> 2] = (HEAP32[$1674 >> 2] | 0) + 16;
     } else {
      $1687 = HEAP32[$1670 >> 2] | 0;
      $1688 = $1675 - $1687 | 0;
      $1689 = $1688 >> 4;
      $1690 = $1689 + 1 | 0;
      if (($1688 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1670);
      $1693 = $1677 - $1687 | 0;
      if ($1693 >> 4 >>> 0 < 1073741823) {
       $1696 = $1693 >> 3;
       $$0$i$i$i131 = $1696 >>> 0 < $1690 >>> 0 ? $1690 : $1696;
      } else $$0$i$i$i131 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i131, $1689, $db + 28 | 0);
      $1699 = $__v$i$i$i + 8 | 0;
      $1700 = HEAP32[$1699 >> 2] | 0;
      HEAP32[$1700 >> 2] = 0;
      HEAP32[$1700 + 4 >> 2] = 0;
      HEAP32[$1700 + 8 >> 2] = 0;
      HEAP32[$1700 + 12 >> 2] = $1673;
      HEAP32[$1699 >> 2] = $1700 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1670, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     $1705 = $__v$i$i$i + 8 | 0;
     L522 : do if ($1661 >>> 0 < $1668 >>> 0) {
      $k15$0543 = $1661;
      while (1) {
       $1707 = HEAP32[$1674 >> 2] | 0;
       $1708 = $1707 + -16 | 0;
       $1709 = HEAP32[$db >> 2] | 0;
       $1710 = $1709 + ($k15$0543 * 24 | 0) | 0;
       $1711 = $1707 + -12 | 0;
       $1712 = HEAP32[$1711 >> 2] | 0;
       if (($1712 | 0) == (HEAP32[$1707 + -8 >> 2] | 0)) {
        $1724 = $1712 - (HEAP32[$1708 >> 2] | 0) | 0;
        $1725 = ($1724 | 0) / 24 | 0;
        $1726 = $1725 + 1 | 0;
        if (($1724 | 0) < -24) {
         $$lcssa690 = $1708;
         break;
        }
        if ($1725 >>> 0 < 1073741823) {
         $1729 = $1725 << 1;
         $$0$i$i$i136 = $1729 >>> 0 < $1726 >>> 0 ? $1726 : $1729;
        } else $$0$i$i$i136 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i136, $1725, $1707 + -4 | 0);
        $1732 = HEAP32[$1705 >> 2] | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1732, $1710);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1732 + 12 | 0, $1709 + ($k15$0543 * 24 | 0) + 12 | 0);
        HEAP32[$1705 >> 2] = $1732 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1708, $__v$i$i$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1712, $1710);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1712 + 12 | 0, $1709 + ($k15$0543 * 24 | 0) + 12 | 0);
        HEAP32[$1711 >> 2] = (HEAP32[$1711 >> 2] | 0) + 24;
       }
       $k15$0543 = $k15$0543 + 1 | 0;
       if ($k15$0543 >>> 0 >= $1668 >>> 0) break L522;
      }
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa690);
     } while (0);
     if (!(($1668 | 0) == ($1661 + 1 | 0) & (HEAP8[$db + 63 >> 0] | 0) != 0)) {
      $$0 = $1662;
      break L1;
     }
     $1743 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($1662, $last, $db) | 0;
     if (($1743 | 0) == ($1662 | 0)) {
      $$0 = $1662;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args, (HEAP32[$1655 >> 2] | 0) + -24 | 0);
     $1747 = HEAP32[$1655 >> 2] | 0;
     $1748 = $1747 + -24 | 0;
     $1750 = $1747;
     do {
      $1749 = $1750 + -24 | 0;
      HEAP32[$1655 >> 2] = $1749;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1749);
      $1750 = HEAP32[$1655 >> 2] | 0;
     } while (($1750 | 0) != ($1748 | 0));
     $1753 = HEAP8[$args >> 0] | 0;
     $1755 = ($1753 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1747 + -48 | 0, $1755 ? $args + 1 | 0 : HEAP32[$args + 8 >> 2] | 0, $1755 ? ($1753 & 255) >>> 1 : HEAP32[$args + 4 >> 2] | 0) | 0;
     $1766 = (HEAP32[$1655 >> 2] | 0) + -24 | 0;
     HEAP32[$25 >> 2] = HEAP32[$1671 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($24, $1766, $25);
     $1768 = HEAP32[$1674 >> 2] | 0;
     $1769 = HEAP32[$1676 >> 2] | 0;
     if ($1768 >>> 0 < $1769 >>> 0) {
      HEAP32[$1768 + 12 >> 2] = HEAP32[$24 + 12 >> 2];
      HEAP32[$1768 >> 2] = HEAP32[$24 >> 2];
      $1776 = $24 + 4 | 0;
      HEAP32[$1768 + 4 >> 2] = HEAP32[$1776 >> 2];
      $1778 = $24 + 8 | 0;
      HEAP32[$1768 + 8 >> 2] = HEAP32[$1778 >> 2];
      HEAP32[$1778 >> 2] = 0;
      HEAP32[$1776 >> 2] = 0;
      HEAP32[$24 >> 2] = 0;
      HEAP32[$1674 >> 2] = (HEAP32[$1674 >> 2] | 0) + 16;
     } else {
      $1786 = HEAP32[$1670 >> 2] | 0;
      $1787 = $1768 - $1786 | 0;
      $1788 = $1787 >> 4;
      $1789 = $1788 + 1 | 0;
      if (($1787 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1670);
      $1792 = $1769 - $1786 | 0;
      if ($1792 >> 4 >>> 0 < 1073741823) {
       $1795 = $1792 >> 3;
       $$0$i$i$i148 = $1795 >>> 0 < $1789 >>> 0 ? $1789 : $1795;
      } else $$0$i$i$i148 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i148, $1788, $db + 28 | 0);
      $1798 = $__v$i$i$i + 8 | 0;
      $1799 = HEAP32[$1798 >> 2] | 0;
      HEAP32[$1799 + 12 >> 2] = HEAP32[$24 + 12 >> 2];
      HEAP32[$1799 >> 2] = HEAP32[$24 >> 2];
      $1805 = $24 + 4 | 0;
      HEAP32[$1799 + 4 >> 2] = HEAP32[$1805 >> 2];
      $1807 = $24 + 8 | 0;
      HEAP32[$1799 + 8 >> 2] = HEAP32[$1807 >> 2];
      HEAP32[$1807 >> 2] = 0;
      HEAP32[$1805 >> 2] = 0;
      HEAP32[$24 >> 2] = 0;
      HEAP32[$1798 >> 2] = $1799 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1670, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($24);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
     $$0 = $1743;
     break L1;
     break;
    }
   case 85:
    {
     $1811 = $first + 1 | 0;
     if (($1811 | 0) == ($last | 0)) {
      $$0 = $first;
      break L1;
     }
     $1813 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($1811, $last, $db) | 0;
     if (($1813 | 0) == ($1811 | 0)) {
      $$0 = $first;
      break L1;
     }
     $1815 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1813, $last, $db) | 0;
     if (($1815 | 0) == ($1813 | 0)) {
      $$0 = $first;
      break L1;
     }
     $1817 = $db + 4 | 0;
     $1818 = HEAP32[$1817 >> 2] | 0;
     if ((($1818 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$0 = $first;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($type, $1818 + -24 | 0);
     $1826 = HEAP32[$1817 >> 2] | 0;
     $1827 = $1826 + -24 | 0;
     $1829 = $1826;
     do {
      $1828 = $1829 + -24 | 0;
      HEAP32[$1817 >> 2] = $1828;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1828);
      $1829 = HEAP32[$1817 >> 2] | 0;
     } while (($1829 | 0) != ($1827 | 0));
     $1831 = $1826 + -48 | 0;
     $1832 = HEAP8[$1831 >> 0] | 0;
     $1834 = ($1832 & 1) == 0;
     $1839 = $1834 ? ($1832 & 255) >>> 1 : HEAP32[$1826 + -44 >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($26, $1834 ? $1831 + 1 | 0 : HEAP32[$1826 + -40 >> 2] | 0, $1839 >>> 0 < 9 ? $1839 : 9);
     $1846 = HEAP8[$26 >> 0] | 0;
     $1848 = ($1846 & 1) == 0;
     $1853 = $1848 ? ($1846 & 255) >>> 1 : HEAP32[$26 + 4 >> 2] | 0;
     $1858 = $1853 >>> 0 > 9;
     $1860 = _memcmp($1848 ? $26 + 1 | 0 : HEAP32[$26 + 8 >> 2] | 0, 25625, $1858 ? 9 : $1853) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($26);
     $1866 = (HEAP32[$1817 >> 2] | 0) + -24 | 0;
     if (!((($1860 | 0) == 0 ? ($1853 >>> 0 < 9 ? -1 : $1858 & 1) : $1860) | 0)) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($proto, $1866);
      $1884 = HEAP32[$1817 >> 2] | 0;
      $1885 = $1884 + -24 | 0;
      $1887 = $1884;
      do {
       $1886 = $1887 + -24 | 0;
       HEAP32[$1817 >> 2] = $1886;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1886);
       $1887 = HEAP32[$1817 >> 2] | 0;
      } while (($1887 | 0) != ($1885 | 0));
      $1889 = HEAP8[$proto >> 0] | 0;
      $1891 = ($1889 & 1) == 0;
      $1892 = $proto + 8 | 0;
      $1894 = $proto + 1 | 0;
      $1895 = $1891 ? $1894 : HEAP32[$1892 >> 2] | 0;
      $1897 = $proto + 4 | 0;
      $1903 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($1895 + 9 | 0, $1895 + ($1891 ? ($1889 & 255) >>> 1 : HEAP32[$1897 >> 2] | 0) | 0, $db) | 0;
      if (($1903 | 0) == (((HEAP8[$proto >> 0] & 1) == 0 ? $1894 : HEAP32[$1892 >> 2] | 0) + 9 | 0)) {
       __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($38, $type, 25585);
       $1933 = HEAP8[$proto >> 0] | 0;
       $1935 = ($1933 & 1) == 0;
       $1942 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($38, $1935 ? $1894 : HEAP32[$1892 >> 2] | 0, $1935 ? ($1933 & 255) >>> 1 : HEAP32[$1897 >> 2] | 0) | 0;
       HEAP32[$37 >> 2] = HEAP32[$1942 >> 2];
       HEAP32[$37 + 4 >> 2] = HEAP32[$1942 + 4 >> 2];
       HEAP32[$37 + 8 >> 2] = HEAP32[$1942 + 8 >> 2];
       HEAP32[$1942 >> 2] = 0;
       HEAP32[$1942 + 4 >> 2] = 0;
       HEAP32[$1942 + 8 >> 2] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($36, $37);
       $1945 = HEAP32[$1817 >> 2] | 0;
       $1947 = HEAP32[$db + 8 >> 2] | 0;
       if ($1945 >>> 0 < $1947 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1945, $36);
        HEAP32[$1817 >> 2] = (HEAP32[$1817 >> 2] | 0) + 24;
       } else {
        $1954 = HEAP32[$db >> 2] | 0;
        $1955 = $1945 - $1954 | 0;
        $1956 = ($1955 | 0) / 24 | 0;
        $1957 = $1956 + 1 | 0;
        if (($1955 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
        $1961 = ($1947 - $1954 | 0) / 24 | 0;
        if ($1961 >>> 0 < 1073741823) {
         $1963 = $1961 << 1;
         $$0$i$i$i181 = $1963 >>> 0 < $1957 >>> 0 ? $1957 : $1963;
        } else $$0$i$i$i181 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i181, $1956, $db + 12 | 0);
        $1966 = $__v$i$i$i + 8 | 0;
        $1967 = HEAP32[$1966 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1967, $36);
        HEAP32[$1966 >> 2] = $1967 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($37);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($38);
      } else {
       $1912 = (HEAP32[$1817 >> 2] | 0) + -24 | 0;
       __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($34, $type, 25635);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($35, (HEAP32[$1817 >> 2] | 0) + -24 | 0);
       $1915 = HEAP8[$35 >> 0] | 0;
       $1917 = ($1915 & 1) == 0;
       $1927 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($34, $1917 ? $35 + 1 | 0 : HEAP32[$35 + 8 >> 2] | 0, $1917 ? ($1915 & 255) >>> 1 : HEAP32[$35 + 4 >> 2] | 0) | 0;
       HEAP32[$33 >> 2] = HEAP32[$1927 >> 2];
       HEAP32[$33 + 4 >> 2] = HEAP32[$1927 + 4 >> 2];
       HEAP32[$33 + 8 >> 2] = HEAP32[$1927 + 8 >> 2];
       HEAP32[$1927 >> 2] = 0;
       HEAP32[$1927 + 4 >> 2] = 0;
       HEAP32[$1927 + 8 >> 2] = 0;
       $1930 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($33, 25637) | 0;
       HEAP32[$32 >> 2] = HEAP32[$1930 >> 2];
       HEAP32[$32 + 4 >> 2] = HEAP32[$1930 + 4 >> 2];
       HEAP32[$32 + 8 >> 2] = HEAP32[$1930 + 8 >> 2];
       HEAP32[$1930 >> 2] = 0;
       HEAP32[$1930 + 4 >> 2] = 0;
       HEAP32[$1930 + 8 >> 2] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($31, $32);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1912, $31);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($31);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($32);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($33);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($35);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($34);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($proto);
     } else {
      __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($29, $type, 25585);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($30, (HEAP32[$1817 >> 2] | 0) + -24 | 0);
      $1869 = HEAP8[$30 >> 0] | 0;
      $1871 = ($1869 & 1) == 0;
      $1881 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($29, $1871 ? $30 + 1 | 0 : HEAP32[$30 + 8 >> 2] | 0, $1871 ? ($1869 & 255) >>> 1 : HEAP32[$30 + 4 >> 2] | 0) | 0;
      HEAP32[$28 >> 2] = HEAP32[$1881 >> 2];
      HEAP32[$28 + 4 >> 2] = HEAP32[$1881 + 4 >> 2];
      HEAP32[$28 + 8 >> 2] = HEAP32[$1881 + 8 >> 2];
      HEAP32[$1881 >> 2] = 0;
      HEAP32[$1881 + 4 >> 2] = 0;
      HEAP32[$1881 + 8 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($27, $28);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1866, $27);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($28);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($30);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
     }
     $1970 = (HEAP32[$1817 >> 2] | 0) + -24 | 0;
     HEAP32[$40 >> 2] = HEAP32[$db + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($39, $1970, $40);
     $1973 = $db + 16 | 0;
     $1974 = $db + 20 | 0;
     $1975 = HEAP32[$1974 >> 2] | 0;
     $1977 = HEAP32[$db + 24 >> 2] | 0;
     if ($1975 >>> 0 < $1977 >>> 0) {
      HEAP32[$1975 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
      HEAP32[$1975 >> 2] = HEAP32[$39 >> 2];
      $1984 = $39 + 4 | 0;
      HEAP32[$1975 + 4 >> 2] = HEAP32[$1984 >> 2];
      $1986 = $39 + 8 | 0;
      HEAP32[$1975 + 8 >> 2] = HEAP32[$1986 >> 2];
      HEAP32[$1986 >> 2] = 0;
      HEAP32[$1984 >> 2] = 0;
      HEAP32[$39 >> 2] = 0;
      HEAP32[$1974 >> 2] = (HEAP32[$1974 >> 2] | 0) + 16;
     } else {
      $1994 = HEAP32[$1973 >> 2] | 0;
      $1995 = $1975 - $1994 | 0;
      $1996 = $1995 >> 4;
      $1997 = $1996 + 1 | 0;
      if (($1995 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1973);
      $2000 = $1977 - $1994 | 0;
      if ($2000 >> 4 >>> 0 < 1073741823) {
       $2003 = $2000 >> 3;
       $$0$i$i$i153 = $2003 >>> 0 < $1997 >>> 0 ? $1997 : $2003;
      } else $$0$i$i$i153 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i153, $1996, $db + 28 | 0);
      $2006 = $__v$i$i$i + 8 | 0;
      $2007 = HEAP32[$2006 >> 2] | 0;
      HEAP32[$2007 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
      HEAP32[$2007 >> 2] = HEAP32[$39 >> 2];
      $2013 = $39 + 4 | 0;
      HEAP32[$2007 + 4 >> 2] = HEAP32[$2013 >> 2];
      $2015 = $39 + 8 | 0;
      HEAP32[$2007 + 8 >> 2] = HEAP32[$2015 >> 2];
      HEAP32[$2015 >> 2] = 0;
      HEAP32[$2013 >> 2] = 0;
      HEAP32[$39 >> 2] = 0;
      HEAP32[$2006 >> 2] = $2007 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1973, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($39);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($type);
     $$0 = $1815;
     break L1;
     break;
    }
   case 83:
    {
     $2019 = $first + 1 | 0;
     if (($2019 | 0) != ($last | 0)) if ((HEAP8[$2019 >> 0] | 0) == 116) {
      $2023 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
      if (($2023 | 0) == ($first | 0)) {
       $$0 = $first;
       break L1;
      }
      $2027 = HEAP32[$db + 4 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($2027 | 0)) {
       $$0 = $first;
       break L1;
      }
      $2029 = $db + 16 | 0;
      HEAP32[$42 >> 2] = HEAP32[$db + 12 >> 2];
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($41, $2027 + -24 | 0, $42);
      $2033 = $db + 20 | 0;
      $2034 = HEAP32[$2033 >> 2] | 0;
      $2036 = HEAP32[$db + 24 >> 2] | 0;
      if ($2034 >>> 0 < $2036 >>> 0) {
       HEAP32[$2034 + 12 >> 2] = HEAP32[$41 + 12 >> 2];
       HEAP32[$2034 >> 2] = HEAP32[$41 >> 2];
       $2043 = $41 + 4 | 0;
       HEAP32[$2034 + 4 >> 2] = HEAP32[$2043 >> 2];
       $2045 = $41 + 8 | 0;
       HEAP32[$2034 + 8 >> 2] = HEAP32[$2045 >> 2];
       HEAP32[$2045 >> 2] = 0;
       HEAP32[$2043 >> 2] = 0;
       HEAP32[$41 >> 2] = 0;
       HEAP32[$2033 >> 2] = (HEAP32[$2033 >> 2] | 0) + 16;
      } else {
       $2053 = HEAP32[$2029 >> 2] | 0;
       $2054 = $2034 - $2053 | 0;
       $2055 = $2054 >> 4;
       $2056 = $2055 + 1 | 0;
       if (($2054 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2029);
       $2059 = $2036 - $2053 | 0;
       if ($2059 >> 4 >>> 0 < 1073741823) {
        $2062 = $2059 >> 3;
        $$0$i$i$i51 = $2062 >>> 0 < $2056 >>> 0 ? $2056 : $2062;
       } else $$0$i$i$i51 = 2147483647;
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i51, $2055, $db + 28 | 0);
       $2065 = $__v$i$i$i + 8 | 0;
       $2066 = HEAP32[$2065 >> 2] | 0;
       HEAP32[$2066 + 12 >> 2] = HEAP32[$41 + 12 >> 2];
       HEAP32[$2066 >> 2] = HEAP32[$41 >> 2];
       $2072 = $41 + 4 | 0;
       HEAP32[$2066 + 4 >> 2] = HEAP32[$2072 >> 2];
       $2074 = $41 + 8 | 0;
       HEAP32[$2066 + 8 >> 2] = HEAP32[$2074 >> 2];
       HEAP32[$2074 >> 2] = 0;
       HEAP32[$2072 >> 2] = 0;
       HEAP32[$41 >> 2] = 0;
       HEAP32[$2065 >> 2] = $2066 + 16;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2029, $__v$i$i$i);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($41);
      $$0 = $2023;
      break L1;
     }
     $2078 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
     if (($2078 | 0) == ($first | 0)) {
      $$0 = $first;
      break L1;
     }
     $2080 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($2078, $last, $db) | 0;
     if (($2080 | 0) == ($2078 | 0)) {
      $$0 = $2078;
      break L1;
     }
     $2082 = $db + 4 | 0;
     $2083 = HEAP32[$2082 >> 2] | 0;
     if ((($2083 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$0 = $2078;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($template_args, $2083 + -24 | 0);
     $2091 = HEAP32[$2082 >> 2] | 0;
     $2092 = $2091 + -24 | 0;
     $2094 = $2091;
     do {
      $2093 = $2094 + -24 | 0;
      HEAP32[$2082 >> 2] = $2093;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2093);
      $2094 = HEAP32[$2082 >> 2] | 0;
     } while (($2094 | 0) != ($2092 | 0));
     $2097 = HEAP8[$template_args >> 0] | 0;
     $2099 = ($2097 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2091 + -48 | 0, $2099 ? $template_args + 1 | 0 : HEAP32[$template_args + 8 >> 2] | 0, $2099 ? ($2097 & 255) >>> 1 : HEAP32[$template_args + 4 >> 2] | 0) | 0;
     $2110 = (HEAP32[$2082 >> 2] | 0) + -24 | 0;
     HEAP32[$44 >> 2] = HEAP32[$db + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($43, $2110, $44);
     $2113 = $db + 16 | 0;
     $2114 = $db + 20 | 0;
     $2115 = HEAP32[$2114 >> 2] | 0;
     $2117 = HEAP32[$db + 24 >> 2] | 0;
     if ($2115 >>> 0 < $2117 >>> 0) {
      HEAP32[$2115 + 12 >> 2] = HEAP32[$43 + 12 >> 2];
      HEAP32[$2115 >> 2] = HEAP32[$43 >> 2];
      $2124 = $43 + 4 | 0;
      HEAP32[$2115 + 4 >> 2] = HEAP32[$2124 >> 2];
      $2126 = $43 + 8 | 0;
      HEAP32[$2115 + 8 >> 2] = HEAP32[$2126 >> 2];
      HEAP32[$2126 >> 2] = 0;
      HEAP32[$2124 >> 2] = 0;
      HEAP32[$43 >> 2] = 0;
      HEAP32[$2114 >> 2] = (HEAP32[$2114 >> 2] | 0) + 16;
     } else {
      $2134 = HEAP32[$2113 >> 2] | 0;
      $2135 = $2115 - $2134 | 0;
      $2136 = $2135 >> 4;
      $2137 = $2136 + 1 | 0;
      if (($2135 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2113);
      $2140 = $2117 - $2134 | 0;
      if ($2140 >> 4 >>> 0 < 1073741823) {
       $2143 = $2140 >> 3;
       $$0$i$i$i31 = $2143 >>> 0 < $2137 >>> 0 ? $2137 : $2143;
      } else $$0$i$i$i31 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i31, $2136, $db + 28 | 0);
      $2146 = $__v$i$i$i + 8 | 0;
      $2147 = HEAP32[$2146 >> 2] | 0;
      HEAP32[$2147 + 12 >> 2] = HEAP32[$43 + 12 >> 2];
      HEAP32[$2147 >> 2] = HEAP32[$43 >> 2];
      $2153 = $43 + 4 | 0;
      HEAP32[$2147 + 4 >> 2] = HEAP32[$2153 >> 2];
      $2155 = $43 + 8 | 0;
      HEAP32[$2147 + 8 >> 2] = HEAP32[$2155 >> 2];
      HEAP32[$2155 >> 2] = 0;
      HEAP32[$2153 >> 2] = 0;
      HEAP32[$43 >> 2] = 0;
      HEAP32[$2146 >> 2] = $2147 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2113, $__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($43);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($template_args);
     $$0 = $2080;
     break L1;
     break;
    }
   case 68:
    {
     $2159 = $first + 1 | 0;
     if (($2159 | 0) != ($last | 0)) {
      $2161 = HEAP8[$2159 >> 0] | 0;
      switch ($2161 << 24 >> 24 | 0) {
      case 112:
       {
        $2163 = $db + 4 | 0;
        $2169 = ((HEAP32[$2163 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
        $2170 = $first + 2 | 0;
        $2171 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2170, $last, $db) | 0;
        $2177 = ((HEAP32[$2163 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
        if (($2171 | 0) == ($2170 | 0)) break L65;
        $2179 = $db + 16 | 0;
        $2182 = HEAP32[$db + 12 >> 2] | 0;
        $2183 = $db + 20 | 0;
        $2184 = HEAP32[$2183 >> 2] | 0;
        $2186 = HEAP32[$db + 24 >> 2] | 0;
        if ($2184 >>> 0 < $2186 >>> 0) {
         HEAP32[$2184 >> 2] = 0;
         HEAP32[$2184 + 4 >> 2] = 0;
         HEAP32[$2184 + 8 >> 2] = 0;
         HEAP32[$2184 + 12 >> 2] = $2182;
         HEAP32[$2183 >> 2] = (HEAP32[$2183 >> 2] | 0) + 16;
        } else {
         $2196 = HEAP32[$2179 >> 2] | 0;
         $2197 = $2184 - $2196 | 0;
         $2198 = $2197 >> 4;
         $2199 = $2198 + 1 | 0;
         if (($2197 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2179);
         $2202 = $2186 - $2196 | 0;
         if ($2202 >> 4 >>> 0 < 1073741823) {
          $2205 = $2202 >> 3;
          $$0$i$i$i29 = $2205 >>> 0 < $2199 >>> 0 ? $2199 : $2205;
         } else $$0$i$i$i29 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i29, $2198, $db + 28 | 0);
         $2208 = $__v$i$i$i + 8 | 0;
         $2209 = HEAP32[$2208 >> 2] | 0;
         HEAP32[$2209 >> 2] = 0;
         HEAP32[$2209 + 4 >> 2] = 0;
         HEAP32[$2209 + 8 >> 2] = 0;
         HEAP32[$2209 + 12 >> 2] = $2182;
         HEAP32[$2208 >> 2] = $2209 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2179, $__v$i$i$i);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
        }
        $2214 = $__v$i$i$i + 8 | 0;
        if ($2169 >>> 0 < $2177 >>> 0) $k20$0550 = $2169; else {
         $$0 = $2171;
         break L1;
        }
        while (1) {
         $2216 = HEAP32[$2183 >> 2] | 0;
         $2217 = $2216 + -16 | 0;
         $2218 = HEAP32[$db >> 2] | 0;
         $2219 = $2218 + ($k20$0550 * 24 | 0) | 0;
         $2220 = $2216 + -12 | 0;
         $2221 = HEAP32[$2220 >> 2] | 0;
         if (($2221 | 0) == (HEAP32[$2216 + -8 >> 2] | 0)) {
          $2233 = $2221 - (HEAP32[$2217 >> 2] | 0) | 0;
          $2234 = ($2233 | 0) / 24 | 0;
          $2235 = $2234 + 1 | 0;
          if (($2233 | 0) < -24) {
           $$lcssa698 = $2217;
           break;
          }
          if ($2234 >>> 0 < 1073741823) {
           $2238 = $2234 << 1;
           $$0$i$i$i27 = $2238 >>> 0 < $2235 >>> 0 ? $2235 : $2238;
          } else $$0$i$i$i27 = 2147483647;
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i27, $2234, $2216 + -4 | 0);
          $2241 = HEAP32[$2214 >> 2] | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2241, $2219);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2241 + 12 | 0, $2218 + ($k20$0550 * 24 | 0) + 12 | 0);
          HEAP32[$2214 >> 2] = $2241 + 24;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($2217, $__v$i$i$i);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2221, $2219);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2221 + 12 | 0, $2218 + ($k20$0550 * 24 | 0) + 12 | 0);
          HEAP32[$2220 >> 2] = (HEAP32[$2220 >> 2] | 0) + 24;
         }
         $k20$0550 = $k20$0550 + 1 | 0;
         if ($k20$0550 >>> 0 >= $2177 >>> 0) {
          $$0 = $2171;
          break L1;
         }
        }
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa698);
        break;
       }
      case 84:
      case 116:
       {
        $2247 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
        if (($2247 | 0) == ($first | 0)) break L65;
        $2251 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($2251 | 0)) {
         $$0 = $first;
         break L1;
        }
        $2253 = $db + 16 | 0;
        HEAP32[$46 >> 2] = HEAP32[$db + 12 >> 2];
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($45, $2251 + -24 | 0, $46);
        $2257 = $db + 20 | 0;
        $2258 = HEAP32[$2257 >> 2] | 0;
        $2260 = HEAP32[$db + 24 >> 2] | 0;
        if ($2258 >>> 0 < $2260 >>> 0) {
         HEAP32[$2258 + 12 >> 2] = HEAP32[$45 + 12 >> 2];
         HEAP32[$2258 >> 2] = HEAP32[$45 >> 2];
         $2267 = $45 + 4 | 0;
         HEAP32[$2258 + 4 >> 2] = HEAP32[$2267 >> 2];
         $2269 = $45 + 8 | 0;
         HEAP32[$2258 + 8 >> 2] = HEAP32[$2269 >> 2];
         HEAP32[$2269 >> 2] = 0;
         HEAP32[$2267 >> 2] = 0;
         HEAP32[$45 >> 2] = 0;
         HEAP32[$2257 >> 2] = (HEAP32[$2257 >> 2] | 0) + 16;
        } else {
         $2277 = HEAP32[$2253 >> 2] | 0;
         $2278 = $2258 - $2277 | 0;
         $2279 = $2278 >> 4;
         $2280 = $2279 + 1 | 0;
         if (($2278 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2253);
         $2283 = $2260 - $2277 | 0;
         if ($2283 >> 4 >>> 0 < 1073741823) {
          $2286 = $2283 >> 3;
          $$0$i$i$i22 = $2286 >>> 0 < $2280 >>> 0 ? $2280 : $2286;
         } else $$0$i$i$i22 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i22, $2279, $db + 28 | 0);
         $2289 = $__v$i$i$i + 8 | 0;
         $2290 = HEAP32[$2289 >> 2] | 0;
         HEAP32[$2290 + 12 >> 2] = HEAP32[$45 + 12 >> 2];
         HEAP32[$2290 >> 2] = HEAP32[$45 >> 2];
         $2296 = $45 + 4 | 0;
         HEAP32[$2290 + 4 >> 2] = HEAP32[$2296 >> 2];
         $2298 = $45 + 8 | 0;
         HEAP32[$2290 + 8 >> 2] = HEAP32[$2298 >> 2];
         HEAP32[$2298 >> 2] = 0;
         HEAP32[$2296 >> 2] = 0;
         HEAP32[$45 >> 2] = 0;
         HEAP32[$2289 >> 2] = $2290 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2253, $__v$i$i$i);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($45);
        $$0 = $2247;
        break L1;
        break;
       }
      case 118:
       {
        L662 : do if (($last - $first | 0) > 3 & $197 << 24 >> 24 == 68 & $2161 << 24 >> 24 == 118) {
         $2308 = $first + 2 | 0;
         $2309 = HEAP8[$2308 >> 0] | 0;
         if (($2309 + -49 & 255) < 9) {
          $2311 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($2308, $last) | 0;
          if (($2311 | 0) == ($last | 0)) {
           $$1$i263 = $first;
           break;
          }
          if ((HEAP8[$2311 >> 0] | 0) != 95) {
           $$1$i263 = $first;
           break;
          }
          $2317 = $2311 - $2308 | 0;
          $2318 = $2311 + 1 | 0;
          if (($2318 | 0) == ($last | 0)) {
           $$1$i263 = $first;
           break;
          }
          if ((HEAP8[$2318 >> 0] | 0) != 112) {
           $2322 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2318, $last, $db) | 0;
           if (($2322 | 0) == ($2318 | 0)) {
            $$1$i263 = $first;
            break;
           }
           $2326 = HEAP32[$db + 4 >> 2] | 0;
           if ((HEAP32[$db >> 2] | 0) == ($2326 | 0)) {
            $$1$i263 = $first;
            break;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2, $2308, $2317);
           $2329 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($2, 0, 25639) | 0;
           HEAP32[$1 >> 2] = HEAP32[$2329 >> 2];
           HEAP32[$1 + 4 >> 2] = HEAP32[$2329 + 4 >> 2];
           HEAP32[$1 + 8 >> 2] = HEAP32[$2329 + 8 >> 2];
           HEAP32[$2329 >> 2] = 0;
           HEAP32[$2329 + 4 >> 2] = 0;
           HEAP32[$2329 + 8 >> 2] = 0;
           $2332 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25562) | 0;
           HEAP32[$0 >> 2] = HEAP32[$2332 >> 2];
           HEAP32[$0 + 4 >> 2] = HEAP32[$2332 + 4 >> 2];
           HEAP32[$0 + 8 >> 2] = HEAP32[$2332 + 8 >> 2];
           HEAP32[$2332 >> 2] = 0;
           HEAP32[$2332 + 4 >> 2] = 0;
           HEAP32[$2332 + 8 >> 2] = 0;
           $2335 = HEAP8[$0 >> 0] | 0;
           $2337 = ($2335 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2326 + -24 | 0, $2337 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $2337 ? ($2335 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
           $$1$i263 = $2322;
           break;
          }
          $2347 = $2311 + 2 | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($6, $2308, $2317);
          $2348 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 25648) | 0;
          HEAP32[$5 >> 2] = HEAP32[$2348 >> 2];
          HEAP32[$5 + 4 >> 2] = HEAP32[$2348 + 4 >> 2];
          HEAP32[$5 + 8 >> 2] = HEAP32[$2348 + 8 >> 2];
          HEAP32[$2348 >> 2] = 0;
          HEAP32[$2348 + 4 >> 2] = 0;
          HEAP32[$2348 + 8 >> 2] = 0;
          $2351 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 25562) | 0;
          HEAP32[$4 >> 2] = HEAP32[$2351 >> 2];
          HEAP32[$4 + 4 >> 2] = HEAP32[$2351 + 4 >> 2];
          HEAP32[$4 + 8 >> 2] = HEAP32[$2351 + 8 >> 2];
          HEAP32[$2351 >> 2] = 0;
          HEAP32[$2351 + 4 >> 2] = 0;
          HEAP32[$2351 + 8 >> 2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
          $2354 = $db + 4 | 0;
          $2355 = HEAP32[$2354 >> 2] | 0;
          $2357 = HEAP32[$db + 8 >> 2] | 0;
          if ($2355 >>> 0 < $2357 >>> 0) {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2355, $3);
           HEAP32[$2354 >> 2] = (HEAP32[$2354 >> 2] | 0) + 24;
          } else {
           $2364 = HEAP32[$db >> 2] | 0;
           $2365 = $2355 - $2364 | 0;
           $2366 = ($2365 | 0) / 24 | 0;
           $2367 = $2366 + 1 | 0;
           if (($2365 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
           $2371 = ($2357 - $2364 | 0) / 24 | 0;
           if ($2371 >>> 0 < 1073741823) {
            $2373 = $2371 << 1;
            $$0$i$i$i$i = $2373 >>> 0 < $2367 >>> 0 ? $2367 : $2373;
           } else $$0$i$i$i$i = 2147483647;
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i, $$0$i$i$i$i, $2366, $db + 12 | 0);
           $2376 = $__v$i$i$i + 8 | 0;
           $2377 = HEAP32[$2376 >> 2] | 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($2377, $3);
           HEAP32[$2376 >> 2] = $2377 + 24;
           __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i$i);
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
          $$1$i263 = $2347;
          break;
         }
         HEAP32[$num1$i >> 2] = 0;
         HEAP32[$num1$i + 4 >> 2] = 0;
         HEAP32[$num1$i + 8 >> 2] = 0;
         if ($2309 << 24 >> 24 == 95) {
          $t12$0$i = $2308;
          label = 521;
         } else {
          $2382 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2308, $last, $db) | 0;
          if (($2382 | 0) == ($2308 | 0)) {
           $t12$0$i = $2308;
           label = 521;
          } else {
           $2385 = $db + 4 | 0;
           $2386 = HEAP32[$2385 >> 2] | 0;
           if ((HEAP32[$db >> 2] | 0) != ($2386 | 0)) {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, $2386 + -24 | 0);
            L689 : do if (!(HEAP8[$num1$i >> 0] & 1)) {
             HEAP8[$num1$i + 1 >> 0] = 0;
             HEAP8[$num1$i >> 0] = 0;
            } else {
             $2393 = $num1$i + 8 | 0;
             $2394 = HEAP32[$2393 >> 2] | 0;
             HEAP8[$2394 >> 0] = 0;
             $2395 = $num1$i + 4 | 0;
             HEAP32[$2395 >> 2] = 0;
             $2396 = HEAP32[$num1$i >> 2] | 0;
             $phitmp$i$i$i$i$i$i$i240 = ($2396 & -2) + -1 | 0;
             $2398 = $2396 & 255;
             do if (!($2398 & 1)) {
              $2402 = $2396 >>> 1 & 127;
              if (($2398 & 255) < 22) {
               _memcpy($num1$i + 1 | 0, $2394 | 0, ($2396 >>> 1 & 127) + 1 | 0) | 0;
               _free($2394);
               $$ph390 = $2402;
               break;
              }
              $2405 = $2402 + 16 & 240;
              $phitmp$i2$i$i$i$i$i$i243 = $2405 + -1 | 0;
              if (($phitmp$i2$i$i$i$i$i$i243 | 0) == ($phitmp$i$i$i$i$i$i$i240 | 0)) break L689;
              $2408 = _malloc($2405) | 0;
              if ($phitmp$i2$i$i$i$i$i$i243 >>> 0 <= $phitmp$i$i$i$i$i$i$i240 >>> 0 & ($2408 | 0) == 0) break L689;
              _memcpy($2408 | 0, $num1$i + 1 | 0, ($2396 >>> 1 & 127) + 1 | 0) | 0;
              HEAP32[$num1$i >> 2] = $2405 | 1;
              HEAP32[$2395 >> 2] = $2402;
              HEAP32[$2393 >> 2] = $2408;
              break L689;
             } else {
              HEAP8[$num1$i + 1 >> 0] = 0;
              _free($2394);
              $$ph390 = 0;
             } while (0);
             HEAP8[$num1$i >> 0] = $$ph390 << 1;
            } while (0);
            HEAP32[$num1$i >> 2] = HEAP32[$7 >> 2];
            HEAP32[$num1$i + 4 >> 2] = HEAP32[$7 + 4 >> 2];
            HEAP32[$num1$i + 8 >> 2] = HEAP32[$7 + 8 >> 2];
            HEAP32[$7 >> 2] = 0;
            HEAP32[$7 + 4 >> 2] = 0;
            HEAP32[$7 + 8 >> 2] = 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
            $2424 = HEAP32[$2385 >> 2] | 0;
            $2425 = $2424 + -24 | 0;
            $2427 = $2424;
            do {
             $2426 = $2427 + -24 | 0;
             HEAP32[$2385 >> 2] = $2426;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2426);
             $2427 = HEAP32[$2385 >> 2] | 0;
            } while (($2427 | 0) != ($2425 | 0));
            $t12$0$i = $2382;
            label = 521;
           }
          }
         }
         do if ((label | 0) == 521) {
          if (($t12$0$i | 0) == ($last | 0)) $$13$i259$ph = $first; else if ((HEAP8[$t12$0$i >> 0] | 0) == 95) {
           $2432 = $t12$0$i + 1 | 0;
           if (($2432 | 0) == ($last | 0)) $$13$i259$ph = $first; else {
            $2434 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2432, $last, $db) | 0;
            if (($2434 | 0) == ($2432 | 0)) $$13$i259$ph = $first; else {
             $2438 = HEAP32[$db + 4 >> 2] | 0;
             if ((HEAP32[$db >> 2] | 0) == ($2438 | 0)) break;
             __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($9, 25639, $num1$i);
             $2441 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($9, 25562) | 0;
             HEAP32[$8 >> 2] = HEAP32[$2441 >> 2];
             HEAP32[$8 + 4 >> 2] = HEAP32[$2441 + 4 >> 2];
             HEAP32[$8 + 8 >> 2] = HEAP32[$2441 + 8 >> 2];
             HEAP32[$2441 >> 2] = 0;
             HEAP32[$2441 + 4 >> 2] = 0;
             HEAP32[$2441 + 8 >> 2] = 0;
             $2444 = HEAP8[$8 >> 0] | 0;
             $2446 = ($2444 & 1) == 0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2438 + -24 | 0, $2446 ? $8 + 1 | 0 : HEAP32[$8 + 8 >> 2] | 0, $2446 ? ($2444 & 255) >>> 1 : HEAP32[$8 + 4 >> 2] | 0) | 0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
             $$13$i259$ph = $2434;
            }
           }
          } else $$13$i259$ph = $first;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num1$i);
          $$1$i263 = $$13$i259$ph;
          break L662;
         } while (0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($num1$i);
         $$1$i263 = $first;
        } else $$1$i263 = $first; while (0);
        if (($$1$i263 | 0) == ($first | 0)) break L65;
        $2459 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($2459 | 0)) {
         $$0 = $first;
         break L1;
        }
        $2461 = $db + 16 | 0;
        HEAP32[$48 >> 2] = HEAP32[$db + 12 >> 2];
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($47, $2459 + -24 | 0, $48);
        $2465 = $db + 20 | 0;
        $2466 = HEAP32[$2465 >> 2] | 0;
        $2468 = HEAP32[$db + 24 >> 2] | 0;
        if ($2466 >>> 0 < $2468 >>> 0) {
         HEAP32[$2466 + 12 >> 2] = HEAP32[$47 + 12 >> 2];
         HEAP32[$2466 >> 2] = HEAP32[$47 >> 2];
         $2475 = $47 + 4 | 0;
         HEAP32[$2466 + 4 >> 2] = HEAP32[$2475 >> 2];
         $2477 = $47 + 8 | 0;
         HEAP32[$2466 + 8 >> 2] = HEAP32[$2477 >> 2];
         HEAP32[$2477 >> 2] = 0;
         HEAP32[$2475 >> 2] = 0;
         HEAP32[$47 >> 2] = 0;
         HEAP32[$2465 >> 2] = (HEAP32[$2465 >> 2] | 0) + 16;
        } else {
         $2485 = HEAP32[$2461 >> 2] | 0;
         $2486 = $2466 - $2485 | 0;
         $2487 = $2486 >> 4;
         $2488 = $2487 + 1 | 0;
         if (($2486 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2461);
         $2491 = $2468 - $2485 | 0;
         if ($2491 >> 4 >>> 0 < 1073741823) {
          $2494 = $2491 >> 3;
          $$0$i$i$i17 = $2494 >>> 0 < $2488 >>> 0 ? $2488 : $2494;
         } else $$0$i$i$i17 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i17, $2487, $db + 28 | 0);
         $2497 = $__v$i$i$i + 8 | 0;
         $2498 = HEAP32[$2497 >> 2] | 0;
         HEAP32[$2498 + 12 >> 2] = HEAP32[$47 + 12 >> 2];
         HEAP32[$2498 >> 2] = HEAP32[$47 >> 2];
         $2504 = $47 + 4 | 0;
         HEAP32[$2498 + 4 >> 2] = HEAP32[$2504 >> 2];
         $2506 = $47 + 8 | 0;
         HEAP32[$2498 + 8 >> 2] = HEAP32[$2506 >> 2];
         HEAP32[$2506 >> 2] = 0;
         HEAP32[$2504 >> 2] = 0;
         HEAP32[$47 >> 2] = 0;
         HEAP32[$2497 >> 2] = $2498 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2461, $__v$i$i$i);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($47);
        $$0 = $$1$i263;
        break L1;
        break;
       }
      default:
       break L65;
      }
     }
     break;
    }
   default:
    {}
   } while (0);
   $2510 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
   if (($2510 | 0) == ($first | 0)) {
    $2512 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    if (($2512 | 0) == ($first | 0)) $$0 = $first; else {
     $2516 = HEAP32[$db + 4 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($2516 | 0)) $$0 = $first; else {
      $2518 = $db + 16 | 0;
      HEAP32[$50 >> 2] = HEAP32[$db + 12 >> 2];
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($49, $2516 + -24 | 0, $50);
      $2522 = $db + 20 | 0;
      $2523 = HEAP32[$2522 >> 2] | 0;
      $2525 = HEAP32[$db + 24 >> 2] | 0;
      if ($2523 >>> 0 < $2525 >>> 0) {
       HEAP32[$2523 + 12 >> 2] = HEAP32[$49 + 12 >> 2];
       HEAP32[$2523 >> 2] = HEAP32[$49 >> 2];
       $2532 = $49 + 4 | 0;
       HEAP32[$2523 + 4 >> 2] = HEAP32[$2532 >> 2];
       $2534 = $49 + 8 | 0;
       HEAP32[$2523 + 8 >> 2] = HEAP32[$2534 >> 2];
       HEAP32[$2534 >> 2] = 0;
       HEAP32[$2532 >> 2] = 0;
       HEAP32[$49 >> 2] = 0;
       HEAP32[$2522 >> 2] = (HEAP32[$2522 >> 2] | 0) + 16;
      } else {
       $2542 = HEAP32[$2518 >> 2] | 0;
       $2543 = $2523 - $2542 | 0;
       $2544 = $2543 >> 4;
       $2545 = $2544 + 1 | 0;
       if (($2543 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2518);
       $2548 = $2525 - $2542 | 0;
       if ($2548 >> 4 >>> 0 < 1073741823) {
        $2551 = $2548 >> 3;
        $$0$i$i$i = $2551 >>> 0 < $2545 >>> 0 ? $2545 : $2551;
       } else $$0$i$i$i = 2147483647;
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i, $$0$i$i$i, $2544, $db + 28 | 0);
       $2554 = $__v$i$i$i + 8 | 0;
       $2555 = HEAP32[$2554 >> 2] | 0;
       HEAP32[$2555 + 12 >> 2] = HEAP32[$49 + 12 >> 2];
       HEAP32[$2555 >> 2] = HEAP32[$49 >> 2];
       $2561 = $49 + 4 | 0;
       HEAP32[$2555 + 4 >> 2] = HEAP32[$2561 >> 2];
       $2563 = $49 + 8 | 0;
       HEAP32[$2555 + 8 >> 2] = HEAP32[$2563 >> 2];
       HEAP32[$2563 >> 2] = 0;
       HEAP32[$2561 >> 2] = 0;
       HEAP32[$49 >> 2] = 0;
       HEAP32[$2554 >> 2] = $2555 + 16;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2518, $__v$i$i$i);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($49);
      $$0 = $2512;
     }
    }
   } else $$0 = $2510;
  } else $$0 = $195;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i299 = 0, $$0$i$i$i$i348 = 0, $$0$i254 = 0, $$019$i = 0, $$02$i = 0, $$02$i310 = 0, $$02$i317 = 0, $$03$i = 0, $$03$i174 = 0, $$03$i189 = 0, $$03$i200 = 0, $$03$i211 = 0, $$03$i265 = 0, $$03$i456 = 0, $$03$i486 = 0, $$06$i = 0, $$06$i248 = 0, $$06$i345 = 0, $$06$i426 = 0, $$2$i302 = 0, $$2$i398 = 0, $$221$i = 0, $$311$i = 0, $$9$i = 0, $$first$i = 0, $$ph518 = 0, $$ph520524 = 0, $$phi$trans$insert = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i372 = 0, $$pre$i$i$i$i436 = 0, $$pre$i$i$i$i466 = 0, $$pre$i$i$i87 = 0, $$pre$phi511Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1022 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $103 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1043 = 0, $1047 = 0, $1050 = 0, $1053 = 0, $106 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1076 = 0, $1079 = 0, $1081 = 0, $109 = 0, $1091 = 0, $1093 = 0, $11 = 0, $110 = 0, $1103 = 0, $1106 = 0, $1108 = 0, $112 = 0, $1120 = 0, $1122 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1136 = 0, $1138 = 0, $1141 = 0, $1142 = 0, $1145 = 0, $1146 = 0, $1148 = 0, $1149 = 0, $1151 = 0, $1152 = 0, $1154 = 0, $1155 = 0, $1159 = 0, $1161 = 0, $1162 = 0, $1165 = 0, $1172 = 0, $1174 = 0, $1177 = 0, $1181 = 0, $1184 = 0, $1189 = 0, $1190 = 0, $1193 = 0, $1194 = 0, $1196 = 0, $1197 = 0, $12 = 0, $1206 = 0, $1209 = 0, $121 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1222 = 0, $1223 = 0, $1225 = 0, $1226 = 0, $1231 = 0, $1232 = 0, $1234 = 0, $1235 = 0, $1237 = 0, $1238 = 0, $1240 = 0, $1244 = 0, $1245 = 0, $1247 = 0, $1251 = 0, $1253 = 0, $1254 = 0, $1257 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1269 = 0, $1270 = 0, $1272 = 0, $1274 = 0, $1275 = 0, $128 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $129 = 0, $1291 = 0, $1293 = 0, $13 = 0, $1306 = 0, $1307 = 0, $1309 = 0, $1311 = 0, $1313 = 0, $1314 = 0, $132 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1328 = 0, $1329 = 0, $1330 = 0, $1331 = 0, $1335 = 0, $1336 = 0, $1339 = 0, $1341 = 0, $1351 = 0, $1354 = 0, $1357 = 0, $1359 = 0, $1369 = 0, $1372 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1379 = 0, $1380 = 0, $1381 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $139 = 0, $1398 = 0, $1399 = 0, $14 = 0, $1401 = 0, $1403 = 0, $1404 = 0, $141 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1417 = 0, $1418 = 0, $1421 = 0, $1424 = 0, $1426 = 0, $1436 = 0, $1439 = 0, $144 = 0, $1442 = 0, $1443 = 0, $1445 = 0, $1446 = 0, $1448 = 0, $1449 = 0, $1451 = 0, $1452 = 0, $1463 = 0, $1464 = 0, $1466 = 0, $1468 = 0, $1469 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1482 = 0, $1483 = 0, $1486 = 0, $1489 = 0, $1491 = 0, $15 = 0, $1501 = 0, $1504 = 0, $151 = 0, $1513 = 0, $1514 = 0, $1523 = 0, $1524 = 0, $1528 = 0, $1530 = 0, $1531 = 0, $1534 = 0, $1543 = 0, $1544 = 0, $1548 = 0, $1550 = 0, $1551 = 0, $1554 = 0, $156 = 0, $1569 = 0, $157 = 0, $1572 = 0, $1578 = 0, $1579 = 0, $1581 = 0, $1585 = 0, $1591 = 0, $1593 = 0, $16 = 0, $160 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1609 = 0, $161 = 0, $1612 = 0, $1614 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $163 = 0, $1632 = 0, $1634 = 0, $164 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1648 = 0, $1650 = 0, $1653 = 0, $1654 = 0, $1662 = 0, $1665 = 0, $1669 = 0, $1671 = 0, $1672 = 0, $1675 = 0, $1685 = 0, $1687 = 0, $1693 = 0, $1695 = 0, $1696 = 0, $1699 = 0, $17 = 0, $1702 = 0, $1703 = 0, $1705 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1719 = 0, $1721 = 0, $1724 = 0, $1725 = 0, $173 = 0, $1734 = 0, $1735 = 0, $1739 = 0, $1741 = 0, $1742 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $1750 = 0, $1751 = 0, $176 = 0, $18 = 0, $187 = 0, $188 = 0, $19 = 0, $192 = 0, $194 = 0, $195 = 0, $198 = 0, $2 = 0, $20 = 0, $205 = 0, $207 = 0, $21 = 0, $210 = 0, $214 = 0, $217 = 0, $22 = 0, $222 = 0, $223 = 0, $226 = 0, $227 = 0, $229 = 0, $23 = 0, $230 = 0, $239 = 0, $24 = 0, $242 = 0, $25 = 0, $256 = 0, $257 = 0, $259 = 0, $26 = 0, $261 = 0, $262 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $275 = 0, $276 = 0, $279 = 0, $28 = 0, $282 = 0, $284 = 0, $29 = 0, $294 = 0, $297 = 0, $3 = 0, $30 = 0, $305 = 0, $306 = 0, $31 = 0, $310 = 0, $311 = 0, $314 = 0, $315 = 0, $317 = 0, $32 = 0, $327 = 0, $33 = 0, $330 = 0, $335 = 0, $337 = 0, $34 = 0, $340 = 0, $344 = 0, $347 = 0, $35 = 0, $352 = 0, $353 = 0, $356 = 0, $357 = 0, $359 = 0, $36 = 0, $360 = 0, $369 = 0, $37 = 0, $372 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $384 = 0, $388 = 0, $39 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $396 = 0, $398 = 0, $4 = 0, $40 = 0, $402 = 0, $41 = 0, $412 = 0, $416 = 0, $417 = 0, $419 = 0, $42 = 0, $420 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $436 = 0, $438 = 0, $44 = 0, $442 = 0, $443 = 0, $445 = 0, $449 = 0, $45 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $464 = 0, $466 = 0, $469 = 0, $47 = 0, $470 = 0, $473 = 0, $477 = 0, $48 = 0, $482 = 0, $483 = 0, $49 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $496 = 0, $497 = 0, $5 = 0, $50 = 0, $500 = 0, $503 = 0, $505 = 0, $51 = 0, $515 = 0, $518 = 0, $52 = 0, $524 = 0, $525 = 0, $528 = 0, $529 = 0, $53 = 0, $531 = 0, $534 = 0, $539 = 0, $54 = 0, $541 = 0, $55 = 0, $551 = 0, $558 = 0, $56 = 0, $560 = 0, $563 = 0, $567 = 0, $57 = 0, $570 = 0, $575 = 0, $576 = 0, $579 = 0, $58 = 0, $580 = 0, $582 = 0, $583 = 0, $59 = 0, $592 = 0, $595 = 0, $6 = 0, $60 = 0, $606 = 0, $607 = 0, $609 = 0, $61 = 0, $611 = 0, $612 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $625 = 0, $626 = 0, $629 = 0, $63 = 0, $632 = 0, $634 = 0, $64 = 0, $644 = 0, $647 = 0, $65 = 0, $650 = 0, $651 = 0, $653 = 0, $654 = 0, $657 = 0, $658 = 0, $66 = 0, $660 = 0, $663 = 0, $668 = 0, $67 = 0, $670 = 0, $68 = 0, $680 = 0, $687 = 0, $689 = 0, $69 = 0, $692 = 0, $696 = 0, $699 = 0, $7 = 0, $70 = 0, $704 = 0, $705 = 0, $708 = 0, $709 = 0, $71 = 0, $711 = 0, $712 = 0, $72 = 0, $721 = 0, $724 = 0, $73 = 0, $736 = 0, $737 = 0, $739 = 0, $74 = 0, $741 = 0, $742 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $756 = 0, $758 = 0, $76 = 0, $77 = 0, $774 = 0, $775 = 0, $777 = 0, $779 = 0, $78 = 0, $780 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $794 = 0, $796 = 0, $8 = 0, $80 = 0, $806 = 0, $807 = 0, $809 = 0, $81 = 0, $810 = 0, $815 = 0, $816 = 0, $818 = 0, $819 = 0, $821 = 0, $822 = 0, $827 = 0, $828 = 0, $83 = 0, $830 = 0, $831 = 0, $836 = 0, $837 = 0, $839 = 0, $841 = 0, $842 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $857 = 0, $858 = 0, $861 = 0, $863 = 0, $873 = 0, $876 = 0, $879 = 0, $880 = 0, $881 = 0, $886 = 0, $887 = 0, $889 = 0, $890 = 0, $892 = 0, $893 = 0, $895 = 0, $896 = 0, $9 = 0, $90 = 0, $901 = 0, $902 = 0, $904 = 0, $905 = 0, $907 = 0, $908 = 0, $910 = 0, $911 = 0, $913 = 0, $917 = 0, $918 = 0, $920 = 0, $924 = 0, $926 = 0, $927 = 0, $930 = 0, $936 = 0, $940 = 0, $943 = 0, $945 = 0, $946 = 0, $947 = 0, $954 = 0, $955 = 0, $961 = 0, $976 = 0, $977 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $989 = 0, $993 = 0, $996 = 0, $999 = 0, $has_expr_list$0$off0$i = 0, $has_expr_list$0$off0$i$lcssa = 0, $has_init$0$off0$i513 = 0, $k$0$i621 = 0, $k$0$i622 = 0, $k1$0$i618 = 0, $op1 = 0, $op18 = 0, $op2 = 0, $op27 = 0, $op3 = 0, $parsed_gs$0$off0 = 0, $parsed_gs$0$off0$i = 0, $phitmp$i$i$i$i$i$i$i273 = 0, $phitmp$i$i$i$i$i$i32$i = 0, $phitmp$i2$i$i$i$i$i$i276 = 0, $phitmp$i2$i$i$i$i$i35$i = 0, $t$0 = 0, $t$0$i = 0, $t$0$i267 = 0, $t$0$i349567 = 0, $t$0$i390$lcssa = 0, $t$0$i390556 = 0, $t$1$i = 0, $t$1$i$lcssa = 0, $t$1$i350 = 0, $t$2$i = 0, $t$2$i351 = 0, $t$3$i512 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0, $t$1$i$looptemp = 0, $t$2$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1168 | 0;
 $0 = sp + 1144 | 0;
 $1 = sp + 1120 | 0;
 $2 = sp + 1096 | 0;
 $3 = sp + 1084 | 0;
 $4 = sp + 1072 | 0;
 $5 = sp + 1048 | 0;
 $6 = sp + 1032 | 0;
 $7 = sp + 900 | 0;
 $8 = sp + 632 | 0;
 $9 = sp + 620 | 0;
 $10 = sp + 584 | 0;
 $11 = sp + 560 | 0;
 $12 = sp + 524 | 0;
 $13 = sp + 1020 | 0;
 $14 = sp + 1008 | 0;
 $15 = sp + 996 | 0;
 $16 = sp + 984 | 0;
 $17 = sp + 972 | 0;
 $18 = sp + 960 | 0;
 $19 = sp + 948 | 0;
 $20 = sp + 936 | 0;
 $21 = sp + 924 | 0;
 $22 = sp + 912 | 0;
 $23 = sp + 888 | 0;
 $24 = sp + 876 | 0;
 $25 = sp + 864 | 0;
 $26 = sp + 852 | 0;
 $27 = sp + 840 | 0;
 $28 = sp + 828 | 0;
 $29 = sp + 816 | 0;
 $30 = sp + 804 | 0;
 $31 = sp + 792 | 0;
 $32 = sp + 780 | 0;
 $33 = sp + 768 | 0;
 $34 = sp + 756 | 0;
 $35 = sp + 744 | 0;
 $op2 = sp + 732 | 0;
 $op1 = sp + 720 | 0;
 $36 = sp + 696 | 0;
 $37 = sp + 680 | 0;
 $38 = sp + 668 | 0;
 $39 = sp + 656 | 0;
 $40 = sp + 644 | 0;
 $41 = sp + 608 | 0;
 $42 = sp + 596 | 0;
 $43 = sp + 548 | 0;
 $44 = sp + 536 | 0;
 $45 = sp + 512 | 0;
 $46 = sp + 500 | 0;
 $47 = sp + 488 | 0;
 $48 = sp + 476 | 0;
 $49 = sp + 464 | 0;
 $50 = sp + 440 | 0;
 $51 = sp + 424 | 0;
 $52 = sp + 412 | 0;
 $53 = sp + 400 | 0;
 $54 = sp + 388 | 0;
 $55 = sp + 376 | 0;
 $56 = sp + 364 | 0;
 $57 = sp + 352 | 0;
 $58 = sp + 340 | 0;
 $59 = sp + 328 | 0;
 $60 = sp + 316 | 0;
 $61 = sp + 304 | 0;
 $62 = sp + 292 | 0;
 $63 = sp + 280 | 0;
 $64 = sp + 256 | 0;
 $65 = sp + 240 | 0;
 $66 = sp + 228 | 0;
 $67 = sp + 216 | 0;
 $68 = sp + 204 | 0;
 $op3 = sp + 192 | 0;
 $op27 = sp + 180 | 0;
 $op18 = sp + 168 | 0;
 $69 = sp + 144 | 0;
 $70 = sp + 132 | 0;
 $71 = sp + 120 | 0;
 $72 = sp + 108 | 0;
 $73 = sp + 96 | 0;
 $74 = sp + 84 | 0;
 $75 = sp + 72 | 0;
 $76 = sp + 60 | 0;
 $77 = sp + 48 | 0;
 $78 = sp + 36 | 0;
 $79 = sp + 24 | 0;
 $80 = sp;
 $81 = $last;
 $83 = $81 - $first | 0;
 L1 : do if (($83 | 0) > 1) {
  $85 = ($83 | 0) > 3;
  if ($85) if ((HEAP8[$first >> 0] | 0) == 103) {
   $90 = (HEAP8[$first + 1 >> 0] | 0) == 115;
   $parsed_gs$0$off0 = $90;
   $t$0 = $90 ? $first + 2 | 0 : $first;
  } else {
   $parsed_gs$0$off0 = 0;
   $t$0 = $first;
  } else {
   $parsed_gs$0$off0 = 0;
   $t$0 = $first;
  }
  do switch (HEAP8[$t$0 >> 0] | 0) {
  case 76:
   {
    $$0 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    break L1;
    break;
   }
  case 84:
   {
    $$0 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    break L1;
    break;
   }
  case 102:
   {
    $$0 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    break L1;
    break;
   }
  case 97:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 97:
     {
      $100 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($13, 25602, 2);
      $101 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($100, $last, $13, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
      $$0 = ($101 | 0) == ($100 | 0) ? $first : $101;
      break L1;
      break;
     }
    case 100:
     {
      $103 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($14, 25623, 1);
      $104 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($103, $last, $14, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
      $$0 = ($104 | 0) == ($103 | 0) ? $first : $104;
      break L1;
      break;
     }
    case 110:
     {
      $106 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($15, 25623, 1);
      $107 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($106, $last, $15, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
      $$0 = ($107 | 0) == ($106 | 0) ? $first : $107;
      break L1;
      break;
     }
    case 78:
     {
      $109 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($16, 26731, 2);
      $110 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($109, $last, $16, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($16);
      $$0 = ($110 | 0) == ($109 | 0) ? $first : $110;
      break L1;
      break;
     }
    case 83:
     {
      $112 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($17, 26734, 1);
      $113 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($112, $last, $17, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
      $$0 = ($113 | 0) == ($112 | 0) ? $first : $113;
      break L1;
      break;
     }
    case 116:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 97) if ((HEAP8[$first + 1 >> 0] | 0) == 116) {
       $121 = $first + 2 | 0;
       $122 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($121, $last, $db) | 0;
       if (($122 | 0) == ($121 | 0)) $$03$i486 = $first; else {
        $126 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($126 | 0)) $$03$i486 = $first; else {
         $128 = $126 + -24 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2, $128);
         $129 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($2, 0, 26736) | 0;
         HEAP32[$1 >> 2] = HEAP32[$129 >> 2];
         HEAP32[$1 + 4 >> 2] = HEAP32[$129 + 4 >> 2];
         HEAP32[$1 + 8 >> 2] = HEAP32[$129 + 8 >> 2];
         HEAP32[$129 >> 2] = 0;
         HEAP32[$129 + 4 >> 2] = 0;
         HEAP32[$129 + 8 >> 2] = 0;
         $132 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25478) | 0;
         HEAP32[$0 >> 2] = HEAP32[$132 >> 2];
         HEAP32[$0 + 4 >> 2] = HEAP32[$132 + 4 >> 2];
         HEAP32[$0 + 8 >> 2] = HEAP32[$132 + 8 >> 2];
         HEAP32[$132 >> 2] = 0;
         HEAP32[$132 + 4 >> 2] = 0;
         HEAP32[$132 + 8 >> 2] = 0;
         do if (!(HEAP8[$128 >> 0] & 1)) {
          HEAP8[$128 + 1 >> 0] = 0;
          HEAP8[$128 >> 0] = 0;
         } else {
          $139 = $126 + -16 | 0;
          HEAP8[HEAP32[$139 >> 2] >> 0] = 0;
          $141 = $126 + -20 | 0;
          HEAP32[$141 >> 2] = 0;
          $$pre$i$i$i$i466 = HEAP8[$128 >> 0] | 0;
          if (!($$pre$i$i$i$i466 & 1)) {
           $148 = $$pre$i$i$i$i466;
           $157 = 10;
          } else {
           $144 = HEAP32[$128 >> 2] | 0;
           $148 = $144 & 255;
           $157 = ($144 & -2) + -1 | 0;
          }
          if (!($148 & 1)) {
           $151 = ($148 & 255) >>> 1;
           if (($148 & 255) < 22) {
            $156 = 10;
            $1746 = 1;
            $176 = $151;
           } else {
            $156 = ($151 + 16 & 240) + -1 | 0;
            $1746 = 1;
            $176 = $151;
           }
          } else {
           $156 = 10;
           $1746 = 0;
           $176 = 0;
          }
          if (($156 | 0) != ($157 | 0)) {
           if (($156 | 0) == 10) {
            $163 = $128 + 1 | 0;
            $164 = HEAP32[$139 >> 2] | 0;
            if ($1746) {
             _memcpy($163 | 0, $164 | 0, (($148 & 255) >>> 1) + 1 | 0) | 0;
             _free($164);
            } else {
             HEAP8[$163 >> 0] = HEAP8[$164 >> 0] | 0;
             _free($164);
            }
            HEAP8[$128 >> 0] = $176 << 1;
            break;
           }
           $160 = $156 + 1 | 0;
           $161 = _malloc($160) | 0;
           if (!($156 >>> 0 <= $157 >>> 0 & ($161 | 0) == 0)) {
            if ($1746) _memcpy($161 | 0, $128 + 1 | 0, (($148 & 255) >>> 1) + 1 | 0) | 0; else {
             $173 = HEAP32[$139 >> 2] | 0;
             HEAP8[$161 >> 0] = HEAP8[$173 >> 0] | 0;
             _free($173);
            }
            HEAP32[$128 >> 2] = $160 | 1;
            HEAP32[$141 >> 2] = $176;
            HEAP32[$139 >> 2] = $161;
           }
          }
         } while (0);
         HEAP32[$128 >> 2] = HEAP32[$0 >> 2];
         HEAP32[$128 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
         HEAP32[$128 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
         HEAP32[$0 >> 2] = 0;
         HEAP32[$0 + 4 >> 2] = 0;
         HEAP32[$0 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         $$03$i486 = $122;
        }
       }
      } else $$03$i486 = $first; else $$03$i486 = $first; else $$03$i486 = $first;
      $$0 = $$03$i486;
      break L1;
      break;
     }
    case 122:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 97) if ((HEAP8[$first + 1 >> 0] | 0) == 122) {
       $187 = $first + 2 | 0;
       $188 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($187, $last, $db) | 0;
       if (($188 | 0) == ($187 | 0)) $$03$i456 = $first; else {
        $192 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($192 | 0)) $$03$i456 = $first; else {
         $194 = $192 + -24 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2, $194);
         $195 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($2, 0, 26736) | 0;
         HEAP32[$1 >> 2] = HEAP32[$195 >> 2];
         HEAP32[$1 + 4 >> 2] = HEAP32[$195 + 4 >> 2];
         HEAP32[$1 + 8 >> 2] = HEAP32[$195 + 8 >> 2];
         HEAP32[$195 >> 2] = 0;
         HEAP32[$195 + 4 >> 2] = 0;
         HEAP32[$195 + 8 >> 2] = 0;
         $198 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25478) | 0;
         HEAP32[$0 >> 2] = HEAP32[$198 >> 2];
         HEAP32[$0 + 4 >> 2] = HEAP32[$198 + 4 >> 2];
         HEAP32[$0 + 8 >> 2] = HEAP32[$198 + 8 >> 2];
         HEAP32[$198 >> 2] = 0;
         HEAP32[$198 + 4 >> 2] = 0;
         HEAP32[$198 + 8 >> 2] = 0;
         do if (!(HEAP8[$194 >> 0] & 1)) {
          HEAP8[$194 + 1 >> 0] = 0;
          HEAP8[$194 >> 0] = 0;
         } else {
          $205 = $192 + -16 | 0;
          HEAP8[HEAP32[$205 >> 2] >> 0] = 0;
          $207 = $192 + -20 | 0;
          HEAP32[$207 >> 2] = 0;
          $$pre$i$i$i$i436 = HEAP8[$194 >> 0] | 0;
          if (!($$pre$i$i$i$i436 & 1)) {
           $214 = $$pre$i$i$i$i436;
           $223 = 10;
          } else {
           $210 = HEAP32[$194 >> 2] | 0;
           $214 = $210 & 255;
           $223 = ($210 & -2) + -1 | 0;
          }
          if (!($214 & 1)) {
           $217 = ($214 & 255) >>> 1;
           if (($214 & 255) < 22) {
            $1747 = 1;
            $222 = 10;
            $242 = $217;
           } else {
            $1747 = 1;
            $222 = ($217 + 16 & 240) + -1 | 0;
            $242 = $217;
           }
          } else {
           $1747 = 0;
           $222 = 10;
           $242 = 0;
          }
          if (($222 | 0) != ($223 | 0)) {
           if (($222 | 0) == 10) {
            $229 = $194 + 1 | 0;
            $230 = HEAP32[$205 >> 2] | 0;
            if ($1747) {
             _memcpy($229 | 0, $230 | 0, (($214 & 255) >>> 1) + 1 | 0) | 0;
             _free($230);
            } else {
             HEAP8[$229 >> 0] = HEAP8[$230 >> 0] | 0;
             _free($230);
            }
            HEAP8[$194 >> 0] = $242 << 1;
            break;
           }
           $226 = $222 + 1 | 0;
           $227 = _malloc($226) | 0;
           if (!($222 >>> 0 <= $223 >>> 0 & ($227 | 0) == 0)) {
            if ($1747) _memcpy($227 | 0, $194 + 1 | 0, (($214 & 255) >>> 1) + 1 | 0) | 0; else {
             $239 = HEAP32[$205 >> 2] | 0;
             HEAP8[$227 >> 0] = HEAP8[$239 >> 0] | 0;
             _free($239);
            }
            HEAP32[$194 >> 2] = $226 | 1;
            HEAP32[$207 >> 2] = $242;
            HEAP32[$205 >> 2] = $227;
           }
          }
         } while (0);
         HEAP32[$194 >> 2] = HEAP32[$0 >> 2];
         HEAP32[$194 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
         HEAP32[$194 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
         HEAP32[$0 >> 2] = 0;
         HEAP32[$0 + 4 >> 2] = 0;
         HEAP32[$0 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         $$03$i456 = $188;
        }
       }
      } else $$03$i456 = $first; else $$03$i456 = $first; else $$03$i456 = $first;
      $$0 = $$03$i456;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 99:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 99) if ((HEAP8[$first + 1 >> 0] | 0) == 99) {
       $256 = $first + 2 | 0;
       $257 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($256, $last, $db) | 0;
       if (($257 | 0) == ($256 | 0)) $$06$i426 = $first; else {
        $259 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($257, $last, $db) | 0;
        if (($259 | 0) == ($257 | 0)) $$06$i426 = $first; else {
         $261 = $db + 4 | 0;
         $262 = HEAP32[$261 >> 2] | 0;
         if ((($262 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$06$i426 = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $262 + -24 | 0);
          $270 = HEAP32[$261 >> 2] | 0;
          $271 = $270 + -24 | 0;
          $273 = $270;
          do {
           $272 = $273 + -24 | 0;
           HEAP32[$261 >> 2] = $272;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($272);
           $273 = HEAP32[$261 >> 2] | 0;
          } while (($273 | 0) != ($271 | 0));
          $275 = $270 + -48 | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $275);
          $276 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 26746) | 0;
          HEAP32[$5 >> 2] = HEAP32[$276 >> 2];
          HEAP32[$5 + 4 >> 2] = HEAP32[$276 + 4 >> 2];
          HEAP32[$5 + 8 >> 2] = HEAP32[$276 + 8 >> 2];
          HEAP32[$276 >> 2] = 0;
          HEAP32[$276 + 4 >> 2] = 0;
          HEAP32[$276 + 8 >> 2] = 0;
          $279 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 26758) | 0;
          HEAP32[$4 >> 2] = HEAP32[$279 >> 2];
          HEAP32[$4 + 4 >> 2] = HEAP32[$279 + 4 >> 2];
          HEAP32[$4 + 8 >> 2] = HEAP32[$279 + 8 >> 2];
          HEAP32[$279 >> 2] = 0;
          HEAP32[$279 + 4 >> 2] = 0;
          HEAP32[$279 + 8 >> 2] = 0;
          $282 = HEAP8[$0 >> 0] | 0;
          $284 = ($282 & 1) == 0;
          $294 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4, $284 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $284 ? ($282 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
          HEAP32[$3 >> 2] = HEAP32[$294 >> 2];
          HEAP32[$3 + 4 >> 2] = HEAP32[$294 + 4 >> 2];
          HEAP32[$3 + 8 >> 2] = HEAP32[$294 + 8 >> 2];
          HEAP32[$294 >> 2] = 0;
          HEAP32[$294 + 4 >> 2] = 0;
          HEAP32[$294 + 8 >> 2] = 0;
          $297 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 25478) | 0;
          HEAP32[$2 >> 2] = HEAP32[$297 >> 2];
          HEAP32[$2 + 4 >> 2] = HEAP32[$297 + 4 >> 2];
          HEAP32[$2 + 8 >> 2] = HEAP32[$297 + 8 >> 2];
          HEAP32[$297 >> 2] = 0;
          HEAP32[$297 + 4 >> 2] = 0;
          HEAP32[$297 + 8 >> 2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($275, $1);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $$06$i426 = $259;
         }
        }
       }
      } else $$06$i426 = $first; else $$06$i426 = $first; else $$06$i426 = $first;
      $$0 = $$06$i426;
      break L1;
      break;
     }
    case 108:
     {
      L97 : do if ($85) if ((HEAP8[$first >> 0] | 0) == 99) if ((HEAP8[$first + 1 >> 0] | 0) == 108) {
       $305 = $first + 2 | 0;
       $306 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($305, $last, $db) | 0;
       if (($306 | 0) == ($305 | 0) | ($306 | 0) == ($last | 0)) $$2$i398 = $first; else {
        $310 = $db + 4 | 0;
        $311 = HEAP32[$310 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($311 | 0)) $$2$i398 = $first; else {
         $314 = $311 + -12 | 0;
         $315 = HEAP8[$314 >> 0] | 0;
         $317 = ($315 & 1) == 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($311 + -24 | 0, $317 ? $314 + 1 | 0 : HEAP32[$311 + -4 >> 2] | 0, $317 ? ($315 & 255) >>> 1 : HEAP32[$311 + -8 >> 2] | 0) | 0;
         $327 = HEAP32[$310 >> 2] | 0;
         HEAP32[$0 >> 2] = 0;
         HEAP32[$0 + 4 >> 2] = 0;
         HEAP32[$0 + 8 >> 2] = 0;
         $330 = $327 + -12 | 0;
         do if (!(HEAP8[$330 >> 0] & 1)) {
          HEAP8[$330 + 1 >> 0] = 0;
          HEAP8[$330 >> 0] = 0;
         } else {
          $335 = $327 + -4 | 0;
          HEAP8[HEAP32[$335 >> 2] >> 0] = 0;
          $337 = $327 + -8 | 0;
          HEAP32[$337 >> 2] = 0;
          $$pre$i$i$i$i372 = HEAP8[$330 >> 0] | 0;
          if (!($$pre$i$i$i$i372 & 1)) {
           $344 = $$pre$i$i$i$i372;
           $353 = 10;
          } else {
           $340 = HEAP32[$330 >> 2] | 0;
           $344 = $340 & 255;
           $353 = ($340 & -2) + -1 | 0;
          }
          if (!($344 & 1)) {
           $347 = ($344 & 255) >>> 1;
           if (($344 & 255) < 22) {
            $1748 = 1;
            $352 = 10;
            $372 = $347;
           } else {
            $1748 = 1;
            $352 = ($347 + 16 & 240) + -1 | 0;
            $372 = $347;
           }
          } else {
           $1748 = 0;
           $352 = 10;
           $372 = 0;
          }
          if (($352 | 0) != ($353 | 0)) {
           if (($352 | 0) == 10) {
            $359 = $330 + 1 | 0;
            $360 = HEAP32[$335 >> 2] | 0;
            if ($1748) {
             _memcpy($359 | 0, $360 | 0, (($344 & 255) >>> 1) + 1 | 0) | 0;
             _free($360);
            } else {
             HEAP8[$359 >> 0] = HEAP8[$360 >> 0] | 0;
             _free($360);
            }
            HEAP8[$330 >> 0] = $372 << 1;
            break;
           }
           $356 = $352 + 1 | 0;
           $357 = _malloc($356) | 0;
           if (!($352 >>> 0 <= $353 >>> 0 & ($357 | 0) == 0)) {
            if ($1748) _memcpy($357 | 0, $330 + 1 | 0, (($344 & 255) >>> 1) + 1 | 0) | 0; else {
             $369 = HEAP32[$335 >> 2] | 0;
             HEAP8[$357 >> 0] = HEAP8[$369 >> 0] | 0;
             _free($369);
            }
            HEAP32[$330 >> 2] = $356 | 1;
            HEAP32[$337 >> 2] = $372;
            HEAP32[$335 >> 2] = $357;
           }
          }
         } while (0);
         HEAP32[$330 >> 2] = HEAP32[$0 >> 2];
         HEAP32[$330 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
         HEAP32[$330 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
         HEAP32[$0 >> 2] = 0;
         HEAP32[$0 + 4 >> 2] = 0;
         HEAP32[$0 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$310 >> 2] | 0) + -24 | 0, 25573) | 0;
         $379 = $1 + 4 | 0;
         $380 = $1 + 8 | 0;
         $381 = $1 + 1 | 0;
         L127 : do if ((HEAP8[$306 >> 0] | 0) == 69) $t$0$i390$lcssa = $306; else {
          $t$0$i390556 = $306;
          while (1) {
           $384 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$0$i390556, $last, $db) | 0;
           if (($384 | 0) == ($t$0$i390556 | 0) | ($384 | 0) == ($last | 0)) {
            $$2$i398 = $first;
            break L97;
           }
           $388 = HEAP32[$310 >> 2] | 0;
           if ((HEAP32[$db >> 2] | 0) == ($388 | 0)) {
            $$2$i398 = $first;
            break L97;
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($1, $388 + -24 | 0);
           $391 = HEAP32[$310 >> 2] | 0;
           $392 = $391 + -24 | 0;
           $394 = $391;
           do {
            $393 = $394 + -24 | 0;
            HEAP32[$310 >> 2] = $393;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($393);
            $394 = HEAP32[$310 >> 2] | 0;
           } while (($394 | 0) != ($392 | 0));
           $396 = HEAP8[$1 >> 0] | 0;
           $398 = ($396 & 1) == 0;
           $402 = $398 ? ($396 & 255) >>> 1 : HEAP32[$379 >> 2] | 0;
           if ($402) {
            if ((HEAP32[$db >> 2] | 0) == ($392 | 0)) break;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($391 + -48 | 0, $398 ? $381 : HEAP32[$380 >> 2] | 0, $402) | 0;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
           if ((HEAP8[$384 >> 0] | 0) == 69) {
            $t$0$i390$lcssa = $384;
            break L127;
           } else $t$0$i390556 = $384;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          $$2$i398 = $first;
          break L97;
         } while (0);
         $412 = HEAP32[$310 >> 2] | 0;
         if ((HEAP32[$db >> 2] | 0) == ($412 | 0)) $$2$i398 = $first; else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($412 + -24 | 0, 25478) | 0;
          $$2$i398 = $t$0$i390$lcssa + 1 | 0;
         }
        }
       }
      } else $$2$i398 = $first; else $$2$i398 = $first; else $$2$i398 = $first; while (0);
      $$0 = $$2$i398;
      break L1;
      break;
     }
    case 109:
     {
      $416 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($18, 26761, 1);
      $417 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($416, $last, $18, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
      $$0 = ($417 | 0) == ($416 | 0) ? $first : $417;
      break L1;
      break;
     }
    case 111:
     {
      $419 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($19, 25787, 1);
      $420 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($419, $last, $19, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($19);
      $$0 = ($420 | 0) == ($419 | 0) ? $first : $420;
      break L1;
      break;
     }
    case 118:
     {
      L146 : do if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 99) if ((HEAP8[$first + 1 >> 0] | 0) == 118) {
       $428 = $db + 63 | 0;
       $429 = HEAP8[$428 >> 0] | 0;
       HEAP8[$428 >> 0] = 0;
       $430 = $first + 2 | 0;
       $431 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($430, $last, $db) | 0;
       HEAP8[$428 >> 0] = $429;
       if (($431 | 0) == ($430 | 0) | ($431 | 0) == ($last | 0)) $$311$i = $first; else {
        if ((HEAP8[$431 >> 0] | 0) == 95) {
         $438 = $431 + 1 | 0;
         if (($438 | 0) == ($last | 0)) {
          $$311$i = $first;
          break;
         }
         do if ((HEAP8[$438 >> 0] | 0) == 69) {
          $442 = $db + 4 | 0;
          $443 = HEAP32[$442 >> 2] | 0;
          $445 = HEAP32[$db + 8 >> 2] | 0;
          if ($443 >>> 0 < $445 >>> 0) {
           HEAP32[$443 >> 2] = 0;
           HEAP32[$443 + 4 >> 2] = 0;
           HEAP32[$443 + 8 >> 2] = 0;
           HEAP32[$443 + 12 >> 2] = 0;
           HEAP32[$443 + 16 >> 2] = 0;
           HEAP32[$443 + 20 >> 2] = 0;
           HEAP32[$443 >> 2] = 0;
           HEAP32[$443 + 4 >> 2] = 0;
           HEAP32[$443 + 8 >> 2] = 0;
           $449 = $443 + 12 | 0;
           HEAP32[$449 >> 2] = 0;
           HEAP32[$449 + 4 >> 2] = 0;
           HEAP32[$449 + 8 >> 2] = 0;
           HEAP32[$442 >> 2] = (HEAP32[$442 >> 2] | 0) + 24;
           $t$1$i350 = $438;
           break;
          }
          $457 = HEAP32[$db >> 2] | 0;
          $458 = $443 - $457 | 0;
          $459 = ($458 | 0) / 24 | 0;
          $460 = $459 + 1 | 0;
          if (($458 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
          $464 = ($445 - $457 | 0) / 24 | 0;
          if ($464 >>> 0 < 1073741823) {
           $466 = $464 << 1;
           $$0$i$i$i$i348 = $466 >>> 0 < $460 >>> 0 ? $460 : $466;
          } else $$0$i$i$i$i348 = 2147483647;
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($0, $$0$i$i$i$i348, $459, $db + 12 | 0);
          $469 = $0 + 8 | 0;
          $470 = HEAP32[$469 >> 2] | 0;
          HEAP32[$470 >> 2] = 0;
          HEAP32[$470 + 4 >> 2] = 0;
          HEAP32[$470 + 8 >> 2] = 0;
          HEAP32[$470 + 12 >> 2] = 0;
          HEAP32[$470 + 16 >> 2] = 0;
          HEAP32[$470 + 20 >> 2] = 0;
          HEAP32[$470 >> 2] = 0;
          HEAP32[$470 + 4 >> 2] = 0;
          HEAP32[$470 + 8 >> 2] = 0;
          $473 = $470 + 12 | 0;
          HEAP32[$473 >> 2] = 0;
          HEAP32[$473 + 4 >> 2] = 0;
          HEAP32[$473 + 8 >> 2] = 0;
          HEAP32[$469 >> 2] = $470 + 24;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $0);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($0);
          $t$1$i350 = $438;
         } else {
          $t$0$i349567 = $438;
          while (1) {
           $477 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$0$i349567, $last, $db) | 0;
           if (($477 | 0) == ($t$0$i349567 | 0) | ($477 | 0) == ($last | 0)) {
            $$311$i = $first;
            break L146;
           }
           if ((HEAP8[$477 >> 0] | 0) == 69) {
            $t$1$i350 = $477;
            break;
           } else $t$0$i349567 = $477;
          }
         } while (0);
         $t$2$i351 = $t$1$i350 + 1 | 0;
        } else {
         $436 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($431, $last, $db) | 0;
         if (($436 | 0) == ($431 | 0)) {
          $$311$i = $first;
          break;
         } else $t$2$i351 = $436;
        }
        $482 = $db + 4 | 0;
        $483 = HEAP32[$482 >> 2] | 0;
        if ((($483 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$311$i = $first; else {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($1, $483 + -24 | 0);
         $491 = HEAP32[$482 >> 2] | 0;
         $492 = $491 + -24 | 0;
         $494 = $491;
         do {
          $493 = $494 + -24 | 0;
          HEAP32[$482 >> 2] = $493;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($493);
          $494 = HEAP32[$482 >> 2] | 0;
         } while (($494 | 0) != ($492 | 0));
         $496 = $491 + -48 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, $496);
         $497 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($7, 0, 25573) | 0;
         HEAP32[$6 >> 2] = HEAP32[$497 >> 2];
         HEAP32[$6 + 4 >> 2] = HEAP32[$497 + 4 >> 2];
         HEAP32[$6 + 8 >> 2] = HEAP32[$497 + 8 >> 2];
         HEAP32[$497 >> 2] = 0;
         HEAP32[$497 + 4 >> 2] = 0;
         HEAP32[$497 + 8 >> 2] = 0;
         $500 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 26763) | 0;
         HEAP32[$5 >> 2] = HEAP32[$500 >> 2];
         HEAP32[$5 + 4 >> 2] = HEAP32[$500 + 4 >> 2];
         HEAP32[$5 + 8 >> 2] = HEAP32[$500 + 8 >> 2];
         HEAP32[$500 >> 2] = 0;
         HEAP32[$500 + 4 >> 2] = 0;
         HEAP32[$500 + 8 >> 2] = 0;
         $503 = HEAP8[$1 >> 0] | 0;
         $505 = ($503 & 1) == 0;
         $515 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($5, $505 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0, $505 ? ($503 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0) | 0;
         HEAP32[$4 >> 2] = HEAP32[$515 >> 2];
         HEAP32[$4 + 4 >> 2] = HEAP32[$515 + 4 >> 2];
         HEAP32[$4 + 8 >> 2] = HEAP32[$515 + 8 >> 2];
         HEAP32[$515 >> 2] = 0;
         HEAP32[$515 + 4 >> 2] = 0;
         HEAP32[$515 + 8 >> 2] = 0;
         $518 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 25478) | 0;
         HEAP32[$3 >> 2] = HEAP32[$518 >> 2];
         HEAP32[$3 + 4 >> 2] = HEAP32[$518 + 4 >> 2];
         HEAP32[$3 + 8 >> 2] = HEAP32[$518 + 8 >> 2];
         HEAP32[$518 >> 2] = 0;
         HEAP32[$518 + 4 >> 2] = 0;
         HEAP32[$518 + 8 >> 2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($2, $3);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($496, $2);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         $$311$i = $t$2$i351;
        }
       }
      } else $$311$i = $first; else $$311$i = $first; else $$311$i = $first; while (0);
      $$0 = $$311$i;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 100:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 97:
     {
      $524 = $t$0 + 2 | 0;
      $525 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($524, $last, $db) | 0;
      if (($525 | 0) == ($524 | 0)) {
       $$0 = $first;
       break L1;
      }
      $528 = $db + 4 | 0;
      $529 = HEAP32[$528 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($529 | 0)) {
       $$0 = $first;
       break L1;
      }
      $531 = $529 + -24 | 0;
      if ($parsed_gs$0$off0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($22, 25761, 2); else {
       HEAP32[$22 >> 2] = 0;
       HEAP32[$22 + 4 >> 2] = 0;
       HEAP32[$22 + 8 >> 2] = 0;
      }
      $534 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($22, 26766) | 0;
      HEAP32[$21 >> 2] = HEAP32[$534 >> 2];
      HEAP32[$21 + 4 >> 2] = HEAP32[$534 + 4 >> 2];
      HEAP32[$21 + 8 >> 2] = HEAP32[$534 + 8 >> 2];
      HEAP32[$534 >> 2] = 0;
      HEAP32[$534 + 4 >> 2] = 0;
      HEAP32[$534 + 8 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($23, (HEAP32[$528 >> 2] | 0) + -24 | 0);
      $539 = HEAP8[$23 >> 0] | 0;
      $541 = ($539 & 1) == 0;
      $551 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($21, $541 ? $23 + 1 | 0 : HEAP32[$23 + 8 >> 2] | 0, $541 ? ($539 & 255) >>> 1 : HEAP32[$23 + 4 >> 2] | 0) | 0;
      HEAP32[$20 >> 2] = HEAP32[$551 >> 2];
      HEAP32[$20 + 4 >> 2] = HEAP32[$551 + 4 >> 2];
      HEAP32[$20 + 8 >> 2] = HEAP32[$551 + 8 >> 2];
      HEAP32[$551 >> 2] = 0;
      HEAP32[$551 + 4 >> 2] = 0;
      HEAP32[$551 + 8 >> 2] = 0;
      do if (!(HEAP8[$531 >> 0] & 1)) {
       HEAP8[$531 + 1 >> 0] = 0;
       HEAP8[$531 >> 0] = 0;
      } else {
       $558 = $529 + -16 | 0;
       HEAP8[HEAP32[$558 >> 2] >> 0] = 0;
       $560 = $529 + -20 | 0;
       HEAP32[$560 >> 2] = 0;
       $$pre$i$i$i = HEAP8[$531 >> 0] | 0;
       if (!($$pre$i$i$i & 1)) {
        $567 = $$pre$i$i$i;
        $576 = 10;
       } else {
        $563 = HEAP32[$531 >> 2] | 0;
        $567 = $563 & 255;
        $576 = ($563 & -2) + -1 | 0;
       }
       if (!($567 & 1)) {
        $570 = ($567 & 255) >>> 1;
        if (($567 & 255) < 22) {
         $1749 = 1;
         $575 = 10;
         $595 = $570;
        } else {
         $1749 = 1;
         $575 = ($570 + 16 & 240) + -1 | 0;
         $595 = $570;
        }
       } else {
        $1749 = 0;
        $575 = 10;
        $595 = 0;
       }
       if (($575 | 0) != ($576 | 0)) {
        if (($575 | 0) == 10) {
         $582 = $531 + 1 | 0;
         $583 = HEAP32[$558 >> 2] | 0;
         if ($1749) {
          _memcpy($582 | 0, $583 | 0, (($567 & 255) >>> 1) + 1 | 0) | 0;
          _free($583);
         } else {
          HEAP8[$582 >> 0] = HEAP8[$583 >> 0] | 0;
          _free($583);
         }
         HEAP8[$531 >> 0] = $595 << 1;
         break;
        }
        $579 = $575 + 1 | 0;
        $580 = _malloc($579) | 0;
        if (!($575 >>> 0 <= $576 >>> 0 & ($580 | 0) == 0)) {
         if ($1749) _memcpy($580 | 0, $531 + 1 | 0, (($567 & 255) >>> 1) + 1 | 0) | 0; else {
          $592 = HEAP32[$558 >> 2] | 0;
          HEAP8[$580 >> 0] = HEAP8[$592 >> 0] | 0;
          _free($592);
         }
         HEAP32[$531 >> 2] = $579 | 1;
         HEAP32[$560 >> 2] = $595;
         HEAP32[$558 >> 2] = $580;
        }
       }
      } while (0);
      HEAP32[$531 >> 2] = HEAP32[$20 >> 2];
      HEAP32[$531 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
      HEAP32[$531 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
      HEAP32[$20 >> 2] = 0;
      HEAP32[$20 + 4 >> 2] = 0;
      HEAP32[$20 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
      $$0 = $525;
      break L1;
      break;
     }
    case 99:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 100) if ((HEAP8[$first + 1 >> 0] | 0) == 99) {
       $606 = $first + 2 | 0;
       $607 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($606, $last, $db) | 0;
       if (($607 | 0) == ($606 | 0)) $$06$i345 = $first; else {
        $609 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($607, $last, $db) | 0;
        if (($609 | 0) == ($607 | 0)) $$06$i345 = $first; else {
         $611 = $db + 4 | 0;
         $612 = HEAP32[$611 >> 2] | 0;
         if ((($612 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$06$i345 = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $612 + -24 | 0);
          $620 = HEAP32[$611 >> 2] | 0;
          $621 = $620 + -24 | 0;
          $623 = $620;
          do {
           $622 = $623 + -24 | 0;
           HEAP32[$611 >> 2] = $622;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($622);
           $623 = HEAP32[$611 >> 2] | 0;
          } while (($623 | 0) != ($621 | 0));
          $625 = $620 + -48 | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $625);
          $626 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 26776) | 0;
          HEAP32[$5 >> 2] = HEAP32[$626 >> 2];
          HEAP32[$5 + 4 >> 2] = HEAP32[$626 + 4 >> 2];
          HEAP32[$5 + 8 >> 2] = HEAP32[$626 + 8 >> 2];
          HEAP32[$626 >> 2] = 0;
          HEAP32[$626 + 4 >> 2] = 0;
          HEAP32[$626 + 8 >> 2] = 0;
          $629 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 26758) | 0;
          HEAP32[$4 >> 2] = HEAP32[$629 >> 2];
          HEAP32[$4 + 4 >> 2] = HEAP32[$629 + 4 >> 2];
          HEAP32[$4 + 8 >> 2] = HEAP32[$629 + 8 >> 2];
          HEAP32[$629 >> 2] = 0;
          HEAP32[$629 + 4 >> 2] = 0;
          HEAP32[$629 + 8 >> 2] = 0;
          $632 = HEAP8[$0 >> 0] | 0;
          $634 = ($632 & 1) == 0;
          $644 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4, $634 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $634 ? ($632 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
          HEAP32[$3 >> 2] = HEAP32[$644 >> 2];
          HEAP32[$3 + 4 >> 2] = HEAP32[$644 + 4 >> 2];
          HEAP32[$3 + 8 >> 2] = HEAP32[$644 + 8 >> 2];
          HEAP32[$644 >> 2] = 0;
          HEAP32[$644 + 4 >> 2] = 0;
          HEAP32[$644 + 8 >> 2] = 0;
          $647 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 25478) | 0;
          HEAP32[$2 >> 2] = HEAP32[$647 >> 2];
          HEAP32[$2 + 4 >> 2] = HEAP32[$647 + 4 >> 2];
          HEAP32[$2 + 8 >> 2] = HEAP32[$647 + 8 >> 2];
          HEAP32[$647 >> 2] = 0;
          HEAP32[$647 + 4 >> 2] = 0;
          HEAP32[$647 + 8 >> 2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($625, $1);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $$06$i345 = $609;
         }
        }
       }
      } else $$06$i345 = $first; else $$06$i345 = $first; else $$06$i345 = $first;
      $$0 = $$06$i345;
      break L1;
      break;
     }
    case 101:
     {
      $650 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($24, 25618, 1);
      $651 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($650, $last, $24, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
      $$0 = ($651 | 0) == ($650 | 0) ? $first : $651;
      break L1;
      break;
     }
    case 108:
     {
      $653 = $t$0 + 2 | 0;
      $654 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($653, $last, $db) | 0;
      if (($654 | 0) == ($653 | 0)) {
       $$0 = $first;
       break L1;
      }
      $657 = $db + 4 | 0;
      $658 = HEAP32[$657 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($658 | 0)) {
       $$0 = $first;
       break L1;
      }
      $660 = $658 + -24 | 0;
      if ($parsed_gs$0$off0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($27, 25761, 2); else {
       HEAP32[$27 >> 2] = 0;
       HEAP32[$27 + 4 >> 2] = 0;
       HEAP32[$27 + 8 >> 2] = 0;
      }
      $663 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($27, 26790) | 0;
      HEAP32[$26 >> 2] = HEAP32[$663 >> 2];
      HEAP32[$26 + 4 >> 2] = HEAP32[$663 + 4 >> 2];
      HEAP32[$26 + 8 >> 2] = HEAP32[$663 + 8 >> 2];
      HEAP32[$663 >> 2] = 0;
      HEAP32[$663 + 4 >> 2] = 0;
      HEAP32[$663 + 8 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($28, (HEAP32[$657 >> 2] | 0) + -24 | 0);
      $668 = HEAP8[$28 >> 0] | 0;
      $670 = ($668 & 1) == 0;
      $680 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($26, $670 ? $28 + 1 | 0 : HEAP32[$28 + 8 >> 2] | 0, $670 ? ($668 & 255) >>> 1 : HEAP32[$28 + 4 >> 2] | 0) | 0;
      HEAP32[$25 >> 2] = HEAP32[$680 >> 2];
      HEAP32[$25 + 4 >> 2] = HEAP32[$680 + 4 >> 2];
      HEAP32[$25 + 8 >> 2] = HEAP32[$680 + 8 >> 2];
      HEAP32[$680 >> 2] = 0;
      HEAP32[$680 + 4 >> 2] = 0;
      HEAP32[$680 + 8 >> 2] = 0;
      do if (!(HEAP8[$660 >> 0] & 1)) {
       HEAP8[$660 + 1 >> 0] = 0;
       HEAP8[$660 >> 0] = 0;
      } else {
       $687 = $658 + -16 | 0;
       HEAP8[HEAP32[$687 >> 2] >> 0] = 0;
       $689 = $658 + -20 | 0;
       HEAP32[$689 >> 2] = 0;
       $$pre$i$i$i87 = HEAP8[$660 >> 0] | 0;
       if (!($$pre$i$i$i87 & 1)) {
        $696 = $$pre$i$i$i87;
        $705 = 10;
       } else {
        $692 = HEAP32[$660 >> 2] | 0;
        $696 = $692 & 255;
        $705 = ($692 & -2) + -1 | 0;
       }
       if (!($696 & 1)) {
        $699 = ($696 & 255) >>> 1;
        if (($696 & 255) < 22) {
         $1750 = 1;
         $704 = 10;
         $724 = $699;
        } else {
         $1750 = 1;
         $704 = ($699 + 16 & 240) + -1 | 0;
         $724 = $699;
        }
       } else {
        $1750 = 0;
        $704 = 10;
        $724 = 0;
       }
       if (($704 | 0) != ($705 | 0)) {
        if (($704 | 0) == 10) {
         $711 = $660 + 1 | 0;
         $712 = HEAP32[$687 >> 2] | 0;
         if ($1750) {
          _memcpy($711 | 0, $712 | 0, (($696 & 255) >>> 1) + 1 | 0) | 0;
          _free($712);
         } else {
          HEAP8[$711 >> 0] = HEAP8[$712 >> 0] | 0;
          _free($712);
         }
         HEAP8[$660 >> 0] = $724 << 1;
         break;
        }
        $708 = $704 + 1 | 0;
        $709 = _malloc($708) | 0;
        if (!($704 >>> 0 <= $705 >>> 0 & ($709 | 0) == 0)) {
         if ($1750) _memcpy($709 | 0, $660 + 1 | 0, (($696 & 255) >>> 1) + 1 | 0) | 0; else {
          $721 = HEAP32[$687 >> 2] | 0;
          HEAP8[$709 >> 0] = HEAP8[$721 >> 0] | 0;
          _free($721);
         }
         HEAP32[$660 >> 2] = $708 | 1;
         HEAP32[$689 >> 2] = $724;
         HEAP32[$687 >> 2] = $709;
        }
       }
      } while (0);
      HEAP32[$660 >> 2] = HEAP32[$25 >> 2];
      HEAP32[$660 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
      HEAP32[$660 + 8 >> 2] = HEAP32[$25 + 8 >> 2];
      HEAP32[$25 >> 2] = 0;
      HEAP32[$25 + 4 >> 2] = 0;
      HEAP32[$25 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($25);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($28);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($26);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($27);
      $$0 = $654;
      break L1;
      break;
     }
    case 110:
     {
      $$0 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
      break L1;
      break;
     }
    case 115:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 100) if ((HEAP8[$first + 1 >> 0] | 0) == 115) {
       $736 = $first + 2 | 0;
       $737 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($736, $last, $db) | 0;
       if (($737 | 0) == ($736 | 0)) $$02$i317 = $first; else {
        $739 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($737, $last, $db) | 0;
        if (($739 | 0) == ($737 | 0)) $$02$i317 = $first; else {
         $741 = $db + 4 | 0;
         $742 = HEAP32[$741 >> 2] | 0;
         if ((($742 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$02$i317 = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $742 + -24 | 0);
          $750 = HEAP32[$741 >> 2] | 0;
          $751 = $750 + -24 | 0;
          $753 = $750;
          do {
           $752 = $753 + -24 | 0;
           HEAP32[$741 >> 2] = $752;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($752);
           $753 = HEAP32[$741 >> 2] | 0;
          } while (($753 | 0) != ($751 | 0));
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($1, 26798, $0);
          $756 = HEAP8[$1 >> 0] | 0;
          $758 = ($756 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($750 + -48 | 0, $758 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0, $758 ? ($756 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $$02$i317 = $739;
         }
        }
       }
      } else $$02$i317 = $first; else $$02$i317 = $first; else $$02$i317 = $first;
      $$0 = $$02$i317;
      break L1;
      break;
     }
    case 116:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 100) if ((HEAP8[$first + 1 >> 0] | 0) == 116) {
       $774 = $first + 2 | 0;
       $775 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($774, $last, $db) | 0;
       if (($775 | 0) == ($774 | 0)) $$02$i310 = $first; else {
        $777 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($775, $last, $db) | 0;
        if (($777 | 0) == ($775 | 0)) $$02$i310 = $first; else {
         $779 = $db + 4 | 0;
         $780 = HEAP32[$779 >> 2] | 0;
         if ((($780 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$02$i310 = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $780 + -24 | 0);
          $788 = HEAP32[$779 >> 2] | 0;
          $789 = $788 + -24 | 0;
          $791 = $788;
          do {
           $790 = $791 + -24 | 0;
           HEAP32[$779 >> 2] = $790;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($790);
           $791 = HEAP32[$779 >> 2] | 0;
          } while (($791 | 0) != ($789 | 0));
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($1, 28365, $0);
          $794 = HEAP8[$1 >> 0] | 0;
          $796 = ($794 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($788 + -48 | 0, $796 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0, $796 ? ($794 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $$02$i310 = $777;
         }
        }
       }
      } else $$02$i310 = $first; else $$02$i310 = $first; else $$02$i310 = $first;
      $$0 = $$02$i310;
      break L1;
      break;
     }
    case 118:
     {
      $806 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($29, 26801, 1);
      $807 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($806, $last, $29, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($29);
      $$0 = ($807 | 0) == ($806 | 0) ? $first : $807;
      break L1;
      break;
     }
    case 86:
     {
      $809 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($30, 26803, 2);
      $810 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($809, $last, $30, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($30);
      $$0 = ($810 | 0) == ($809 | 0) ? $first : $810;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 101:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 111:
     {
      $815 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($31, 26806, 1);
      $816 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($815, $last, $31, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($31);
      $$0 = ($816 | 0) == ($815 | 0) ? $first : $816;
      break L1;
      break;
     }
    case 79:
     {
      $818 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($32, 26808, 2);
      $819 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($818, $last, $32, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($32);
      $$0 = ($819 | 0) == ($818 | 0) ? $first : $819;
      break L1;
      break;
     }
    case 113:
     {
      $821 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($33, 26811, 2);
      $822 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($821, $last, $33, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($33);
      $$0 = ($822 | 0) == ($821 | 0) ? $first : $822;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 103:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 101:
     {
      $827 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($34, 26814, 2);
      $828 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($827, $last, $34, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($34);
      $$0 = ($828 | 0) == ($827 | 0) ? $first : $828;
      break L1;
      break;
     }
    case 116:
     {
      $830 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($35, 25637, 1);
      $831 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($830, $last, $35, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($35);
      $$0 = ($831 | 0) == ($830 | 0) ? $first : $831;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 105:
   {
    if ((HEAP8[$t$0 + 1 >> 0] | 0) != 120) {
     $$0 = $first;
     break L1;
    }
    $836 = $first + 2 | 0;
    $837 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($836, $last, $db) | 0;
    if (($837 | 0) == ($836 | 0)) {
     $$0 = $first;
     break L1;
    }
    $839 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($837, $last, $db) | 0;
    $841 = $db + 4 | 0;
    $842 = HEAP32[$841 >> 2] | 0;
    if (($839 | 0) == ($837 | 0)) {
     $879 = $842 + -24 | 0;
     $881 = $842;
     while (1) {
      $880 = $881 + -24 | 0;
      HEAP32[$841 >> 2] = $880;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($880);
      $881 = HEAP32[$841 >> 2] | 0;
      if (($881 | 0) == ($879 | 0)) {
       $$0 = $first;
       break L1;
      }
     }
    }
    if ((($842 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$0 = $first;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2, $842 + -24 | 0);
    $850 = HEAP32[$841 >> 2] | 0;
    $851 = $850 + -24 | 0;
    $853 = $850;
    do {
     $852 = $853 + -24 | 0;
     HEAP32[$841 >> 2] = $852;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($852);
     $853 = HEAP32[$841 >> 2] | 0;
    } while (($853 | 0) != ($851 | 0));
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op1, $850 + -48 | 0);
    $857 = (HEAP32[$841 >> 2] | 0) + -24 | 0;
    __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($40, 25573, $op1);
    $858 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($40, 26817) | 0;
    HEAP32[$39 >> 2] = HEAP32[$858 >> 2];
    HEAP32[$39 + 4 >> 2] = HEAP32[$858 + 4 >> 2];
    HEAP32[$39 + 8 >> 2] = HEAP32[$858 + 8 >> 2];
    HEAP32[$858 >> 2] = 0;
    HEAP32[$858 + 4 >> 2] = 0;
    HEAP32[$858 + 8 >> 2] = 0;
    $861 = HEAP8[$op2 >> 0] | 0;
    $863 = ($861 & 1) == 0;
    $873 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($39, $863 ? $op2 + 1 | 0 : HEAP32[$op2 + 8 >> 2] | 0, $863 ? ($861 & 255) >>> 1 : HEAP32[$op2 + 4 >> 2] | 0) | 0;
    HEAP32[$38 >> 2] = HEAP32[$873 >> 2];
    HEAP32[$38 + 4 >> 2] = HEAP32[$873 + 4 >> 2];
    HEAP32[$38 + 8 >> 2] = HEAP32[$873 + 8 >> 2];
    HEAP32[$873 >> 2] = 0;
    HEAP32[$873 + 4 >> 2] = 0;
    HEAP32[$873 + 8 >> 2] = 0;
    $876 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($38, 25562) | 0;
    HEAP32[$37 >> 2] = HEAP32[$876 >> 2];
    HEAP32[$37 + 4 >> 2] = HEAP32[$876 + 4 >> 2];
    HEAP32[$37 + 8 >> 2] = HEAP32[$876 + 8 >> 2];
    HEAP32[$876 >> 2] = 0;
    HEAP32[$876 + 4 >> 2] = 0;
    HEAP32[$876 + 8 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($36, $37);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($857, $36);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($37);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($38);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($39);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($40);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
    $$0 = $839;
    break L1;
    break;
   }
  case 108:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 101:
     {
      $886 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($41, 26820, 2);
      $887 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($886, $last, $41, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($41);
      $$0 = ($887 | 0) == ($886 | 0) ? $first : $887;
      break L1;
      break;
     }
    case 115:
     {
      $889 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($42, 26823, 2);
      $890 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($889, $last, $42, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($42);
      $$0 = ($890 | 0) == ($889 | 0) ? $first : $890;
      break L1;
      break;
     }
    case 83:
     {
      $892 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($43, 26826, 3);
      $893 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($892, $last, $43, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($43);
      $$0 = ($893 | 0) == ($892 | 0) ? $first : $893;
      break L1;
      break;
     }
    case 116:
     {
      $895 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($44, 25635, 1);
      $896 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($895, $last, $44, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($44);
      $$0 = ($896 | 0) == ($895 | 0) ? $first : $896;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 109:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 105:
     {
      $901 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($45, 26830, 1);
      $902 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($901, $last, $45, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($45);
      $$0 = ($902 | 0) == ($901 | 0) ? $first : $902;
      break L1;
      break;
     }
    case 73:
     {
      $904 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($46, 26832, 2);
      $905 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($904, $last, $46, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($46);
      $$0 = ($905 | 0) == ($904 | 0) ? $first : $905;
      break L1;
      break;
     }
    case 108:
     {
      $907 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($47, 25618, 1);
      $908 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($907, $last, $47, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($47);
      $$0 = ($908 | 0) == ($907 | 0) ? $first : $908;
      break L1;
      break;
     }
    case 76:
     {
      $910 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($48, 26835, 2);
      $911 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($910, $last, $48, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($48);
      $$0 = ($911 | 0) == ($910 | 0) ? $first : $911;
      break L1;
      break;
     }
    case 109:
     {
      $913 = $first + 2 | 0;
      if (($913 | 0) != ($last | 0)) if ((HEAP8[$913 >> 0] | 0) == 95) {
       $917 = $first + 3 | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($49, 26838, 2);
       $918 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($917, $last, $49, $db) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($49);
       $$0 = ($918 | 0) == ($917 | 0) ? $first : $918;
       break L1;
      }
      $920 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($913, $last, $db) | 0;
      if (($920 | 0) == ($913 | 0)) {
       $$0 = $first;
       break L1;
      }
      $924 = HEAP32[$db + 4 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($924 | 0)) {
       $$0 = $first;
       break L1;
      }
      $926 = $924 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($53, $926);
      $927 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($53, 0, 25573) | 0;
      HEAP32[$52 >> 2] = HEAP32[$927 >> 2];
      HEAP32[$52 + 4 >> 2] = HEAP32[$927 + 4 >> 2];
      HEAP32[$52 + 8 >> 2] = HEAP32[$927 + 8 >> 2];
      HEAP32[$927 >> 2] = 0;
      HEAP32[$927 + 4 >> 2] = 0;
      HEAP32[$927 + 8 >> 2] = 0;
      $930 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($52, 26841) | 0;
      HEAP32[$51 >> 2] = HEAP32[$930 >> 2];
      HEAP32[$51 + 4 >> 2] = HEAP32[$930 + 4 >> 2];
      HEAP32[$51 + 8 >> 2] = HEAP32[$930 + 8 >> 2];
      HEAP32[$930 >> 2] = 0;
      HEAP32[$930 + 4 >> 2] = 0;
      HEAP32[$930 + 8 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($50, $51);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($926, $50);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($50);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($51);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($52);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($53);
      $$0 = $920;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 110:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 119:
    case 97:
     {
      L323 : do if ($85) {
       $936 = HEAP8[$first >> 0] | 0;
       if ($936 << 24 >> 24 == 103) {
        $940 = (HEAP8[$first + 1 >> 0] | 0) == 115;
        $$first$i = $940 ? $first + 2 | 0 : $first;
        $943 = HEAP8[$$first$i >> 0] | 0;
        $parsed_gs$0$off0$i = $940;
        $t$0$i267 = $$first$i;
       } else {
        $943 = $936;
        $parsed_gs$0$off0$i = 0;
        $t$0$i267 = $first;
       }
       if ($943 << 24 >> 24 == 110) {
        $945 = HEAP8[$t$0$i267 + 1 >> 0] | 0;
        switch ($945 << 24 >> 24) {
        case 97:
        case 119:
         break;
        default:
         {
          $$221$i = $first;
          label = 319;
          break L323;
         }
        }
        $946 = $945 << 24 >> 24 == 97;
        $947 = $t$0$i267 + 2 | 0;
        if (($947 | 0) == ($last | 0)) $$9$i = $first; else {
         $has_expr_list$0$off0$i = 0;
         $t$1$i = $947;
         while (1) {
          if ((HEAP8[$t$1$i >> 0] | 0) == 95) {
           $has_expr_list$0$off0$i$lcssa = $has_expr_list$0$off0$i;
           $t$1$i$lcssa = $t$1$i;
           break;
          }
          $t$1$i$looptemp = $t$1$i;
          $t$1$i = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$1$i, $last, $db) | 0;
          if (($t$1$i | 0) == ($t$1$i$looptemp | 0) | ($t$1$i | 0) == ($last | 0)) {
           $$9$i = $first;
           break L323;
          } else $has_expr_list$0$off0$i = 1;
         }
         $954 = $t$1$i$lcssa + 1 | 0;
         $955 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($954, $last, $db) | 0;
         if (($955 | 0) == ($954 | 0) | ($955 | 0) == ($last | 0)) $$9$i = $first; else {
          $961 = HEAP8[$955 >> 0] | 0;
          L335 : do if (($81 - $955 | 0) > 2 & $961 << 24 >> 24 == 112) {
           if ((HEAP8[$955 + 1 >> 0] | 0) != 105) {
            $$9$i = $first;
            break L323;
           }
           $t$2$i = $955 + 2 | 0;
           while (1) {
            if ((HEAP8[$t$2$i >> 0] | 0) == 69) {
             $has_init$0$off0$i513 = 1;
             $t$3$i512 = $t$2$i;
             break L335;
            }
            $t$2$i$looptemp = $t$2$i;
            $t$2$i = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$2$i, $last, $db) | 0;
            if (($t$2$i | 0) == ($t$2$i$looptemp | 0) | ($t$2$i | 0) == ($last | 0)) {
             $$9$i = $first;
             break L323;
            }
           }
          } else if ($961 << 24 >> 24 == 69) {
           $has_init$0$off0$i513 = 0;
           $t$3$i512 = $955;
          } else {
           $$9$i = $first;
           break L323;
          } while (0);
          HEAP32[$1 >> 2] = 0;
          HEAP32[$1 + 4 >> 2] = 0;
          HEAP32[$1 + 8 >> 2] = 0;
          if ($has_init$0$off0$i513) {
           $976 = $db + 4 | 0;
           $977 = HEAP32[$976 >> 2] | 0;
           if ((HEAP32[$db >> 2] | 0) != ($977 | 0)) {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2, $977 + -24 | 0);
            L346 : do if (!(HEAP8[$1 >> 0] & 1)) {
             HEAP8[$1 + 1 >> 0] = 0;
             HEAP8[$1 >> 0] = 0;
            } else {
             $984 = $1 + 8 | 0;
             $985 = HEAP32[$984 >> 2] | 0;
             HEAP8[$985 >> 0] = 0;
             $986 = $1 + 4 | 0;
             HEAP32[$986 >> 2] = 0;
             $987 = HEAP32[$1 >> 2] | 0;
             $phitmp$i$i$i$i$i$i$i273 = ($987 & -2) + -1 | 0;
             $989 = $987 & 255;
             do if (!($989 & 1)) {
              $993 = $987 >>> 1 & 127;
              if (($989 & 255) < 22) {
               _memcpy($1 + 1 | 0, $985 | 0, ($987 >>> 1 & 127) + 1 | 0) | 0;
               _free($985);
               $$ph518 = $993;
               break;
              }
              $996 = $993 + 16 & 240;
              $phitmp$i2$i$i$i$i$i$i276 = $996 + -1 | 0;
              if (($phitmp$i2$i$i$i$i$i$i276 | 0) == ($phitmp$i$i$i$i$i$i$i273 | 0)) break L346;
              $999 = _malloc($996) | 0;
              if ($phitmp$i2$i$i$i$i$i$i276 >>> 0 <= $phitmp$i$i$i$i$i$i$i273 >>> 0 & ($999 | 0) == 0) break L346;
              _memcpy($999 | 0, $1 + 1 | 0, ($987 >>> 1 & 127) + 1 | 0) | 0;
              HEAP32[$1 >> 2] = $996 | 1;
              HEAP32[$986 >> 2] = $993;
              HEAP32[$984 >> 2] = $999;
              break L346;
             } else {
              HEAP8[$1 + 1 >> 0] = 0;
              _free($985);
              $$ph518 = 0;
             } while (0);
             HEAP8[$1 >> 0] = $$ph518 << 1;
            } while (0);
            HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
            HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
            HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
            HEAP32[$2 >> 2] = 0;
            HEAP32[$2 + 4 >> 2] = 0;
            HEAP32[$2 + 8 >> 2] = 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
            $1015 = HEAP32[$976 >> 2] | 0;
            $1016 = $1015 + -24 | 0;
            $1018 = $1015;
            do {
             $1017 = $1018 + -24 | 0;
             HEAP32[$976 >> 2] = $1017;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1017);
             $1018 = HEAP32[$976 >> 2] | 0;
            } while (($1018 | 0) != ($1016 | 0));
            $$pre$phi511Z2D = $976;
            $$pre$phiZ2D = $db;
            $1022 = $1016;
            label = 283;
           }
          } else {
           $$phi$trans$insert = $db + 4 | 0;
           $$pre$phi511Z2D = $$phi$trans$insert;
           $$pre$phiZ2D = $db;
           $1022 = HEAP32[$$phi$trans$insert >> 2] | 0;
           label = 283;
          }
          if ((label | 0) == 283) if ((HEAP32[$$pre$phiZ2D >> 2] | 0) != ($1022 | 0)) {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $1022 + -24 | 0);
           $1024 = HEAP32[$$pre$phi511Z2D >> 2] | 0;
           $1025 = $1024 + -24 | 0;
           $1027 = $1024;
           do {
            $1026 = $1027 + -24 | 0;
            HEAP32[$$pre$phi511Z2D >> 2] = $1026;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1026);
            $1027 = HEAP32[$$pre$phi511Z2D >> 2] | 0;
           } while (($1027 | 0) != ($1025 | 0));
           HEAP32[$4 >> 2] = 0;
           HEAP32[$4 + 4 >> 2] = 0;
           HEAP32[$4 + 8 >> 2] = 0;
           if ($has_expr_list$0$off0$i$lcssa) if ((HEAP32[$$pre$phiZ2D >> 2] | 0) == ($1025 | 0)) {
            $$019$i = $first;
            $$2$i302 = 0;
           } else {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $1024 + -48 | 0);
            L371 : do if (!(HEAP8[$4 >> 0] & 1)) {
             HEAP8[$4 + 1 >> 0] = 0;
             HEAP8[$4 >> 0] = 0;
            } else {
             $1038 = $4 + 8 | 0;
             $1039 = HEAP32[$1038 >> 2] | 0;
             HEAP8[$1039 >> 0] = 0;
             $1040 = $4 + 4 | 0;
             HEAP32[$1040 >> 2] = 0;
             $1041 = HEAP32[$4 >> 2] | 0;
             $phitmp$i$i$i$i$i$i32$i = ($1041 & -2) + -1 | 0;
             $1043 = $1041 & 255;
             do if (!($1043 & 1)) {
              $1047 = $1041 >>> 1 & 127;
              if (($1043 & 255) < 22) {
               _memcpy($4 + 1 | 0, $1039 | 0, ($1041 >>> 1 & 127) + 1 | 0) | 0;
               _free($1039);
               $$ph520524 = $1047;
               break;
              }
              $1050 = $1047 + 16 & 240;
              $phitmp$i2$i$i$i$i$i35$i = $1050 + -1 | 0;
              if (($phitmp$i2$i$i$i$i$i35$i | 0) == ($phitmp$i$i$i$i$i$i32$i | 0)) break L371;
              $1053 = _malloc($1050) | 0;
              if ($phitmp$i2$i$i$i$i$i35$i >>> 0 <= $phitmp$i$i$i$i$i$i32$i >>> 0 & ($1053 | 0) == 0) break L371;
              _memcpy($1053 | 0, $4 + 1 | 0, ($1041 >>> 1 & 127) + 1 | 0) | 0;
              HEAP32[$4 >> 2] = $1050 | 1;
              HEAP32[$1040 >> 2] = $1047;
              HEAP32[$1038 >> 2] = $1053;
              break L371;
             } else {
              HEAP8[$4 + 1 >> 0] = 0;
              _free($1039);
              $$ph520524 = 0;
             } while (0);
             HEAP8[$4 >> 0] = $$ph520524 << 1;
            } while (0);
            HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
            HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
            HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
            HEAP32[$5 >> 2] = 0;
            HEAP32[$5 + 4 >> 2] = 0;
            HEAP32[$5 + 8 >> 2] = 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
            $1069 = HEAP32[$$pre$phi511Z2D >> 2] | 0;
            $1070 = $1069 + -24 | 0;
            $1072 = $1069;
            do {
             $1071 = $1072 + -24 | 0;
             HEAP32[$$pre$phi511Z2D >> 2] = $1071;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1071);
             $1072 = HEAP32[$$pre$phi511Z2D >> 2] | 0;
            } while (($1072 | 0) != ($1070 | 0));
            label = 300;
           } else label = 300;
           if ((label | 0) == 300) {
            HEAP32[$6 >> 2] = 0;
            HEAP32[$6 + 4 >> 2] = 0;
            HEAP32[$6 + 8 >> 2] = 0;
            if ($parsed_gs$0$off0$i) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($6, 25761, 2);
            if ($946) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 26845) | 0; else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 25585) | 0;
            if ($has_expr_list$0$off0$i$lcssa) {
             __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($8, 25573, $4);
             $1076 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 26849) | 0;
             HEAP32[$7 >> 2] = HEAP32[$1076 >> 2];
             HEAP32[$7 + 4 >> 2] = HEAP32[$1076 + 4 >> 2];
             HEAP32[$7 + 8 >> 2] = HEAP32[$1076 + 8 >> 2];
             HEAP32[$1076 >> 2] = 0;
             HEAP32[$1076 + 4 >> 2] = 0;
             HEAP32[$1076 + 8 >> 2] = 0;
             $1079 = HEAP8[$7 >> 0] | 0;
             $1081 = ($1079 & 1) == 0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($6, $1081 ? $7 + 1 | 0 : HEAP32[$7 + 8 >> 2] | 0, $1081 ? ($1079 & 255) >>> 1 : HEAP32[$7 + 4 >> 2] | 0) | 0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
            }
            $1091 = HEAP8[$3 >> 0] | 0;
            $1093 = ($1091 & 1) == 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($6, $1093 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0, $1093 ? ($1091 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0) | 0;
            if ($has_init$0$off0$i513) {
             __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($10, 25475, $1);
             $1103 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($10, 25478) | 0;
             HEAP32[$9 >> 2] = HEAP32[$1103 >> 2];
             HEAP32[$9 + 4 >> 2] = HEAP32[$1103 + 4 >> 2];
             HEAP32[$9 + 8 >> 2] = HEAP32[$1103 + 8 >> 2];
             HEAP32[$1103 >> 2] = 0;
             HEAP32[$1103 + 4 >> 2] = 0;
             HEAP32[$1103 + 8 >> 2] = 0;
             $1106 = HEAP8[$9 >> 0] | 0;
             $1108 = ($1106 & 1) == 0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($6, $1108 ? $9 + 1 | 0 : HEAP32[$9 + 8 >> 2] | 0, $1108 ? ($1106 & 255) >>> 1 : HEAP32[$9 + 4 >> 2] | 0) | 0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
            };
            HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
            HEAP32[$12 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
            HEAP32[$12 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
            HEAP32[$6 >> 2] = 0;
            HEAP32[$6 + 4 >> 2] = 0;
            HEAP32[$6 + 8 >> 2] = 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($11, $12);
            $1120 = HEAP32[$$pre$phi511Z2D >> 2] | 0;
            $1122 = HEAP32[$db + 8 >> 2] | 0;
            if ($1120 >>> 0 < $1122 >>> 0) {
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1120, $11);
             HEAP32[$$pre$phi511Z2D >> 2] = (HEAP32[$$pre$phi511Z2D >> 2] | 0) + 24;
            } else {
             $1129 = HEAP32[$$pre$phiZ2D >> 2] | 0;
             $1130 = $1120 - $1129 | 0;
             $1131 = ($1130 | 0) / 24 | 0;
             $1132 = $1131 + 1 | 0;
             if (($1130 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
             $1136 = ($1122 - $1129 | 0) / 24 | 0;
             if ($1136 >>> 0 < 1073741823) {
              $1138 = $1136 << 1;
              $$0$i$i$i$i299 = $1138 >>> 0 < $1132 >>> 0 ? $1132 : $1138;
             } else $$0$i$i$i$i299 = 2147483647;
             __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($0, $$0$i$i$i$i299, $1131, $db + 12 | 0);
             $1141 = $0 + 8 | 0;
             $1142 = HEAP32[$1141 >> 2] | 0;
             __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1142, $11);
             HEAP32[$1141 >> 2] = $1142 + 24;
             __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $0);
             __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($0);
            }
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
            $$019$i = $t$3$i512 + 1 | 0;
            $$2$i302 = 1;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
           if ($$2$i302) {
            $$221$i = $$019$i;
            label = 319;
            break;
           } else {
            $$9$i = $first;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
          $$9$i = $first;
         }
        }
       } else {
        $$221$i = $first;
        label = 319;
       }
      } else {
       $$221$i = $first;
       label = 319;
      } while (0);
      if ((label | 0) == 319) $$9$i = $$221$i;
      $$0 = $$9$i;
      break L1;
      break;
     }
    case 101:
     {
      $1145 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($54, 26852, 2);
      $1146 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1145, $last, $54, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($54);
      $$0 = ($1146 | 0) == ($1145 | 0) ? $first : $1146;
      break L1;
      break;
     }
    case 103:
     {
      $1148 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($55, 26830, 1);
      $1149 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1148, $last, $55, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($55);
      $$0 = ($1149 | 0) == ($1148 | 0) ? $first : $1149;
      break L1;
      break;
     }
    case 116:
     {
      $1151 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($56, 26855, 1);
      $1152 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1151, $last, $56, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($56);
      $$0 = ($1152 | 0) == ($1151 | 0) ? $first : $1152;
      break L1;
      break;
     }
    case 120:
     {
      $1154 = $first + 2 | 0;
      $1155 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1154, $last, $db) | 0;
      if (($1155 | 0) == ($1154 | 0)) $$03$i265 = $1154; else {
       $1159 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($1159 | 0)) $$03$i265 = $1154; else {
        $1161 = $1159 + -24 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2, $1161);
        $1162 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($2, 0, 26857) | 0;
        HEAP32[$1 >> 2] = HEAP32[$1162 >> 2];
        HEAP32[$1 + 4 >> 2] = HEAP32[$1162 + 4 >> 2];
        HEAP32[$1 + 8 >> 2] = HEAP32[$1162 + 8 >> 2];
        HEAP32[$1162 >> 2] = 0;
        HEAP32[$1162 + 4 >> 2] = 0;
        HEAP32[$1162 + 8 >> 2] = 0;
        $1165 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25478) | 0;
        HEAP32[$0 >> 2] = HEAP32[$1165 >> 2];
        HEAP32[$0 + 4 >> 2] = HEAP32[$1165 + 4 >> 2];
        HEAP32[$0 + 8 >> 2] = HEAP32[$1165 + 8 >> 2];
        HEAP32[$1165 >> 2] = 0;
        HEAP32[$1165 + 4 >> 2] = 0;
        HEAP32[$1165 + 8 >> 2] = 0;
        do if (!(HEAP8[$1161 >> 0] & 1)) {
         HEAP8[$1161 + 1 >> 0] = 0;
         HEAP8[$1161 >> 0] = 0;
        } else {
         $1172 = $1159 + -16 | 0;
         HEAP8[HEAP32[$1172 >> 2] >> 0] = 0;
         $1174 = $1159 + -20 | 0;
         HEAP32[$1174 >> 2] = 0;
         $$pre$i$i$i$i = HEAP8[$1161 >> 0] | 0;
         if (!($$pre$i$i$i$i & 1)) {
          $1181 = $$pre$i$i$i$i;
          $1190 = 10;
         } else {
          $1177 = HEAP32[$1161 >> 2] | 0;
          $1181 = $1177 & 255;
          $1190 = ($1177 & -2) + -1 | 0;
         }
         if (!($1181 & 1)) {
          $1184 = ($1181 & 255) >>> 1;
          if (($1181 & 255) < 22) {
           $1189 = 10;
           $1209 = $1184;
           $1751 = 1;
          } else {
           $1189 = ($1184 + 16 & 240) + -1 | 0;
           $1209 = $1184;
           $1751 = 1;
          }
         } else {
          $1189 = 10;
          $1209 = 0;
          $1751 = 0;
         }
         if (($1189 | 0) != ($1190 | 0)) {
          if (($1189 | 0) == 10) {
           $1196 = $1161 + 1 | 0;
           $1197 = HEAP32[$1172 >> 2] | 0;
           if ($1751) {
            _memcpy($1196 | 0, $1197 | 0, (($1181 & 255) >>> 1) + 1 | 0) | 0;
            _free($1197);
           } else {
            HEAP8[$1196 >> 0] = HEAP8[$1197 >> 0] | 0;
            _free($1197);
           }
           HEAP8[$1161 >> 0] = $1209 << 1;
           break;
          }
          $1193 = $1189 + 1 | 0;
          $1194 = _malloc($1193) | 0;
          if (!($1189 >>> 0 <= $1190 >>> 0 & ($1194 | 0) == 0)) {
           if ($1751) _memcpy($1194 | 0, $1161 + 1 | 0, (($1181 & 255) >>> 1) + 1 | 0) | 0; else {
            $1206 = HEAP32[$1172 >> 2] | 0;
            HEAP8[$1194 >> 0] = HEAP8[$1206 >> 0] | 0;
            _free($1206);
           }
           HEAP32[$1161 >> 2] = $1193 | 1;
           HEAP32[$1174 >> 2] = $1209;
           HEAP32[$1172 >> 2] = $1194;
          }
         }
        } while (0);
        HEAP32[$1161 >> 2] = HEAP32[$0 >> 2];
        HEAP32[$1161 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
        HEAP32[$1161 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
        HEAP32[$0 >> 2] = 0;
        HEAP32[$0 + 4 >> 2] = 0;
        HEAP32[$0 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
        $$03$i265 = $1155;
       }
      }
      $$0 = ($$03$i265 | 0) == ($1154 | 0) ? $first : $$03$i265;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 111:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 110:
     {
      $$0 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
      break L1;
      break;
     }
    case 111:
     {
      $1219 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($57, 26868, 2);
      $1220 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1219, $last, $57, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($57);
      $$0 = ($1220 | 0) == ($1219 | 0) ? $first : $1220;
      break L1;
      break;
     }
    case 114:
     {
      $1222 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($58, 26871, 1);
      $1223 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1222, $last, $58, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($58);
      $$0 = ($1223 | 0) == ($1222 | 0) ? $first : $1223;
      break L1;
      break;
     }
    case 82:
     {
      $1225 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($59, 26873, 2);
      $1226 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1225, $last, $59, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($59);
      $$0 = ($1226 | 0) == ($1225 | 0) ? $first : $1226;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 112:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 109:
     {
      $1231 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($60, 26876, 3);
      $1232 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1231, $last, $60, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($60);
      $$0 = ($1232 | 0) == ($1231 | 0) ? $first : $1232;
      break L1;
      break;
     }
    case 108:
     {
      $1234 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($61, 26880, 1);
      $1235 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1234, $last, $61, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($61);
      $$0 = ($1235 | 0) == ($1234 | 0) ? $first : $1235;
      break L1;
      break;
     }
    case 76:
     {
      $1237 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($62, 26882, 2);
      $1238 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1237, $last, $62, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($62);
      $$0 = ($1238 | 0) == ($1237 | 0) ? $first : $1238;
      break L1;
      break;
     }
    case 112:
     {
      $1240 = $first + 2 | 0;
      if (($1240 | 0) != ($last | 0)) if ((HEAP8[$1240 >> 0] | 0) == 95) {
       $1244 = $first + 3 | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($63, 26885, 2);
       $1245 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1244, $last, $63, $db) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($63);
       $$0 = ($1245 | 0) == ($1244 | 0) ? $first : $1245;
       break L1;
      }
      $1247 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1240, $last, $db) | 0;
      if (($1247 | 0) == ($1240 | 0)) {
       $$0 = $first;
       break L1;
      }
      $1251 = HEAP32[$db + 4 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($1251 | 0)) {
       $$0 = $first;
       break L1;
      }
      $1253 = $1251 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($67, $1253);
      $1254 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($67, 0, 25573) | 0;
      HEAP32[$66 >> 2] = HEAP32[$1254 >> 2];
      HEAP32[$66 + 4 >> 2] = HEAP32[$1254 + 4 >> 2];
      HEAP32[$66 + 8 >> 2] = HEAP32[$1254 + 8 >> 2];
      HEAP32[$1254 >> 2] = 0;
      HEAP32[$1254 + 4 >> 2] = 0;
      HEAP32[$1254 + 8 >> 2] = 0;
      $1257 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($66, 26888) | 0;
      HEAP32[$65 >> 2] = HEAP32[$1257 >> 2];
      HEAP32[$65 + 4 >> 2] = HEAP32[$1257 + 4 >> 2];
      HEAP32[$65 + 8 >> 2] = HEAP32[$1257 + 8 >> 2];
      HEAP32[$1257 >> 2] = 0;
      HEAP32[$1257 + 4 >> 2] = 0;
      HEAP32[$1257 + 8 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($64, $65);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1253, $64);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($64);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($65);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($66);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($67);
      $$0 = $1247;
      break L1;
      break;
     }
    case 115:
     {
      $1260 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($68, 26880, 1);
      $1261 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1260, $last, $68, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($68);
      $$0 = ($1261 | 0) == ($1260 | 0) ? $first : $1261;
      break L1;
      break;
     }
    case 116:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 112) if ((HEAP8[$first + 1 >> 0] | 0) == 116) {
       $1269 = $first + 2 | 0;
       $1270 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1269, $last, $db) | 0;
       if (($1270 | 0) == ($1269 | 0)) $$0$i254 = $first; else {
        $1272 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1270, $last, $db) | 0;
        if (($1272 | 0) == ($1270 | 0)) $$0$i254 = $first; else {
         $1274 = $db + 4 | 0;
         $1275 = HEAP32[$1274 >> 2] | 0;
         if ((($1275 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$0$i254 = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $1275 + -24 | 0);
          $1283 = HEAP32[$1274 >> 2] | 0;
          $1284 = $1283 + -24 | 0;
          $1286 = $1283;
          do {
           $1285 = $1286 + -24 | 0;
           HEAP32[$1274 >> 2] = $1285;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1285);
           $1286 = HEAP32[$1274 >> 2] | 0;
          } while (($1286 | 0) != ($1284 | 0));
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1283 + -48 | 0, 26892) | 0;
          $1291 = HEAP8[$0 >> 0] | 0;
          $1293 = ($1291 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$1274 >> 2] | 0) + -24 | 0, $1293 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $1293 ? ($1291 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $$0$i254 = $1272;
         }
        }
       }
      } else $$0$i254 = $first; else $$0$i254 = $first; else $$0$i254 = $first;
      $$0 = $$0$i254;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 113:
   {
    if ((HEAP8[$t$0 + 1 >> 0] | 0) != 117) {
     $$0 = $first;
     break L1;
    }
    $1306 = $first + 2 | 0;
    $1307 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1306, $last, $db) | 0;
    if (($1307 | 0) == ($1306 | 0)) {
     $$0 = $first;
     break L1;
    }
    $1309 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1307, $last, $db) | 0;
    if (($1309 | 0) == ($1307 | 0)) {
     $1383 = $db + 4 | 0;
     $1384 = HEAP32[$1383 >> 2] | 0;
     $1385 = $1384 + -24 | 0;
     $1387 = $1384;
     while (1) {
      $1386 = $1387 + -24 | 0;
      HEAP32[$1383 >> 2] = $1386;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1386);
      $1387 = HEAP32[$1383 >> 2] | 0;
      if (($1387 | 0) == ($1385 | 0)) {
       $$0 = $first;
       break L1;
      }
     }
    }
    $1311 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1309, $last, $db) | 0;
    $1313 = $db + 4 | 0;
    $1314 = HEAP32[$1313 >> 2] | 0;
    if (($1311 | 0) == ($1309 | 0)) {
     $1375 = $1314 + -24 | 0;
     $1377 = $1314;
     do {
      $1376 = $1377 + -24 | 0;
      HEAP32[$1313 >> 2] = $1376;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1376);
      $1377 = HEAP32[$1313 >> 2] | 0;
     } while (($1377 | 0) != ($1375 | 0));
     $1379 = $1314 + -48 | 0;
     $1381 = $1375;
     while (1) {
      $1380 = $1381 + -24 | 0;
      HEAP32[$1313 >> 2] = $1380;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1380);
      $1381 = HEAP32[$1313 >> 2] | 0;
      if (($1381 | 0) == ($1379 | 0)) {
       $$0 = $first;
       break L1;
      }
     }
    }
    if ((($1314 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 3) {
     $$0 = $first;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op3, $1314 + -24 | 0);
    $1322 = HEAP32[$1313 >> 2] | 0;
    $1323 = $1322 + -24 | 0;
    $1325 = $1322;
    do {
     $1324 = $1325 + -24 | 0;
     HEAP32[$1313 >> 2] = $1324;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1324);
     $1325 = HEAP32[$1313 >> 2] | 0;
    } while (($1325 | 0) != ($1323 | 0));
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op27, $1322 + -48 | 0);
    $1328 = HEAP32[$1313 >> 2] | 0;
    $1329 = $1328 + -24 | 0;
    $1331 = $1328;
    do {
     $1330 = $1331 + -24 | 0;
     HEAP32[$1313 >> 2] = $1330;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1330);
     $1331 = HEAP32[$1313 >> 2] | 0;
    } while (($1331 | 0) != ($1329 | 0));
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op18, $1328 + -48 | 0);
    $1335 = (HEAP32[$1313 >> 2] | 0) + -24 | 0;
    __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($75, 25573, $op18);
    $1336 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($75, 26895) | 0;
    HEAP32[$74 >> 2] = HEAP32[$1336 >> 2];
    HEAP32[$74 + 4 >> 2] = HEAP32[$1336 + 4 >> 2];
    HEAP32[$74 + 8 >> 2] = HEAP32[$1336 + 8 >> 2];
    HEAP32[$1336 >> 2] = 0;
    HEAP32[$1336 + 4 >> 2] = 0;
    HEAP32[$1336 + 8 >> 2] = 0;
    $1339 = HEAP8[$op27 >> 0] | 0;
    $1341 = ($1339 & 1) == 0;
    $1351 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($74, $1341 ? $op27 + 1 | 0 : HEAP32[$op27 + 8 >> 2] | 0, $1341 ? ($1339 & 255) >>> 1 : HEAP32[$op27 + 4 >> 2] | 0) | 0;
    HEAP32[$73 >> 2] = HEAP32[$1351 >> 2];
    HEAP32[$73 + 4 >> 2] = HEAP32[$1351 + 4 >> 2];
    HEAP32[$73 + 8 >> 2] = HEAP32[$1351 + 8 >> 2];
    HEAP32[$1351 >> 2] = 0;
    HEAP32[$1351 + 4 >> 2] = 0;
    HEAP32[$1351 + 8 >> 2] = 0;
    $1354 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($73, 26901) | 0;
    HEAP32[$72 >> 2] = HEAP32[$1354 >> 2];
    HEAP32[$72 + 4 >> 2] = HEAP32[$1354 + 4 >> 2];
    HEAP32[$72 + 8 >> 2] = HEAP32[$1354 + 8 >> 2];
    HEAP32[$1354 >> 2] = 0;
    HEAP32[$1354 + 4 >> 2] = 0;
    HEAP32[$1354 + 8 >> 2] = 0;
    $1357 = HEAP8[$op3 >> 0] | 0;
    $1359 = ($1357 & 1) == 0;
    $1369 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($72, $1359 ? $op3 + 1 | 0 : HEAP32[$op3 + 8 >> 2] | 0, $1359 ? ($1357 & 255) >>> 1 : HEAP32[$op3 + 4 >> 2] | 0) | 0;
    HEAP32[$71 >> 2] = HEAP32[$1369 >> 2];
    HEAP32[$71 + 4 >> 2] = HEAP32[$1369 + 4 >> 2];
    HEAP32[$71 + 8 >> 2] = HEAP32[$1369 + 8 >> 2];
    HEAP32[$1369 >> 2] = 0;
    HEAP32[$1369 + 4 >> 2] = 0;
    HEAP32[$1369 + 8 >> 2] = 0;
    $1372 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($71, 25478) | 0;
    HEAP32[$70 >> 2] = HEAP32[$1372 >> 2];
    HEAP32[$70 + 4 >> 2] = HEAP32[$1372 + 4 >> 2];
    HEAP32[$70 + 8 >> 2] = HEAP32[$1372 + 8 >> 2];
    HEAP32[$1372 >> 2] = 0;
    HEAP32[$1372 + 4 >> 2] = 0;
    HEAP32[$1372 + 8 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($69, $70);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1335, $69);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($69);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($71);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($72);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($73);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($74);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($75);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op18);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op27);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op3);
    $$0 = $1311;
    break L1;
    break;
   }
  case 114:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 99:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 114) if ((HEAP8[$first + 1 >> 0] | 0) == 99) {
       $1398 = $first + 2 | 0;
       $1399 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1398, $last, $db) | 0;
       if (($1399 | 0) == ($1398 | 0)) $$06$i248 = $first; else {
        $1401 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1399, $last, $db) | 0;
        if (($1401 | 0) == ($1399 | 0)) $$06$i248 = $first; else {
         $1403 = $db + 4 | 0;
         $1404 = HEAP32[$1403 >> 2] | 0;
         if ((($1404 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$06$i248 = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $1404 + -24 | 0);
          $1412 = HEAP32[$1403 >> 2] | 0;
          $1413 = $1412 + -24 | 0;
          $1415 = $1412;
          do {
           $1414 = $1415 + -24 | 0;
           HEAP32[$1403 >> 2] = $1414;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1414);
           $1415 = HEAP32[$1403 >> 2] | 0;
          } while (($1415 | 0) != ($1413 | 0));
          $1417 = $1412 + -48 | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $1417);
          $1418 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 26907) | 0;
          HEAP32[$5 >> 2] = HEAP32[$1418 >> 2];
          HEAP32[$5 + 4 >> 2] = HEAP32[$1418 + 4 >> 2];
          HEAP32[$5 + 8 >> 2] = HEAP32[$1418 + 8 >> 2];
          HEAP32[$1418 >> 2] = 0;
          HEAP32[$1418 + 4 >> 2] = 0;
          HEAP32[$1418 + 8 >> 2] = 0;
          $1421 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 26758) | 0;
          HEAP32[$4 >> 2] = HEAP32[$1421 >> 2];
          HEAP32[$4 + 4 >> 2] = HEAP32[$1421 + 4 >> 2];
          HEAP32[$4 + 8 >> 2] = HEAP32[$1421 + 8 >> 2];
          HEAP32[$1421 >> 2] = 0;
          HEAP32[$1421 + 4 >> 2] = 0;
          HEAP32[$1421 + 8 >> 2] = 0;
          $1424 = HEAP8[$0 >> 0] | 0;
          $1426 = ($1424 & 1) == 0;
          $1436 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4, $1426 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $1426 ? ($1424 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
          HEAP32[$3 >> 2] = HEAP32[$1436 >> 2];
          HEAP32[$3 + 4 >> 2] = HEAP32[$1436 + 4 >> 2];
          HEAP32[$3 + 8 >> 2] = HEAP32[$1436 + 8 >> 2];
          HEAP32[$1436 >> 2] = 0;
          HEAP32[$1436 + 4 >> 2] = 0;
          HEAP32[$1436 + 8 >> 2] = 0;
          $1439 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 25478) | 0;
          HEAP32[$2 >> 2] = HEAP32[$1439 >> 2];
          HEAP32[$2 + 4 >> 2] = HEAP32[$1439 + 4 >> 2];
          HEAP32[$2 + 8 >> 2] = HEAP32[$1439 + 8 >> 2];
          HEAP32[$1439 >> 2] = 0;
          HEAP32[$1439 + 4 >> 2] = 0;
          HEAP32[$1439 + 8 >> 2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1417, $1);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $$06$i248 = $1401;
         }
        }
       }
      } else $$06$i248 = $first; else $$06$i248 = $first; else $$06$i248 = $first;
      $$0 = $$06$i248;
      break L1;
      break;
     }
    case 109:
     {
      $1442 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($76, 26925, 1);
      $1443 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1442, $last, $76, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($76);
      $$0 = ($1443 | 0) == ($1442 | 0) ? $first : $1443;
      break L1;
      break;
     }
    case 77:
     {
      $1445 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($77, 26927, 2);
      $1446 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1445, $last, $77, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($77);
      $$0 = ($1446 | 0) == ($1445 | 0) ? $first : $1446;
      break L1;
      break;
     }
    case 115:
     {
      $1448 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($78, 26930, 2);
      $1449 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1448, $last, $78, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($78);
      $$0 = ($1449 | 0) == ($1448 | 0) ? $first : $1449;
      break L1;
      break;
     }
    case 83:
     {
      $1451 = $first + 2 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($79, 26933, 3);
      $1452 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1451, $last, $79, $db) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($79);
      STACKTOP = sp;
      return (($1452 | 0) == ($1451 | 0) ? $first : $1452) | 0;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 115:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 99:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 115) if ((HEAP8[$first + 1 >> 0] | 0) == 99) {
       $1463 = $first + 2 | 0;
       $1464 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1463, $last, $db) | 0;
       if (($1464 | 0) == ($1463 | 0)) $$06$i = $first; else {
        $1466 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1464, $last, $db) | 0;
        if (($1466 | 0) == ($1464 | 0)) $$06$i = $first; else {
         $1468 = $db + 4 | 0;
         $1469 = HEAP32[$1468 >> 2] | 0;
         if ((($1469 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$06$i = $first; else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $1469 + -24 | 0);
          $1477 = HEAP32[$1468 >> 2] | 0;
          $1478 = $1477 + -24 | 0;
          $1480 = $1477;
          do {
           $1479 = $1480 + -24 | 0;
           HEAP32[$1468 >> 2] = $1479;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1479);
           $1480 = HEAP32[$1468 >> 2] | 0;
          } while (($1480 | 0) != ($1478 | 0));
          $1482 = $1477 + -48 | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $1482);
          $1483 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 26937) | 0;
          HEAP32[$5 >> 2] = HEAP32[$1483 >> 2];
          HEAP32[$5 + 4 >> 2] = HEAP32[$1483 + 4 >> 2];
          HEAP32[$5 + 8 >> 2] = HEAP32[$1483 + 8 >> 2];
          HEAP32[$1483 >> 2] = 0;
          HEAP32[$1483 + 4 >> 2] = 0;
          HEAP32[$1483 + 8 >> 2] = 0;
          $1486 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 26758) | 0;
          HEAP32[$4 >> 2] = HEAP32[$1486 >> 2];
          HEAP32[$4 + 4 >> 2] = HEAP32[$1486 + 4 >> 2];
          HEAP32[$4 + 8 >> 2] = HEAP32[$1486 + 8 >> 2];
          HEAP32[$1486 >> 2] = 0;
          HEAP32[$1486 + 4 >> 2] = 0;
          HEAP32[$1486 + 8 >> 2] = 0;
          $1489 = HEAP8[$0 >> 0] | 0;
          $1491 = ($1489 & 1) == 0;
          $1501 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4, $1491 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $1491 ? ($1489 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
          HEAP32[$3 >> 2] = HEAP32[$1501 >> 2];
          HEAP32[$3 + 4 >> 2] = HEAP32[$1501 + 4 >> 2];
          HEAP32[$3 + 8 >> 2] = HEAP32[$1501 + 8 >> 2];
          HEAP32[$1501 >> 2] = 0;
          HEAP32[$1501 + 4 >> 2] = 0;
          HEAP32[$1501 + 8 >> 2] = 0;
          $1504 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 25478) | 0;
          HEAP32[$2 >> 2] = HEAP32[$1504 >> 2];
          HEAP32[$2 + 4 >> 2] = HEAP32[$1504 + 4 >> 2];
          HEAP32[$2 + 8 >> 2] = HEAP32[$1504 + 8 >> 2];
          HEAP32[$1504 >> 2] = 0;
          HEAP32[$1504 + 4 >> 2] = 0;
          HEAP32[$1504 + 8 >> 2] = 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1482, $1);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $$06$i = $1466;
         }
        }
       }
      } else $$06$i = $first; else $$06$i = $first; else $$06$i = $first;
      $$0 = $$06$i;
      break L1;
      break;
     }
    case 112:
     {
      if (($83 | 0) <= 2) {
       $$0 = $first;
       break L1;
      }
      if ((HEAP8[$first >> 0] | 0) != 115) {
       $$0 = $first;
       break L1;
      }
      if ((HEAP8[$first + 1 >> 0] | 0) != 112) {
       $$0 = $first;
       break L1;
      }
      $1513 = $first + 2 | 0;
      $1514 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1513, $last, $db) | 0;
      $$0 = ($1514 | 0) == ($1513 | 0) ? $first : $1514;
      break L1;
      break;
     }
    case 114:
     {
      $$0 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
      break L1;
      break;
     }
    case 116:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 115) if ((HEAP8[$first + 1 >> 0] | 0) == 116) {
       $1523 = $first + 2 | 0;
       $1524 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1523, $last, $db) | 0;
       if (($1524 | 0) == ($1523 | 0)) $$03$i211 = $first; else {
        $1528 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($1528 | 0)) $$03$i211 = $first; else {
         $1530 = $1528 + -24 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $1530);
         $1531 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 26950) | 0;
         HEAP32[$2 >> 2] = HEAP32[$1531 >> 2];
         HEAP32[$2 + 4 >> 2] = HEAP32[$1531 + 4 >> 2];
         HEAP32[$2 + 8 >> 2] = HEAP32[$1531 + 8 >> 2];
         HEAP32[$1531 >> 2] = 0;
         HEAP32[$1531 + 4 >> 2] = 0;
         HEAP32[$1531 + 8 >> 2] = 0;
         $1534 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25478) | 0;
         HEAP32[$1 >> 2] = HEAP32[$1534 >> 2];
         HEAP32[$1 + 4 >> 2] = HEAP32[$1534 + 4 >> 2];
         HEAP32[$1 + 8 >> 2] = HEAP32[$1534 + 8 >> 2];
         HEAP32[$1534 >> 2] = 0;
         HEAP32[$1534 + 4 >> 2] = 0;
         HEAP32[$1534 + 8 >> 2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1530, $0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         $$03$i211 = $1524;
        }
       }
      } else $$03$i211 = $first; else $$03$i211 = $first; else $$03$i211 = $first;
      $$0 = $$03$i211;
      break L1;
      break;
     }
    case 122:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 115) if ((HEAP8[$first + 1 >> 0] | 0) == 122) {
       $1543 = $first + 2 | 0;
       $1544 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1543, $last, $db) | 0;
       if (($1544 | 0) == ($1543 | 0)) $$03$i200 = $first; else {
        $1548 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($1548 | 0)) $$03$i200 = $first; else {
         $1550 = $1548 + -24 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $1550);
         $1551 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 26950) | 0;
         HEAP32[$2 >> 2] = HEAP32[$1551 >> 2];
         HEAP32[$2 + 4 >> 2] = HEAP32[$1551 + 4 >> 2];
         HEAP32[$2 + 8 >> 2] = HEAP32[$1551 + 8 >> 2];
         HEAP32[$1551 >> 2] = 0;
         HEAP32[$1551 + 4 >> 2] = 0;
         HEAP32[$1551 + 8 >> 2] = 0;
         $1554 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25478) | 0;
         HEAP32[$1 >> 2] = HEAP32[$1554 >> 2];
         HEAP32[$1 + 4 >> 2] = HEAP32[$1554 + 4 >> 2];
         HEAP32[$1 + 8 >> 2] = HEAP32[$1554 + 8 >> 2];
         HEAP32[$1554 >> 2] = 0;
         HEAP32[$1554 + 4 >> 2] = 0;
         HEAP32[$1554 + 8 >> 2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1550, $0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         $$03$i200 = $1544;
        }
       }
      } else $$03$i200 = $first; else $$03$i200 = $first; else $$03$i200 = $first;
      $$0 = $$03$i200;
      break L1;
      break;
     }
    case 90:
     {
      if (($81 - $t$0 | 0) <= 2) {
       $$0 = $first;
       break L1;
      }
      switch (HEAP8[$t$0 + 2 >> 0] | 0) {
      case 84:
       break;
      case 102:
       {
        if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 115) if ((HEAP8[$first + 1 >> 0] | 0) == 90) {
         $1662 = $first + 2 | 0;
         if ((HEAP8[$1662 >> 0] | 0) == 102) {
          $1665 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($1662, $last, $db) | 0;
          if (($1665 | 0) == ($1662 | 0)) $$03$i174 = $first; else {
           $1669 = HEAP32[$db + 4 >> 2] | 0;
           if ((HEAP32[$db >> 2] | 0) == ($1669 | 0)) $$03$i174 = $first; else {
            $1671 = $1669 + -24 | 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $1671);
            $1672 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 26959) | 0;
            HEAP32[$2 >> 2] = HEAP32[$1672 >> 2];
            HEAP32[$2 + 4 >> 2] = HEAP32[$1672 + 4 >> 2];
            HEAP32[$2 + 8 >> 2] = HEAP32[$1672 + 8 >> 2];
            HEAP32[$1672 >> 2] = 0;
            HEAP32[$1672 + 4 >> 2] = 0;
            HEAP32[$1672 + 8 >> 2] = 0;
            $1675 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25478) | 0;
            HEAP32[$1 >> 2] = HEAP32[$1675 >> 2];
            HEAP32[$1 + 4 >> 2] = HEAP32[$1675 + 4 >> 2];
            HEAP32[$1 + 8 >> 2] = HEAP32[$1675 + 8 >> 2];
            HEAP32[$1675 >> 2] = 0;
            HEAP32[$1675 + 4 >> 2] = 0;
            HEAP32[$1675 + 8 >> 2] = 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1671, $0);
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
            $$03$i174 = $1665;
           }
          }
         } else $$03$i174 = $first;
        } else $$03$i174 = $first; else $$03$i174 = $first; else $$03$i174 = $first;
        $$0 = $$03$i174;
        break L1;
        break;
       }
      default:
       {
        $$0 = $first;
        break L1;
       }
      }
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 115) if ((HEAP8[$first + 1 >> 0] | 0) == 90) {
       $1569 = $first + 2 | 0;
       if ((HEAP8[$1569 >> 0] | 0) == 84) {
        $1572 = $db + 4 | 0;
        $1578 = ((HEAP32[$1572 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
        $1579 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($1569, $last, $db) | 0;
        $1581 = HEAP32[$db >> 2] | 0;
        $1585 = ((HEAP32[$1572 >> 2] | 0) - $1581 | 0) / 24 | 0;
        if (($1579 | 0) == ($1569 | 0)) $$03$i = $first; else {
         HEAP8[$1 >> 0] = 20;
         dest = $1 + 1 | 0;
         src = 26959;
         stop = dest + 10 | 0;
         do {
          HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
          dest = dest + 1 | 0;
          src = src + 1 | 0;
         } while ((dest | 0) < (stop | 0));
         HEAP8[$1 + 11 >> 0] = 0;
         if (($1578 | 0) != ($1585 | 0)) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2, $1581 + ($1578 * 24 | 0) | 0);
          $1591 = HEAP8[$2 >> 0] | 0;
          $1593 = ($1591 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1, $1593 ? $2 + 1 | 0 : HEAP32[$2 + 8 >> 2] | 0, $1593 ? ($1591 & 255) >>> 1 : HEAP32[$2 + 4 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
          $1603 = $3 + 8 | 0;
          $1604 = $3 + 1 | 0;
          $1605 = $3 + 4 | 0;
          $k$0$i621 = $1578 + 1 | 0;
          if (($k$0$i621 | 0) != ($1585 | 0)) {
           $k$0$i622 = $k$0$i621;
           do {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$db >> 2] | 0) + ($k$0$i622 * 24 | 0) | 0);
            $1609 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($4, 0, 25575) | 0;
            HEAP32[$3 >> 2] = HEAP32[$1609 >> 2];
            HEAP32[$3 + 4 >> 2] = HEAP32[$1609 + 4 >> 2];
            HEAP32[$3 + 8 >> 2] = HEAP32[$1609 + 8 >> 2];
            HEAP32[$1609 >> 2] = 0;
            HEAP32[$1609 + 4 >> 2] = 0;
            HEAP32[$1609 + 8 >> 2] = 0;
            $1612 = HEAP8[$3 >> 0] | 0;
            $1614 = ($1612 & 1) == 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1, $1614 ? $1604 : HEAP32[$1603 >> 2] | 0, $1614 ? ($1612 & 255) >>> 1 : HEAP32[$1605 >> 2] | 0) | 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
            $k$0$i622 = $k$0$i622 + 1 | 0;
           } while (($k$0$i622 | 0) != ($1585 | 0));
          }
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25478) | 0;
         if (($1585 | 0) != ($1578 | 0)) {
          $k1$0$i618 = $1585;
          do {
           $1623 = HEAP32[$1572 >> 2] | 0;
           $1624 = $1623 + -24 | 0;
           $1626 = $1623;
           do {
            $1625 = $1626 + -24 | 0;
            HEAP32[$1572 >> 2] = $1625;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1625);
            $1626 = HEAP32[$1572 >> 2] | 0;
           } while (($1626 | 0) != ($1624 | 0));
           $k1$0$i618 = $k1$0$i618 + -1 | 0;
          } while (($k1$0$i618 | 0) != ($1578 | 0));
         };
         HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
         HEAP32[$6 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
         HEAP32[$6 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
         HEAP32[$1 >> 2] = 0;
         HEAP32[$1 + 4 >> 2] = 0;
         HEAP32[$1 + 8 >> 2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5, $6);
         $1632 = HEAP32[$1572 >> 2] | 0;
         $1634 = HEAP32[$db + 8 >> 2] | 0;
         if ($1632 >>> 0 < $1634 >>> 0) {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1632, $5);
          HEAP32[$1572 >> 2] = (HEAP32[$1572 >> 2] | 0) + 24;
         } else {
          $1641 = HEAP32[$db >> 2] | 0;
          $1642 = $1632 - $1641 | 0;
          $1643 = ($1642 | 0) / 24 | 0;
          $1644 = $1643 + 1 | 0;
          if (($1642 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
          $1648 = ($1634 - $1641 | 0) / 24 | 0;
          if ($1648 >>> 0 < 1073741823) {
           $1650 = $1648 << 1;
           $$0$i$i$i$i = $1650 >>> 0 < $1644 >>> 0 ? $1644 : $1650;
          } else $$0$i$i$i$i = 2147483647;
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($0, $$0$i$i$i$i, $1643, $db + 12 | 0);
          $1653 = $0 + 8 | 0;
          $1654 = HEAP32[$1653 >> 2] | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1654, $5);
          HEAP32[$1653 >> 2] = $1654 + 24;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $0);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($0);
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         $$03$i = $1579;
        }
       } else $$03$i = $first;
      } else $$03$i = $first; else $$03$i = $first; else $$03$i = $first;
      $$0 = $$03$i;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 116:
   {
    switch (HEAP8[$t$0 + 1 >> 0] | 0) {
    case 105:
    case 101:
     {
      L600 : do if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 116) {
       $1685 = HEAP8[$first + 1 >> 0] | 0;
       switch ($1685 << 24 >> 24) {
       case 105:
       case 101:
        break;
       default:
        {
         $$03$i189 = $first;
         break L600;
        }
       }
       $1687 = $first + 2 | 0;
       if ($1685 << 24 >> 24 == 101) $t$0$i = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1687, $last, $db) | 0; else $t$0$i = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1687, $last, $db) | 0;
       if (($t$0$i | 0) == ($1687 | 0)) $$03$i189 = $first; else {
        $1693 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($1693 | 0)) $$03$i189 = $first; else {
         $1695 = $1693 + -24 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $1695);
         $1696 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 26970) | 0;
         HEAP32[$2 >> 2] = HEAP32[$1696 >> 2];
         HEAP32[$2 + 4 >> 2] = HEAP32[$1696 + 4 >> 2];
         HEAP32[$2 + 8 >> 2] = HEAP32[$1696 + 8 >> 2];
         HEAP32[$1696 >> 2] = 0;
         HEAP32[$1696 + 4 >> 2] = 0;
         HEAP32[$1696 + 8 >> 2] = 0;
         $1699 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25478) | 0;
         HEAP32[$1 >> 2] = HEAP32[$1699 >> 2];
         HEAP32[$1 + 4 >> 2] = HEAP32[$1699 + 4 >> 2];
         HEAP32[$1 + 8 >> 2] = HEAP32[$1699 + 8 >> 2];
         HEAP32[$1699 >> 2] = 0;
         HEAP32[$1699 + 4 >> 2] = 0;
         HEAP32[$1699 + 8 >> 2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1695, $0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         $$03$i189 = $t$0$i;
        }
       }
      } else $$03$i189 = $first; else $$03$i189 = $first; while (0);
      $$0 = $$03$i189;
      break L1;
      break;
     }
    case 114:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($80, 26978);
      $1702 = $db + 4 | 0;
      $1703 = HEAP32[$1702 >> 2] | 0;
      $1705 = HEAP32[$db + 8 >> 2] | 0;
      if ($1703 >>> 0 < $1705 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1703, $80);
       HEAP32[$1702 >> 2] = (HEAP32[$1702 >> 2] | 0) + 24;
      } else {
       $1712 = HEAP32[$db >> 2] | 0;
       $1713 = $1703 - $1712 | 0;
       $1714 = ($1713 | 0) / 24 | 0;
       $1715 = $1714 + 1 | 0;
       if (($1713 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $1719 = ($1705 - $1712 | 0) / 24 | 0;
       if ($1719 >>> 0 < 1073741823) {
        $1721 = $1719 << 1;
        $$0$i$i$i = $1721 >>> 0 < $1715 >>> 0 ? $1715 : $1721;
       } else $$0$i$i$i = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($0, $$0$i$i$i, $1714, $db + 12 | 0);
       $1724 = $0 + 8 | 0;
       $1725 = HEAP32[$1724 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1725, $80);
       HEAP32[$1724 >> 2] = $1725 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $0);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($0);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($80);
      $$0 = $first + 2 | 0;
      break L1;
      break;
     }
    case 119:
     {
      if (($83 | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 116) if ((HEAP8[$first + 1 >> 0] | 0) == 119) {
       $1734 = $first + 2 | 0;
       $1735 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1734, $last, $db) | 0;
       if (($1735 | 0) == ($1734 | 0)) $$02$i = $first; else {
        $1739 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($1739 | 0)) $$02$i = $first; else {
         $1741 = $1739 + -24 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2, $1741);
         $1742 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($2, 0, 26984) | 0;
         HEAP32[$1 >> 2] = HEAP32[$1742 >> 2];
         HEAP32[$1 + 4 >> 2] = HEAP32[$1742 + 4 >> 2];
         HEAP32[$1 + 8 >> 2] = HEAP32[$1742 + 8 >> 2];
         HEAP32[$1742 >> 2] = 0;
         HEAP32[$1742 + 4 >> 2] = 0;
         HEAP32[$1742 + 8 >> 2] = 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1741, $0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
         $$02$i = $1735;
        }
       }
      } else $$02$i = $first; else $$02$i = $first; else $$02$i = $first;
      $$0 = $$02$i;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    $$0 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    break L1;
    break;
   }
  default:
   {
    $$0 = $first;
    break L1;
   }
  } while (0);
 } else $$0 = $first; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i10 = 0, $$0$i$i$i100 = 0, $$0$i$i$i105 = 0, $$0$i$i$i110 = 0, $$0$i$i$i115 = 0, $$0$i$i$i120 = 0, $$0$i$i$i125 = 0, $$0$i$i$i130 = 0, $$0$i$i$i135 = 0, $$0$i$i$i140 = 0, $$0$i$i$i145 = 0, $$0$i$i$i15 = 0, $$0$i$i$i150 = 0, $$0$i$i$i155 = 0, $$0$i$i$i160 = 0, $$0$i$i$i165 = 0, $$0$i$i$i170 = 0, $$0$i$i$i175 = 0, $$0$i$i$i180 = 0, $$0$i$i$i185 = 0, $$0$i$i$i190 = 0, $$0$i$i$i195 = 0, $$0$i$i$i20 = 0, $$0$i$i$i200 = 0, $$0$i$i$i205 = 0, $$0$i$i$i210 = 0, $$0$i$i$i215 = 0, $$0$i$i$i220 = 0, $$0$i$i$i225 = 0, $$0$i$i$i25 = 0, $$0$i$i$i30 = 0, $$0$i$i$i35 = 0, $$0$i$i$i40 = 0, $$0$i$i$i45 = 0, $$0$i$i$i5 = 0, $$0$i$i$i50 = 0, $$0$i$i$i55 = 0, $$0$i$i$i60 = 0, $$0$i$i$i65 = 0, $$0$i$i$i70 = 0, $$0$i$i$i75 = 0, $$0$i$i$i80 = 0, $$0$i$i$i85 = 0, $$0$i$i$i90 = 0, $$0$i$i$i95 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1009 = 0, $1011 = 0, $1014 = 0, $1015 = 0, $1021 = 0, $1022 = 0, $1024 = 0, $103 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1038 = 0, $104 = 0, $1040 = 0, $1043 = 0, $1044 = 0, $1047 = 0, $1048 = 0, $1050 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $1060 = 0, $1064 = 0, $1066 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1073 = 0, $1074 = 0, $1076 = 0, $108 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1090 = 0, $1092 = 0, $1095 = 0, $1096 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1102 = 0, $1109 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1116 = 0, $1118 = 0, $1121 = 0, $1122 = 0, $1125 = 0, $1126 = 0, $1128 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1142 = 0, $1144 = 0, $1147 = 0, $1148 = 0, $1151 = 0, $1152 = 0, $1154 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1168 = 0, $117 = 0, $1170 = 0, $1173 = 0, $1174 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1183 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1197 = 0, $1199 = 0, $12 = 0, $120 = 0, $1202 = 0, $1203 = 0, $1209 = 0, $1210 = 0, $1212 = 0, $1219 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1226 = 0, $1228 = 0, $1231 = 0, $1232 = 0, $1235 = 0, $1236 = 0, $1238 = 0, $124 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1252 = 0, $1254 = 0, $1257 = 0, $1258 = 0, $126 = 0, $1261 = 0, $1262 = 0, $1264 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1278 = 0, $1280 = 0, $1283 = 0, $1284 = 0, $1287 = 0, $1288 = 0, $129 = 0, $1290 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1304 = 0, $1306 = 0, $1309 = 0, $1310 = 0, $1316 = 0, $1317 = 0, $1321 = 0, $133 = 0, $134 = 0, $136 = 0, $14 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $150 = 0, $152 = 0, $155 = 0, $156 = 0, $16 = 0, $162 = 0, $163 = 0, $165 = 0, $17 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $179 = 0, $18 = 0, $181 = 0, $184 = 0, $185 = 0, $188 = 0, $189 = 0, $19 = 0, $191 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $205 = 0, $207 = 0, $21 = 0, $210 = 0, $211 = 0, $214 = 0, $215 = 0, $217 = 0, $22 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $23 = 0, $231 = 0, $233 = 0, $236 = 0, $237 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $247 = 0, $25 = 0, $254 = 0, $255 = 0, $257 = 0, $26 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $27 = 0, $271 = 0, $273 = 0, $276 = 0, $277 = 0, $28 = 0, $280 = 0, $281 = 0, $283 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $297 = 0, $299 = 0, $3 = 0, $30 = 0, $302 = 0, $303 = 0, $306 = 0, $31 = 0, $310 = 0, $313 = 0, $314 = 0, $316 = 0, $32 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $33 = 0, $330 = 0, $332 = 0, $335 = 0, $336 = 0, $339 = 0, $34 = 0, $340 = 0, $342 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $356 = 0, $358 = 0, $36 = 0, $361 = 0, $362 = 0, $365 = 0, $366 = 0, $368 = 0, $37 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $38 = 0, $382 = 0, $384 = 0, $387 = 0, $388 = 0, $39 = 0, $394 = 0, $395 = 0, $397 = 0, $4 = 0, $40 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $41 = 0, $411 = 0, $413 = 0, $416 = 0, $417 = 0, $42 = 0, $420 = 0, $421 = 0, $423 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $437 = 0, $439 = 0, $44 = 0, $442 = 0, $443 = 0, $446 = 0, $447 = 0, $449 = 0, $45 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $463 = 0, $465 = 0, $468 = 0, $469 = 0, $475 = 0, $476 = 0, $478 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $492 = 0, $494 = 0, $497 = 0, $498 = 0, $5 = 0, $501 = 0, $502 = 0, $504 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $518 = 0, $520 = 0, $523 = 0, $524 = 0, $530 = 0, $531 = 0, $533 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $547 = 0, $549 = 0, $55 = 0, $552 = 0, $553 = 0, $559 = 0, $56 = 0, $560 = 0, $562 = 0, $569 = 0, $570 = 0, $571 = 0, $572 = 0, $576 = 0, $578 = 0, $58 = 0, $581 = 0, $582 = 0, $585 = 0, $586 = 0, $590 = 0, $593 = 0, $594 = 0, $596 = 0, $6 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $610 = 0, $612 = 0, $615 = 0, $616 = 0, $619 = 0, $620 = 0, $622 = 0, $629 = 0, $630 = 0, $631 = 0, $632 = 0, $636 = 0, $638 = 0, $641 = 0, $642 = 0, $645 = 0, $646 = 0, $648 = 0, $65 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $66 = 0, $662 = 0, $664 = 0, $667 = 0, $668 = 0, $67 = 0, $674 = 0, $675 = 0, $677 = 0, $68 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $691 = 0, $693 = 0, $696 = 0, $697 = 0, $7 = 0, $700 = 0, $701 = 0, $703 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $717 = 0, $719 = 0, $72 = 0, $722 = 0, $723 = 0, $726 = 0, $727 = 0, $729 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $743 = 0, $745 = 0, $748 = 0, $749 = 0, $752 = 0, $753 = 0, $755 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $769 = 0, $77 = 0, $771 = 0, $774 = 0, $775 = 0, $778 = 0, $779 = 0, $78 = 0, $781 = 0, $788 = 0, $789 = 0, $790 = 0, $791 = 0, $795 = 0, $797 = 0, $8 = 0, $800 = 0, $801 = 0, $807 = 0, $808 = 0, $81 = 0, $810 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $824 = 0, $826 = 0, $829 = 0, $830 = 0, $833 = 0, $834 = 0, $836 = 0, $84 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $850 = 0, $852 = 0, $855 = 0, $856 = 0, $859 = 0, $860 = 0, $862 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $876 = 0, $878 = 0, $881 = 0, $882 = 0, $885 = 0, $886 = 0, $888 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $9 = 0, $902 = 0, $904 = 0, $907 = 0, $908 = 0, $91 = 0, $911 = 0, $912 = 0, $914 = 0, $92 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $928 = 0, $93 = 0, $930 = 0, $933 = 0, $934 = 0, $94 = 0, $940 = 0, $941 = 0, $943 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $957 = 0, $959 = 0, $962 = 0, $963 = 0, $966 = 0, $967 = 0, $969 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $983 = 0, $985 = 0, $988 = 0, $989 = 0, $992 = 0, $993 = 0, $995 = 0, $__v$i$i224 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1136 | 0;
 $__v$i$i224 = sp + 1104 | 0;
 $0 = sp + 1080 | 0;
 $1 = sp + 1056 | 0;
 $2 = sp + 1032 | 0;
 $3 = sp + 1008 | 0;
 $4 = sp + 984 | 0;
 $5 = sp + 960 | 0;
 $6 = sp + 936 | 0;
 $7 = sp + 912 | 0;
 $8 = sp + 888 | 0;
 $9 = sp + 864 | 0;
 $10 = sp + 840 | 0;
 $11 = sp + 816 | 0;
 $12 = sp + 792 | 0;
 $13 = sp + 768 | 0;
 $14 = sp + 744 | 0;
 $15 = sp + 720 | 0;
 $16 = sp + 696 | 0;
 $17 = sp + 672 | 0;
 $18 = sp + 648 | 0;
 $19 = sp + 624 | 0;
 $20 = sp + 600 | 0;
 $21 = sp + 576 | 0;
 $22 = sp + 552 | 0;
 $23 = sp + 528 | 0;
 $24 = sp + 504 | 0;
 $25 = sp + 480 | 0;
 $26 = sp + 456 | 0;
 $27 = sp + 432 | 0;
 $28 = sp + 408 | 0;
 $29 = sp + 384 | 0;
 $30 = sp + 360 | 0;
 $31 = sp + 336 | 0;
 $32 = sp + 312 | 0;
 $33 = sp + 288 | 0;
 $34 = sp + 264 | 0;
 $35 = sp + 240 | 0;
 $36 = sp + 216 | 0;
 $37 = sp + 192 | 0;
 $38 = sp + 168 | 0;
 $39 = sp + 144 | 0;
 $40 = sp + 120 | 0;
 $41 = sp + 96 | 0;
 $42 = sp + 72 | 0;
 $43 = sp + 48 | 0;
 $44 = sp + 24 | 0;
 $45 = sp;
 L1 : do if (($last - $first | 0) > 1) do switch (HEAP8[$first >> 0] | 0) {
 case 97:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($0, 25808);
     $55 = $db + 4 | 0;
     $56 = HEAP32[$55 >> 2] | 0;
     $58 = HEAP32[$db + 8 >> 2] | 0;
     if ($56 >>> 0 < $58 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($56, $0);
      HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 24;
     } else {
      $65 = HEAP32[$db >> 2] | 0;
      $66 = $56 - $65 | 0;
      $67 = ($66 | 0) / 24 | 0;
      $68 = $67 + 1 | 0;
      if (($66 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $72 = ($58 - $65 | 0) / 24 | 0;
      if ($72 >>> 0 < 1073741823) {
       $74 = $72 << 1;
       $$0$i$i$i = $74 >>> 0 < $68 >>> 0 ? $68 : $74;
      } else $$0$i$i$i = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i, $67, $db + 12 | 0);
      $77 = $__v$i$i224 + 8 | 0;
      $78 = HEAP32[$77 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($78, $0);
      HEAP32[$77 >> 2] = $78 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 110:
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($1, 25819);
     $81 = $db + 4 | 0;
     $82 = HEAP32[$81 >> 2] | 0;
     $84 = HEAP32[$db + 8 >> 2] | 0;
     if ($82 >>> 0 < $84 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($82, $1);
      HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 24;
     } else {
      $91 = HEAP32[$db >> 2] | 0;
      $92 = $82 - $91 | 0;
      $93 = ($92 | 0) / 24 | 0;
      $94 = $93 + 1 | 0;
      if (($92 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $98 = ($84 - $91 | 0) / 24 | 0;
      if ($98 >>> 0 < 1073741823) {
       $100 = $98 << 1;
       $$0$i$i$i5 = $100 >>> 0 < $94 >>> 0 ? $94 : $100;
      } else $$0$i$i$i5 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i5, $93, $db + 12 | 0);
      $103 = $__v$i$i224 + 8 | 0;
      $104 = HEAP32[$103 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($104, $1);
      HEAP32[$103 >> 2] = $104 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 78:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($2, 25829);
     $107 = $db + 4 | 0;
     $108 = HEAP32[$107 >> 2] | 0;
     $110 = HEAP32[$db + 8 >> 2] | 0;
     if ($108 >>> 0 < $110 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($108, $2);
      HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + 24;
     } else {
      $117 = HEAP32[$db >> 2] | 0;
      $118 = $108 - $117 | 0;
      $119 = ($118 | 0) / 24 | 0;
      $120 = $119 + 1 | 0;
      if (($118 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $124 = ($110 - $117 | 0) / 24 | 0;
      if ($124 >>> 0 < 1073741823) {
       $126 = $124 << 1;
       $$0$i$i$i10 = $126 >>> 0 < $120 >>> 0 ? $120 : $126;
      } else $$0$i$i$i10 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i10, $119, $db + 12 | 0);
      $129 = $__v$i$i224 + 8 | 0;
      $130 = HEAP32[$129 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($130, $2);
      HEAP32[$129 >> 2] = $130 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 25840);
     $133 = $db + 4 | 0;
     $134 = HEAP32[$133 >> 2] | 0;
     $136 = HEAP32[$db + 8 >> 2] | 0;
     if ($134 >>> 0 < $136 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($134, $3);
      HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + 24;
     } else {
      $143 = HEAP32[$db >> 2] | 0;
      $144 = $134 - $143 | 0;
      $145 = ($144 | 0) / 24 | 0;
      $146 = $145 + 1 | 0;
      if (($144 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $150 = ($136 - $143 | 0) / 24 | 0;
      if ($150 >>> 0 < 1073741823) {
       $152 = $150 << 1;
       $$0$i$i$i15 = $152 >>> 0 < $146 >>> 0 ? $146 : $152;
      } else $$0$i$i$i15 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i15, $145, $db + 12 | 0);
      $155 = $__v$i$i224 + 8 | 0;
      $156 = HEAP32[$155 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($156, $3);
      HEAP32[$155 >> 2] = $156 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 99:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($4, 25850);
     $162 = $db + 4 | 0;
     $163 = HEAP32[$162 >> 2] | 0;
     $165 = HEAP32[$db + 8 >> 2] | 0;
     if ($163 >>> 0 < $165 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($163, $4);
      HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + 24;
     } else {
      $172 = HEAP32[$db >> 2] | 0;
      $173 = $163 - $172 | 0;
      $174 = ($173 | 0) / 24 | 0;
      $175 = $174 + 1 | 0;
      if (($173 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $179 = ($165 - $172 | 0) / 24 | 0;
      if ($179 >>> 0 < 1073741823) {
       $181 = $179 << 1;
       $$0$i$i$i20 = $181 >>> 0 < $175 >>> 0 ? $175 : $181;
      } else $$0$i$i$i20 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i20, $174, $db + 12 | 0);
      $184 = $__v$i$i224 + 8 | 0;
      $185 = HEAP32[$184 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($185, $4);
      HEAP32[$184 >> 2] = $185 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($5, 25861);
     $188 = $db + 4 | 0;
     $189 = HEAP32[$188 >> 2] | 0;
     $191 = HEAP32[$db + 8 >> 2] | 0;
     if ($189 >>> 0 < $191 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($189, $5);
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + 24;
     } else {
      $198 = HEAP32[$db >> 2] | 0;
      $199 = $189 - $198 | 0;
      $200 = ($199 | 0) / 24 | 0;
      $201 = $200 + 1 | 0;
      if (($199 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $205 = ($191 - $198 | 0) / 24 | 0;
      if ($205 >>> 0 < 1073741823) {
       $207 = $205 << 1;
       $$0$i$i$i25 = $207 >>> 0 < $201 >>> 0 ? $201 : $207;
      } else $$0$i$i$i25 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i25, $200, $db + 12 | 0);
      $210 = $__v$i$i224 + 8 | 0;
      $211 = HEAP32[$210 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($211, $5);
      HEAP32[$210 >> 2] = $211 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($6, 25871);
     $214 = $db + 4 | 0;
     $215 = HEAP32[$214 >> 2] | 0;
     $217 = HEAP32[$db + 8 >> 2] | 0;
     if ($215 >>> 0 < $217 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($215, $6);
      HEAP32[$214 >> 2] = (HEAP32[$214 >> 2] | 0) + 24;
     } else {
      $224 = HEAP32[$db >> 2] | 0;
      $225 = $215 - $224 | 0;
      $226 = ($225 | 0) / 24 | 0;
      $227 = $226 + 1 | 0;
      if (($225 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $231 = ($217 - $224 | 0) / 24 | 0;
      if ($231 >>> 0 < 1073741823) {
       $233 = $231 << 1;
       $$0$i$i$i30 = $233 >>> 0 < $227 >>> 0 ? $227 : $233;
      } else $$0$i$i$i30 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i30, $226, $db + 12 | 0);
      $236 = $__v$i$i224 + 8 | 0;
      $237 = HEAP32[$236 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($237, $6);
      HEAP32[$236 >> 2] = $237 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     $240 = $db + 63 | 0;
     $241 = HEAP8[$240 >> 0] | 0;
     HEAP8[$240 >> 0] = 0;
     $242 = $first + 2 | 0;
     $243 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($242, $last, $db) | 0;
     HEAP8[$240 >> 0] = $241;
     if (($243 | 0) == ($242 | 0)) {
      $$0 = $first;
      break L1;
     }
     $247 = HEAP32[$db + 4 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($247 | 0)) {
      $$0 = $first;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($247 + -24 | 0, 0, 25881) | 0;
     HEAP8[$db + 60 >> 0] = 1;
     $$0 = $243;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 100:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($7, 25891);
     $254 = $db + 4 | 0;
     $255 = HEAP32[$254 >> 2] | 0;
     $257 = HEAP32[$db + 8 >> 2] | 0;
     if ($255 >>> 0 < $257 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($255, $7);
      HEAP32[$254 >> 2] = (HEAP32[$254 >> 2] | 0) + 24;
     } else {
      $264 = HEAP32[$db >> 2] | 0;
      $265 = $255 - $264 | 0;
      $266 = ($265 | 0) / 24 | 0;
      $267 = $266 + 1 | 0;
      if (($265 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $271 = ($257 - $264 | 0) / 24 | 0;
      if ($271 >>> 0 < 1073741823) {
       $273 = $271 << 1;
       $$0$i$i$i35 = $273 >>> 0 < $267 >>> 0 ? $267 : $273;
      } else $$0$i$i$i35 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i35, $266, $db + 12 | 0);
      $276 = $__v$i$i224 + 8 | 0;
      $277 = HEAP32[$276 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($277, $7);
      HEAP32[$276 >> 2] = $277 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($8, 25909);
     $280 = $db + 4 | 0;
     $281 = HEAP32[$280 >> 2] | 0;
     $283 = HEAP32[$db + 8 >> 2] | 0;
     if ($281 >>> 0 < $283 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($281, $8);
      HEAP32[$280 >> 2] = (HEAP32[$280 >> 2] | 0) + 24;
     } else {
      $290 = HEAP32[$db >> 2] | 0;
      $291 = $281 - $290 | 0;
      $292 = ($291 | 0) / 24 | 0;
      $293 = $292 + 1 | 0;
      if (($291 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $297 = ($283 - $290 | 0) / 24 | 0;
      if ($297 >>> 0 < 1073741823) {
       $299 = $297 << 1;
       $$0$i$i$i40 = $299 >>> 0 < $293 >>> 0 ? $293 : $299;
      } else $$0$i$i$i40 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i40, $292, $db + 12 | 0);
      $302 = $__v$i$i224 + 8 | 0;
      $303 = HEAP32[$302 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($303, $8);
      HEAP32[$302 >> 2] = $303 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     $306 = _malloc(16) | 0;
     HEAP32[$9 + 8 >> 2] = $306;
     HEAP32[$9 >> 2] = 17;
     HEAP32[$9 + 4 >> 2] = 15;
     dest = $306;
     src = 25919;
     stop = dest + 15 | 0;
     do {
      HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
      dest = dest + 1 | 0;
      src = src + 1 | 0;
     } while ((dest | 0) < (stop | 0));
     HEAP8[$306 + 15 >> 0] = 0;
     $310 = $9 + 12 | 0;
     HEAP32[$310 >> 2] = 0;
     HEAP32[$310 + 4 >> 2] = 0;
     HEAP32[$310 + 8 >> 2] = 0;
     $313 = $db + 4 | 0;
     $314 = HEAP32[$313 >> 2] | 0;
     $316 = HEAP32[$db + 8 >> 2] | 0;
     if ($314 >>> 0 < $316 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($314, $9);
      HEAP32[$313 >> 2] = (HEAP32[$313 >> 2] | 0) + 24;
     } else {
      $323 = HEAP32[$db >> 2] | 0;
      $324 = $314 - $323 | 0;
      $325 = ($324 | 0) / 24 | 0;
      $326 = $325 + 1 | 0;
      if (($324 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $330 = ($316 - $323 | 0) / 24 | 0;
      if ($330 >>> 0 < 1073741823) {
       $332 = $330 << 1;
       $$0$i$i$i45 = $332 >>> 0 < $326 >>> 0 ? $326 : $332;
      } else $$0$i$i$i45 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i45, $325, $db + 12 | 0);
      $335 = $__v$i$i224 + 8 | 0;
      $336 = HEAP32[$335 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($336, $9);
      HEAP32[$335 >> 2] = $336 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($10, 25935);
     $339 = $db + 4 | 0;
     $340 = HEAP32[$339 >> 2] | 0;
     $342 = HEAP32[$db + 8 >> 2] | 0;
     if ($340 >>> 0 < $342 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($340, $10);
      HEAP32[$339 >> 2] = (HEAP32[$339 >> 2] | 0) + 24;
     } else {
      $349 = HEAP32[$db >> 2] | 0;
      $350 = $340 - $349 | 0;
      $351 = ($350 | 0) / 24 | 0;
      $352 = $351 + 1 | 0;
      if (($350 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $356 = ($342 - $349 | 0) / 24 | 0;
      if ($356 >>> 0 < 1073741823) {
       $358 = $356 << 1;
       $$0$i$i$i50 = $358 >>> 0 < $352 >>> 0 ? $352 : $358;
      } else $$0$i$i$i50 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i50, $351, $db + 12 | 0);
      $361 = $__v$i$i224 + 8 | 0;
      $362 = HEAP32[$361 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($362, $10);
      HEAP32[$361 >> 2] = $362 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 86:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($11, 25945);
     $365 = $db + 4 | 0;
     $366 = HEAP32[$365 >> 2] | 0;
     $368 = HEAP32[$db + 8 >> 2] | 0;
     if ($366 >>> 0 < $368 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($366, $11);
      HEAP32[$365 >> 2] = (HEAP32[$365 >> 2] | 0) + 24;
     } else {
      $375 = HEAP32[$db >> 2] | 0;
      $376 = $366 - $375 | 0;
      $377 = ($376 | 0) / 24 | 0;
      $378 = $377 + 1 | 0;
      if (($376 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $382 = ($368 - $375 | 0) / 24 | 0;
      if ($382 >>> 0 < 1073741823) {
       $384 = $382 << 1;
       $$0$i$i$i55 = $384 >>> 0 < $378 >>> 0 ? $378 : $384;
      } else $$0$i$i$i55 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i55, $377, $db + 12 | 0);
      $387 = $__v$i$i224 + 8 | 0;
      $388 = HEAP32[$387 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($388, $11);
      HEAP32[$387 >> 2] = $388 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 101:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($12, 25956);
     $394 = $db + 4 | 0;
     $395 = HEAP32[$394 >> 2] | 0;
     $397 = HEAP32[$db + 8 >> 2] | 0;
     if ($395 >>> 0 < $397 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($395, $12);
      HEAP32[$394 >> 2] = (HEAP32[$394 >> 2] | 0) + 24;
     } else {
      $404 = HEAP32[$db >> 2] | 0;
      $405 = $395 - $404 | 0;
      $406 = ($405 | 0) / 24 | 0;
      $407 = $406 + 1 | 0;
      if (($405 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $411 = ($397 - $404 | 0) / 24 | 0;
      if ($411 >>> 0 < 1073741823) {
       $413 = $411 << 1;
       $$0$i$i$i60 = $413 >>> 0 < $407 >>> 0 ? $407 : $413;
      } else $$0$i$i$i60 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i60, $406, $db + 12 | 0);
      $416 = $__v$i$i224 + 8 | 0;
      $417 = HEAP32[$416 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($417, $12);
      HEAP32[$416 >> 2] = $417 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 79:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($13, 25966);
     $420 = $db + 4 | 0;
     $421 = HEAP32[$420 >> 2] | 0;
     $423 = HEAP32[$db + 8 >> 2] | 0;
     if ($421 >>> 0 < $423 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($421, $13);
      HEAP32[$420 >> 2] = (HEAP32[$420 >> 2] | 0) + 24;
     } else {
      $430 = HEAP32[$db >> 2] | 0;
      $431 = $421 - $430 | 0;
      $432 = ($431 | 0) / 24 | 0;
      $433 = $432 + 1 | 0;
      if (($431 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $437 = ($423 - $430 | 0) / 24 | 0;
      if ($437 >>> 0 < 1073741823) {
       $439 = $437 << 1;
       $$0$i$i$i65 = $439 >>> 0 < $433 >>> 0 ? $433 : $439;
      } else $$0$i$i$i65 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i65, $432, $db + 12 | 0);
      $442 = $__v$i$i224 + 8 | 0;
      $443 = HEAP32[$442 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($443, $13);
      HEAP32[$442 >> 2] = $443 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 113:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($14, 25977);
     $446 = $db + 4 | 0;
     $447 = HEAP32[$446 >> 2] | 0;
     $449 = HEAP32[$db + 8 >> 2] | 0;
     if ($447 >>> 0 < $449 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($447, $14);
      HEAP32[$446 >> 2] = (HEAP32[$446 >> 2] | 0) + 24;
     } else {
      $456 = HEAP32[$db >> 2] | 0;
      $457 = $447 - $456 | 0;
      $458 = ($457 | 0) / 24 | 0;
      $459 = $458 + 1 | 0;
      if (($457 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $463 = ($449 - $456 | 0) / 24 | 0;
      if ($463 >>> 0 < 1073741823) {
       $465 = $463 << 1;
       $$0$i$i$i70 = $465 >>> 0 < $459 >>> 0 ? $459 : $465;
      } else $$0$i$i$i70 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i70, $458, $db + 12 | 0);
      $468 = $__v$i$i224 + 8 | 0;
      $469 = HEAP32[$468 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($469, $14);
      HEAP32[$468 >> 2] = $469 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 103:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($15, 25988);
     $475 = $db + 4 | 0;
     $476 = HEAP32[$475 >> 2] | 0;
     $478 = HEAP32[$db + 8 >> 2] | 0;
     if ($476 >>> 0 < $478 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($476, $15);
      HEAP32[$475 >> 2] = (HEAP32[$475 >> 2] | 0) + 24;
     } else {
      $485 = HEAP32[$db >> 2] | 0;
      $486 = $476 - $485 | 0;
      $487 = ($486 | 0) / 24 | 0;
      $488 = $487 + 1 | 0;
      if (($486 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $492 = ($478 - $485 | 0) / 24 | 0;
      if ($492 >>> 0 < 1073741823) {
       $494 = $492 << 1;
       $$0$i$i$i75 = $494 >>> 0 < $488 >>> 0 ? $488 : $494;
      } else $$0$i$i$i75 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i75, $487, $db + 12 | 0);
      $497 = $__v$i$i224 + 8 | 0;
      $498 = HEAP32[$497 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($498, $15);
      HEAP32[$497 >> 2] = $498 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($16, 25999);
     $501 = $db + 4 | 0;
     $502 = HEAP32[$501 >> 2] | 0;
     $504 = HEAP32[$db + 8 >> 2] | 0;
     if ($502 >>> 0 < $504 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($502, $16);
      HEAP32[$501 >> 2] = (HEAP32[$501 >> 2] | 0) + 24;
     } else {
      $511 = HEAP32[$db >> 2] | 0;
      $512 = $502 - $511 | 0;
      $513 = ($512 | 0) / 24 | 0;
      $514 = $513 + 1 | 0;
      if (($512 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $518 = ($504 - $511 | 0) / 24 | 0;
      if ($518 >>> 0 < 1073741823) {
       $520 = $518 << 1;
       $$0$i$i$i80 = $520 >>> 0 < $514 >>> 0 ? $514 : $520;
      } else $$0$i$i$i80 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i80, $513, $db + 12 | 0);
      $523 = $__v$i$i224 + 8 | 0;
      $524 = HEAP32[$523 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($524, $16);
      HEAP32[$523 >> 2] = $524 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 105:
  {
   if ((HEAP8[$first + 1 >> 0] | 0) != 120) {
    $$0 = $first;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($17, 26009);
   $530 = $db + 4 | 0;
   $531 = HEAP32[$530 >> 2] | 0;
   $533 = HEAP32[$db + 8 >> 2] | 0;
   if ($531 >>> 0 < $533 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($531, $17);
    HEAP32[$530 >> 2] = (HEAP32[$530 >> 2] | 0) + 24;
   } else {
    $540 = HEAP32[$db >> 2] | 0;
    $541 = $531 - $540 | 0;
    $542 = ($541 | 0) / 24 | 0;
    $543 = $542 + 1 | 0;
    if (($541 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $547 = ($533 - $540 | 0) / 24 | 0;
    if ($547 >>> 0 < 1073741823) {
     $549 = $547 << 1;
     $$0$i$i$i85 = $549 >>> 0 < $543 >>> 0 ? $543 : $549;
    } else $$0$i$i$i85 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i85, $542, $db + 12 | 0);
    $552 = $__v$i$i224 + 8 | 0;
    $553 = HEAP32[$552 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($553, $17);
    HEAP32[$552 >> 2] = $553 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
   $$0 = $first + 2 | 0;
   break L1;
   break;
  }
 case 108:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($18, 26020);
     $559 = $db + 4 | 0;
     $560 = HEAP32[$559 >> 2] | 0;
     $562 = HEAP32[$db + 8 >> 2] | 0;
     if ($560 >>> 0 < $562 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($560, $18);
      HEAP32[$559 >> 2] = (HEAP32[$559 >> 2] | 0) + 24;
     } else {
      $569 = HEAP32[$db >> 2] | 0;
      $570 = $560 - $569 | 0;
      $571 = ($570 | 0) / 24 | 0;
      $572 = $571 + 1 | 0;
      if (($570 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $576 = ($562 - $569 | 0) / 24 | 0;
      if ($576 >>> 0 < 1073741823) {
       $578 = $576 << 1;
       $$0$i$i$i90 = $578 >>> 0 < $572 >>> 0 ? $572 : $578;
      } else $$0$i$i$i90 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i90, $571, $db + 12 | 0);
      $581 = $__v$i$i224 + 8 | 0;
      $582 = HEAP32[$581 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($582, $18);
      HEAP32[$581 >> 2] = $582 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     $585 = $first + 2 | 0;
     $586 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($585, $last, $db) | 0;
     if (($586 | 0) == ($585 | 0)) {
      $$0 = $first;
      break L1;
     }
     $590 = HEAP32[$db + 4 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($590 | 0)) {
      $$0 = $first;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($590 + -24 | 0, 0, 26031) | 0;
     $$0 = $586;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($19, 26043);
     $593 = $db + 4 | 0;
     $594 = HEAP32[$593 >> 2] | 0;
     $596 = HEAP32[$db + 8 >> 2] | 0;
     if ($594 >>> 0 < $596 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($594, $19);
      HEAP32[$593 >> 2] = (HEAP32[$593 >> 2] | 0) + 24;
     } else {
      $603 = HEAP32[$db >> 2] | 0;
      $604 = $594 - $603 | 0;
      $605 = ($604 | 0) / 24 | 0;
      $606 = $605 + 1 | 0;
      if (($604 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $610 = ($596 - $603 | 0) / 24 | 0;
      if ($610 >>> 0 < 1073741823) {
       $612 = $610 << 1;
       $$0$i$i$i95 = $612 >>> 0 < $606 >>> 0 ? $606 : $612;
      } else $$0$i$i$i95 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i95, $605, $db + 12 | 0);
      $615 = $__v$i$i224 + 8 | 0;
      $616 = HEAP32[$615 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($616, $19);
      HEAP32[$615 >> 2] = $616 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($20, 26054);
     $619 = $db + 4 | 0;
     $620 = HEAP32[$619 >> 2] | 0;
     $622 = HEAP32[$db + 8 >> 2] | 0;
     if ($620 >>> 0 < $622 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($620, $20);
      HEAP32[$619 >> 2] = (HEAP32[$619 >> 2] | 0) + 24;
     } else {
      $629 = HEAP32[$db >> 2] | 0;
      $630 = $620 - $629 | 0;
      $631 = ($630 | 0) / 24 | 0;
      $632 = $631 + 1 | 0;
      if (($630 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $636 = ($622 - $629 | 0) / 24 | 0;
      if ($636 >>> 0 < 1073741823) {
       $638 = $636 << 1;
       $$0$i$i$i100 = $638 >>> 0 < $632 >>> 0 ? $632 : $638;
      } else $$0$i$i$i100 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i100, $631, $db + 12 | 0);
      $641 = $__v$i$i224 + 8 | 0;
      $642 = HEAP32[$641 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($642, $20);
      HEAP32[$641 >> 2] = $642 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($21, 26066);
     $645 = $db + 4 | 0;
     $646 = HEAP32[$645 >> 2] | 0;
     $648 = HEAP32[$db + 8 >> 2] | 0;
     if ($646 >>> 0 < $648 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($646, $21);
      HEAP32[$645 >> 2] = (HEAP32[$645 >> 2] | 0) + 24;
     } else {
      $655 = HEAP32[$db >> 2] | 0;
      $656 = $646 - $655 | 0;
      $657 = ($656 | 0) / 24 | 0;
      $658 = $657 + 1 | 0;
      if (($656 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $662 = ($648 - $655 | 0) / 24 | 0;
      if ($662 >>> 0 < 1073741823) {
       $664 = $662 << 1;
       $$0$i$i$i105 = $664 >>> 0 < $658 >>> 0 ? $658 : $664;
      } else $$0$i$i$i105 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i105, $657, $db + 12 | 0);
      $667 = $__v$i$i224 + 8 | 0;
      $668 = HEAP32[$667 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($668, $21);
      HEAP32[$667 >> 2] = $668 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 109:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($22, 26076);
     $674 = $db + 4 | 0;
     $675 = HEAP32[$674 >> 2] | 0;
     $677 = HEAP32[$db + 8 >> 2] | 0;
     if ($675 >>> 0 < $677 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($675, $22);
      HEAP32[$674 >> 2] = (HEAP32[$674 >> 2] | 0) + 24;
     } else {
      $684 = HEAP32[$db >> 2] | 0;
      $685 = $675 - $684 | 0;
      $686 = ($685 | 0) / 24 | 0;
      $687 = $686 + 1 | 0;
      if (($685 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $691 = ($677 - $684 | 0) / 24 | 0;
      if ($691 >>> 0 < 1073741823) {
       $693 = $691 << 1;
       $$0$i$i$i110 = $693 >>> 0 < $687 >>> 0 ? $687 : $693;
      } else $$0$i$i$i110 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i110, $686, $db + 12 | 0);
      $696 = $__v$i$i224 + 8 | 0;
      $697 = HEAP32[$696 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($697, $22);
      HEAP32[$696 >> 2] = $697 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 73:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($23, 26086);
     $700 = $db + 4 | 0;
     $701 = HEAP32[$700 >> 2] | 0;
     $703 = HEAP32[$db + 8 >> 2] | 0;
     if ($701 >>> 0 < $703 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($701, $23);
      HEAP32[$700 >> 2] = (HEAP32[$700 >> 2] | 0) + 24;
     } else {
      $710 = HEAP32[$db >> 2] | 0;
      $711 = $701 - $710 | 0;
      $712 = ($711 | 0) / 24 | 0;
      $713 = $712 + 1 | 0;
      if (($711 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $717 = ($703 - $710 | 0) / 24 | 0;
      if ($717 >>> 0 < 1073741823) {
       $719 = $717 << 1;
       $$0$i$i$i115 = $719 >>> 0 < $713 >>> 0 ? $713 : $719;
      } else $$0$i$i$i115 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i115, $712, $db + 12 | 0);
      $722 = $__v$i$i224 + 8 | 0;
      $723 = HEAP32[$722 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($723, $23);
      HEAP32[$722 >> 2] = $723 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($24, 25909);
     $726 = $db + 4 | 0;
     $727 = HEAP32[$726 >> 2] | 0;
     $729 = HEAP32[$db + 8 >> 2] | 0;
     if ($727 >>> 0 < $729 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($727, $24);
      HEAP32[$726 >> 2] = (HEAP32[$726 >> 2] | 0) + 24;
     } else {
      $736 = HEAP32[$db >> 2] | 0;
      $737 = $727 - $736 | 0;
      $738 = ($737 | 0) / 24 | 0;
      $739 = $738 + 1 | 0;
      if (($737 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $743 = ($729 - $736 | 0) / 24 | 0;
      if ($743 >>> 0 < 1073741823) {
       $745 = $743 << 1;
       $$0$i$i$i120 = $745 >>> 0 < $739 >>> 0 ? $739 : $745;
      } else $$0$i$i$i120 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i120, $738, $db + 12 | 0);
      $748 = $__v$i$i224 + 8 | 0;
      $749 = HEAP32[$748 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($749, $24);
      HEAP32[$748 >> 2] = $749 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($25, 26097);
     $752 = $db + 4 | 0;
     $753 = HEAP32[$752 >> 2] | 0;
     $755 = HEAP32[$db + 8 >> 2] | 0;
     if ($753 >>> 0 < $755 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($753, $25);
      HEAP32[$752 >> 2] = (HEAP32[$752 >> 2] | 0) + 24;
     } else {
      $762 = HEAP32[$db >> 2] | 0;
      $763 = $753 - $762 | 0;
      $764 = ($763 | 0) / 24 | 0;
      $765 = $764 + 1 | 0;
      if (($763 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $769 = ($755 - $762 | 0) / 24 | 0;
      if ($769 >>> 0 < 1073741823) {
       $771 = $769 << 1;
       $$0$i$i$i125 = $771 >>> 0 < $765 >>> 0 ? $765 : $771;
      } else $$0$i$i$i125 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i125, $764, $db + 12 | 0);
      $774 = $__v$i$i224 + 8 | 0;
      $775 = HEAP32[$774 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($775, $25);
      HEAP32[$774 >> 2] = $775 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($26, 26108);
     $778 = $db + 4 | 0;
     $779 = HEAP32[$778 >> 2] | 0;
     $781 = HEAP32[$db + 8 >> 2] | 0;
     if ($779 >>> 0 < $781 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($779, $26);
      HEAP32[$778 >> 2] = (HEAP32[$778 >> 2] | 0) + 24;
     } else {
      $788 = HEAP32[$db >> 2] | 0;
      $789 = $779 - $788 | 0;
      $790 = ($789 | 0) / 24 | 0;
      $791 = $790 + 1 | 0;
      if (($789 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $795 = ($781 - $788 | 0) / 24 | 0;
      if ($795 >>> 0 < 1073741823) {
       $797 = $795 << 1;
       $$0$i$i$i130 = $797 >>> 0 < $791 >>> 0 ? $791 : $797;
      } else $$0$i$i$i130 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i130, $790, $db + 12 | 0);
      $800 = $__v$i$i224 + 8 | 0;
      $801 = HEAP32[$800 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($801, $26);
      HEAP32[$800 >> 2] = $801 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 110:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($27, 26119);
     $807 = $db + 4 | 0;
     $808 = HEAP32[$807 >> 2] | 0;
     $810 = HEAP32[$db + 8 >> 2] | 0;
     if ($808 >>> 0 < $810 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($808, $27);
      HEAP32[$807 >> 2] = (HEAP32[$807 >> 2] | 0) + 24;
     } else {
      $817 = HEAP32[$db >> 2] | 0;
      $818 = $808 - $817 | 0;
      $819 = ($818 | 0) / 24 | 0;
      $820 = $819 + 1 | 0;
      if (($818 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $824 = ($810 - $817 | 0) / 24 | 0;
      if ($824 >>> 0 < 1073741823) {
       $826 = $824 << 1;
       $$0$i$i$i135 = $826 >>> 0 < $820 >>> 0 ? $820 : $826;
      } else $$0$i$i$i135 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i135, $819, $db + 12 | 0);
      $829 = $__v$i$i224 + 8 | 0;
      $830 = HEAP32[$829 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($830, $27);
      HEAP32[$829 >> 2] = $830 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($28, 26134);
     $833 = $db + 4 | 0;
     $834 = HEAP32[$833 >> 2] | 0;
     $836 = HEAP32[$db + 8 >> 2] | 0;
     if ($834 >>> 0 < $836 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($834, $28);
      HEAP32[$833 >> 2] = (HEAP32[$833 >> 2] | 0) + 24;
     } else {
      $843 = HEAP32[$db >> 2] | 0;
      $844 = $834 - $843 | 0;
      $845 = ($844 | 0) / 24 | 0;
      $846 = $845 + 1 | 0;
      if (($844 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $850 = ($836 - $843 | 0) / 24 | 0;
      if ($850 >>> 0 < 1073741823) {
       $852 = $850 << 1;
       $$0$i$i$i140 = $852 >>> 0 < $846 >>> 0 ? $846 : $852;
      } else $$0$i$i$i140 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i140, $845, $db + 12 | 0);
      $855 = $__v$i$i224 + 8 | 0;
      $856 = HEAP32[$855 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($856, $28);
      HEAP32[$855 >> 2] = $856 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 103:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($29, 26076);
     $859 = $db + 4 | 0;
     $860 = HEAP32[$859 >> 2] | 0;
     $862 = HEAP32[$db + 8 >> 2] | 0;
     if ($860 >>> 0 < $862 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($860, $29);
      HEAP32[$859 >> 2] = (HEAP32[$859 >> 2] | 0) + 24;
     } else {
      $869 = HEAP32[$db >> 2] | 0;
      $870 = $860 - $869 | 0;
      $871 = ($870 | 0) / 24 | 0;
      $872 = $871 + 1 | 0;
      if (($870 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $876 = ($862 - $869 | 0) / 24 | 0;
      if ($876 >>> 0 < 1073741823) {
       $878 = $876 << 1;
       $$0$i$i$i145 = $878 >>> 0 < $872 >>> 0 ? $872 : $878;
      } else $$0$i$i$i145 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i145, $871, $db + 12 | 0);
      $881 = $__v$i$i224 + 8 | 0;
      $882 = HEAP32[$881 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($882, $29);
      HEAP32[$881 >> 2] = $882 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($29);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($30, 26145);
     $885 = $db + 4 | 0;
     $886 = HEAP32[$885 >> 2] | 0;
     $888 = HEAP32[$db + 8 >> 2] | 0;
     if ($886 >>> 0 < $888 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($886, $30);
      HEAP32[$885 >> 2] = (HEAP32[$885 >> 2] | 0) + 24;
     } else {
      $895 = HEAP32[$db >> 2] | 0;
      $896 = $886 - $895 | 0;
      $897 = ($896 | 0) / 24 | 0;
      $898 = $897 + 1 | 0;
      if (($896 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $902 = ($888 - $895 | 0) / 24 | 0;
      if ($902 >>> 0 < 1073741823) {
       $904 = $902 << 1;
       $$0$i$i$i150 = $904 >>> 0 < $898 >>> 0 ? $898 : $904;
      } else $$0$i$i$i150 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i150, $897, $db + 12 | 0);
      $907 = $__v$i$i224 + 8 | 0;
      $908 = HEAP32[$907 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($908, $30);
      HEAP32[$907 >> 2] = $908 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($30);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 119:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($31, 26155);
     $911 = $db + 4 | 0;
     $912 = HEAP32[$911 >> 2] | 0;
     $914 = HEAP32[$db + 8 >> 2] | 0;
     if ($912 >>> 0 < $914 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($912, $31);
      HEAP32[$911 >> 2] = (HEAP32[$911 >> 2] | 0) + 24;
     } else {
      $921 = HEAP32[$db >> 2] | 0;
      $922 = $912 - $921 | 0;
      $923 = ($922 | 0) / 24 | 0;
      $924 = $923 + 1 | 0;
      if (($922 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $928 = ($914 - $921 | 0) / 24 | 0;
      if ($928 >>> 0 < 1073741823) {
       $930 = $928 << 1;
       $$0$i$i$i155 = $930 >>> 0 < $924 >>> 0 ? $924 : $930;
      } else $$0$i$i$i155 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i155, $923, $db + 12 | 0);
      $933 = $__v$i$i224 + 8 | 0;
      $934 = HEAP32[$933 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($934, $31);
      HEAP32[$933 >> 2] = $934 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($31);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 111:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($32, 26168);
     $940 = $db + 4 | 0;
     $941 = HEAP32[$940 >> 2] | 0;
     $943 = HEAP32[$db + 8 >> 2] | 0;
     if ($941 >>> 0 < $943 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($941, $32);
      HEAP32[$940 >> 2] = (HEAP32[$940 >> 2] | 0) + 24;
     } else {
      $950 = HEAP32[$db >> 2] | 0;
      $951 = $941 - $950 | 0;
      $952 = ($951 | 0) / 24 | 0;
      $953 = $952 + 1 | 0;
      if (($951 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $957 = ($943 - $950 | 0) / 24 | 0;
      if ($957 >>> 0 < 1073741823) {
       $959 = $957 << 1;
       $$0$i$i$i160 = $959 >>> 0 < $953 >>> 0 ? $953 : $959;
      } else $$0$i$i$i160 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i160, $952, $db + 12 | 0);
      $962 = $__v$i$i224 + 8 | 0;
      $963 = HEAP32[$962 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($963, $32);
      HEAP32[$962 >> 2] = $963 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 114:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($33, 26179);
     $966 = $db + 4 | 0;
     $967 = HEAP32[$966 >> 2] | 0;
     $969 = HEAP32[$db + 8 >> 2] | 0;
     if ($967 >>> 0 < $969 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($967, $33);
      HEAP32[$966 >> 2] = (HEAP32[$966 >> 2] | 0) + 24;
     } else {
      $976 = HEAP32[$db >> 2] | 0;
      $977 = $967 - $976 | 0;
      $978 = ($977 | 0) / 24 | 0;
      $979 = $978 + 1 | 0;
      if (($977 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $983 = ($969 - $976 | 0) / 24 | 0;
      if ($983 >>> 0 < 1073741823) {
       $985 = $983 << 1;
       $$0$i$i$i165 = $985 >>> 0 < $979 >>> 0 ? $979 : $985;
      } else $$0$i$i$i165 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i165, $978, $db + 12 | 0);
      $988 = $__v$i$i224 + 8 | 0;
      $989 = HEAP32[$988 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($989, $33);
      HEAP32[$988 >> 2] = $989 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 82:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($34, 26189);
     $992 = $db + 4 | 0;
     $993 = HEAP32[$992 >> 2] | 0;
     $995 = HEAP32[$db + 8 >> 2] | 0;
     if ($993 >>> 0 < $995 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($993, $34);
      HEAP32[$992 >> 2] = (HEAP32[$992 >> 2] | 0) + 24;
     } else {
      $1002 = HEAP32[$db >> 2] | 0;
      $1003 = $993 - $1002 | 0;
      $1004 = ($1003 | 0) / 24 | 0;
      $1005 = $1004 + 1 | 0;
      if (($1003 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1009 = ($995 - $1002 | 0) / 24 | 0;
      if ($1009 >>> 0 < 1073741823) {
       $1011 = $1009 << 1;
       $$0$i$i$i170 = $1011 >>> 0 < $1005 >>> 0 ? $1005 : $1011;
      } else $$0$i$i$i170 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i170, $1004, $db + 12 | 0);
      $1014 = $__v$i$i224 + 8 | 0;
      $1015 = HEAP32[$1014 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1015, $34);
      HEAP32[$1014 >> 2] = $1015 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($34);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 112:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($35, 26200);
     $1021 = $db + 4 | 0;
     $1022 = HEAP32[$1021 >> 2] | 0;
     $1024 = HEAP32[$db + 8 >> 2] | 0;
     if ($1022 >>> 0 < $1024 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1022, $35);
      HEAP32[$1021 >> 2] = (HEAP32[$1021 >> 2] | 0) + 24;
     } else {
      $1031 = HEAP32[$db >> 2] | 0;
      $1032 = $1022 - $1031 | 0;
      $1033 = ($1032 | 0) / 24 | 0;
      $1034 = $1033 + 1 | 0;
      if (($1032 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1038 = ($1024 - $1031 | 0) / 24 | 0;
      if ($1038 >>> 0 < 1073741823) {
       $1040 = $1038 << 1;
       $$0$i$i$i175 = $1040 >>> 0 < $1034 >>> 0 ? $1034 : $1040;
      } else $$0$i$i$i175 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i175, $1033, $db + 12 | 0);
      $1043 = $__v$i$i224 + 8 | 0;
      $1044 = HEAP32[$1043 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1044, $35);
      HEAP32[$1043 >> 2] = $1044 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($35);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($36, 26212);
     $1047 = $db + 4 | 0;
     $1048 = HEAP32[$1047 >> 2] | 0;
     $1050 = HEAP32[$db + 8 >> 2] | 0;
     if ($1048 >>> 0 < $1050 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1048, $36);
      HEAP32[$1047 >> 2] = (HEAP32[$1047 >> 2] | 0) + 24;
     } else {
      $1057 = HEAP32[$db >> 2] | 0;
      $1058 = $1048 - $1057 | 0;
      $1059 = ($1058 | 0) / 24 | 0;
      $1060 = $1059 + 1 | 0;
      if (($1058 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1064 = ($1050 - $1057 | 0) / 24 | 0;
      if ($1064 >>> 0 < 1073741823) {
       $1066 = $1064 << 1;
       $$0$i$i$i180 = $1066 >>> 0 < $1060 >>> 0 ? $1060 : $1066;
      } else $$0$i$i$i180 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i180, $1059, $db + 12 | 0);
      $1069 = $__v$i$i224 + 8 | 0;
      $1070 = HEAP32[$1069 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1070, $36);
      HEAP32[$1069 >> 2] = $1070 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($37, 26222);
     $1073 = $db + 4 | 0;
     $1074 = HEAP32[$1073 >> 2] | 0;
     $1076 = HEAP32[$db + 8 >> 2] | 0;
     if ($1074 >>> 0 < $1076 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1074, $37);
      HEAP32[$1073 >> 2] = (HEAP32[$1073 >> 2] | 0) + 24;
     } else {
      $1083 = HEAP32[$db >> 2] | 0;
      $1084 = $1074 - $1083 | 0;
      $1085 = ($1084 | 0) / 24 | 0;
      $1086 = $1085 + 1 | 0;
      if (($1084 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1090 = ($1076 - $1083 | 0) / 24 | 0;
      if ($1090 >>> 0 < 1073741823) {
       $1092 = $1090 << 1;
       $$0$i$i$i185 = $1092 >>> 0 < $1086 >>> 0 ? $1086 : $1092;
      } else $$0$i$i$i185 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i185, $1085, $db + 12 | 0);
      $1095 = $__v$i$i224 + 8 | 0;
      $1096 = HEAP32[$1095 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1096, $37);
      HEAP32[$1095 >> 2] = $1096 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($37);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 112:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($38, 26233);
     $1099 = $db + 4 | 0;
     $1100 = HEAP32[$1099 >> 2] | 0;
     $1102 = HEAP32[$db + 8 >> 2] | 0;
     if ($1100 >>> 0 < $1102 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1100, $38);
      HEAP32[$1099 >> 2] = (HEAP32[$1099 >> 2] | 0) + 24;
     } else {
      $1109 = HEAP32[$db >> 2] | 0;
      $1110 = $1100 - $1109 | 0;
      $1111 = ($1110 | 0) / 24 | 0;
      $1112 = $1111 + 1 | 0;
      if (($1110 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1116 = ($1102 - $1109 | 0) / 24 | 0;
      if ($1116 >>> 0 < 1073741823) {
       $1118 = $1116 << 1;
       $$0$i$i$i190 = $1118 >>> 0 < $1112 >>> 0 ? $1112 : $1118;
      } else $$0$i$i$i190 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i190, $1111, $db + 12 | 0);
      $1121 = $__v$i$i224 + 8 | 0;
      $1122 = HEAP32[$1121 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1122, $38);
      HEAP32[$1121 >> 2] = $1122 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($38);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($39, 26212);
     $1125 = $db + 4 | 0;
     $1126 = HEAP32[$1125 >> 2] | 0;
     $1128 = HEAP32[$db + 8 >> 2] | 0;
     if ($1126 >>> 0 < $1128 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1126, $39);
      HEAP32[$1125 >> 2] = (HEAP32[$1125 >> 2] | 0) + 24;
     } else {
      $1135 = HEAP32[$db >> 2] | 0;
      $1136 = $1126 - $1135 | 0;
      $1137 = ($1136 | 0) / 24 | 0;
      $1138 = $1137 + 1 | 0;
      if (($1136 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1142 = ($1128 - $1135 | 0) / 24 | 0;
      if ($1142 >>> 0 < 1073741823) {
       $1144 = $1142 << 1;
       $$0$i$i$i195 = $1144 >>> 0 < $1138 >>> 0 ? $1138 : $1144;
      } else $$0$i$i$i195 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i195, $1137, $db + 12 | 0);
      $1147 = $__v$i$i224 + 8 | 0;
      $1148 = HEAP32[$1147 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1148, $39);
      HEAP32[$1147 >> 2] = $1148 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($39);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($40, 26244);
     $1151 = $db + 4 | 0;
     $1152 = HEAP32[$1151 >> 2] | 0;
     $1154 = HEAP32[$db + 8 >> 2] | 0;
     if ($1152 >>> 0 < $1154 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1152, $40);
      HEAP32[$1151 >> 2] = (HEAP32[$1151 >> 2] | 0) + 24;
     } else {
      $1161 = HEAP32[$db >> 2] | 0;
      $1162 = $1152 - $1161 | 0;
      $1163 = ($1162 | 0) / 24 | 0;
      $1164 = $1163 + 1 | 0;
      if (($1162 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1168 = ($1154 - $1161 | 0) / 24 | 0;
      if ($1168 >>> 0 < 1073741823) {
       $1170 = $1168 << 1;
       $$0$i$i$i200 = $1170 >>> 0 < $1164 >>> 0 ? $1164 : $1170;
      } else $$0$i$i$i200 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i200, $1163, $db + 12 | 0);
      $1173 = $__v$i$i224 + 8 | 0;
      $1174 = HEAP32[$1173 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1174, $40);
      HEAP32[$1173 >> 2] = $1174 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($40);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 113:
  {
   if ((HEAP8[$first + 1 >> 0] | 0) != 117) {
    $$0 = $first;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($41, 26255);
   $1180 = $db + 4 | 0;
   $1181 = HEAP32[$1180 >> 2] | 0;
   $1183 = HEAP32[$db + 8 >> 2] | 0;
   if ($1181 >>> 0 < $1183 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1181, $41);
    HEAP32[$1180 >> 2] = (HEAP32[$1180 >> 2] | 0) + 24;
   } else {
    $1190 = HEAP32[$db >> 2] | 0;
    $1191 = $1181 - $1190 | 0;
    $1192 = ($1191 | 0) / 24 | 0;
    $1193 = $1192 + 1 | 0;
    if (($1191 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $1197 = ($1183 - $1190 | 0) / 24 | 0;
    if ($1197 >>> 0 < 1073741823) {
     $1199 = $1197 << 1;
     $$0$i$i$i205 = $1199 >>> 0 < $1193 >>> 0 ? $1193 : $1199;
    } else $$0$i$i$i205 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i205, $1192, $db + 12 | 0);
    $1202 = $__v$i$i224 + 8 | 0;
    $1203 = HEAP32[$1202 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1203, $41);
    HEAP32[$1202 >> 2] = $1203 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($41);
   $$0 = $first + 2 | 0;
   break L1;
   break;
  }
 case 114:
  {
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($42, 26265);
     $1209 = $db + 4 | 0;
     $1210 = HEAP32[$1209 >> 2] | 0;
     $1212 = HEAP32[$db + 8 >> 2] | 0;
     if ($1210 >>> 0 < $1212 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1210, $42);
      HEAP32[$1209 >> 2] = (HEAP32[$1209 >> 2] | 0) + 24;
     } else {
      $1219 = HEAP32[$db >> 2] | 0;
      $1220 = $1210 - $1219 | 0;
      $1221 = ($1220 | 0) / 24 | 0;
      $1222 = $1221 + 1 | 0;
      if (($1220 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1226 = ($1212 - $1219 | 0) / 24 | 0;
      if ($1226 >>> 0 < 1073741823) {
       $1228 = $1226 << 1;
       $$0$i$i$i210 = $1228 >>> 0 < $1222 >>> 0 ? $1222 : $1228;
      } else $$0$i$i$i210 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i210, $1221, $db + 12 | 0);
      $1231 = $__v$i$i224 + 8 | 0;
      $1232 = HEAP32[$1231 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1232, $42);
      HEAP32[$1231 >> 2] = $1232 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($42);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 77:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($43, 26275);
     $1235 = $db + 4 | 0;
     $1236 = HEAP32[$1235 >> 2] | 0;
     $1238 = HEAP32[$db + 8 >> 2] | 0;
     if ($1236 >>> 0 < $1238 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1236, $43);
      HEAP32[$1235 >> 2] = (HEAP32[$1235 >> 2] | 0) + 24;
     } else {
      $1245 = HEAP32[$db >> 2] | 0;
      $1246 = $1236 - $1245 | 0;
      $1247 = ($1246 | 0) / 24 | 0;
      $1248 = $1247 + 1 | 0;
      if (($1246 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1252 = ($1238 - $1245 | 0) / 24 | 0;
      if ($1252 >>> 0 < 1073741823) {
       $1254 = $1252 << 1;
       $$0$i$i$i215 = $1254 >>> 0 < $1248 >>> 0 ? $1248 : $1254;
      } else $$0$i$i$i215 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i215, $1247, $db + 12 | 0);
      $1257 = $__v$i$i224 + 8 | 0;
      $1258 = HEAP32[$1257 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1258, $43);
      HEAP32[$1257 >> 2] = $1258 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($43);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($44, 26286);
     $1261 = $db + 4 | 0;
     $1262 = HEAP32[$1261 >> 2] | 0;
     $1264 = HEAP32[$db + 8 >> 2] | 0;
     if ($1262 >>> 0 < $1264 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1262, $44);
      HEAP32[$1261 >> 2] = (HEAP32[$1261 >> 2] | 0) + 24;
     } else {
      $1271 = HEAP32[$db >> 2] | 0;
      $1272 = $1262 - $1271 | 0;
      $1273 = ($1272 | 0) / 24 | 0;
      $1274 = $1273 + 1 | 0;
      if (($1272 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1278 = ($1264 - $1271 | 0) / 24 | 0;
      if ($1278 >>> 0 < 1073741823) {
       $1280 = $1278 << 1;
       $$0$i$i$i220 = $1280 >>> 0 < $1274 >>> 0 ? $1274 : $1280;
      } else $$0$i$i$i220 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i220, $1273, $db + 12 | 0);
      $1283 = $__v$i$i224 + 8 | 0;
      $1284 = HEAP32[$1283 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1284, $44);
      HEAP32[$1283 >> 2] = $1284 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($45, 26297);
     $1287 = $db + 4 | 0;
     $1288 = HEAP32[$1287 >> 2] | 0;
     $1290 = HEAP32[$db + 8 >> 2] | 0;
     if ($1288 >>> 0 < $1290 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1288, $45);
      HEAP32[$1287 >> 2] = (HEAP32[$1287 >> 2] | 0) + 24;
     } else {
      $1297 = HEAP32[$db >> 2] | 0;
      $1298 = $1288 - $1297 | 0;
      $1299 = ($1298 | 0) / 24 | 0;
      $1300 = $1299 + 1 | 0;
      if (($1298 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $1304 = ($1290 - $1297 | 0) / 24 | 0;
      if ($1304 >>> 0 < 1073741823) {
       $1306 = $1304 << 1;
       $$0$i$i$i225 = $1306 >>> 0 < $1300 >>> 0 ? $1300 : $1306;
      } else $$0$i$i$i225 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i224, $$0$i$i$i225, $1299, $db + 12 | 0);
      $1309 = $__v$i$i224 + 8 | 0;
      $1310 = HEAP32[$1309 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($1310, $45);
      HEAP32[$1309 >> 2] = $1310 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i224);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i224);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($45);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 case 118:
  {
   if (((HEAP8[$first + 1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
    $$0 = $first;
    break L1;
   }
   $1316 = $first + 2 | 0;
   $1317 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($1316, $last, $db) | 0;
   if (($1317 | 0) == ($1316 | 0)) {
    $$0 = $first;
    break L1;
   }
   $1321 = HEAP32[$db + 4 >> 2] | 0;
   if ((HEAP32[$db >> 2] | 0) == ($1321 | 0)) {
    $$0 = $first;
    break L1;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($1321 + -24 | 0, 0, 25881) | 0;
   $$0 = $1317;
   break L1;
   break;
  }
 default:
  {
   $$0 = $first;
   break L1;
  }
 } while (0); else $$0 = $first; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _printf_core($f, $fmt, $ap, $nl_arg, $nl_type) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 $nl_arg = $nl_arg | 0;
 $nl_type = $nl_type | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i104$i = 0, $$0$lcssa$i128$i = 0, $$0$lcssa$i143$i = 0, $$0$lcssa$i39$i = 0, $$0$lcssa$i46 = 0, $$0$lcssa$i46$i = 0, $$0$lcssa$i48$i = 0, $$0$lcssa$i51 = 0, $$0$lcssa$i53 = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i61 = 0, $$0$lcssa$i63$i = 0, $$0$lcssa$i68 = 0, $$0$lcssa$i69$i = 0, $$0$lcssa$i75 = 0, $$0$lcssa$i76$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i85 = 0, $$0$lcssa$i97$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i102$i = 0, $$01$i126$i = 0, $$01$i141$i = 0, $$01$i37$i = 0, $$01$i44 = 0, $$01$i44$i = 0, $$01$i54$i = 0, $$01$i59 = 0, $$01$i61$i = 0, $$01$i66 = 0, $$01$i67$i = 0, $$01$i73 = 0, $$01$i74$i = 0, $$01$i83 = 0, $$01$i95$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i85$i = 0, $$012$i = 0, $$013$i = 0, $$03$i48 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i79$i = 0, $$07$i = 0.0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i112$i = 0, $$100 = 0, $$114$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i110$i = 0, $$12$i119$i = 0, $$12$i134$i = 0, $$12$i134$i$lcssa = 0, $$12$i87$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$i = 0, $$23$i = 0, $$3$i = 0.0, $$31$i = 0, $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$412184$i = 0, $$5196$i = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us304$i = 0, $$a$3306$i = 0, $$fl$4 = 0, $$lcssa = 0, $$lcssa275$i = 0, $$lcssa443 = 0, $$lcssa448 = 0, $$lcssa449 = 0, $$lcssa450 = 0, $$lcssa451 = 0, $$lcssa452 = 0, $$lcssa454 = 0, $$lcssa455 = 0, $$lcssa461 = 0, $$lcssa465 = 0, $$lcssa467 = 0, $$lcssa470 = 0, $$lcssa471 = 0, $$lcssa474 = 0.0, $$lcssa475 = 0, $$lcssa478 = 0, $$lcssa482 = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr146$i = 0, $$pre$phi302$iZ2D = 0, $$pre300$i = 0, $$z$4$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $1001 = 0, $1003 = 0, $1005 = 0, $1006 = 0, $1014 = 0, $1022 = 0, $1030 = 0, $104 = 0, $1040 = 0, $1043 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1057 = 0, $1058 = 0, $1061 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1081 = 0, $1082 = 0, $1084 = 0, $1087 = 0, $1088 = 0, $1097 = 0, $1098 = 0, $11 = 0, $1100 = 0, $1103 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1123 = 0, $1124 = 0, $1126 = 0, $1129 = 0, $1138 = 0, $1139 = 0, $1140 = 0, $1149 = 0, $1150 = 0.0, $1156 = 0, $1157 = 0.0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $1170 = 0, $1171 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1179 = 0, $1181 = 0, $12 = 0, $13 = 0, $131 = 0, $132 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $142 = 0, $144 = 0, $146 = 0, $147 = 0, $15 = 0, $152 = 0, $154 = 0, $16 = 0, $164 = 0, $165 = 0, $172 = 0, $173 = 0, $181 = 0, $182 = 0, $188 = 0, $189 = 0, $191 = 0, $194 = 0, $2 = 0, $200 = 0, $201 = 0, $212 = 0, $213 = 0, $219 = 0, $22 = 0, $220 = 0, $231 = 0, $232 = 0, $238 = 0, $239 = 0.0, $24 = 0, $247 = 0, $248 = 0.0, $25 = 0, $252 = 0, $259 = 0, $261 = 0, $266 = 0, $278 = 0, $285 = 0, $288 = 0, $29 = 0, $291 = 0, $297 = 0, $298 = 0, $3 = 0, $30 = 0, $310 = 0, $312 = 0, $315 = 0, $316 = 0, $326 = 0, $330 = 0, $333 = 0, $335 = 0, $339 = 0, $340 = 0, $341 = 0, $345 = 0, $346 = 0, $35 = 0, $357 = 0, $363 = 0, $365 = 0, $366 = 0, $37 = 0, $372 = 0, $38 = 0, $381 = 0, $382 = 0, $387 = 0, $389 = 0, $391 = 0, $396 = 0, $399 = 0, $4 = 0, $401 = 0, $402 = 0, $410 = 0, $412 = 0, $418 = 0, $42 = 0, $426 = 0.0, $431 = 0, $435 = 0, $44 = 0, $442 = 0, $444 = 0, $446 = 0, $449 = 0, $45 = 0, $450 = 0, $459 = 0, $468 = 0.0, $469 = 0, $472 = 0, $474 = 0, $477 = 0, $479 = 0, $483 = 0.0, $49 = 0, $493 = 0, $496 = 0, $5 = 0, $500 = 0, $501 = 0, $502 = 0, $506 = 0, $507 = 0, $518 = 0, $530 = 0, $533 = 0, $539 = 0, $54 = 0, $548 = 0, $554 = 0, $563 = 0, $569 = 0, $57 = 0, $58 = 0, $587 = 0, $588 = 0, $59 = 0, $590 = 0, $591 = 0, $599 = 0, $6 = 0, $606 = 0, $608 = 0, $610 = 0, $619 = 0, $629 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $64 = 0, $641 = 0, $642 = 0, $645 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $651 = 0, $655 = 0, $657 = 0, $661 = 0, $666 = 0, $668 = 0, $669 = 0, $670 = 0, $672 = 0, $689 = 0, $691 = 0, $694 = 0, $695 = 0, $699 = 0, $7 = 0, $700 = 0, $702 = 0, $708 = 0, $709 = 0, $710 = 0, $714 = 0, $735 = 0, $736 = 0, $739 = 0, $744 = 0, $745 = 0, $747 = 0, $754 = 0, $755 = 0, $756 = 0, $759 = 0, $760 = 0, $761 = 0, $768 = 0, $778 = 0, $781 = 0, $783 = 0, $785 = 0, $787 = 0, $792 = 0, $793 = 0, $796 = 0, $798 = 0, $8 = 0, $800 = 0, $802 = 0, $813 = 0, $816 = 0, $821 = 0, $830 = 0, $831 = 0, $835 = 0, $838 = 0, $840 = 0, $842 = 0, $846 = 0, $850 = 0, $851 = 0, $852 = 0, $856 = 0, $857 = 0, $868 = 0, $874 = 0, $884 = 0, $889 = 0, $89 = 0, $890 = 0, $892 = 0, $893 = 0, $9 = 0, $90 = 0, $901 = 0, $909 = 0, $914 = 0, $919 = 0, $924 = 0, $930 = 0, $935 = 0, $939 = 0, $941 = 0, $944 = 0, $956 = 0, $957 = 0, $96 = 0, $962 = 0, $968 = 0, $97 = 0, $972 = 0, $975 = 0, $98 = 0, $990 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1253$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3240$i = 0, $a$3240$us$i = 0, $a$5$lcssa$i = 0, $a$5215$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0246$i = 0, $carry3$0234$i = 0, $carry3$0234$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0245$i = 0, $d$0247$i = 0, $d$1233$i = 0, $d$1233$us$i = 0, $d$2$lcssa$i = 0, $d$2214$i = 0, $d$3$i = 0, $d$4191$i = 0, $d$5183$i = 0, $d$6195$i = 0, $e$0229$i = 0, $e$1$i = 0, $e$2210$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1201$i = 0, $estr$2$i = 0, $fl$0115 = 0, $fl$0175 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $fmt87$lcssa = 0, $fmt87167 = 0, $fmt88 = 0, $fmt89 = 0, $fmt90 = 0, $fmt92 = 0, $fmt92$lcssa446 = 0, $fmt93 = 0, $i$0$lcssa = 0, $i$0$lcssa275 = 0, $i$0180 = 0, $i$0228$i = 0, $i$03$i = 0, $i$03$i30 = 0, $i$1$lcssa$i = 0, $i$1191 = 0, $i$1222$i = 0, $i$2166 = 0, $i$2166$lcssa = 0, $i$2209$i = 0, $i$3164 = 0, $i$3205$i = 0, $isdigittmp = 0, $isdigittmp1$i = 0, $isdigittmp1$i27 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i29 = 0, $isdigittmp9 = 0, $j$0221$i = 0, $j$0223$i = 0, $j$1206$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1179 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $or$cond19 = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$4274 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1179$i = 0, $round$0178$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s1$0$i = 0, $s7$0188$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0180$i = 0, $s9$0$i = 0, $s9$1192$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa447 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8113 = 0, $storemerge8174 = 0, $t$0 = 0, $t$1 = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $wc = 0, $ws$0181 = 0, $ws$1192 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i109$i = 0, $y$03$i118$i = 0, $y$03$i133$i = 0, $y$03$i86$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0168 = 0, $z$1$lcssa$i = 0, $z$1252$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3239$i = 0, $z$3239$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864 | 0;
 $big$i = sp + 16 | 0;
 $e2$i = sp + 8 | 0;
 $buf$i = sp + 836 | 0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824 | 0;
 $pad$i = sp + 568 | 0;
 $buf = sp + 528 | 0;
 $wc = sp;
 $mb = sp + 520 | 0;
 $1 = ($f | 0) != 0;
 $2 = $buf + 40 | 0;
 $3 = $2;
 $4 = $buf + 39 | 0;
 $5 = $wc + 4 | 0;
 $6 = $wc;
 $7 = $ebuf0$i + 12 | 0;
 $8 = $ebuf0$i + 11 | 0;
 $9 = $7;
 $10 = $9 - $0 | 0;
 $11 = -2 - $0 | 0;
 $12 = $9 + 2 | 0;
 $13 = $big$i + 288 | 0;
 $14 = $buf$i + 9 | 0;
 $15 = $14;
 $16 = $buf$i + 8 | 0;
 $1165 = 0;
 $1166 = 0;
 $cnt$0 = 0;
 $fmt89 = $fmt;
 $l$0 = 0;
 $l10n$0 = 0;
 L1 : while (1) {
  do if (($cnt$0 | 0) > -1) if (($l$0 | 0) > (2147483647 - $cnt$0 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $cnt$1 = -1;
   break;
  } else {
   $cnt$1 = $l$0 + $cnt$0 | 0;
   break;
  } else $cnt$1 = $cnt$0; while (0);
  $22 = HEAP8[$fmt89 >> 0] | 0;
  if (!($22 << 24 >> 24)) {
   $cnt$1$lcssa = $cnt$1;
   $l10n$0$lcssa = $l10n$0;
   label = 344;
   break;
  } else {
   $24 = $22;
   $fmt88 = $fmt89;
  }
  L9 : while (1) {
   switch ($24 << 24 >> 24) {
   case 37:
    {
     $fmt87167 = $fmt88;
     $z$0168 = $fmt88;
     label = 9;
     break L9;
     break;
    }
   case 0:
    {
     $fmt87$lcssa = $fmt88;
     $z$0$lcssa = $fmt88;
     break L9;
     break;
    }
   default:
    {}
   }
   $25 = $fmt88 + 1 | 0;
   $24 = HEAP8[$25 >> 0] | 0;
   $fmt88 = $25;
  }
  L12 : do if ((label | 0) == 9) while (1) {
   label = 0;
   if ((HEAP8[$fmt87167 + 1 >> 0] | 0) != 37) {
    $fmt87$lcssa = $fmt87167;
    $z$0$lcssa = $z$0168;
    break L12;
   }
   $29 = $z$0168 + 1 | 0;
   $30 = $fmt87167 + 2 | 0;
   if ((HEAP8[$30 >> 0] | 0) == 37) {
    $fmt87167 = $30;
    $z$0168 = $29;
    label = 9;
   } else {
    $fmt87$lcssa = $30;
    $z$0$lcssa = $29;
    break;
   }
  } while (0);
  $35 = $z$0$lcssa - $fmt89 | 0;
  if ($1) ___fwritex($fmt89, $35, $f) | 0;
  if (($z$0$lcssa | 0) != ($fmt89 | 0)) {
   $cnt$0 = $cnt$1;
   $fmt89 = $fmt87$lcssa;
   $l$0 = $35;
   continue;
  }
  $37 = $fmt87$lcssa + 1 | 0;
  $38 = HEAP8[$37 >> 0] | 0;
  $isdigittmp = ($38 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $42 = (HEAP8[$fmt87$lcssa + 2 >> 0] | 0) == 36;
   $$100 = $42 ? $fmt87$lcssa + 3 | 0 : $37;
   $45 = HEAP8[$$100 >> 0] | 0;
   $argpos$0 = $42 ? $isdigittmp : -1;
   $l10n$1 = $42 ? 1 : $l10n$0;
   $storemerge = $$100;
  } else {
   $45 = $38;
   $argpos$0 = -1;
   $l10n$1 = $l10n$0;
   $storemerge = $37;
  }
  $44 = $45 << 24 >> 24;
  L24 : do if (($44 & -32 | 0) == 32) {
   $49 = $44;
   $54 = $45;
   $fl$0175 = 0;
   $storemerge8174 = $storemerge;
   while (1) {
    if (!(1 << $49 + -32 & 75913)) {
     $64 = $54;
     $fl$0115 = $fl$0175;
     $storemerge8113 = $storemerge8174;
     break L24;
    }
    $57 = 1 << ($54 << 24 >> 24) + -32 | $fl$0175;
    $58 = $storemerge8174 + 1 | 0;
    $59 = HEAP8[$58 >> 0] | 0;
    $49 = $59 << 24 >> 24;
    if (($49 & -32 | 0) != 32) {
     $64 = $59;
     $fl$0115 = $57;
     $storemerge8113 = $58;
     break;
    } else {
     $54 = $59;
     $fl$0175 = $57;
     $storemerge8174 = $58;
    }
   }
  } else {
   $64 = $45;
   $fl$0115 = 0;
   $storemerge8113 = $storemerge;
  } while (0);
  do if ($64 << 24 >> 24 == 42) {
   $65 = $storemerge8113 + 1 | 0;
   $isdigittmp11 = (HEAP8[$65 >> 0] | 0) + -48 | 0;
   if ($isdigittmp11 >>> 0 < 10) if ((HEAP8[$storemerge8113 + 2 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp11 << 2) >> 2] = 10;
    $l10n$2 = 1;
    $storemerge13 = $storemerge8113 + 3 | 0;
    $w$0 = HEAP32[$nl_arg + ((HEAP8[$65 >> 0] | 0) + -48 << 3) >> 2] | 0;
   } else label = 23; else label = 23;
   if ((label | 0) == 23) {
    label = 0;
    if ($l10n$1) {
     $$0 = -1;
     label = 363;
     break L1;
    }
    if (!$1) {
     $fl$1 = $fl$0115;
     $fmt90 = $65;
     $l10n$3 = 0;
     $w$1 = 0;
     break;
    }
    $89 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $90 = HEAP32[$89 >> 2] | 0;
    HEAP32[$ap >> 2] = $89 + 4;
    $l10n$2 = 0;
    $storemerge13 = $65;
    $w$0 = $90;
   }
   if (($w$0 | 0) < 0) {
    $fl$1 = $fl$0115 | 8192;
    $fmt90 = $storemerge13;
    $l10n$3 = $l10n$2;
    $w$1 = 0 - $w$0 | 0;
   } else {
    $fl$1 = $fl$0115;
    $fmt90 = $storemerge13;
    $l10n$3 = $l10n$2;
    $w$1 = $w$0;
   }
  } else {
   $isdigittmp1$i = ($64 << 24 >> 24) + -48 | 0;
   if ($isdigittmp1$i >>> 0 < 10) {
    $98 = $storemerge8113;
    $i$03$i = 0;
    $isdigittmp4$i = $isdigittmp1$i;
    while (1) {
     $96 = ($i$03$i * 10 | 0) + $isdigittmp4$i | 0;
     $97 = $98 + 1 | 0;
     $isdigittmp4$i = (HEAP8[$97 >> 0] | 0) + -48 | 0;
     if ($isdigittmp4$i >>> 0 >= 10) {
      $$lcssa = $96;
      $$lcssa443 = $97;
      break;
     } else {
      $98 = $97;
      $i$03$i = $96;
     }
    }
    if (($$lcssa | 0) < 0) {
     $$0 = -1;
     label = 363;
     break L1;
    } else {
     $fl$1 = $fl$0115;
     $fmt90 = $$lcssa443;
     $l10n$3 = $l10n$1;
     $w$1 = $$lcssa;
    }
   } else {
    $fl$1 = $fl$0115;
    $fmt90 = $storemerge8113;
    $l10n$3 = $l10n$1;
    $w$1 = 0;
   }
  } while (0);
  L45 : do if ((HEAP8[$fmt90 >> 0] | 0) == 46) {
   $104 = $fmt90 + 1 | 0;
   $105 = HEAP8[$104 >> 0] | 0;
   if ($105 << 24 >> 24 != 42) {
    $isdigittmp1$i27 = ($105 << 24 >> 24) + -48 | 0;
    if ($isdigittmp1$i27 >>> 0 < 10) {
     $137 = $104;
     $i$03$i30 = 0;
     $isdigittmp4$i29 = $isdigittmp1$i27;
    } else {
     $fmt93 = $104;
     $p$0 = 0;
     break;
    }
    while (1) {
     $135 = ($i$03$i30 * 10 | 0) + $isdigittmp4$i29 | 0;
     $136 = $137 + 1 | 0;
     $isdigittmp4$i29 = (HEAP8[$136 >> 0] | 0) + -48 | 0;
     if ($isdigittmp4$i29 >>> 0 >= 10) {
      $fmt93 = $136;
      $p$0 = $135;
      break L45;
     } else {
      $137 = $136;
      $i$03$i30 = $135;
     }
    }
   }
   $107 = $fmt90 + 2 | 0;
   $isdigittmp9 = (HEAP8[$107 >> 0] | 0) + -48 | 0;
   if ($isdigittmp9 >>> 0 < 10) if ((HEAP8[$fmt90 + 3 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp9 << 2) >> 2] = 10;
    $fmt93 = $fmt90 + 4 | 0;
    $p$0 = HEAP32[$nl_arg + ((HEAP8[$107 >> 0] | 0) + -48 << 3) >> 2] | 0;
    break;
   }
   if ($l10n$3) {
    $$0 = -1;
    label = 363;
    break L1;
   }
   if ($1) {
    $131 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $132 = HEAP32[$131 >> 2] | 0;
    HEAP32[$ap >> 2] = $131 + 4;
    $fmt93 = $107;
    $p$0 = $132;
   } else {
    $fmt93 = $107;
    $p$0 = 0;
   }
  } else {
   $fmt93 = $fmt90;
   $p$0 = -1;
  } while (0);
  $fmt92 = $fmt93;
  $st$0 = 0;
  while (1) {
   $142 = (HEAP8[$fmt92 >> 0] | 0) + -65 | 0;
   if ($142 >>> 0 > 57) {
    $$0 = -1;
    label = 363;
    break L1;
   }
   $144 = $fmt92 + 1 | 0;
   $146 = HEAP8[27833 + ($st$0 * 58 | 0) + $142 >> 0] | 0;
   $147 = $146 & 255;
   if (($147 + -1 | 0) >>> 0 < 8) {
    $fmt92 = $144;
    $st$0 = $147;
   } else {
    $$lcssa448 = $144;
    $$lcssa449 = $146;
    $$lcssa450 = $147;
    $fmt92$lcssa446 = $fmt92;
    $st$0$lcssa447 = $st$0;
    break;
   }
  }
  if (!($$lcssa449 << 24 >> 24)) {
   $$0 = -1;
   label = 363;
   break;
  }
  $152 = ($argpos$0 | 0) > -1;
  L64 : do if ($$lcssa449 << 24 >> 24 == 19) if ($152) {
   $$0 = -1;
   label = 363;
   break L1;
  } else {
   $1167 = $1165;
   $1168 = $1166;
   label = 62;
  } else {
   if ($152) {
    HEAP32[$nl_type + ($argpos$0 << 2) >> 2] = $$lcssa450;
    $154 = $nl_arg + ($argpos$0 << 3) | 0;
    $1167 = HEAP32[$154 + 4 >> 2] | 0;
    $1168 = HEAP32[$154 >> 2] | 0;
    label = 62;
    break;
   }
   if (!$1) {
    $$0 = 0;
    label = 363;
    break L1;
   }
   if (($$lcssa449 & 255) > 20) {
    $261 = $1166;
    $288 = $1165;
   } else do switch ($$lcssa450 | 0) {
   case 9:
    {
     $164 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $165 = HEAP32[$164 >> 2] | 0;
     HEAP32[$ap >> 2] = $164 + 4;
     $261 = $165;
     $288 = $1165;
     break L64;
     break;
    }
   case 10:
    {
     $172 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $173 = HEAP32[$172 >> 2] | 0;
     HEAP32[$ap >> 2] = $172 + 4;
     $261 = $173;
     $288 = (($173 | 0) < 0) << 31 >> 31;
     break L64;
     break;
    }
   case 11:
    {
     $181 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $182 = HEAP32[$181 >> 2] | 0;
     HEAP32[$ap >> 2] = $181 + 4;
     $261 = $182;
     $288 = 0;
     break L64;
     break;
    }
   case 12:
    {
     $188 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $189 = $188;
     $191 = HEAP32[$189 >> 2] | 0;
     $194 = HEAP32[$189 + 4 >> 2] | 0;
     HEAP32[$ap >> 2] = $188 + 8;
     $261 = $191;
     $288 = $194;
     break L64;
     break;
    }
   case 13:
    {
     $200 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $201 = HEAP32[$200 >> 2] | 0;
     HEAP32[$ap >> 2] = $200 + 4;
     $261 = $201 << 16 >> 16;
     $288 = ((($201 & 65535) << 16 >> 16 | 0) < 0) << 31 >> 31;
     break L64;
     break;
    }
   case 14:
    {
     $212 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $213 = HEAP32[$212 >> 2] | 0;
     HEAP32[$ap >> 2] = $212 + 4;
     $261 = $213 & 65535;
     $288 = 0;
     break L64;
     break;
    }
   case 15:
    {
     $219 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $220 = HEAP32[$219 >> 2] | 0;
     HEAP32[$ap >> 2] = $219 + 4;
     $261 = $220 << 24 >> 24;
     $288 = ((($220 & 255) << 24 >> 24 | 0) < 0) << 31 >> 31;
     break L64;
     break;
    }
   case 16:
    {
     $231 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $232 = HEAP32[$231 >> 2] | 0;
     HEAP32[$ap >> 2] = $231 + 4;
     $261 = $232 & 255;
     $288 = 0;
     break L64;
     break;
    }
   case 17:
    {
     $238 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $239 = +HEAPF64[$238 >> 3];
     HEAP32[$ap >> 2] = $238 + 8;
     HEAPF64[tempDoublePtr >> 3] = $239;
     $261 = HEAP32[tempDoublePtr >> 2] | 0;
     $288 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
     break L64;
     break;
    }
   case 18:
    {
     $247 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $248 = +HEAPF64[$247 >> 3];
     HEAP32[$ap >> 2] = $247 + 8;
     HEAPF64[tempDoublePtr >> 3] = $248;
     $261 = HEAP32[tempDoublePtr >> 2] | 0;
     $288 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
     break L64;
     break;
    }
   default:
    {
     $261 = $1166;
     $288 = $1165;
     break L64;
    }
   } while (0);
  } while (0);
  if ((label | 0) == 62) {
   label = 0;
   if ($1) {
    $261 = $1168;
    $288 = $1167;
   } else {
    $1165 = $1167;
    $1166 = $1168;
    $cnt$0 = $cnt$1;
    $fmt89 = $$lcssa448;
    $l$0 = $35;
    $l10n$0 = $l10n$3;
    continue;
   }
  }
  $252 = HEAP8[$fmt92$lcssa446 >> 0] | 0;
  $t$0 = ($st$0$lcssa447 | 0) != 0 & ($252 & 15 | 0) == 3 ? $252 & -33 : $252;
  $259 = $fl$1 & -65537;
  $fl$1$ = ($fl$1 & 8192 | 0) == 0 ? $fl$1 : $259;
  L86 : do switch ($t$0 | 0) {
  case 110:
   {
    switch ($st$0$lcssa447 | 0) {
    case 0:
     {
      HEAP32[$261 >> 2] = $cnt$1;
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 1:
     {
      HEAP32[$261 >> 2] = $cnt$1;
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 2:
     {
      $266 = $261;
      HEAP32[$266 >> 2] = $cnt$1;
      HEAP32[$266 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 3:
     {
      HEAP16[$261 >> 1] = $cnt$1;
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 4:
     {
      HEAP8[$261 >> 0] = $cnt$1;
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 6:
     {
      HEAP32[$261 >> 2] = $cnt$1;
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 7:
     {
      $278 = $261;
      HEAP32[$278 >> 2] = $cnt$1;
      HEAP32[$278 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    default:
     {
      $1165 = $288;
      $1166 = $261;
      $cnt$0 = $cnt$1;
      $fmt89 = $$lcssa448;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      continue L1;
     }
    }
    break;
   }
  case 112:
   {
    $fl$3 = $fl$1$ | 8;
    $p$1 = $p$0 >>> 0 > 8 ? $p$0 : 8;
    $t$1 = 120;
    label = 73;
    break;
   }
  case 88:
  case 120:
   {
    $fl$3 = $fl$1$;
    $p$1 = $p$0;
    $t$1 = $t$0;
    label = 73;
    break;
   }
  case 111:
   {
    $310 = ($261 | 0) == 0 & ($288 | 0) == 0;
    if ($310) $$0$lcssa$i51 = $2; else {
     $$03$i48 = $2;
     $312 = $261;
     $316 = $288;
     while (1) {
      $315 = $$03$i48 + -1 | 0;
      HEAP8[$315 >> 0] = $312 & 7 | 48;
      $312 = _bitshift64Lshr($312 | 0, $316 | 0, 3) | 0;
      $316 = tempRet0;
      if (($312 | 0) == 0 & ($316 | 0) == 0) {
       $$0$lcssa$i51 = $315;
       break;
      } else $$03$i48 = $315;
     }
    }
    $or$cond19 = ($fl$1$ & 8 | 0) == 0 | $310;
    $363 = $261;
    $365 = $288;
    $a$0 = $$0$lcssa$i51;
    $fl$4 = $fl$1$;
    $p$2 = $p$0;
    $pl$1 = $or$cond19 & 1 ^ 1;
    $prefix$1 = $or$cond19 ? 28313 : 28318;
    label = 89;
    break;
   }
  case 105:
  case 100:
   {
    if (($288 | 0) < 0) {
     $326 = _i64Subtract(0, 0, $261 | 0, $288 | 0) | 0;
     $333 = tempRet0;
     $335 = $326;
     $pl$0 = 1;
     $prefix$0 = 28313;
     label = 84;
     break L86;
    }
    if (!($fl$1$ & 2048)) {
     $330 = $fl$1$ & 1;
     $333 = $288;
     $335 = $261;
     $pl$0 = $330;
     $prefix$0 = ($330 | 0) == 0 ? 28313 : 28315;
     label = 84;
    } else {
     $333 = $288;
     $335 = $261;
     $pl$0 = 1;
     $prefix$0 = 28314;
     label = 84;
    }
    break;
   }
  case 117:
   {
    $333 = $288;
    $335 = $261;
    $pl$0 = 0;
    $prefix$0 = 28313;
    label = 84;
    break;
   }
  case 99:
   {
    HEAP8[$4 >> 0] = $261;
    $1169 = $288;
    $1170 = $261;
    $a$2 = $4;
    $fl$6 = $259;
    $p$5 = 1;
    $pl$2 = 0;
    $prefix$2 = 28313;
    $z$2 = $2;
    break;
   }
  case 109:
   {
    $a$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    label = 94;
    break;
   }
  case 115:
   {
    $a$1 = ($261 | 0) != 0 ? $261 : 28323;
    label = 94;
    break;
   }
  case 67:
   {
    HEAP32[$wc >> 2] = $261;
    HEAP32[$5 >> 2] = 0;
    $1173 = $wc;
    $1174 = $6;
    $p$4274 = -1;
    label = 97;
    break;
   }
  case 83:
   {
    $387 = $261;
    if (!$p$0) {
     $1175 = $261;
     $1176 = $387;
     $i$0$lcssa275 = 0;
     label = 102;
    } else {
     $1173 = $387;
     $1174 = $261;
     $p$4274 = $p$0;
     label = 97;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    HEAP32[tempDoublePtr >> 2] = $261;
    HEAP32[tempDoublePtr + 4 >> 2] = $288;
    $426 = +HEAPF64[tempDoublePtr >> 3];
    HEAP32[$e2$i >> 2] = 0;
    if (($288 | 0) < 0) {
     $$07$i = -$426;
     $pl$0$i = 1;
     $prefix$0$i = 28330;
    } else if (!($fl$1$ & 2048)) {
     $431 = $fl$1$ & 1;
     $$07$i = $426;
     $pl$0$i = $431;
     $prefix$0$i = ($431 | 0) == 0 ? 28331 : 28336;
    } else {
     $$07$i = $426;
     $pl$0$i = 1;
     $prefix$0$i = 28333;
    }
    HEAPF64[tempDoublePtr >> 3] = $$07$i;
    $435 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if ($435 >>> 0 < 2146435072 | ($435 | 0) == 2146435072 & 0 < 0) {
     $468 = +_frexpl($$07$i, $e2$i) * 2.0;
     $469 = $468 != 0.0;
     if ($469) HEAP32[$e2$i >> 2] = (HEAP32[$e2$i >> 2] | 0) + -1;
     $472 = $t$0 | 32;
     if (($472 | 0) == 97) {
      $474 = $t$0 & 32;
      $prefix$0$$i = ($474 | 0) == 0 ? $prefix$0$i : $prefix$0$i + 9 | 0;
      $477 = $pl$0$i | 2;
      $479 = 12 - $p$0 | 0;
      do if ($p$0 >>> 0 > 11 | ($479 | 0) == 0) $$1$i = $468; else {
       $re$1179$i = $479;
       $round$0178$i = 8.0;
       while (1) {
        $re$1179$i = $re$1179$i + -1 | 0;
        $483 = $round$0178$i * 16.0;
        if (!$re$1179$i) {
         $$lcssa474 = $483;
         break;
        } else $round$0178$i = $483;
       }
       if ((HEAP8[$prefix$0$$i >> 0] | 0) == 45) {
        $$1$i = -($$lcssa474 + (-$468 - $$lcssa474));
        break;
       } else {
        $$1$i = $468 + $$lcssa474 - $$lcssa474;
        break;
       }
      } while (0);
      $493 = HEAP32[$e2$i >> 2] | 0;
      $496 = ($493 | 0) < 0 ? 0 - $493 | 0 : $493;
      if (($496 | 0) < 0) {
       $$05$i$i = $7;
       $500 = $496;
       $501 = (($496 | 0) < 0) << 31 >> 31;
       while (1) {
        $502 = ___uremdi3($500 | 0, $501 | 0, 10, 0) | 0;
        $506 = $$05$i$i + -1 | 0;
        HEAP8[$506 >> 0] = $502 | 48;
        $507 = ___udivdi3($500 | 0, $501 | 0, 10, 0) | 0;
        if ($501 >>> 0 > 9 | ($501 | 0) == 9 & $500 >>> 0 > 4294967295) {
         $$05$i$i = $506;
         $500 = $507;
         $501 = tempRet0;
        } else {
         $$lcssa475 = $506;
         $1177 = $507;
         break;
        }
       }
       $$0$lcssa$i48$i = $$lcssa475;
       $$01$lcssa$off0$i$i = $1177;
      } else {
       $$0$lcssa$i48$i = $7;
       $$01$lcssa$off0$i$i = $496;
      }
      if (!$$01$lcssa$off0$i$i) $$1$lcssa$i$i = $$0$lcssa$i48$i; else {
       $$12$i$i = $$0$lcssa$i48$i;
       $y$03$i$i = $$01$lcssa$off0$i$i;
       while (1) {
        $518 = $$12$i$i + -1 | 0;
        HEAP8[$518 >> 0] = ($y$03$i$i >>> 0) % 10 | 0 | 48;
        if ($y$03$i$i >>> 0 < 10) {
         $$1$lcssa$i$i = $518;
         break;
        } else {
         $$12$i$i = $518;
         $y$03$i$i = ($y$03$i$i >>> 0) / 10 | 0;
        }
       }
      }
      if (($$1$lcssa$i$i | 0) == ($7 | 0)) {
       HEAP8[$8 >> 0] = 48;
       $estr$0$i = $8;
      } else $estr$0$i = $$1$lcssa$i$i;
      HEAP8[$estr$0$i + -1 >> 0] = (HEAP32[$e2$i >> 2] >> 31 & 2) + 43;
      $530 = $estr$0$i + -2 | 0;
      HEAP8[$530 >> 0] = $t$0 + 15;
      if (!($fl$1$ & 8)) if (($p$0 | 0) < 1) {
       $$2$us$us$i = $$1$i;
       $s$0$us$us$i = $buf$i;
       while (1) {
        $533 = ~~$$2$us$us$i;
        $539 = $s$0$us$us$i + 1 | 0;
        HEAP8[$s$0$us$us$i >> 0] = HEAPU8[28297 + $533 >> 0] | $474;
        $$2$us$us$i = ($$2$us$us$i - +($533 | 0)) * 16.0;
        if (($539 - $0 | 0) != 1 | $$2$us$us$i == 0.0) $s$1$us$us$i = $539; else {
         HEAP8[$539 >> 0] = 46;
         $s$1$us$us$i = $s$0$us$us$i + 2 | 0;
        }
        if (!($$2$us$us$i != 0.0)) {
         $s$1$lcssa$i = $s$1$us$us$i;
         break;
        } else $s$0$us$us$i = $s$1$us$us$i;
       }
      } else {
       $$2$us$i = $$1$i;
       $s$0$us$i = $buf$i;
       while (1) {
        $548 = ~~$$2$us$i;
        $554 = $s$0$us$i + 1 | 0;
        HEAP8[$s$0$us$i >> 0] = HEAPU8[28297 + $548 >> 0] | $474;
        $$2$us$i = ($$2$us$i - +($548 | 0)) * 16.0;
        if (($554 - $0 | 0) == 1) {
         HEAP8[$554 >> 0] = 46;
         $s$1$us$i = $s$0$us$i + 2 | 0;
        } else $s$1$us$i = $554;
        if (!($$2$us$i != 0.0)) {
         $s$1$lcssa$i = $s$1$us$i;
         break;
        } else $s$0$us$i = $s$1$us$i;
       }
      } else {
       $$2$i = $$1$i;
       $s$0$i = $buf$i;
       while (1) {
        $563 = ~~$$2$i;
        $569 = $s$0$i + 1 | 0;
        HEAP8[$s$0$i >> 0] = HEAPU8[28297 + $563 >> 0] | $474;
        $$2$i = ($$2$i - +($563 | 0)) * 16.0;
        if (($569 - $0 | 0) == 1) {
         HEAP8[$569 >> 0] = 46;
         $s$1$i = $s$0$i + 2 | 0;
        } else $s$1$i = $569;
        if (!($$2$i != 0.0)) {
         $s$1$lcssa$i = $s$1$i;
         break;
        } else $s$0$i = $s$1$i;
       }
      }
      $$pre300$i = $s$1$lcssa$i;
      $l$0$i = ($p$0 | 0) != 0 & ($11 + $$pre300$i | 0) < ($p$0 | 0) ? $12 + $p$0 - $530 | 0 : $10 - $530 + $$pre300$i | 0;
      $587 = $l$0$i + $477 | 0;
      $588 = $fl$1$ & 73728;
      $590 = ($w$1 | 0) > ($587 | 0);
      if (($588 | 0) == 0 & $590) {
       $591 = $w$1 - $587 | 0;
       _memset($pad$i | 0, 32, ($591 >>> 0 > 256 ? 256 : $591) | 0) | 0;
       if ($591 >>> 0 > 255) {
        $$01$i54$i = $591;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i54$i = $$01$i54$i + -256 | 0;
        } while ($$01$i54$i >>> 0 > 255);
        $$0$lcssa$i56$i = $591 & 255;
       } else $$0$lcssa$i56$i = $591;
       ___fwritex($pad$i, $$0$lcssa$i56$i, $f) | 0;
      }
      ___fwritex($prefix$0$$i, $477, $f) | 0;
      if (($588 | 0) == 65536 & $590) {
       $599 = $w$1 - $587 | 0;
       _memset($pad$i | 0, 48, ($599 >>> 0 > 256 ? 256 : $599) | 0) | 0;
       if ($599 >>> 0 > 255) {
        $$01$i61$i = $599;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i61$i = $$01$i61$i + -256 | 0;
        } while ($$01$i61$i >>> 0 > 255);
        $$0$lcssa$i63$i = $599 & 255;
       } else $$0$lcssa$i63$i = $599;
       ___fwritex($pad$i, $$0$lcssa$i63$i, $f) | 0;
      }
      $606 = $$pre300$i - $0 | 0;
      ___fwritex($buf$i, $606, $f) | 0;
      $608 = $9 - $530 | 0;
      $610 = $l$0$i - $608 - $606 | 0;
      if (($610 | 0) > 0) {
       _memset($pad$i | 0, 48, ($610 >>> 0 > 256 ? 256 : $610) | 0) | 0;
       if ($610 >>> 0 > 255) {
        $$01$i67$i = $610;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i67$i = $$01$i67$i + -256 | 0;
        } while ($$01$i67$i >>> 0 > 255);
        $$0$lcssa$i69$i = $610 & 255;
       } else $$0$lcssa$i69$i = $610;
       ___fwritex($pad$i, $$0$lcssa$i69$i, $f) | 0;
      }
      ___fwritex($530, $608, $f) | 0;
      if (($588 | 0) == 8192 & $590) {
       $619 = $w$1 - $587 | 0;
       _memset($pad$i | 0, 32, ($619 >>> 0 > 256 ? 256 : $619) | 0) | 0;
       if ($619 >>> 0 > 255) {
        $$01$i74$i = $619;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i74$i = $$01$i74$i + -256 | 0;
        } while ($$01$i74$i >>> 0 > 255);
        $$0$lcssa$i76$i = $619 & 255;
       } else $$0$lcssa$i76$i = $619;
       ___fwritex($pad$i, $$0$lcssa$i76$i, $f) | 0;
      }
      $$0$i = $590 ? $w$1 : $587;
      break;
     }
     $$p$i = ($p$0 | 0) < 0 ? 6 : $p$0;
     if ($469) {
      $629 = (HEAP32[$e2$i >> 2] | 0) + -28 | 0;
      HEAP32[$e2$i >> 2] = $629;
      $$3$i = $468 * 268435456.0;
      $631 = $629;
     } else {
      $$3$i = $468;
      $631 = HEAP32[$e2$i >> 2] | 0;
     }
     $$31$i = ($631 | 0) < 0 ? $big$i : $13;
     $632 = $$31$i;
     $$4$i = $$3$i;
     $z$0$i = $$31$i;
     while (1) {
      $633 = ~~$$4$i >>> 0;
      HEAP32[$z$0$i >> 2] = $633;
      $634 = $z$0$i + 4 | 0;
      $$4$i = ($$4$i - +($633 >>> 0)) * 1.0e9;
      if (!($$4$i != 0.0)) {
       $$lcssa451 = $634;
       break;
      } else $z$0$i = $634;
     }
     $$pr$i = HEAP32[$e2$i >> 2] | 0;
     if (($$pr$i | 0) > 0) {
      $641 = $$pr$i;
      $a$1253$i = $$31$i;
      $z$1252$i = $$lcssa451;
      while (1) {
       $642 = ($641 | 0) > 29 ? 29 : $641;
       $d$0245$i = $z$1252$i + -4 | 0;
       do if ($d$0245$i >>> 0 < $a$1253$i >>> 0) $a$2$ph$i = $a$1253$i; else {
        $carry$0246$i = 0;
        $d$0247$i = $d$0245$i;
        while (1) {
         $645 = _bitshift64Shl(HEAP32[$d$0247$i >> 2] | 0, 0, $642 | 0) | 0;
         $647 = _i64Add($645 | 0, tempRet0 | 0, $carry$0246$i | 0, 0) | 0;
         $648 = tempRet0;
         $649 = ___uremdi3($647 | 0, $648 | 0, 1e9, 0) | 0;
         HEAP32[$d$0247$i >> 2] = $649;
         $651 = ___udivdi3($647 | 0, $648 | 0, 1e9, 0) | 0;
         $d$0247$i = $d$0247$i + -4 | 0;
         if ($d$0247$i >>> 0 < $a$1253$i >>> 0) {
          $$lcssa452 = $651;
          break;
         } else $carry$0246$i = $651;
        }
        if (!$$lcssa452) {
         $a$2$ph$i = $a$1253$i;
         break;
        }
        $655 = $a$1253$i + -4 | 0;
        HEAP32[$655 >> 2] = $$lcssa452;
        $a$2$ph$i = $655;
       } while (0);
       $z$2$i = $z$1252$i;
       while (1) {
        if ($z$2$i >>> 0 <= $a$2$ph$i >>> 0) {
         $z$2$i$lcssa = $z$2$i;
         break;
        }
        $657 = $z$2$i + -4 | 0;
        if (!(HEAP32[$657 >> 2] | 0)) $z$2$i = $657; else {
         $z$2$i$lcssa = $z$2$i;
         break;
        }
       }
       $661 = (HEAP32[$e2$i >> 2] | 0) - $642 | 0;
       HEAP32[$e2$i >> 2] = $661;
       if (($661 | 0) > 0) {
        $641 = $661;
        $a$1253$i = $a$2$ph$i;
        $z$1252$i = $z$2$i$lcssa;
       } else {
        $$pr146$i = $661;
        $a$1$lcssa$i = $a$2$ph$i;
        $z$1$lcssa$i = $z$2$i$lcssa;
        break;
       }
      }
     } else {
      $$pr146$i = $$pr$i;
      $a$1$lcssa$i = $$31$i;
      $z$1$lcssa$i = $$lcssa451;
     }
     L220 : do if (($$pr146$i | 0) < 0) {
      $666 = (($$p$i + 25 | 0) / 9 | 0) + 1 | 0;
      if (($472 | 0) != 102) {
       $700 = $$pr146$i;
       $a$3240$i = $a$1$lcssa$i;
       $z$3239$i = $z$1$lcssa$i;
       while (1) {
        $699 = 0 - $700 | 0;
        $702 = ($699 | 0) > 9 ? 9 : $699;
        do if ($a$3240$i >>> 0 < $z$3239$i >>> 0) {
         $708 = (1 << $702) + -1 | 0;
         $709 = 1e9 >>> $702;
         $carry3$0234$i = 0;
         $d$1233$i = $a$3240$i;
         while (1) {
          $710 = HEAP32[$d$1233$i >> 2] | 0;
          HEAP32[$d$1233$i >> 2] = ($710 >>> $702) + $carry3$0234$i;
          $714 = Math_imul($710 & $708, $709) | 0;
          $d$1233$i = $d$1233$i + 4 | 0;
          if ($d$1233$i >>> 0 >= $z$3239$i >>> 0) {
           $$lcssa454 = $714;
           break;
          } else $carry3$0234$i = $714;
         }
         $$a$3$i = (HEAP32[$a$3240$i >> 2] | 0) == 0 ? $a$3240$i + 4 | 0 : $a$3240$i;
         if (!$$lcssa454) {
          $$a$3306$i = $$a$3$i;
          $z$4$i = $z$3239$i;
          break;
         }
         HEAP32[$z$3239$i >> 2] = $$lcssa454;
         $$a$3306$i = $$a$3$i;
         $z$4$i = $z$3239$i + 4 | 0;
        } else {
         $$a$3306$i = (HEAP32[$a$3240$i >> 2] | 0) == 0 ? $a$3240$i + 4 | 0 : $a$3240$i;
         $z$4$i = $z$3239$i;
        } while (0);
        $$z$4$i = ($z$4$i - $$a$3306$i >> 2 | 0) > ($666 | 0) ? $$a$3306$i + ($666 << 2) | 0 : $z$4$i;
        $700 = (HEAP32[$e2$i >> 2] | 0) + $702 | 0;
        HEAP32[$e2$i >> 2] = $700;
        if (($700 | 0) >= 0) {
         $a$3$lcssa$i = $$a$3306$i;
         $z$3$lcssa$i = $$z$4$i;
         break L220;
        } else {
         $a$3240$i = $$a$3306$i;
         $z$3239$i = $$z$4$i;
        }
       }
      }
      $668 = $$31$i + ($666 << 2) | 0;
      $670 = $$pr146$i;
      $a$3240$us$i = $a$1$lcssa$i;
      $z$3239$us$i = $z$1$lcssa$i;
      while (1) {
       $669 = 0 - $670 | 0;
       $672 = ($669 | 0) > 9 ? 9 : $669;
       do if ($a$3240$us$i >>> 0 < $z$3239$us$i >>> 0) {
        $691 = (1 << $672) + -1 | 0;
        $695 = 1e9 >>> $672;
        $carry3$0234$us$i = 0;
        $d$1233$us$i = $a$3240$us$i;
        while (1) {
         $689 = HEAP32[$d$1233$us$i >> 2] | 0;
         HEAP32[$d$1233$us$i >> 2] = ($689 >>> $672) + $carry3$0234$us$i;
         $694 = Math_imul($689 & $691, $695) | 0;
         $d$1233$us$i = $d$1233$us$i + 4 | 0;
         if ($d$1233$us$i >>> 0 >= $z$3239$us$i >>> 0) {
          $$lcssa455 = $694;
          break;
         } else $carry3$0234$us$i = $694;
        }
        $$a$3$us$i = (HEAP32[$a$3240$us$i >> 2] | 0) == 0 ? $a$3240$us$i + 4 | 0 : $a$3240$us$i;
        if (!$$lcssa455) {
         $$a$3$us304$i = $$a$3$us$i;
         $z$4$us$i = $z$3239$us$i;
         break;
        }
        HEAP32[$z$3239$us$i >> 2] = $$lcssa455;
        $$a$3$us304$i = $$a$3$us$i;
        $z$4$us$i = $z$3239$us$i + 4 | 0;
       } else {
        $$a$3$us304$i = (HEAP32[$a$3240$us$i >> 2] | 0) == 0 ? $a$3240$us$i + 4 | 0 : $a$3240$us$i;
        $z$4$us$i = $z$3239$us$i;
       } while (0);
       $$z$4$us$i = ($z$4$us$i - $632 >> 2 | 0) > ($666 | 0) ? $668 : $z$4$us$i;
       $670 = (HEAP32[$e2$i >> 2] | 0) + $672 | 0;
       HEAP32[$e2$i >> 2] = $670;
       if (($670 | 0) >= 0) {
        $a$3$lcssa$i = $$a$3$us304$i;
        $z$3$lcssa$i = $$z$4$us$i;
        break;
       } else {
        $a$3240$us$i = $$a$3$us304$i;
        $z$3239$us$i = $$z$4$us$i;
       }
      }
     } else {
      $a$3$lcssa$i = $a$1$lcssa$i;
      $z$3$lcssa$i = $z$1$lcssa$i;
     } while (0);
     do if ($a$3$lcssa$i >>> 0 < $z$3$lcssa$i >>> 0) {
      $735 = ($632 - $a$3$lcssa$i >> 2) * 9 | 0;
      $736 = HEAP32[$a$3$lcssa$i >> 2] | 0;
      if ($736 >>> 0 < 10) {
       $e$1$i = $735;
       break;
      } else {
       $e$0229$i = $735;
       $i$0228$i = 10;
      }
      while (1) {
       $i$0228$i = $i$0228$i * 10 | 0;
       $739 = $e$0229$i + 1 | 0;
       if ($736 >>> 0 < $i$0228$i >>> 0) {
        $e$1$i = $739;
        break;
       } else $e$0229$i = $739;
      }
     } else $e$1$i = 0; while (0);
     $744 = ($472 | 0) == 103;
     $745 = ($$p$i | 0) != 0;
     $747 = $$p$i - (($472 | 0) != 102 ? $e$1$i : 0) + (($745 & $744) << 31 >> 31) | 0;
     if (($747 | 0) < ((($z$3$lcssa$i - $632 >> 2) * 9 | 0) + -9 | 0)) {
      $754 = $747 + 9216 | 0;
      $755 = ($754 | 0) / 9 | 0;
      $756 = $$31$i + ($755 + -1023 << 2) | 0;
      $j$0221$i = (($754 | 0) % 9 | 0) + 1 | 0;
      if (($j$0221$i | 0) < 9) {
       $i$1222$i = 10;
       $j$0223$i = $j$0221$i;
       while (1) {
        $759 = $i$1222$i * 10 | 0;
        $j$0223$i = $j$0223$i + 1 | 0;
        if (($j$0223$i | 0) == 9) {
         $i$1$lcssa$i = $759;
         break;
        } else $i$1222$i = $759;
       }
      } else $i$1$lcssa$i = 10;
      $760 = HEAP32[$756 >> 2] | 0;
      $761 = ($760 >>> 0) % ($i$1$lcssa$i >>> 0) | 0;
      if (!$761) if (($$31$i + ($755 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
       $a$7$i = $a$3$lcssa$i;
       $d$3$i = $756;
       $e$3$i = $e$1$i;
      } else label = 221; else label = 221;
      do if ((label | 0) == 221) {
       label = 0;
       $$20$i = ((($760 >>> 0) / ($i$1$lcssa$i >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       $768 = ($i$1$lcssa$i | 0) / 2 | 0;
       do if ($761 >>> 0 < $768 >>> 0) $small$0$i = .5; else {
        if (($761 | 0) == ($768 | 0)) if (($$31$i + ($755 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
         $small$0$i = 1.0;
         break;
        }
        $small$0$i = 1.5;
       } while (0);
       do if (!$pl$0$i) {
        $round6$1$i = $$20$i;
        $small$1$i = $small$0$i;
       } else {
        if ((HEAP8[$prefix$0$i >> 0] | 0) != 45) {
         $round6$1$i = $$20$i;
         $small$1$i = $small$0$i;
         break;
        }
        $round6$1$i = -$$20$i;
        $small$1$i = -$small$0$i;
       } while (0);
       $778 = $760 - $761 | 0;
       HEAP32[$756 >> 2] = $778;
       if (!($round6$1$i + $small$1$i != $round6$1$i)) {
        $a$7$i = $a$3$lcssa$i;
        $d$3$i = $756;
        $e$3$i = $e$1$i;
        break;
       }
       $781 = $778 + $i$1$lcssa$i | 0;
       HEAP32[$756 >> 2] = $781;
       if ($781 >>> 0 > 999999999) {
        $a$5215$i = $a$3$lcssa$i;
        $d$2214$i = $756;
        while (1) {
         $783 = $d$2214$i + -4 | 0;
         HEAP32[$d$2214$i >> 2] = 0;
         if ($783 >>> 0 < $a$5215$i >>> 0) {
          $785 = $a$5215$i + -4 | 0;
          HEAP32[$785 >> 2] = 0;
          $a$6$i = $785;
         } else $a$6$i = $a$5215$i;
         $787 = (HEAP32[$783 >> 2] | 0) + 1 | 0;
         HEAP32[$783 >> 2] = $787;
         if ($787 >>> 0 > 999999999) {
          $a$5215$i = $a$6$i;
          $d$2214$i = $783;
         } else {
          $a$5$lcssa$i = $a$6$i;
          $d$2$lcssa$i = $783;
          break;
         }
        }
       } else {
        $a$5$lcssa$i = $a$3$lcssa$i;
        $d$2$lcssa$i = $756;
       }
       $792 = ($632 - $a$5$lcssa$i >> 2) * 9 | 0;
       $793 = HEAP32[$a$5$lcssa$i >> 2] | 0;
       if ($793 >>> 0 < 10) {
        $a$7$i = $a$5$lcssa$i;
        $d$3$i = $d$2$lcssa$i;
        $e$3$i = $792;
        break;
       } else {
        $e$2210$i = $792;
        $i$2209$i = 10;
       }
       while (1) {
        $i$2209$i = $i$2209$i * 10 | 0;
        $796 = $e$2210$i + 1 | 0;
        if ($793 >>> 0 < $i$2209$i >>> 0) {
         $a$7$i = $a$5$lcssa$i;
         $d$3$i = $d$2$lcssa$i;
         $e$3$i = $796;
         break;
        } else $e$2210$i = $796;
       }
      } while (0);
      $798 = $d$3$i + 4 | 0;
      $a$8$ph$i = $a$7$i;
      $e$4$ph$i = $e$3$i;
      $z$6$ph$i = $z$3$lcssa$i >>> 0 > $798 >>> 0 ? $798 : $z$3$lcssa$i;
     } else {
      $a$8$ph$i = $a$3$lcssa$i;
      $e$4$ph$i = $e$1$i;
      $z$6$ph$i = $z$3$lcssa$i;
     }
     $800 = 0 - $e$4$ph$i | 0;
     $z$6$i = $z$6$ph$i;
     while (1) {
      if ($z$6$i >>> 0 <= $a$8$ph$i >>> 0) {
       $$lcssa275$i = 0;
       $z$6$i$lcssa = $z$6$i;
       break;
      }
      $802 = $z$6$i + -4 | 0;
      if (!(HEAP32[$802 >> 2] | 0)) $z$6$i = $802; else {
       $$lcssa275$i = 1;
       $z$6$i$lcssa = $z$6$i;
       break;
      }
     }
     do if ($744) {
      $$p$$i = ($745 & 1 ^ 1) + $$p$i | 0;
      if (($$p$$i | 0) > ($e$4$ph$i | 0) & ($e$4$ph$i | 0) > -5) {
       $$013$i = $t$0 + -1 | 0;
       $$210$i = $$p$$i + -1 - $e$4$ph$i | 0;
      } else {
       $$013$i = $t$0 + -2 | 0;
       $$210$i = $$p$$i + -1 | 0;
      }
      $813 = $fl$1$ & 8;
      if ($813) {
       $$114$i = $$013$i;
       $$311$i = $$210$i;
       $$pre$phi302$iZ2D = $813;
       break;
      }
      do if ($$lcssa275$i) {
       $816 = HEAP32[$z$6$i$lcssa + -4 >> 2] | 0;
       if (!$816) {
        $j$2$i = 9;
        break;
       }
       if (!(($816 >>> 0) % 10 | 0)) {
        $i$3205$i = 10;
        $j$1206$i = 0;
       } else {
        $j$2$i = 0;
        break;
       }
       while (1) {
        $i$3205$i = $i$3205$i * 10 | 0;
        $821 = $j$1206$i + 1 | 0;
        if (($816 >>> 0) % ($i$3205$i >>> 0) | 0) {
         $j$2$i = $821;
         break;
        } else $j$1206$i = $821;
       }
      } else $j$2$i = 9; while (0);
      $830 = (($z$6$i$lcssa - $632 >> 2) * 9 | 0) + -9 | 0;
      if (($$013$i | 32 | 0) == 102) {
       $831 = $830 - $j$2$i | 0;
       $$21$i = ($831 | 0) < 0 ? 0 : $831;
       $$114$i = $$013$i;
       $$311$i = ($$210$i | 0) < ($$21$i | 0) ? $$210$i : $$21$i;
       $$pre$phi302$iZ2D = 0;
       break;
      } else {
       $835 = $830 + $e$4$ph$i - $j$2$i | 0;
       $$23$i = ($835 | 0) < 0 ? 0 : $835;
       $$114$i = $$013$i;
       $$311$i = ($$210$i | 0) < ($$23$i | 0) ? $$210$i : $$23$i;
       $$pre$phi302$iZ2D = 0;
       break;
      }
     } else {
      $$114$i = $t$0;
      $$311$i = $$p$i;
      $$pre$phi302$iZ2D = $fl$1$ & 8;
     } while (0);
     $838 = $$311$i | $$pre$phi302$iZ2D;
     $840 = ($838 | 0) != 0 & 1;
     $842 = ($$114$i | 32 | 0) == 102;
     if ($842) {
      $$pn$i = ($e$4$ph$i | 0) > 0 ? $e$4$ph$i : 0;
      $estr$2$i = 0;
     } else {
      $846 = ($e$4$ph$i | 0) < 0 ? $800 : $e$4$ph$i;
      if (($846 | 0) < 0) {
       $$05$i79$i = $7;
       $850 = $846;
       $851 = (($846 | 0) < 0) << 31 >> 31;
       while (1) {
        $852 = ___uremdi3($850 | 0, $851 | 0, 10, 0) | 0;
        $856 = $$05$i79$i + -1 | 0;
        HEAP8[$856 >> 0] = $852 | 48;
        $857 = ___udivdi3($850 | 0, $851 | 0, 10, 0) | 0;
        if ($851 >>> 0 > 9 | ($851 | 0) == 9 & $850 >>> 0 > 4294967295) {
         $$05$i79$i = $856;
         $850 = $857;
         $851 = tempRet0;
        } else {
         $$lcssa461 = $856;
         $1179 = $857;
         break;
        }
       }
       $$0$lcssa$i84$i = $$lcssa461;
       $$01$lcssa$off0$i85$i = $1179;
      } else {
       $$0$lcssa$i84$i = $7;
       $$01$lcssa$off0$i85$i = $846;
      }
      if (!$$01$lcssa$off0$i85$i) $estr$1$ph$i = $$0$lcssa$i84$i; else {
       $$12$i87$i = $$0$lcssa$i84$i;
       $y$03$i86$i = $$01$lcssa$off0$i85$i;
       while (1) {
        $868 = $$12$i87$i + -1 | 0;
        HEAP8[$868 >> 0] = ($y$03$i86$i >>> 0) % 10 | 0 | 48;
        if ($y$03$i86$i >>> 0 < 10) {
         $estr$1$ph$i = $868;
         break;
        } else {
         $$12$i87$i = $868;
         $y$03$i86$i = ($y$03$i86$i >>> 0) / 10 | 0;
        }
       }
      }
      if (($9 - $estr$1$ph$i | 0) < 2) {
       $estr$1201$i = $estr$1$ph$i;
       while (1) {
        $874 = $estr$1201$i + -1 | 0;
        HEAP8[$874 >> 0] = 48;
        if (($9 - $874 | 0) < 2) $estr$1201$i = $874; else {
         $estr$1$lcssa$i = $874;
         break;
        }
       }
      } else $estr$1$lcssa$i = $estr$1$ph$i;
      HEAP8[$estr$1$lcssa$i + -1 >> 0] = ($e$4$ph$i >> 31 & 2) + 43;
      $884 = $estr$1$lcssa$i + -2 | 0;
      HEAP8[$884 >> 0] = $$114$i;
      $$pn$i = $9 - $884 | 0;
      $estr$2$i = $884;
     }
     $889 = $pl$0$i + 1 + $$311$i + $840 + $$pn$i | 0;
     $890 = $fl$1$ & 73728;
     $892 = ($w$1 | 0) > ($889 | 0);
     if (($890 | 0) == 0 & $892) {
      $893 = $w$1 - $889 | 0;
      _memset($pad$i | 0, 32, ($893 >>> 0 > 256 ? 256 : $893) | 0) | 0;
      if ($893 >>> 0 > 255) {
       $$01$i95$i = $893;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i95$i = $$01$i95$i + -256 | 0;
       } while ($$01$i95$i >>> 0 > 255);
       $$0$lcssa$i97$i = $893 & 255;
      } else $$0$lcssa$i97$i = $893;
      ___fwritex($pad$i, $$0$lcssa$i97$i, $f) | 0;
     }
     ___fwritex($prefix$0$i, $pl$0$i, $f) | 0;
     if (($890 | 0) == 65536 & $892) {
      $901 = $w$1 - $889 | 0;
      _memset($pad$i | 0, 48, ($901 >>> 0 > 256 ? 256 : $901) | 0) | 0;
      if ($901 >>> 0 > 255) {
       $$01$i102$i = $901;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i102$i = $$01$i102$i + -256 | 0;
       } while ($$01$i102$i >>> 0 > 255);
       $$0$lcssa$i104$i = $901 & 255;
      } else $$0$lcssa$i104$i = $901;
      ___fwritex($pad$i, $$0$lcssa$i104$i, $f) | 0;
     }
     if ($842) {
      $r$0$a$8$i = $a$8$ph$i >>> 0 > $$31$i >>> 0 ? $$31$i : $a$8$ph$i;
      $d$4191$i = $r$0$a$8$i;
      while (1) {
       $909 = HEAP32[$d$4191$i >> 2] | 0;
       if (!$909) $$1$lcssa$i112$i = $14; else {
        $$12$i110$i = $14;
        $y$03$i109$i = $909;
        while (1) {
         $914 = $$12$i110$i + -1 | 0;
         HEAP8[$914 >> 0] = ($y$03$i109$i >>> 0) % 10 | 0 | 48;
         if ($y$03$i109$i >>> 0 < 10) {
          $$1$lcssa$i112$i = $914;
          break;
         } else {
          $$12$i110$i = $914;
          $y$03$i109$i = ($y$03$i109$i >>> 0) / 10 | 0;
         }
        }
       }
       do if (($d$4191$i | 0) == ($r$0$a$8$i | 0)) {
        if (($$1$lcssa$i112$i | 0) != ($14 | 0)) {
         $s7$1$i = $$1$lcssa$i112$i;
         break;
        }
        HEAP8[$16 >> 0] = 48;
        $s7$1$i = $16;
       } else {
        if ($$1$lcssa$i112$i >>> 0 > $buf$i >>> 0) $s7$0188$i = $$1$lcssa$i112$i; else {
         $s7$1$i = $$1$lcssa$i112$i;
         break;
        }
        while (1) {
         $919 = $s7$0188$i + -1 | 0;
         HEAP8[$919 >> 0] = 48;
         if ($919 >>> 0 > $buf$i >>> 0) $s7$0188$i = $919; else {
          $s7$1$i = $919;
          break;
         }
        }
       } while (0);
       ___fwritex($s7$1$i, $15 - $s7$1$i | 0, $f) | 0;
       $924 = $d$4191$i + 4 | 0;
       if ($924 >>> 0 > $$31$i >>> 0) {
        $$lcssa470 = $924;
        break;
       } else $d$4191$i = $924;
      }
      if ($838) ___fwritex(28365, 1, $f) | 0;
      if (($$311$i | 0) > 0 & $$lcssa470 >>> 0 < $z$6$i$lcssa >>> 0) {
       $$412184$i = $$311$i;
       $d$5183$i = $$lcssa470;
       while (1) {
        $930 = HEAP32[$d$5183$i >> 2] | 0;
        if (!$930) {
         $s8$0180$i = $14;
         label = 289;
        } else {
         $$12$i119$i = $14;
         $y$03$i118$i = $930;
         while (1) {
          $935 = $$12$i119$i + -1 | 0;
          HEAP8[$935 >> 0] = ($y$03$i118$i >>> 0) % 10 | 0 | 48;
          if ($y$03$i118$i >>> 0 < 10) {
           $$lcssa471 = $935;
           break;
          } else {
           $$12$i119$i = $935;
           $y$03$i118$i = ($y$03$i118$i >>> 0) / 10 | 0;
          }
         }
         if ($$lcssa471 >>> 0 > $buf$i >>> 0) {
          $s8$0180$i = $$lcssa471;
          label = 289;
         } else $s8$0$lcssa$i = $$lcssa471;
        }
        if ((label | 0) == 289) while (1) {
         label = 0;
         $939 = $s8$0180$i + -1 | 0;
         HEAP8[$939 >> 0] = 48;
         if ($939 >>> 0 > $buf$i >>> 0) {
          $s8$0180$i = $939;
          label = 289;
         } else {
          $s8$0$lcssa$i = $939;
          break;
         }
        }
        $941 = ($$412184$i | 0) > 9;
        ___fwritex($s8$0$lcssa$i, $941 ? 9 : $$412184$i, $f) | 0;
        $d$5183$i = $d$5183$i + 4 | 0;
        $944 = $$412184$i + -9 | 0;
        if (!($941 & $d$5183$i >>> 0 < $z$6$i$lcssa >>> 0)) {
         $$412$lcssa$i = $944;
         break;
        } else $$412184$i = $944;
       }
      } else $$412$lcssa$i = $$311$i;
      if (($$412$lcssa$i | 0) > 0) {
       _memset($pad$i | 0, 48, ($$412$lcssa$i >>> 0 > 256 ? 256 : $$412$lcssa$i) | 0) | 0;
       if ($$412$lcssa$i >>> 0 > 255) {
        $$01$i126$i = $$412$lcssa$i;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i126$i = $$01$i126$i + -256 | 0;
        } while ($$01$i126$i >>> 0 > 255);
        $$0$lcssa$i128$i = $$412$lcssa$i & 255;
       } else $$0$lcssa$i128$i = $$412$lcssa$i;
       ___fwritex($pad$i, $$0$lcssa$i128$i, $f) | 0;
      }
     } else {
      $z$6$$i = $$lcssa275$i ? $z$6$i$lcssa : $a$8$ph$i + 4 | 0;
      do if (($$311$i | 0) > -1) {
       $956 = ($$pre$phi302$iZ2D | 0) == 0;
       $$5196$i = $$311$i;
       $d$6195$i = $a$8$ph$i;
       while (1) {
        $957 = HEAP32[$d$6195$i >> 2] | 0;
        if (!$957) label = 303; else {
         $$12$i134$i = $14;
         $y$03$i133$i = $957;
         while (1) {
          $962 = $$12$i134$i + -1 | 0;
          HEAP8[$962 >> 0] = ($y$03$i133$i >>> 0) % 10 | 0 | 48;
          if ($y$03$i133$i >>> 0 < 10) {
           $$12$i134$i$lcssa = $$12$i134$i;
           $$lcssa465 = $962;
           break;
          } else {
           $$12$i134$i = $962;
           $y$03$i133$i = ($y$03$i133$i >>> 0) / 10 | 0;
          }
         }
         if (($$lcssa465 | 0) == ($14 | 0)) label = 303; else {
          $1181 = $$12$i134$i$lcssa;
          $s9$0$i = $$lcssa465;
         }
        }
        if ((label | 0) == 303) {
         label = 0;
         HEAP8[$16 >> 0] = 48;
         $1181 = $14;
         $s9$0$i = $16;
        }
        do if (($d$6195$i | 0) == ($a$8$ph$i | 0)) {
         ___fwritex($s9$0$i, 1, $f) | 0;
         if ($956 & ($$5196$i | 0) < 1) {
          $s9$2$i = $1181;
          break;
         }
         ___fwritex(28365, 1, $f) | 0;
         $s9$2$i = $1181;
        } else {
         if ($s9$0$i >>> 0 > $buf$i >>> 0) $s9$1192$i = $s9$0$i; else {
          $s9$2$i = $s9$0$i;
          break;
         }
         while (1) {
          $968 = $s9$1192$i + -1 | 0;
          HEAP8[$968 >> 0] = 48;
          if ($968 >>> 0 > $buf$i >>> 0) $s9$1192$i = $968; else {
           $s9$2$i = $968;
           break;
          }
         }
        } while (0);
        $972 = $15 - $s9$2$i | 0;
        ___fwritex($s9$2$i, ($$5196$i | 0) > ($972 | 0) ? $972 : $$5196$i, $f) | 0;
        $975 = $$5196$i - $972 | 0;
        $d$6195$i = $d$6195$i + 4 | 0;
        if (!($d$6195$i >>> 0 < $z$6$$i >>> 0 & ($975 | 0) > -1)) {
         $$lcssa467 = $975;
         break;
        } else $$5196$i = $975;
       }
       if (($$lcssa467 | 0) <= 0) break;
       _memset($pad$i | 0, 48, ($$lcssa467 >>> 0 > 256 ? 256 : $$lcssa467) | 0) | 0;
       if ($$lcssa467 >>> 0 > 255) {
        $$01$i141$i = $$lcssa467;
        do {
         ___fwritex($pad$i, 256, $f) | 0;
         $$01$i141$i = $$01$i141$i + -256 | 0;
        } while ($$01$i141$i >>> 0 > 255);
        $$0$lcssa$i143$i = $$lcssa467 & 255;
       } else $$0$lcssa$i143$i = $$lcssa467;
       ___fwritex($pad$i, $$0$lcssa$i143$i, $f) | 0;
      } else {} while (0);
      ___fwritex($estr$2$i, $9 - $estr$2$i | 0, $f) | 0;
     }
     if (($890 | 0) == 8192 & $892) {
      $990 = $w$1 - $889 | 0;
      _memset($pad$i | 0, 32, ($990 >>> 0 > 256 ? 256 : $990) | 0) | 0;
      if ($990 >>> 0 > 255) {
       $$01$i$i = $990;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i$i = $$01$i$i + -256 | 0;
       } while ($$01$i$i >>> 0 > 255);
       $$0$lcssa$i$i = $990 & 255;
      } else $$0$lcssa$i$i = $990;
      ___fwritex($pad$i, $$0$lcssa$i$i, $f) | 0;
     }
     $$0$i = $892 ? $w$1 : $889;
    } else {
     $442 = ($t$0 & 32 | 0) != 0;
     $444 = $$07$i != $$07$i | 0.0 != 0.0;
     $pl$1$i = $444 ? 0 : $pl$0$i;
     $s1$0$i = $444 ? ($442 ? 28357 : 28361) : $442 ? 28349 : 28353;
     $446 = $pl$1$i + 3 | 0;
     $449 = ($w$1 | 0) > ($446 | 0);
     if (($fl$1$ & 8192 | 0) == 0 & $449) {
      $450 = $w$1 - $446 | 0;
      _memset($pad$i | 0, 32, ($450 >>> 0 > 256 ? 256 : $450) | 0) | 0;
      if ($450 >>> 0 > 255) {
       $$01$i37$i = $450;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i37$i = $$01$i37$i + -256 | 0;
       } while ($$01$i37$i >>> 0 > 255);
       $$0$lcssa$i39$i = $450 & 255;
      } else $$0$lcssa$i39$i = $450;
      ___fwritex($pad$i, $$0$lcssa$i39$i, $f) | 0;
     }
     ___fwritex($prefix$0$i, $pl$1$i, $f) | 0;
     ___fwritex($s1$0$i, 3, $f) | 0;
     if (($fl$1$ & 73728 | 0) == 8192 & $449) {
      $459 = $w$1 - $446 | 0;
      _memset($pad$i | 0, 32, ($459 >>> 0 > 256 ? 256 : $459) | 0) | 0;
      if ($459 >>> 0 > 255) {
       $$01$i44$i = $459;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i44$i = $$01$i44$i + -256 | 0;
       } while ($$01$i44$i >>> 0 > 255);
       $$0$lcssa$i46$i = $459 & 255;
      } else $$0$lcssa$i46$i = $459;
      ___fwritex($pad$i, $$0$lcssa$i46$i, $f) | 0;
     }
     $$0$i = $449 ? $w$1 : $446;
    } while (0);
    $1165 = $288;
    $1166 = $261;
    $cnt$0 = $cnt$1;
    $fmt89 = $$lcssa448;
    $l$0 = $$0$i;
    $l10n$0 = $l10n$3;
    continue L1;
    break;
   }
  default:
   {
    $1169 = $288;
    $1170 = $261;
    $a$2 = $fmt89;
    $fl$6 = $fl$1$;
    $p$5 = $p$0;
    $pl$2 = 0;
    $prefix$2 = 28313;
    $z$2 = $2;
   }
  } while (0);
  if ((label | 0) == 73) {
   label = 0;
   $285 = $t$1 & 32;
   if (($261 | 0) == 0 & ($288 | 0) == 0) {
    $363 = $261;
    $365 = $288;
    $a$0 = $2;
    $fl$4 = $fl$3;
    $p$2 = $p$1;
    $pl$1 = 0;
    $prefix$1 = 28313;
    label = 89;
   } else {
    $$012$i = $2;
    $291 = $261;
    $298 = $288;
    while (1) {
     $297 = $$012$i + -1 | 0;
     HEAP8[$297 >> 0] = HEAPU8[28297 + ($291 & 15) >> 0] | $285;
     $291 = _bitshift64Lshr($291 | 0, $298 | 0, 4) | 0;
     $298 = tempRet0;
     if (($291 | 0) == 0 & ($298 | 0) == 0) {
      $$lcssa482 = $297;
      break;
     } else $$012$i = $297;
    }
    if (!($fl$3 & 8)) {
     $363 = $261;
     $365 = $288;
     $a$0 = $$lcssa482;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 0;
     $prefix$1 = 28313;
     label = 89;
    } else {
     $363 = $261;
     $365 = $288;
     $a$0 = $$lcssa482;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 2;
     $prefix$1 = 28313 + ($t$1 >> 4) | 0;
     label = 89;
    }
   }
  } else if ((label | 0) == 84) {
   label = 0;
   if ($333 >>> 0 > 0 | ($333 | 0) == 0 & $335 >>> 0 > 4294967295) {
    $$05$i = $2;
    $339 = $335;
    $340 = $333;
    while (1) {
     $341 = ___uremdi3($339 | 0, $340 | 0, 10, 0) | 0;
     $345 = $$05$i + -1 | 0;
     HEAP8[$345 >> 0] = $341 | 48;
     $346 = ___udivdi3($339 | 0, $340 | 0, 10, 0) | 0;
     if ($340 >>> 0 > 9 | ($340 | 0) == 9 & $339 >>> 0 > 4294967295) {
      $$05$i = $345;
      $339 = $346;
      $340 = tempRet0;
     } else {
      $$lcssa478 = $345;
      $1171 = $346;
      break;
     }
    }
    $$0$lcssa$i53 = $$lcssa478;
    $$01$lcssa$off0$i = $1171;
   } else {
    $$0$lcssa$i53 = $2;
    $$01$lcssa$off0$i = $335;
   }
   if (!$$01$lcssa$off0$i) {
    $363 = $335;
    $365 = $333;
    $a$0 = $$0$lcssa$i53;
    $fl$4 = $fl$1$;
    $p$2 = $p$0;
    $pl$1 = $pl$0;
    $prefix$1 = $prefix$0;
    label = 89;
   } else {
    $$12$i = $$0$lcssa$i53;
    $y$03$i = $$01$lcssa$off0$i;
    while (1) {
     $357 = $$12$i + -1 | 0;
     HEAP8[$357 >> 0] = ($y$03$i >>> 0) % 10 | 0 | 48;
     if ($y$03$i >>> 0 < 10) {
      $363 = $335;
      $365 = $333;
      $a$0 = $357;
      $fl$4 = $fl$1$;
      $p$2 = $p$0;
      $pl$1 = $pl$0;
      $prefix$1 = $prefix$0;
      label = 89;
      break;
     } else {
      $$12$i = $357;
      $y$03$i = ($y$03$i >>> 0) / 10 | 0;
     }
    }
   }
  } else if ((label | 0) == 94) {
   label = 0;
   $381 = _memchr($a$1, 0, $p$0) | 0;
   $382 = ($381 | 0) == 0;
   $1169 = $288;
   $1170 = $261;
   $a$2 = $a$1;
   $fl$6 = $259;
   $p$5 = $382 ? $p$0 : $381 - $a$1 | 0;
   $pl$2 = 0;
   $prefix$2 = 28313;
   $z$2 = $382 ? $a$1 + $p$0 | 0 : $381;
  } else if ((label | 0) == 97) {
   label = 0;
   $i$0180 = 0;
   $l$1179 = 0;
   $ws$0181 = $1173;
   while (1) {
    $389 = HEAP32[$ws$0181 >> 2] | 0;
    if (!$389) {
     $i$0$lcssa = $i$0180;
     $l$2 = $l$1179;
     break;
    }
    $391 = _wctomb($mb, $389) | 0;
    if (($391 | 0) < 0 | $391 >>> 0 > ($p$4274 - $i$0180 | 0) >>> 0) {
     $i$0$lcssa = $i$0180;
     $l$2 = $391;
     break;
    }
    $396 = $391 + $i$0180 | 0;
    if ($p$4274 >>> 0 > $396 >>> 0) {
     $i$0180 = $396;
     $l$1179 = $391;
     $ws$0181 = $ws$0181 + 4 | 0;
    } else {
     $i$0$lcssa = $396;
     $l$2 = $391;
     break;
    }
   }
   if (($l$2 | 0) < 0) {
    $$0 = -1;
    label = 363;
    break;
   } else {
    $1175 = $1174;
    $1176 = $1173;
    $i$0$lcssa275 = $i$0$lcssa;
    label = 102;
   }
  }
  if ((label | 0) == 89) {
   label = 0;
   $$fl$4 = ($p$2 | 0) > -1 ? $fl$4 & -65537 : $fl$4;
   $366 = ($363 | 0) != 0 | ($365 | 0) != 0;
   if ($366 | ($p$2 | 0) != 0) {
    $372 = ($366 & 1 ^ 1) + ($3 - $a$0) | 0;
    $1169 = $365;
    $1170 = $363;
    $a$2 = $a$0;
    $fl$6 = $$fl$4;
    $p$5 = ($p$2 | 0) > ($372 | 0) ? $p$2 : $372;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $2;
   } else {
    $1169 = $365;
    $1170 = $363;
    $a$2 = $2;
    $fl$6 = $$fl$4;
    $p$5 = 0;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $2;
   }
  } else if ((label | 0) == 102) {
   label = 0;
   $399 = $fl$1$ & 73728;
   $401 = ($w$1 | 0) > ($i$0$lcssa275 | 0);
   if (($399 | 0) == 0 & $401) {
    $402 = $w$1 - $i$0$lcssa275 | 0;
    _memset($pad$i | 0, 32, ($402 >>> 0 > 256 ? 256 : $402) | 0) | 0;
    if ($402 >>> 0 > 255) {
     $$01$i66 = $402;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i66 = $$01$i66 + -256 | 0;
     } while ($$01$i66 >>> 0 > 255);
     $$0$lcssa$i68 = $402 & 255;
    } else $$0$lcssa$i68 = $402;
    ___fwritex($pad$i, $$0$lcssa$i68, $f) | 0;
   }
   L465 : do if ($i$0$lcssa275) {
    $i$1191 = 0;
    $ws$1192 = $1176;
    while (1) {
     $410 = HEAP32[$ws$1192 >> 2] | 0;
     if (!$410) break L465;
     $412 = _wctomb($mb, $410) | 0;
     $i$1191 = $412 + $i$1191 | 0;
     if (($i$1191 | 0) > ($i$0$lcssa275 | 0)) break L465;
     ___fwritex($mb, $412, $f) | 0;
     if ($i$1191 >>> 0 >= $i$0$lcssa275 >>> 0) break; else $ws$1192 = $ws$1192 + 4 | 0;
    }
   } while (0);
   if (($399 | 0) == 8192 & $401) {
    $418 = $w$1 - $i$0$lcssa275 | 0;
    _memset($pad$i | 0, 32, ($418 >>> 0 > 256 ? 256 : $418) | 0) | 0;
    if ($418 >>> 0 > 255) {
     $$01$i73 = $418;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i73 = $$01$i73 + -256 | 0;
     } while ($$01$i73 >>> 0 > 255);
     $$0$lcssa$i75 = $418 & 255;
    } else $$0$lcssa$i75 = $418;
    ___fwritex($pad$i, $$0$lcssa$i75, $f) | 0;
   }
   $1165 = $288;
   $1166 = $1175;
   $cnt$0 = $cnt$1;
   $fmt89 = $$lcssa448;
   $l$0 = $401 ? $w$1 : $i$0$lcssa275;
   $l10n$0 = $l10n$3;
   continue;
  }
  $999 = $z$2 - $a$2 | 0;
  $$p$5 = ($p$5 | 0) < ($999 | 0) ? $999 : $p$5;
  $1001 = $pl$2 + $$p$5 | 0;
  $w$2 = ($w$1 | 0) < ($1001 | 0) ? $1001 : $w$1;
  $1003 = $fl$6 & 73728;
  $1005 = ($w$2 | 0) > ($1001 | 0);
  if (($1003 | 0) == 0 & $1005) {
   $1006 = $w$2 - $1001 | 0;
   _memset($pad$i | 0, 32, ($1006 >>> 0 > 256 ? 256 : $1006) | 0) | 0;
   if ($1006 >>> 0 > 255) {
    $$01$i83 = $1006;
    do {
     ___fwritex($pad$i, 256, $f) | 0;
     $$01$i83 = $$01$i83 + -256 | 0;
    } while ($$01$i83 >>> 0 > 255);
    $$0$lcssa$i85 = $1006 & 255;
   } else $$0$lcssa$i85 = $1006;
   ___fwritex($pad$i, $$0$lcssa$i85, $f) | 0;
  }
  ___fwritex($prefix$2, $pl$2, $f) | 0;
  if (($1003 | 0) == 65536 & $1005) {
   $1014 = $w$2 - $1001 | 0;
   _memset($pad$i | 0, 48, ($1014 >>> 0 > 256 ? 256 : $1014) | 0) | 0;
   if ($1014 >>> 0 > 255) {
    $$01$i59 = $1014;
    do {
     ___fwritex($pad$i, 256, $f) | 0;
     $$01$i59 = $$01$i59 + -256 | 0;
    } while ($$01$i59 >>> 0 > 255);
    $$0$lcssa$i61 = $1014 & 255;
   } else $$0$lcssa$i61 = $1014;
   ___fwritex($pad$i, $$0$lcssa$i61, $f) | 0;
  }
  if (($$p$5 | 0) > ($999 | 0)) {
   $1022 = $$p$5 - $999 | 0;
   _memset($pad$i | 0, 48, ($1022 >>> 0 > 256 ? 256 : $1022) | 0) | 0;
   if ($1022 >>> 0 > 255) {
    $$01$i44 = $1022;
    do {
     ___fwritex($pad$i, 256, $f) | 0;
     $$01$i44 = $$01$i44 + -256 | 0;
    } while ($$01$i44 >>> 0 > 255);
    $$0$lcssa$i46 = $1022 & 255;
   } else $$0$lcssa$i46 = $1022;
   ___fwritex($pad$i, $$0$lcssa$i46, $f) | 0;
  }
  ___fwritex($a$2, $999, $f) | 0;
  if (($1003 | 0) == 8192 & $1005) {
   $1030 = $w$2 - $1001 | 0;
   _memset($pad$i | 0, 32, ($1030 >>> 0 > 256 ? 256 : $1030) | 0) | 0;
   if ($1030 >>> 0 > 255) {
    $$01$i = $1030;
    do {
     ___fwritex($pad$i, 256, $f) | 0;
     $$01$i = $$01$i + -256 | 0;
    } while ($$01$i >>> 0 > 255);
    $$0$lcssa$i = $1030 & 255;
   } else $$0$lcssa$i = $1030;
   ___fwritex($pad$i, $$0$lcssa$i, $f) | 0;
  }
  $1165 = $1169;
  $1166 = $1170;
  $cnt$0 = $cnt$1;
  $fmt89 = $$lcssa448;
  $l$0 = $w$2;
  $l10n$0 = $l10n$3;
 }
 if ((label | 0) == 344) {
  if ($f) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (!$l10n$0$lcssa) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else $i$2166 = 1;
  while (1) {
   $1040 = HEAP32[$nl_type + ($i$2166 << 2) >> 2] | 0;
   if (!$1040) {
    $i$2166$lcssa = $i$2166;
    break;
   }
   $1043 = $nl_arg + ($i$2166 << 3) | 0;
   L523 : do if ($1040 >>> 0 <= 20) do switch ($1040 | 0) {
   case 9:
    {
     $1050 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1051 = HEAP32[$1050 >> 2] | 0;
     HEAP32[$ap >> 2] = $1050 + 4;
     HEAP32[$1043 >> 2] = $1051;
     break L523;
     break;
    }
   case 10:
    {
     $1057 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1058 = HEAP32[$1057 >> 2] | 0;
     HEAP32[$ap >> 2] = $1057 + 4;
     $1061 = $1043;
     HEAP32[$1061 >> 2] = $1058;
     HEAP32[$1061 + 4 >> 2] = (($1058 | 0) < 0) << 31 >> 31;
     break L523;
     break;
    }
   case 11:
    {
     $1070 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1071 = HEAP32[$1070 >> 2] | 0;
     HEAP32[$ap >> 2] = $1070 + 4;
     $1072 = $1043;
     HEAP32[$1072 >> 2] = $1071;
     HEAP32[$1072 + 4 >> 2] = 0;
     break L523;
     break;
    }
   case 12:
    {
     $1081 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1082 = $1081;
     $1084 = HEAP32[$1082 >> 2] | 0;
     $1087 = HEAP32[$1082 + 4 >> 2] | 0;
     HEAP32[$ap >> 2] = $1081 + 8;
     $1088 = $1043;
     HEAP32[$1088 >> 2] = $1084;
     HEAP32[$1088 + 4 >> 2] = $1087;
     break L523;
     break;
    }
   case 13:
    {
     $1097 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1098 = HEAP32[$1097 >> 2] | 0;
     HEAP32[$ap >> 2] = $1097 + 4;
     $1100 = ($1098 & 65535) << 16 >> 16;
     $1103 = $1043;
     HEAP32[$1103 >> 2] = $1100;
     HEAP32[$1103 + 4 >> 2] = (($1100 | 0) < 0) << 31 >> 31;
     break L523;
     break;
    }
   case 14:
    {
     $1112 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1113 = HEAP32[$1112 >> 2] | 0;
     HEAP32[$ap >> 2] = $1112 + 4;
     $1114 = $1043;
     HEAP32[$1114 >> 2] = $1113 & 65535;
     HEAP32[$1114 + 4 >> 2] = 0;
     break L523;
     break;
    }
   case 15:
    {
     $1123 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1124 = HEAP32[$1123 >> 2] | 0;
     HEAP32[$ap >> 2] = $1123 + 4;
     $1126 = ($1124 & 255) << 24 >> 24;
     $1129 = $1043;
     HEAP32[$1129 >> 2] = $1126;
     HEAP32[$1129 + 4 >> 2] = (($1126 | 0) < 0) << 31 >> 31;
     break L523;
     break;
    }
   case 16:
    {
     $1138 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $1139 = HEAP32[$1138 >> 2] | 0;
     HEAP32[$ap >> 2] = $1138 + 4;
     $1140 = $1043;
     HEAP32[$1140 >> 2] = $1139 & 255;
     HEAP32[$1140 + 4 >> 2] = 0;
     break L523;
     break;
    }
   case 17:
    {
     $1149 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1150 = +HEAPF64[$1149 >> 3];
     HEAP32[$ap >> 2] = $1149 + 8;
     HEAPF64[$1043 >> 3] = $1150;
     break L523;
     break;
    }
   case 18:
    {
     $1156 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
     $1157 = +HEAPF64[$1156 >> 3];
     HEAP32[$ap >> 2] = $1156 + 8;
     HEAPF64[$1043 >> 3] = $1157;
     break L523;
     break;
    }
   default:
    break L523;
   } while (0); while (0);
   $i$2166 = $i$2166 + 1 | 0;
   if (($i$2166 | 0) >= 10) {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label | 0) == 363) {
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (($i$2166$lcssa | 0) < 10) $i$3164 = $i$2166$lcssa; else {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  while (1) {
   if (HEAP32[$nl_type + ($i$3164 << 2) >> 2] | 0) {
    $$0 = -1;
    label = 363;
    break;
   }
   $i$3164 = $i$3164 + 1 | 0;
   if (($i$3164 | 0) >= 10) {
    $$0 = 1;
    label = 363;
    break;
   }
  }
  if ((label | 0) == 363) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if ((label | 0) == 363) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i103 = 0, $$0$i$i$i108 = 0, $$0$i$i$i113 = 0, $$0$i$i$i118 = 0, $$0$i$i$i123 = 0, $$0$i$i$i128 = 0, $$0$i$i$i133 = 0, $$0$i$i$i138 = 0, $$0$i$i$i14 = 0, $$0$i$i$i143 = 0, $$0$i$i$i19 = 0, $$0$i$i$i24 = 0, $$0$i$i$i29 = 0, $$0$i$i$i34 = 0, $$0$i$i$i39 = 0, $$0$i$i$i4 = 0, $$0$i$i$i44 = 0, $$0$i$i$i49 = 0, $$0$i$i$i54 = 0, $$0$i$i$i59 = 0, $$0$i$i$i66 = 0, $$0$i$i$i71 = 0, $$0$i$i$i76 = 0, $$0$i$i$i81 = 0, $$0$i$i$i88 = 0, $$0$i$i$i9 = 0, $$0$i$i$i93 = 0, $$0$i$i$i98 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $115 = 0, $116 = 0, $118 = 0, $12 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $132 = 0, $134 = 0, $137 = 0, $138 = 0, $14 = 0, $141 = 0, $142 = 0, $144 = 0, $15 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $158 = 0, $16 = 0, $160 = 0, $163 = 0, $164 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $184 = 0, $186 = 0, $189 = 0, $19 = 0, $190 = 0, $193 = 0, $194 = 0, $196 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $21 = 0, $210 = 0, $212 = 0, $215 = 0, $216 = 0, $219 = 0, $22 = 0, $220 = 0, $222 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $238 = 0, $24 = 0, $241 = 0, $242 = 0, $245 = 0, $246 = 0, $248 = 0, $25 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $26 = 0, $262 = 0, $264 = 0, $267 = 0, $268 = 0, $27 = 0, $271 = 0, $272 = 0, $274 = 0, $28 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $288 = 0, $290 = 0, $293 = 0, $294 = 0, $297 = 0, $298 = 0, $3 = 0, $300 = 0, $307 = 0, $308 = 0, $309 = 0, $310 = 0, $314 = 0, $316 = 0, $319 = 0, $32 = 0, $320 = 0, $323 = 0, $324 = 0, $326 = 0, $33 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $340 = 0, $342 = 0, $345 = 0, $346 = 0, $349 = 0, $35 = 0, $350 = 0, $352 = 0, $359 = 0, $360 = 0, $361 = 0, $362 = 0, $366 = 0, $368 = 0, $371 = 0, $372 = 0, $375 = 0, $379 = 0, $382 = 0, $383 = 0, $385 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $399 = 0, $4 = 0, $401 = 0, $404 = 0, $405 = 0, $408 = 0, $409 = 0, $411 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $425 = 0, $427 = 0, $43 = 0, $430 = 0, $431 = 0, $434 = 0, $435 = 0, $437 = 0, $44 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $45 = 0, $451 = 0, $453 = 0, $456 = 0, $457 = 0, $460 = 0, $461 = 0, $463 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $477 = 0, $479 = 0, $482 = 0, $483 = 0, $486 = 0, $488 = 0, $49 = 0, $491 = 0, $492 = 0, $494 = 0, $5 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $508 = 0, $51 = 0, $510 = 0, $513 = 0, $514 = 0, $517 = 0, $518 = 0, $520 = 0, $527 = 0, $528 = 0, $529 = 0, $530 = 0, $534 = 0, $536 = 0, $539 = 0, $54 = 0, $540 = 0, $543 = 0, $544 = 0, $546 = 0, $55 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $560 = 0, $562 = 0, $565 = 0, $566 = 0, $569 = 0, $570 = 0, $572 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $586 = 0, $588 = 0, $591 = 0, $592 = 0, $595 = 0, $596 = 0, $598 = 0, $6 = 0, $60 = 0, $602 = 0, $603 = 0, $605 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $619 = 0, $621 = 0, $624 = 0, $625 = 0, $628 = 0, $629 = 0, $63 = 0, $631 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $645 = 0, $647 = 0, $650 = 0, $651 = 0, $654 = 0, $655 = 0, $657 = 0, $66 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $671 = 0, $673 = 0, $676 = 0, $677 = 0, $680 = 0, $681 = 0, $683 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $697 = 0, $699 = 0, $7 = 0, $702 = 0, $703 = 0, $706 = 0, $707 = 0, $709 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $723 = 0, $725 = 0, $728 = 0, $729 = 0, $73 = 0, $732 = 0, $733 = 0, $735 = 0, $74 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $749 = 0, $75 = 0, $751 = 0, $754 = 0, $755 = 0, $758 = 0, $759 = 0, $76 = 0, $761 = 0, $768 = 0, $769 = 0, $770 = 0, $771 = 0, $775 = 0, $777 = 0, $780 = 0, $781 = 0, $784 = 0, $785 = 0, $787 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $8 = 0, $80 = 0, $801 = 0, $803 = 0, $806 = 0, $807 = 0, $82 = 0, $85 = 0, $86 = 0, $89 = 0, $9 = 0, $90 = 0, $92 = 0, $99 = 0, $__v$i$i142 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 720 | 0;
 $__v$i$i142 = sp + 696 | 0;
 $0 = sp + 672 | 0;
 $1 = sp + 648 | 0;
 $2 = sp + 624 | 0;
 $3 = sp + 600 | 0;
 $4 = sp + 576 | 0;
 $5 = sp + 552 | 0;
 $6 = sp + 528 | 0;
 $7 = sp + 504 | 0;
 $8 = sp + 480 | 0;
 $9 = sp + 456 | 0;
 $10 = sp + 432 | 0;
 $11 = sp + 408 | 0;
 $12 = sp + 384 | 0;
 $13 = sp + 360 | 0;
 $14 = sp + 336 | 0;
 $15 = sp + 312 | 0;
 $16 = sp + 288 | 0;
 $17 = sp + 264 | 0;
 $18 = sp + 240 | 0;
 $19 = sp + 216 | 0;
 $20 = sp + 192 | 0;
 $21 = sp + 168 | 0;
 $22 = sp + 144 | 0;
 $23 = sp + 120 | 0;
 $24 = sp + 96 | 0;
 $25 = sp + 72 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 24 | 0;
 $28 = sp;
 L1 : do if (($first | 0) == ($last | 0)) $$0 = $first; else do switch (HEAP8[$first >> 0] | 0) {
 case 118:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($0, 27023);
   $32 = $db + 4 | 0;
   $33 = HEAP32[$32 >> 2] | 0;
   $35 = HEAP32[$db + 8 >> 2] | 0;
   if ($33 >>> 0 < $35 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($33, $0);
    HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 24;
   } else {
    $42 = HEAP32[$db >> 2] | 0;
    $43 = $33 - $42 | 0;
    $44 = ($43 | 0) / 24 | 0;
    $45 = $44 + 1 | 0;
    if (($43 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $49 = ($35 - $42 | 0) / 24 | 0;
    if ($49 >>> 0 < 1073741823) {
     $51 = $49 << 1;
     $$0$i$i$i = $51 >>> 0 < $45 >>> 0 ? $45 : $51;
    } else $$0$i$i$i = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i, $44, $db + 12 | 0);
    $54 = $__v$i$i142 + 8 | 0;
    $55 = HEAP32[$54 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($55, $0);
    HEAP32[$54 >> 2] = $55 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 119:
  {
   HEAP8[$1 >> 0] = 14;
   $58 = $1 + 1 | 0;
   HEAP8[$58 >> 0] = HEAP8[26623] | 0;
   HEAP8[$58 + 1 >> 0] = HEAP8[26624] | 0;
   HEAP8[$58 + 2 >> 0] = HEAP8[26625] | 0;
   HEAP8[$58 + 3 >> 0] = HEAP8[26626] | 0;
   HEAP8[$58 + 4 >> 0] = HEAP8[26627] | 0;
   HEAP8[$58 + 5 >> 0] = HEAP8[26628] | 0;
   HEAP8[$58 + 6 >> 0] = HEAP8[26629] | 0;
   HEAP8[$1 + 8 >> 0] = 0;
   $60 = $1 + 12 | 0;
   HEAP32[$60 >> 2] = 0;
   HEAP32[$60 + 4 >> 2] = 0;
   HEAP32[$60 + 8 >> 2] = 0;
   $63 = $db + 4 | 0;
   $64 = HEAP32[$63 >> 2] | 0;
   $66 = HEAP32[$db + 8 >> 2] | 0;
   if ($64 >>> 0 < $66 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($64, $1);
    HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 24;
   } else {
    $73 = HEAP32[$db >> 2] | 0;
    $74 = $64 - $73 | 0;
    $75 = ($74 | 0) / 24 | 0;
    $76 = $75 + 1 | 0;
    if (($74 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $80 = ($66 - $73 | 0) / 24 | 0;
    if ($80 >>> 0 < 1073741823) {
     $82 = $80 << 1;
     $$0$i$i$i4 = $82 >>> 0 < $76 >>> 0 ? $76 : $82;
    } else $$0$i$i$i4 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i4, $75, $db + 12 | 0);
    $85 = $__v$i$i142 + 8 | 0;
    $86 = HEAP32[$85 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($86, $1);
    HEAP32[$85 >> 2] = $86 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 98:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($2, 27028);
   $89 = $db + 4 | 0;
   $90 = HEAP32[$89 >> 2] | 0;
   $92 = HEAP32[$db + 8 >> 2] | 0;
   if ($90 >>> 0 < $92 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($90, $2);
    HEAP32[$89 >> 2] = (HEAP32[$89 >> 2] | 0) + 24;
   } else {
    $99 = HEAP32[$db >> 2] | 0;
    $100 = $90 - $99 | 0;
    $101 = ($100 | 0) / 24 | 0;
    $102 = $101 + 1 | 0;
    if (($100 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $106 = ($92 - $99 | 0) / 24 | 0;
    if ($106 >>> 0 < 1073741823) {
     $108 = $106 << 1;
     $$0$i$i$i9 = $108 >>> 0 < $102 >>> 0 ? $102 : $108;
    } else $$0$i$i$i9 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i9, $101, $db + 12 | 0);
    $111 = $__v$i$i142 + 8 | 0;
    $112 = HEAP32[$111 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($112, $2);
    HEAP32[$111 >> 2] = $112 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 99:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3, 26631);
   $115 = $db + 4 | 0;
   $116 = HEAP32[$115 >> 2] | 0;
   $118 = HEAP32[$db + 8 >> 2] | 0;
   if ($116 >>> 0 < $118 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($116, $3);
    HEAP32[$115 >> 2] = (HEAP32[$115 >> 2] | 0) + 24;
   } else {
    $125 = HEAP32[$db >> 2] | 0;
    $126 = $116 - $125 | 0;
    $127 = ($126 | 0) / 24 | 0;
    $128 = $127 + 1 | 0;
    if (($126 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $132 = ($118 - $125 | 0) / 24 | 0;
    if ($132 >>> 0 < 1073741823) {
     $134 = $132 << 1;
     $$0$i$i$i14 = $134 >>> 0 < $128 >>> 0 ? $128 : $134;
    } else $$0$i$i$i14 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i14, $127, $db + 12 | 0);
    $137 = $__v$i$i142 + 8 | 0;
    $138 = HEAP32[$137 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($138, $3);
    HEAP32[$137 >> 2] = $138 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 97:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($4, 26636);
   $141 = $db + 4 | 0;
   $142 = HEAP32[$141 >> 2] | 0;
   $144 = HEAP32[$db + 8 >> 2] | 0;
   if ($142 >>> 0 < $144 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($142, $4);
    HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + 24;
   } else {
    $151 = HEAP32[$db >> 2] | 0;
    $152 = $142 - $151 | 0;
    $153 = ($152 | 0) / 24 | 0;
    $154 = $153 + 1 | 0;
    if (($152 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $158 = ($144 - $151 | 0) / 24 | 0;
    if ($158 >>> 0 < 1073741823) {
     $160 = $158 << 1;
     $$0$i$i$i19 = $160 >>> 0 < $154 >>> 0 ? $154 : $160;
    } else $$0$i$i$i19 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i19, $153, $db + 12 | 0);
    $163 = $__v$i$i142 + 8 | 0;
    $164 = HEAP32[$163 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($164, $4);
    HEAP32[$163 >> 2] = $164 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 104:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($5, 26648);
   $167 = $db + 4 | 0;
   $168 = HEAP32[$167 >> 2] | 0;
   $170 = HEAP32[$db + 8 >> 2] | 0;
   if ($168 >>> 0 < $170 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($168, $5);
    HEAP32[$167 >> 2] = (HEAP32[$167 >> 2] | 0) + 24;
   } else {
    $177 = HEAP32[$db >> 2] | 0;
    $178 = $168 - $177 | 0;
    $179 = ($178 | 0) / 24 | 0;
    $180 = $179 + 1 | 0;
    if (($178 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $184 = ($170 - $177 | 0) / 24 | 0;
    if ($184 >>> 0 < 1073741823) {
     $186 = $184 << 1;
     $$0$i$i$i24 = $186 >>> 0 < $180 >>> 0 ? $180 : $186;
    } else $$0$i$i$i24 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i24, $179, $db + 12 | 0);
    $189 = $__v$i$i142 + 8 | 0;
    $190 = HEAP32[$189 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($190, $5);
    HEAP32[$189 >> 2] = $190 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 115:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($6, 26662);
   $193 = $db + 4 | 0;
   $194 = HEAP32[$193 >> 2] | 0;
   $196 = HEAP32[$db + 8 >> 2] | 0;
   if ($194 >>> 0 < $196 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($194, $6);
    HEAP32[$193 >> 2] = (HEAP32[$193 >> 2] | 0) + 24;
   } else {
    $203 = HEAP32[$db >> 2] | 0;
    $204 = $194 - $203 | 0;
    $205 = ($204 | 0) / 24 | 0;
    $206 = $205 + 1 | 0;
    if (($204 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $210 = ($196 - $203 | 0) / 24 | 0;
    if ($210 >>> 0 < 1073741823) {
     $212 = $210 << 1;
     $$0$i$i$i29 = $212 >>> 0 < $206 >>> 0 ? $206 : $212;
    } else $$0$i$i$i29 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i29, $205, $db + 12 | 0);
    $215 = $__v$i$i142 + 8 | 0;
    $216 = HEAP32[$215 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($216, $6);
    HEAP32[$215 >> 2] = $216 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 116:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($7, 26668);
   $219 = $db + 4 | 0;
   $220 = HEAP32[$219 >> 2] | 0;
   $222 = HEAP32[$db + 8 >> 2] | 0;
   if ($220 >>> 0 < $222 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($220, $7);
    HEAP32[$219 >> 2] = (HEAP32[$219 >> 2] | 0) + 24;
   } else {
    $229 = HEAP32[$db >> 2] | 0;
    $230 = $220 - $229 | 0;
    $231 = ($230 | 0) / 24 | 0;
    $232 = $231 + 1 | 0;
    if (($230 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $236 = ($222 - $229 | 0) / 24 | 0;
    if ($236 >>> 0 < 1073741823) {
     $238 = $236 << 1;
     $$0$i$i$i34 = $238 >>> 0 < $232 >>> 0 ? $232 : $238;
    } else $$0$i$i$i34 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i34, $231, $db + 12 | 0);
    $241 = $__v$i$i142 + 8 | 0;
    $242 = HEAP32[$241 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($242, $7);
    HEAP32[$241 >> 2] = $242 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 105:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($8, 27033);
   $245 = $db + 4 | 0;
   $246 = HEAP32[$245 >> 2] | 0;
   $248 = HEAP32[$db + 8 >> 2] | 0;
   if ($246 >>> 0 < $248 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($246, $8);
    HEAP32[$245 >> 2] = (HEAP32[$245 >> 2] | 0) + 24;
   } else {
    $255 = HEAP32[$db >> 2] | 0;
    $256 = $246 - $255 | 0;
    $257 = ($256 | 0) / 24 | 0;
    $258 = $257 + 1 | 0;
    if (($256 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $262 = ($248 - $255 | 0) / 24 | 0;
    if ($262 >>> 0 < 1073741823) {
     $264 = $262 << 1;
     $$0$i$i$i39 = $264 >>> 0 < $258 >>> 0 ? $258 : $264;
    } else $$0$i$i$i39 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i39, $257, $db + 12 | 0);
    $267 = $__v$i$i142 + 8 | 0;
    $268 = HEAP32[$267 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($268, $8);
    HEAP32[$267 >> 2] = $268 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 106:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($9, 27037);
   $271 = $db + 4 | 0;
   $272 = HEAP32[$271 >> 2] | 0;
   $274 = HEAP32[$db + 8 >> 2] | 0;
   if ($272 >>> 0 < $274 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($272, $9);
    HEAP32[$271 >> 2] = (HEAP32[$271 >> 2] | 0) + 24;
   } else {
    $281 = HEAP32[$db >> 2] | 0;
    $282 = $272 - $281 | 0;
    $283 = ($282 | 0) / 24 | 0;
    $284 = $283 + 1 | 0;
    if (($282 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $288 = ($274 - $281 | 0) / 24 | 0;
    if ($288 >>> 0 < 1073741823) {
     $290 = $288 << 1;
     $$0$i$i$i44 = $290 >>> 0 < $284 >>> 0 ? $284 : $290;
    } else $$0$i$i$i44 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i44, $283, $db + 12 | 0);
    $293 = $__v$i$i142 + 8 | 0;
    $294 = HEAP32[$293 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($294, $9);
    HEAP32[$293 >> 2] = $294 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 108:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($10, 27050);
   $297 = $db + 4 | 0;
   $298 = HEAP32[$297 >> 2] | 0;
   $300 = HEAP32[$db + 8 >> 2] | 0;
   if ($298 >>> 0 < $300 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($298, $10);
    HEAP32[$297 >> 2] = (HEAP32[$297 >> 2] | 0) + 24;
   } else {
    $307 = HEAP32[$db >> 2] | 0;
    $308 = $298 - $307 | 0;
    $309 = ($308 | 0) / 24 | 0;
    $310 = $309 + 1 | 0;
    if (($308 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $314 = ($300 - $307 | 0) / 24 | 0;
    if ($314 >>> 0 < 1073741823) {
     $316 = $314 << 1;
     $$0$i$i$i49 = $316 >>> 0 < $310 >>> 0 ? $310 : $316;
    } else $$0$i$i$i49 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i49, $309, $db + 12 | 0);
    $319 = $__v$i$i142 + 8 | 0;
    $320 = HEAP32[$319 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($320, $10);
    HEAP32[$319 >> 2] = $320 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 109:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($11, 27055);
   $323 = $db + 4 | 0;
   $324 = HEAP32[$323 >> 2] | 0;
   $326 = HEAP32[$db + 8 >> 2] | 0;
   if ($324 >>> 0 < $326 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($324, $11);
    HEAP32[$323 >> 2] = (HEAP32[$323 >> 2] | 0) + 24;
   } else {
    $333 = HEAP32[$db >> 2] | 0;
    $334 = $324 - $333 | 0;
    $335 = ($334 | 0) / 24 | 0;
    $336 = $335 + 1 | 0;
    if (($334 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $340 = ($326 - $333 | 0) / 24 | 0;
    if ($340 >>> 0 < 1073741823) {
     $342 = $340 << 1;
     $$0$i$i$i54 = $342 >>> 0 < $336 >>> 0 ? $336 : $342;
    } else $$0$i$i$i54 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i54, $335, $db + 12 | 0);
    $345 = $__v$i$i142 + 8 | 0;
    $346 = HEAP32[$345 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($346, $11);
    HEAP32[$345 >> 2] = $346 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 120:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($12, 27069);
   $349 = $db + 4 | 0;
   $350 = HEAP32[$349 >> 2] | 0;
   $352 = HEAP32[$db + 8 >> 2] | 0;
   if ($350 >>> 0 < $352 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($350, $12);
    HEAP32[$349 >> 2] = (HEAP32[$349 >> 2] | 0) + 24;
   } else {
    $359 = HEAP32[$db >> 2] | 0;
    $360 = $350 - $359 | 0;
    $361 = ($360 | 0) / 24 | 0;
    $362 = $361 + 1 | 0;
    if (($360 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $366 = ($352 - $359 | 0) / 24 | 0;
    if ($366 >>> 0 < 1073741823) {
     $368 = $366 << 1;
     $$0$i$i$i59 = $368 >>> 0 < $362 >>> 0 ? $362 : $368;
    } else $$0$i$i$i59 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i59, $361, $db + 12 | 0);
    $371 = $__v$i$i142 + 8 | 0;
    $372 = HEAP32[$371 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($372, $12);
    HEAP32[$371 >> 2] = $372 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 121:
  {
   $375 = _malloc(32) | 0;
   HEAP32[$13 + 8 >> 2] = $375;
   HEAP32[$13 >> 2] = 33;
   HEAP32[$13 + 4 >> 2] = 18;
   dest = $375;
   src = 27079;
   stop = dest + 18 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP8[$375 + 18 >> 0] = 0;
   $379 = $13 + 12 | 0;
   HEAP32[$379 >> 2] = 0;
   HEAP32[$379 + 4 >> 2] = 0;
   HEAP32[$379 + 8 >> 2] = 0;
   $382 = $db + 4 | 0;
   $383 = HEAP32[$382 >> 2] | 0;
   $385 = HEAP32[$db + 8 >> 2] | 0;
   if ($383 >>> 0 < $385 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($383, $13);
    HEAP32[$382 >> 2] = (HEAP32[$382 >> 2] | 0) + 24;
   } else {
    $392 = HEAP32[$db >> 2] | 0;
    $393 = $383 - $392 | 0;
    $394 = ($393 | 0) / 24 | 0;
    $395 = $394 + 1 | 0;
    if (($393 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $399 = ($385 - $392 | 0) / 24 | 0;
    if ($399 >>> 0 < 1073741823) {
     $401 = $399 << 1;
     $$0$i$i$i66 = $401 >>> 0 < $395 >>> 0 ? $395 : $401;
    } else $$0$i$i$i66 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i66, $394, $db + 12 | 0);
    $404 = $__v$i$i142 + 8 | 0;
    $405 = HEAP32[$404 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($405, $13);
    HEAP32[$404 >> 2] = $405 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 110:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($14, 26692);
   $408 = $db + 4 | 0;
   $409 = HEAP32[$408 >> 2] | 0;
   $411 = HEAP32[$db + 8 >> 2] | 0;
   if ($409 >>> 0 < $411 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($409, $14);
    HEAP32[$408 >> 2] = (HEAP32[$408 >> 2] | 0) + 24;
   } else {
    $418 = HEAP32[$db >> 2] | 0;
    $419 = $409 - $418 | 0;
    $420 = ($419 | 0) / 24 | 0;
    $421 = $420 + 1 | 0;
    if (($419 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $425 = ($411 - $418 | 0) / 24 | 0;
    if ($425 >>> 0 < 1073741823) {
     $427 = $425 << 1;
     $$0$i$i$i71 = $427 >>> 0 < $421 >>> 0 ? $421 : $427;
    } else $$0$i$i$i71 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i71, $420, $db + 12 | 0);
    $430 = $__v$i$i142 + 8 | 0;
    $431 = HEAP32[$430 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($431, $14);
    HEAP32[$430 >> 2] = $431 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 111:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($15, 26701);
   $434 = $db + 4 | 0;
   $435 = HEAP32[$434 >> 2] | 0;
   $437 = HEAP32[$db + 8 >> 2] | 0;
   if ($435 >>> 0 < $437 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($435, $15);
    HEAP32[$434 >> 2] = (HEAP32[$434 >> 2] | 0) + 24;
   } else {
    $444 = HEAP32[$db >> 2] | 0;
    $445 = $435 - $444 | 0;
    $446 = ($445 | 0) / 24 | 0;
    $447 = $446 + 1 | 0;
    if (($445 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $451 = ($437 - $444 | 0) / 24 | 0;
    if ($451 >>> 0 < 1073741823) {
     $453 = $451 << 1;
     $$0$i$i$i76 = $453 >>> 0 < $447 >>> 0 ? $447 : $453;
    } else $$0$i$i$i76 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i76, $446, $db + 12 | 0);
    $456 = $__v$i$i142 + 8 | 0;
    $457 = HEAP32[$456 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($457, $15);
    HEAP32[$456 >> 2] = $457 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 102:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($16, 27098);
   $460 = $db + 4 | 0;
   $461 = HEAP32[$460 >> 2] | 0;
   $463 = HEAP32[$db + 8 >> 2] | 0;
   if ($461 >>> 0 < $463 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($461, $16);
    HEAP32[$460 >> 2] = (HEAP32[$460 >> 2] | 0) + 24;
   } else {
    $470 = HEAP32[$db >> 2] | 0;
    $471 = $461 - $470 | 0;
    $472 = ($471 | 0) / 24 | 0;
    $473 = $472 + 1 | 0;
    if (($471 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $477 = ($463 - $470 | 0) / 24 | 0;
    if ($477 >>> 0 < 1073741823) {
     $479 = $477 << 1;
     $$0$i$i$i81 = $479 >>> 0 < $473 >>> 0 ? $473 : $479;
    } else $$0$i$i$i81 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i81, $472, $db + 12 | 0);
    $482 = $__v$i$i142 + 8 | 0;
    $483 = HEAP32[$482 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($483, $16);
    HEAP32[$482 >> 2] = $483 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 100:
  {
   HEAP8[$17 >> 0] = 12;
   $486 = $17 + 1 | 0;
   HEAP8[$486 >> 0] = HEAP8[27104] | 0;
   HEAP8[$486 + 1 >> 0] = HEAP8[27105] | 0;
   HEAP8[$486 + 2 >> 0] = HEAP8[27106] | 0;
   HEAP8[$486 + 3 >> 0] = HEAP8[27107] | 0;
   HEAP8[$486 + 4 >> 0] = HEAP8[27108] | 0;
   HEAP8[$486 + 5 >> 0] = HEAP8[27109] | 0;
   HEAP8[$17 + 7 >> 0] = 0;
   $488 = $17 + 12 | 0;
   HEAP32[$488 >> 2] = 0;
   HEAP32[$488 + 4 >> 2] = 0;
   HEAP32[$488 + 8 >> 2] = 0;
   $491 = $db + 4 | 0;
   $492 = HEAP32[$491 >> 2] | 0;
   $494 = HEAP32[$db + 8 >> 2] | 0;
   if ($492 >>> 0 < $494 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($492, $17);
    HEAP32[$491 >> 2] = (HEAP32[$491 >> 2] | 0) + 24;
   } else {
    $501 = HEAP32[$db >> 2] | 0;
    $502 = $492 - $501 | 0;
    $503 = ($502 | 0) / 24 | 0;
    $504 = $503 + 1 | 0;
    if (($502 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $508 = ($494 - $501 | 0) / 24 | 0;
    if ($508 >>> 0 < 1073741823) {
     $510 = $508 << 1;
     $$0$i$i$i88 = $510 >>> 0 < $504 >>> 0 ? $504 : $510;
    } else $$0$i$i$i88 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i88, $503, $db + 12 | 0);
    $513 = $__v$i$i142 + 8 | 0;
    $514 = HEAP32[$513 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($514, $17);
    HEAP32[$513 >> 2] = $514 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 101:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($18, 27111);
   $517 = $db + 4 | 0;
   $518 = HEAP32[$517 >> 2] | 0;
   $520 = HEAP32[$db + 8 >> 2] | 0;
   if ($518 >>> 0 < $520 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($518, $18);
    HEAP32[$517 >> 2] = (HEAP32[$517 >> 2] | 0) + 24;
   } else {
    $527 = HEAP32[$db >> 2] | 0;
    $528 = $518 - $527 | 0;
    $529 = ($528 | 0) / 24 | 0;
    $530 = $529 + 1 | 0;
    if (($528 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $534 = ($520 - $527 | 0) / 24 | 0;
    if ($534 >>> 0 < 1073741823) {
     $536 = $534 << 1;
     $$0$i$i$i93 = $536 >>> 0 < $530 >>> 0 ? $530 : $536;
    } else $$0$i$i$i93 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i93, $529, $db + 12 | 0);
    $539 = $__v$i$i142 + 8 | 0;
    $540 = HEAP32[$539 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($540, $18);
    HEAP32[$539 >> 2] = $540 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 103:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($19, 27123);
   $543 = $db + 4 | 0;
   $544 = HEAP32[$543 >> 2] | 0;
   $546 = HEAP32[$db + 8 >> 2] | 0;
   if ($544 >>> 0 < $546 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($544, $19);
    HEAP32[$543 >> 2] = (HEAP32[$543 >> 2] | 0) + 24;
   } else {
    $553 = HEAP32[$db >> 2] | 0;
    $554 = $544 - $553 | 0;
    $555 = ($554 | 0) / 24 | 0;
    $556 = $555 + 1 | 0;
    if (($554 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $560 = ($546 - $553 | 0) / 24 | 0;
    if ($560 >>> 0 < 1073741823) {
     $562 = $560 << 1;
     $$0$i$i$i98 = $562 >>> 0 < $556 >>> 0 ? $556 : $562;
    } else $$0$i$i$i98 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i98, $555, $db + 12 | 0);
    $565 = $__v$i$i142 + 8 | 0;
    $566 = HEAP32[$565 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($566, $19);
    HEAP32[$565 >> 2] = $566 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 122:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($20, 27134);
   $569 = $db + 4 | 0;
   $570 = HEAP32[$569 >> 2] | 0;
   $572 = HEAP32[$db + 8 >> 2] | 0;
   if ($570 >>> 0 < $572 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($570, $20);
    HEAP32[$569 >> 2] = (HEAP32[$569 >> 2] | 0) + 24;
   } else {
    $579 = HEAP32[$db >> 2] | 0;
    $580 = $570 - $579 | 0;
    $581 = ($580 | 0) / 24 | 0;
    $582 = $581 + 1 | 0;
    if (($580 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $586 = ($572 - $579 | 0) / 24 | 0;
    if ($586 >>> 0 < 1073741823) {
     $588 = $586 << 1;
     $$0$i$i$i103 = $588 >>> 0 < $582 >>> 0 ? $582 : $588;
    } else $$0$i$i$i103 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i103, $581, $db + 12 | 0);
    $591 = $__v$i$i142 + 8 | 0;
    $592 = HEAP32[$591 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($592, $20);
    HEAP32[$591 >> 2] = $592 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
   $$0 = $first + 1 | 0;
   break L1;
   break;
  }
 case 117:
  {
   $595 = $first + 1 | 0;
   $596 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($595, $last, $db) | 0;
   STACKTOP = sp;
   return (($596 | 0) == ($595 | 0) ? $first : $596) | 0;
  }
 case 68:
  {
   $598 = $first + 1 | 0;
   if (($598 | 0) == ($last | 0)) {
    $$0 = $first;
    break L1;
   }
   switch (HEAP8[$598 >> 0] | 0) {
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($21, 27138);
     $602 = $db + 4 | 0;
     $603 = HEAP32[$602 >> 2] | 0;
     $605 = HEAP32[$db + 8 >> 2] | 0;
     if ($603 >>> 0 < $605 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($603, $21);
      HEAP32[$602 >> 2] = (HEAP32[$602 >> 2] | 0) + 24;
     } else {
      $612 = HEAP32[$db >> 2] | 0;
      $613 = $603 - $612 | 0;
      $614 = ($613 | 0) / 24 | 0;
      $615 = $614 + 1 | 0;
      if (($613 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $619 = ($605 - $612 | 0) / 24 | 0;
      if ($619 >>> 0 < 1073741823) {
       $621 = $619 << 1;
       $$0$i$i$i108 = $621 >>> 0 < $615 >>> 0 ? $615 : $621;
      } else $$0$i$i$i108 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i108, $614, $db + 12 | 0);
      $624 = $__v$i$i142 + 8 | 0;
      $625 = HEAP32[$624 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($625, $21);
      HEAP32[$624 >> 2] = $625 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($22, 27148);
     $628 = $db + 4 | 0;
     $629 = HEAP32[$628 >> 2] | 0;
     $631 = HEAP32[$db + 8 >> 2] | 0;
     if ($629 >>> 0 < $631 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($629, $22);
      HEAP32[$628 >> 2] = (HEAP32[$628 >> 2] | 0) + 24;
     } else {
      $638 = HEAP32[$db >> 2] | 0;
      $639 = $629 - $638 | 0;
      $640 = ($639 | 0) / 24 | 0;
      $641 = $640 + 1 | 0;
      if (($639 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $645 = ($631 - $638 | 0) / 24 | 0;
      if ($645 >>> 0 < 1073741823) {
       $647 = $645 << 1;
       $$0$i$i$i113 = $647 >>> 0 < $641 >>> 0 ? $641 : $647;
      } else $$0$i$i$i113 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i113, $640, $db + 12 | 0);
      $650 = $__v$i$i142 + 8 | 0;
      $651 = HEAP32[$650 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($651, $22);
      HEAP32[$650 >> 2] = $651 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 102:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($23, 27159);
     $654 = $db + 4 | 0;
     $655 = HEAP32[$654 >> 2] | 0;
     $657 = HEAP32[$db + 8 >> 2] | 0;
     if ($655 >>> 0 < $657 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($655, $23);
      HEAP32[$654 >> 2] = (HEAP32[$654 >> 2] | 0) + 24;
     } else {
      $664 = HEAP32[$db >> 2] | 0;
      $665 = $655 - $664 | 0;
      $666 = ($665 | 0) / 24 | 0;
      $667 = $666 + 1 | 0;
      if (($665 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $671 = ($657 - $664 | 0) / 24 | 0;
      if ($671 >>> 0 < 1073741823) {
       $673 = $671 << 1;
       $$0$i$i$i118 = $673 >>> 0 < $667 >>> 0 ? $667 : $673;
      } else $$0$i$i$i118 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i118, $666, $db + 12 | 0);
      $676 = $__v$i$i142 + 8 | 0;
      $677 = HEAP32[$676 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($677, $23);
      HEAP32[$676 >> 2] = $677 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 104:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($24, 27169);
     $680 = $db + 4 | 0;
     $681 = HEAP32[$680 >> 2] | 0;
     $683 = HEAP32[$db + 8 >> 2] | 0;
     if ($681 >>> 0 < $683 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($681, $24);
      HEAP32[$680 >> 2] = (HEAP32[$680 >> 2] | 0) + 24;
     } else {
      $690 = HEAP32[$db >> 2] | 0;
      $691 = $681 - $690 | 0;
      $692 = ($691 | 0) / 24 | 0;
      $693 = $692 + 1 | 0;
      if (($691 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $697 = ($683 - $690 | 0) / 24 | 0;
      if ($697 >>> 0 < 1073741823) {
       $699 = $697 << 1;
       $$0$i$i$i123 = $699 >>> 0 < $693 >>> 0 ? $693 : $699;
      } else $$0$i$i$i123 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i123, $692, $db + 12 | 0);
      $702 = $__v$i$i142 + 8 | 0;
      $703 = HEAP32[$702 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($703, $24);
      HEAP32[$702 >> 2] = $703 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($25, 27179);
     $706 = $db + 4 | 0;
     $707 = HEAP32[$706 >> 2] | 0;
     $709 = HEAP32[$db + 8 >> 2] | 0;
     if ($707 >>> 0 < $709 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($707, $25);
      HEAP32[$706 >> 2] = (HEAP32[$706 >> 2] | 0) + 24;
     } else {
      $716 = HEAP32[$db >> 2] | 0;
      $717 = $707 - $716 | 0;
      $718 = ($717 | 0) / 24 | 0;
      $719 = $718 + 1 | 0;
      if (($717 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $723 = ($709 - $716 | 0) / 24 | 0;
      if ($723 >>> 0 < 1073741823) {
       $725 = $723 << 1;
       $$0$i$i$i128 = $725 >>> 0 < $719 >>> 0 ? $719 : $725;
      } else $$0$i$i$i128 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i128, $718, $db + 12 | 0);
      $728 = $__v$i$i142 + 8 | 0;
      $729 = HEAP32[$728 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($729, $25);
      HEAP32[$728 >> 2] = $729 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($26, 27188);
     $732 = $db + 4 | 0;
     $733 = HEAP32[$732 >> 2] | 0;
     $735 = HEAP32[$db + 8 >> 2] | 0;
     if ($733 >>> 0 < $735 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($733, $26);
      HEAP32[$732 >> 2] = (HEAP32[$732 >> 2] | 0) + 24;
     } else {
      $742 = HEAP32[$db >> 2] | 0;
      $743 = $733 - $742 | 0;
      $744 = ($743 | 0) / 24 | 0;
      $745 = $744 + 1 | 0;
      if (($743 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $749 = ($735 - $742 | 0) / 24 | 0;
      if ($749 >>> 0 < 1073741823) {
       $751 = $749 << 1;
       $$0$i$i$i133 = $751 >>> 0 < $745 >>> 0 ? $745 : $751;
      } else $$0$i$i$i133 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i133, $744, $db + 12 | 0);
      $754 = $__v$i$i142 + 8 | 0;
      $755 = HEAP32[$754 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($755, $26);
      HEAP32[$754 >> 2] = $755 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($27, 27197);
     $758 = $db + 4 | 0;
     $759 = HEAP32[$758 >> 2] | 0;
     $761 = HEAP32[$db + 8 >> 2] | 0;
     if ($759 >>> 0 < $761 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($759, $27);
      HEAP32[$758 >> 2] = (HEAP32[$758 >> 2] | 0) + 24;
     } else {
      $768 = HEAP32[$db >> 2] | 0;
      $769 = $759 - $768 | 0;
      $770 = ($769 | 0) / 24 | 0;
      $771 = $770 + 1 | 0;
      if (($769 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $775 = ($761 - $768 | 0) / 24 | 0;
      if ($775 >>> 0 < 1073741823) {
       $777 = $775 << 1;
       $$0$i$i$i138 = $777 >>> 0 < $771 >>> 0 ? $771 : $777;
      } else $$0$i$i$i138 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i138, $770, $db + 12 | 0);
      $780 = $__v$i$i142 + 8 | 0;
      $781 = HEAP32[$780 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($781, $27);
      HEAP32[$780 >> 2] = $781 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   case 110:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($28, 27202);
     $784 = $db + 4 | 0;
     $785 = HEAP32[$784 >> 2] | 0;
     $787 = HEAP32[$db + 8 >> 2] | 0;
     if ($785 >>> 0 < $787 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($785, $28);
      HEAP32[$784 >> 2] = (HEAP32[$784 >> 2] | 0) + 24;
     } else {
      $794 = HEAP32[$db >> 2] | 0;
      $795 = $785 - $794 | 0;
      $796 = ($795 | 0) / 24 | 0;
      $797 = $796 + 1 | 0;
      if (($795 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $801 = ($787 - $794 | 0) / 24 | 0;
      if ($801 >>> 0 < 1073741823) {
       $803 = $801 << 1;
       $$0$i$i$i143 = $803 >>> 0 < $797 >>> 0 ? $797 : $803;
      } else $$0$i$i$i143 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i142, $$0$i$i$i143, $796, $db + 12 | 0);
      $806 = $__v$i$i142 + 8 | 0;
      $807 = HEAP32[$806 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($807, $28);
      HEAP32[$806 >> 2] = $807 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i142);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i142);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
     $$0 = $first + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$0 = $first;
     break L1;
    }
   }
   break;
  }
 default:
  {
   $$0 = $first;
   break L1;
  }
 } while (0); while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$rsize$3$i = 0, $$sum$i19$i = 0, $$sum2$i21$i = 0, $$sum3132$i$i = 0, $$sum67$i$i = 0, $100 = 0, $1000 = 0, $1002 = 0, $1005 = 0, $1010 = 0, $1016 = 0, $1019 = 0, $1020 = 0, $1027 = 0, $1039 = 0, $1044 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $106 = 0, $1060 = 0, $1062 = 0, $1063 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $13 = 0, $132 = 0, $138 = 0, $14 = 0, $141 = 0, $144 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $201 = 0, $207 = 0, $214 = 0, $217 = 0, $225 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $276 = 0, $28 = 0, $285 = 0, $286 = 0, $290 = 0, $300 = 0, $303 = 0, $307 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $314 = 0, $316 = 0, $318 = 0, $320 = 0, $322 = 0, $324 = 0, $334 = 0, $335 = 0, $337 = 0, $34 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $38 = 0, $380 = 0, $389 = 0, $394 = 0, $398 = 0, $4 = 0, $404 = 0, $41 = 0, $411 = 0, $414 = 0, $422 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $46 = 0, $463 = 0, $467 = 0, $468 = 0, $47 = 0, $475 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $5 = 0, $500 = 0, $501 = 0, $509 = 0, $51 = 0, $511 = 0, $512 = 0, $522 = 0, $526 = 0, $528 = 0, $529 = 0, $53 = 0, $538 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $552 = 0, $554 = 0, $555 = 0, $561 = 0, $563 = 0, $565 = 0, $57 = 0, $572 = 0, $574 = 0, $575 = 0, $576 = 0, $584 = 0, $585 = 0, $588 = 0, $59 = 0, $592 = 0, $593 = 0, $596 = 0, $598 = 0, $6 = 0, $602 = 0, $604 = 0, $608 = 0, $61 = 0, $612 = 0, $621 = 0, $622 = 0, $628 = 0, $630 = 0, $632 = 0, $635 = 0, $637 = 0, $64 = 0, $641 = 0, $642 = 0, $648 = 0, $65 = 0, $653 = 0, $655 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $67 = 0, $676 = 0, $678 = 0, $68 = 0, $683 = 0, $685 = 0, $69 = 0, $690 = 0, $692 = 0, $7 = 0, $70 = 0, $702 = 0, $706 = 0, $711 = 0, $714 = 0, $719 = 0, $720 = 0, $724 = 0, $725 = 0, $730 = 0, $736 = 0, $741 = 0, $744 = 0, $745 = 0, $748 = 0, $750 = 0, $752 = 0, $755 = 0, $766 = 0, $77 = 0, $771 = 0, $773 = 0, $776 = 0, $778 = 0, $781 = 0, $784 = 0, $785 = 0, $787 = 0, $788 = 0, $790 = 0, $791 = 0, $793 = 0, $794 = 0, $799 = 0, $80 = 0, $800 = 0, $809 = 0, $81 = 0, $814 = 0, $818 = 0, $824 = 0, $832 = 0, $838 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $847 = 0, $848 = 0, $854 = 0, $859 = 0, $860 = 0, $863 = 0, $865 = 0, $868 = 0, $873 = 0, $879 = 0, $883 = 0, $884 = 0, $89 = 0, $891 = 0, $90 = 0, $903 = 0, $908 = 0, $91 = 0, $915 = 0, $916 = 0, $917 = 0, $92 = 0, $925 = 0, $928 = 0, $929 = 0, $93 = 0, $934 = 0, $94 = 0, $940 = 0, $941 = 0, $943 = 0, $944 = 0, $947 = 0, $95 = 0, $952 = 0, $954 = 0, $959 = 0, $960 = 0, $964 = 0, $970 = 0, $975 = 0, $977 = 0, $978 = 0, $979 = 0, $980 = 0, $984 = 0, $985 = 0, $99 = 0, $991 = 0, $996 = 0, $997 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0, $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, $964$looptemp = 0;
 do if ($bytes >>> 0 < 245) {
  $4 = $bytes >>> 0 < 11 ? 16 : $bytes + 11 & -8;
  $5 = $4 >>> 3;
  $6 = HEAP32[1469] | 0;
  $7 = $6 >>> $5;
  if ($7 & 3) {
   $12 = ($7 & 1 ^ 1) + $5 | 0;
   $13 = $12 << 1;
   $14 = 5916 + ($13 << 2) | 0;
   $15 = 5916 + ($13 + 2 << 2) | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($14 | 0) == ($18 | 0)) HEAP32[1469] = $6 & ~(1 << $12); else {
    if ($18 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
    $25 = $18 + 12 | 0;
    if ((HEAP32[$25 >> 2] | 0) == ($16 | 0)) {
     HEAP32[$25 >> 2] = $14;
     HEAP32[$15 >> 2] = $18;
     break;
    } else _abort();
   } while (0);
   $28 = $12 << 3;
   HEAP32[$16 + 4 >> 2] = $28 | 3;
   $31 = $16 + ($28 | 4) | 0;
   HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
   $mem$0 = $17;
   return $mem$0 | 0;
  }
  $34 = HEAP32[1471] | 0;
  if ($4 >>> 0 > $34 >>> 0) {
   if ($7) {
    $38 = 2 << $5;
    $41 = $7 << $5 & ($38 | 0 - $38);
    $44 = ($41 & 0 - $41) + -1 | 0;
    $46 = $44 >>> 12 & 16;
    $47 = $44 >>> $46;
    $49 = $47 >>> 5 & 8;
    $51 = $47 >>> $49;
    $53 = $51 >>> 2 & 4;
    $55 = $51 >>> $53;
    $57 = $55 >>> 1 & 2;
    $59 = $55 >>> $57;
    $61 = $59 >>> 1 & 1;
    $64 = ($49 | $46 | $53 | $57 | $61) + ($59 >>> $61) | 0;
    $65 = $64 << 1;
    $66 = 5916 + ($65 << 2) | 0;
    $67 = 5916 + ($65 + 2 << 2) | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    $69 = $68 + 8 | 0;
    $70 = HEAP32[$69 >> 2] | 0;
    do if (($66 | 0) == ($70 | 0)) {
     HEAP32[1469] = $6 & ~(1 << $64);
     $89 = $34;
    } else {
     if ($70 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
     $77 = $70 + 12 | 0;
     if ((HEAP32[$77 >> 2] | 0) == ($68 | 0)) {
      HEAP32[$77 >> 2] = $66;
      HEAP32[$67 >> 2] = $70;
      $89 = HEAP32[1471] | 0;
      break;
     } else _abort();
    } while (0);
    $80 = $64 << 3;
    $81 = $80 - $4 | 0;
    HEAP32[$68 + 4 >> 2] = $4 | 3;
    $84 = $68 + $4 | 0;
    HEAP32[$68 + ($4 | 4) >> 2] = $81 | 1;
    HEAP32[$68 + $80 >> 2] = $81;
    if ($89) {
     $90 = HEAP32[1474] | 0;
     $91 = $89 >>> 3;
     $92 = $91 << 1;
     $93 = 5916 + ($92 << 2) | 0;
     $94 = HEAP32[1469] | 0;
     $95 = 1 << $91;
     if (!($94 & $95)) {
      HEAP32[1469] = $94 | $95;
      $$pre$phiZ2D = 5916 + ($92 + 2 << 2) | 0;
      $F4$0 = $93;
     } else {
      $99 = 5916 + ($92 + 2 << 2) | 0;
      $100 = HEAP32[$99 >> 2] | 0;
      if ($100 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
       $$pre$phiZ2D = $99;
       $F4$0 = $100;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $90;
     HEAP32[$F4$0 + 12 >> 2] = $90;
     HEAP32[$90 + 8 >> 2] = $F4$0;
     HEAP32[$90 + 12 >> 2] = $93;
    }
    HEAP32[1471] = $81;
    HEAP32[1474] = $84;
    $mem$0 = $69;
    return $mem$0 | 0;
   }
   $106 = HEAP32[1470] | 0;
   if (!$106) $nb$0 = $4; else {
    $110 = ($106 & 0 - $106) + -1 | 0;
    $112 = $110 >>> 12 & 16;
    $113 = $110 >>> $112;
    $115 = $113 >>> 5 & 8;
    $117 = $113 >>> $115;
    $119 = $117 >>> 2 & 4;
    $121 = $117 >>> $119;
    $123 = $121 >>> 1 & 2;
    $125 = $121 >>> $123;
    $127 = $125 >>> 1 & 1;
    $132 = HEAP32[6180 + (($115 | $112 | $119 | $123 | $127) + ($125 >>> $127) << 2) >> 2] | 0;
    $rsize$0$i = (HEAP32[$132 + 4 >> 2] & -8) - $4 | 0;
    $t$0$i = $132;
    $v$0$i = $132;
    while (1) {
     $138 = HEAP32[$t$0$i + 16 >> 2] | 0;
     if (!$138) {
      $141 = HEAP32[$t$0$i + 20 >> 2] | 0;
      if (!$141) {
       $rsize$0$i$lcssa = $rsize$0$i;
       $v$0$i$lcssa = $v$0$i;
       break;
      } else $144 = $141;
     } else $144 = $138;
     $147 = (HEAP32[$144 + 4 >> 2] & -8) - $4 | 0;
     $148 = $147 >>> 0 < $rsize$0$i >>> 0;
     $rsize$0$i = $148 ? $147 : $rsize$0$i;
     $t$0$i = $144;
     $v$0$i = $148 ? $144 : $v$0$i;
    }
    $149 = HEAP32[1473] | 0;
    if ($v$0$i$lcssa >>> 0 < $149 >>> 0) _abort();
    $151 = $v$0$i$lcssa + $4 | 0;
    if ($v$0$i$lcssa >>> 0 >= $151 >>> 0) _abort();
    $154 = HEAP32[$v$0$i$lcssa + 24 >> 2] | 0;
    $156 = HEAP32[$v$0$i$lcssa + 12 >> 2] | 0;
    do if (($156 | 0) == ($v$0$i$lcssa | 0)) {
     $167 = $v$0$i$lcssa + 20 | 0;
     $168 = HEAP32[$167 >> 2] | 0;
     if (!$168) {
      $170 = $v$0$i$lcssa + 16 | 0;
      $171 = HEAP32[$170 >> 2] | 0;
      if (!$171) {
       $R$1$i = 0;
       break;
      } else {
       $R$0$i = $171;
       $RP$0$i = $170;
      }
     } else {
      $R$0$i = $168;
      $RP$0$i = $167;
     }
     while (1) {
      $173 = $R$0$i + 20 | 0;
      $174 = HEAP32[$173 >> 2] | 0;
      if ($174) {
       $R$0$i = $174;
       $RP$0$i = $173;
       continue;
      }
      $176 = $R$0$i + 16 | 0;
      $177 = HEAP32[$176 >> 2] | 0;
      if (!$177) {
       $R$0$i$lcssa = $R$0$i;
       $RP$0$i$lcssa = $RP$0$i;
       break;
      } else {
       $R$0$i = $177;
       $RP$0$i = $176;
      }
     }
     if ($RP$0$i$lcssa >>> 0 < $149 >>> 0) _abort(); else {
      HEAP32[$RP$0$i$lcssa >> 2] = 0;
      $R$1$i = $R$0$i$lcssa;
      break;
     }
    } else {
     $159 = HEAP32[$v$0$i$lcssa + 8 >> 2] | 0;
     if ($159 >>> 0 < $149 >>> 0) _abort();
     $161 = $159 + 12 | 0;
     if ((HEAP32[$161 >> 2] | 0) != ($v$0$i$lcssa | 0)) _abort();
     $164 = $156 + 8 | 0;
     if ((HEAP32[$164 >> 2] | 0) == ($v$0$i$lcssa | 0)) {
      HEAP32[$161 >> 2] = $156;
      HEAP32[$164 >> 2] = $159;
      $R$1$i = $156;
      break;
     } else _abort();
    } while (0);
    do if ($154) {
     $182 = HEAP32[$v$0$i$lcssa + 28 >> 2] | 0;
     $183 = 6180 + ($182 << 2) | 0;
     if (($v$0$i$lcssa | 0) == (HEAP32[$183 >> 2] | 0)) {
      HEAP32[$183 >> 2] = $R$1$i;
      if (!$R$1$i) {
       HEAP32[1470] = HEAP32[1470] & ~(1 << $182);
       break;
      }
     } else {
      if ($154 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
      $192 = $154 + 16 | 0;
      if ((HEAP32[$192 >> 2] | 0) == ($v$0$i$lcssa | 0)) HEAP32[$192 >> 2] = $R$1$i; else HEAP32[$154 + 20 >> 2] = $R$1$i;
      if (!$R$1$i) break;
     }
     $197 = HEAP32[1473] | 0;
     if ($R$1$i >>> 0 < $197 >>> 0) _abort();
     HEAP32[$R$1$i + 24 >> 2] = $154;
     $201 = HEAP32[$v$0$i$lcssa + 16 >> 2] | 0;
     do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
      HEAP32[$R$1$i + 16 >> 2] = $201;
      HEAP32[$201 + 24 >> 2] = $R$1$i;
      break;
     } while (0);
     $207 = HEAP32[$v$0$i$lcssa + 20 >> 2] | 0;
     if ($207) if ($207 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i + 20 >> 2] = $207;
      HEAP32[$207 + 24 >> 2] = $R$1$i;
      break;
     }
    } while (0);
    if ($rsize$0$i$lcssa >>> 0 < 16) {
     $214 = $rsize$0$i$lcssa + $4 | 0;
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $214 | 3;
     $217 = $v$0$i$lcssa + ($214 + 4) | 0;
     HEAP32[$217 >> 2] = HEAP32[$217 >> 2] | 1;
    } else {
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $4 | 3;
     HEAP32[$v$0$i$lcssa + ($4 | 4) >> 2] = $rsize$0$i$lcssa | 1;
     HEAP32[$v$0$i$lcssa + ($rsize$0$i$lcssa + $4) >> 2] = $rsize$0$i$lcssa;
     $225 = HEAP32[1471] | 0;
     if ($225) {
      $227 = HEAP32[1474] | 0;
      $228 = $225 >>> 3;
      $229 = $228 << 1;
      $230 = 5916 + ($229 << 2) | 0;
      $231 = HEAP32[1469] | 0;
      $232 = 1 << $228;
      if (!($231 & $232)) {
       HEAP32[1469] = $231 | $232;
       $$pre$phi$iZ2D = 5916 + ($229 + 2 << 2) | 0;
       $F1$0$i = $230;
      } else {
       $236 = 5916 + ($229 + 2 << 2) | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ($237 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
        $$pre$phi$iZ2D = $236;
        $F1$0$i = $237;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $227;
      HEAP32[$F1$0$i + 12 >> 2] = $227;
      HEAP32[$227 + 8 >> 2] = $F1$0$i;
      HEAP32[$227 + 12 >> 2] = $230;
     }
     HEAP32[1471] = $rsize$0$i$lcssa;
     HEAP32[1474] = $151;
    }
    $mem$0 = $v$0$i$lcssa + 8 | 0;
    return $mem$0 | 0;
   }
  } else $nb$0 = $4;
 } else if ($bytes >>> 0 > 4294967231) $nb$0 = -1; else {
  $245 = $bytes + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[1470] | 0;
  if (!$247) $nb$0 = $246; else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $idx$0$i = 0; else if ($246 >>> 0 > 16777215) $idx$0$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $idx$0$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[6180 + ($idx$0$i << 2) >> 2] | 0;
   L123 : do if (!$276) {
    $rsize$2$i = $249;
    $t$1$i = 0;
    $v$2$i = 0;
    label = 86;
   } else {
    $rsize$0$i15 = $249;
    $rst$0$i = 0;
    $sizebits$0$i = $246 << (($idx$0$i | 0) == 31 ? 0 : 25 - ($idx$0$i >>> 1) | 0);
    $t$0$i14 = $276;
    $v$0$i16 = 0;
    while (1) {
     $285 = HEAP32[$t$0$i14 + 4 >> 2] & -8;
     $286 = $285 - $246 | 0;
     if ($286 >>> 0 < $rsize$0$i15 >>> 0) if (($285 | 0) == ($246 | 0)) {
      $rsize$331$i = $286;
      $t$230$i = $t$0$i14;
      $v$332$i = $t$0$i14;
      label = 90;
      break L123;
     } else {
      $rsize$1$i = $286;
      $v$1$i = $t$0$i14;
     } else {
      $rsize$1$i = $rsize$0$i15;
      $v$1$i = $v$0$i16;
     }
     $290 = HEAP32[$t$0$i14 + 20 >> 2] | 0;
     $t$0$i14 = HEAP32[$t$0$i14 + 16 + ($sizebits$0$i >>> 31 << 2) >> 2] | 0;
     $rst$1$i = ($290 | 0) == 0 | ($290 | 0) == ($t$0$i14 | 0) ? $rst$0$i : $290;
     if (!$t$0$i14) {
      $rsize$2$i = $rsize$1$i;
      $t$1$i = $rst$1$i;
      $v$2$i = $v$1$i;
      label = 86;
      break;
     } else {
      $rsize$0$i15 = $rsize$1$i;
      $rst$0$i = $rst$1$i;
      $sizebits$0$i = $sizebits$0$i << 1;
      $v$0$i16 = $v$1$i;
     }
    }
   } while (0);
   if ((label | 0) == 86) {
    if (($t$1$i | 0) == 0 & ($v$2$i | 0) == 0) {
     $300 = 2 << $idx$0$i;
     $303 = $247 & ($300 | 0 - $300);
     if (!$303) {
      $nb$0 = $246;
      break;
     }
     $307 = ($303 & 0 - $303) + -1 | 0;
     $309 = $307 >>> 12 & 16;
     $310 = $307 >>> $309;
     $312 = $310 >>> 5 & 8;
     $314 = $310 >>> $312;
     $316 = $314 >>> 2 & 4;
     $318 = $314 >>> $316;
     $320 = $318 >>> 1 & 2;
     $322 = $318 >>> $320;
     $324 = $322 >>> 1 & 1;
     $t$2$ph$i = HEAP32[6180 + (($312 | $309 | $316 | $320 | $324) + ($322 >>> $324) << 2) >> 2] | 0;
     $v$3$ph$i = 0;
    } else {
     $t$2$ph$i = $t$1$i;
     $v$3$ph$i = $v$2$i;
    }
    if (!$t$2$ph$i) {
     $rsize$3$lcssa$i = $rsize$2$i;
     $v$3$lcssa$i = $v$3$ph$i;
    } else {
     $rsize$331$i = $rsize$2$i;
     $t$230$i = $t$2$ph$i;
     $v$332$i = $v$3$ph$i;
     label = 90;
    }
   }
   if ((label | 0) == 90) while (1) {
    label = 0;
    $334 = (HEAP32[$t$230$i + 4 >> 2] & -8) - $246 | 0;
    $335 = $334 >>> 0 < $rsize$331$i >>> 0;
    $$rsize$3$i = $335 ? $334 : $rsize$331$i;
    $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
    $337 = HEAP32[$t$230$i + 16 >> 2] | 0;
    if ($337) {
     $rsize$331$i = $$rsize$3$i;
     $t$230$i = $337;
     $v$332$i = $t$2$v$3$i;
     label = 90;
     continue;
    }
    $t$230$i = HEAP32[$t$230$i + 20 >> 2] | 0;
    if (!$t$230$i) {
     $rsize$3$lcssa$i = $$rsize$3$i;
     $v$3$lcssa$i = $t$2$v$3$i;
     break;
    } else {
     $rsize$331$i = $$rsize$3$i;
     $v$332$i = $t$2$v$3$i;
     label = 90;
    }
   }
   if (!$v$3$lcssa$i) $nb$0 = $246; else if ($rsize$3$lcssa$i >>> 0 < ((HEAP32[1471] | 0) - $246 | 0) >>> 0) {
    $346 = HEAP32[1473] | 0;
    if ($v$3$lcssa$i >>> 0 < $346 >>> 0) _abort();
    $348 = $v$3$lcssa$i + $246 | 0;
    if ($v$3$lcssa$i >>> 0 >= $348 >>> 0) _abort();
    $351 = HEAP32[$v$3$lcssa$i + 24 >> 2] | 0;
    $353 = HEAP32[$v$3$lcssa$i + 12 >> 2] | 0;
    do if (($353 | 0) == ($v$3$lcssa$i | 0)) {
     $364 = $v$3$lcssa$i + 20 | 0;
     $365 = HEAP32[$364 >> 2] | 0;
     if (!$365) {
      $367 = $v$3$lcssa$i + 16 | 0;
      $368 = HEAP32[$367 >> 2] | 0;
      if (!$368) {
       $R$1$i20 = 0;
       break;
      } else {
       $R$0$i18 = $368;
       $RP$0$i17 = $367;
      }
     } else {
      $R$0$i18 = $365;
      $RP$0$i17 = $364;
     }
     while (1) {
      $370 = $R$0$i18 + 20 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if ($371) {
       $R$0$i18 = $371;
       $RP$0$i17 = $370;
       continue;
      }
      $373 = $R$0$i18 + 16 | 0;
      $374 = HEAP32[$373 >> 2] | 0;
      if (!$374) {
       $R$0$i18$lcssa = $R$0$i18;
       $RP$0$i17$lcssa = $RP$0$i17;
       break;
      } else {
       $R$0$i18 = $374;
       $RP$0$i17 = $373;
      }
     }
     if ($RP$0$i17$lcssa >>> 0 < $346 >>> 0) _abort(); else {
      HEAP32[$RP$0$i17$lcssa >> 2] = 0;
      $R$1$i20 = $R$0$i18$lcssa;
      break;
     }
    } else {
     $356 = HEAP32[$v$3$lcssa$i + 8 >> 2] | 0;
     if ($356 >>> 0 < $346 >>> 0) _abort();
     $358 = $356 + 12 | 0;
     if ((HEAP32[$358 >> 2] | 0) != ($v$3$lcssa$i | 0)) _abort();
     $361 = $353 + 8 | 0;
     if ((HEAP32[$361 >> 2] | 0) == ($v$3$lcssa$i | 0)) {
      HEAP32[$358 >> 2] = $353;
      HEAP32[$361 >> 2] = $356;
      $R$1$i20 = $353;
      break;
     } else _abort();
    } while (0);
    do if ($351) {
     $379 = HEAP32[$v$3$lcssa$i + 28 >> 2] | 0;
     $380 = 6180 + ($379 << 2) | 0;
     if (($v$3$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
      HEAP32[$380 >> 2] = $R$1$i20;
      if (!$R$1$i20) {
       HEAP32[1470] = HEAP32[1470] & ~(1 << $379);
       break;
      }
     } else {
      if ($351 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
      $389 = $351 + 16 | 0;
      if ((HEAP32[$389 >> 2] | 0) == ($v$3$lcssa$i | 0)) HEAP32[$389 >> 2] = $R$1$i20; else HEAP32[$351 + 20 >> 2] = $R$1$i20;
      if (!$R$1$i20) break;
     }
     $394 = HEAP32[1473] | 0;
     if ($R$1$i20 >>> 0 < $394 >>> 0) _abort();
     HEAP32[$R$1$i20 + 24 >> 2] = $351;
     $398 = HEAP32[$v$3$lcssa$i + 16 >> 2] | 0;
     do if ($398) if ($398 >>> 0 < $394 >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 16 >> 2] = $398;
      HEAP32[$398 + 24 >> 2] = $R$1$i20;
      break;
     } while (0);
     $404 = HEAP32[$v$3$lcssa$i + 20 >> 2] | 0;
     if ($404) if ($404 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 20 >> 2] = $404;
      HEAP32[$404 + 24 >> 2] = $R$1$i20;
      break;
     }
    } while (0);
    L199 : do if ($rsize$3$lcssa$i >>> 0 < 16) {
     $411 = $rsize$3$lcssa$i + $246 | 0;
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $411 | 3;
     $414 = $v$3$lcssa$i + ($411 + 4) | 0;
     HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
    } else {
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$v$3$lcssa$i + ($246 | 4) >> 2] = $rsize$3$lcssa$i | 1;
     HEAP32[$v$3$lcssa$i + ($rsize$3$lcssa$i + $246) >> 2] = $rsize$3$lcssa$i;
     $422 = $rsize$3$lcssa$i >>> 3;
     if ($rsize$3$lcssa$i >>> 0 < 256) {
      $424 = $422 << 1;
      $425 = 5916 + ($424 << 2) | 0;
      $426 = HEAP32[1469] | 0;
      $427 = 1 << $422;
      if (!($426 & $427)) {
       HEAP32[1469] = $426 | $427;
       $$pre$phi$i26Z2D = 5916 + ($424 + 2 << 2) | 0;
       $F5$0$i = $425;
      } else {
       $431 = 5916 + ($424 + 2 << 2) | 0;
       $432 = HEAP32[$431 >> 2] | 0;
       if ($432 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
        $$pre$phi$i26Z2D = $431;
        $F5$0$i = $432;
       }
      }
      HEAP32[$$pre$phi$i26Z2D >> 2] = $348;
      HEAP32[$F5$0$i + 12 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $F5$0$i;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $425;
      break;
     }
     $438 = $rsize$3$lcssa$i >>> 8;
     if (!$438) $I7$0$i = 0; else if ($rsize$3$lcssa$i >>> 0 > 16777215) $I7$0$i = 31; else {
      $443 = ($438 + 1048320 | 0) >>> 16 & 8;
      $444 = $438 << $443;
      $447 = ($444 + 520192 | 0) >>> 16 & 4;
      $449 = $444 << $447;
      $452 = ($449 + 245760 | 0) >>> 16 & 2;
      $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
      $I7$0$i = $rsize$3$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
     }
     $463 = 6180 + ($I7$0$i << 2) | 0;
     HEAP32[$v$3$lcssa$i + ($246 + 28) >> 2] = $I7$0$i;
     HEAP32[$v$3$lcssa$i + ($246 + 20) >> 2] = 0;
     HEAP32[$v$3$lcssa$i + ($246 + 16) >> 2] = 0;
     $467 = HEAP32[1470] | 0;
     $468 = 1 << $I7$0$i;
     if (!($467 & $468)) {
      HEAP32[1470] = $467 | $468;
      HEAP32[$463 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $463;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
      break;
     }
     $475 = HEAP32[$463 >> 2] | 0;
     L217 : do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) $T$0$lcssa$i = $475; else {
      $K12$029$i = $rsize$3$lcssa$i << (($I7$0$i | 0) == 31 ? 0 : 25 - ($I7$0$i >>> 1) | 0);
      $T$028$i = $475;
      while (1) {
       $492 = $T$028$i + 16 + ($K12$029$i >>> 31 << 2) | 0;
       $487 = HEAP32[$492 >> 2] | 0;
       if (!$487) {
        $$lcssa232 = $492;
        $T$028$i$lcssa = $T$028$i;
        break;
       }
       if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) {
        $T$0$lcssa$i = $487;
        break L217;
       } else {
        $K12$029$i = $K12$029$i << 1;
        $T$028$i = $487;
       }
      }
      if ($$lcssa232 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
       HEAP32[$$lcssa232 >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $T$028$i$lcssa;
       HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
       break L199;
      }
     } while (0);
     $499 = $T$0$lcssa$i + 8 | 0;
     $500 = HEAP32[$499 >> 2] | 0;
     $501 = HEAP32[1473] | 0;
     if ($500 >>> 0 >= $501 >>> 0 & $T$0$lcssa$i >>> 0 >= $501 >>> 0) {
      HEAP32[$500 + 12 >> 2] = $348;
      HEAP32[$499 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $500;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $T$0$lcssa$i;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $mem$0 = $v$3$lcssa$i + 8 | 0;
    return $mem$0 | 0;
   } else $nb$0 = $246;
  }
 } while (0);
 $509 = HEAP32[1471] | 0;
 if ($509 >>> 0 >= $nb$0 >>> 0) {
  $511 = $509 - $nb$0 | 0;
  $512 = HEAP32[1474] | 0;
  if ($511 >>> 0 > 15) {
   HEAP32[1474] = $512 + $nb$0;
   HEAP32[1471] = $511;
   HEAP32[$512 + ($nb$0 + 4) >> 2] = $511 | 1;
   HEAP32[$512 + $509 >> 2] = $511;
   HEAP32[$512 + 4 >> 2] = $nb$0 | 3;
  } else {
   HEAP32[1471] = 0;
   HEAP32[1474] = 0;
   HEAP32[$512 + 4 >> 2] = $509 | 3;
   $522 = $512 + ($509 + 4) | 0;
   HEAP32[$522 >> 2] = HEAP32[$522 >> 2] | 1;
  }
  $mem$0 = $512 + 8 | 0;
  return $mem$0 | 0;
 }
 $526 = HEAP32[1472] | 0;
 if ($526 >>> 0 > $nb$0 >>> 0) {
  $528 = $526 - $nb$0 | 0;
  HEAP32[1472] = $528;
  $529 = HEAP32[1475] | 0;
  HEAP32[1475] = $529 + $nb$0;
  HEAP32[$529 + ($nb$0 + 4) >> 2] = $528 | 1;
  HEAP32[$529 + 4 >> 2] = $nb$0 | 3;
  $mem$0 = $529 + 8 | 0;
  return $mem$0 | 0;
 }
 do if (!(HEAP32[1587] | 0)) {
  $538 = _sysconf(30) | 0;
  if (!($538 + -1 & $538)) {
   HEAP32[1589] = $538;
   HEAP32[1588] = $538;
   HEAP32[1590] = -1;
   HEAP32[1591] = -1;
   HEAP32[1592] = 0;
   HEAP32[1580] = 0;
   HEAP32[1587] = (_time(0) | 0) & -16 ^ 1431655768;
   break;
  } else _abort();
 } while (0);
 $545 = $nb$0 + 48 | 0;
 $546 = HEAP32[1589] | 0;
 $547 = $nb$0 + 47 | 0;
 $548 = $546 + $547 | 0;
 $549 = 0 - $546 | 0;
 $550 = $548 & $549;
 if ($550 >>> 0 <= $nb$0 >>> 0) {
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $552 = HEAP32[1579] | 0;
 if ($552) {
  $554 = HEAP32[1577] | 0;
  $555 = $554 + $550 | 0;
  if ($555 >>> 0 <= $554 >>> 0 | $555 >>> 0 > $552 >>> 0) {
   $mem$0 = 0;
   return $mem$0 | 0;
  }
 }
 L258 : do if (!(HEAP32[1580] & 4)) {
  $561 = HEAP32[1475] | 0;
  L260 : do if (!$561) label = 174; else {
   $sp$0$i$i = 6324;
   while (1) {
    $563 = HEAP32[$sp$0$i$i >> 2] | 0;
    if ($563 >>> 0 <= $561 >>> 0) {
     $565 = $sp$0$i$i + 4 | 0;
     if (($563 + (HEAP32[$565 >> 2] | 0) | 0) >>> 0 > $561 >>> 0) {
      $$lcssa228 = $sp$0$i$i;
      $$lcssa230 = $565;
      break;
     }
    }
    $sp$0$i$i = HEAP32[$sp$0$i$i + 8 >> 2] | 0;
    if (!$sp$0$i$i) {
     label = 174;
     break L260;
    }
   }
   $596 = $548 - (HEAP32[1472] | 0) & $549;
   if ($596 >>> 0 < 2147483647) {
    $598 = _sbrk($596 | 0) | 0;
    $602 = ($598 | 0) == ((HEAP32[$$lcssa228 >> 2] | 0) + (HEAP32[$$lcssa230 >> 2] | 0) | 0);
    $$3$i = $602 ? $596 : 0;
    if ($602) if (($598 | 0) == (-1 | 0)) $tsize$0323944$i = $$3$i; else {
     $tbase$255$i = $598;
     $tsize$254$i = $$3$i;
     label = 194;
     break L258;
    } else {
     $br$0$ph$i = $598;
     $ssize$1$ph$i = $596;
     $tsize$0$ph$i = $$3$i;
     label = 184;
    }
   } else $tsize$0323944$i = 0;
  } while (0);
  do if ((label | 0) == 174) {
   $572 = _sbrk(0) | 0;
   if (($572 | 0) == (-1 | 0)) $tsize$0323944$i = 0; else {
    $574 = $572;
    $575 = HEAP32[1588] | 0;
    $576 = $575 + -1 | 0;
    if (!($576 & $574)) $ssize$0$i = $550; else $ssize$0$i = $550 - $574 + ($576 + $574 & 0 - $575) | 0;
    $584 = HEAP32[1577] | 0;
    $585 = $584 + $ssize$0$i | 0;
    if ($ssize$0$i >>> 0 > $nb$0 >>> 0 & $ssize$0$i >>> 0 < 2147483647) {
     $588 = HEAP32[1579] | 0;
     if ($588) if ($585 >>> 0 <= $584 >>> 0 | $585 >>> 0 > $588 >>> 0) {
      $tsize$0323944$i = 0;
      break;
     }
     $592 = _sbrk($ssize$0$i | 0) | 0;
     $593 = ($592 | 0) == ($572 | 0);
     $ssize$0$$i = $593 ? $ssize$0$i : 0;
     if ($593) {
      $tbase$255$i = $572;
      $tsize$254$i = $ssize$0$$i;
      label = 194;
      break L258;
     } else {
      $br$0$ph$i = $592;
      $ssize$1$ph$i = $ssize$0$i;
      $tsize$0$ph$i = $ssize$0$$i;
      label = 184;
     }
    } else $tsize$0323944$i = 0;
   }
  } while (0);
  L280 : do if ((label | 0) == 184) {
   $604 = 0 - $ssize$1$ph$i | 0;
   do if ($545 >>> 0 > $ssize$1$ph$i >>> 0 & ($ssize$1$ph$i >>> 0 < 2147483647 & ($br$0$ph$i | 0) != (-1 | 0))) {
    $608 = HEAP32[1589] | 0;
    $612 = $547 - $ssize$1$ph$i + $608 & 0 - $608;
    if ($612 >>> 0 < 2147483647) if ((_sbrk($612 | 0) | 0) == (-1 | 0)) {
     _sbrk($604 | 0) | 0;
     $tsize$0323944$i = $tsize$0$ph$i;
     break L280;
    } else {
     $ssize$2$i = $612 + $ssize$1$ph$i | 0;
     break;
    } else $ssize$2$i = $ssize$1$ph$i;
   } else $ssize$2$i = $ssize$1$ph$i; while (0);
   if (($br$0$ph$i | 0) == (-1 | 0)) $tsize$0323944$i = $tsize$0$ph$i; else {
    $tbase$255$i = $br$0$ph$i;
    $tsize$254$i = $ssize$2$i;
    label = 194;
    break L258;
   }
  } while (0);
  HEAP32[1580] = HEAP32[1580] | 4;
  $tsize$1$i = $tsize$0323944$i;
  label = 191;
 } else {
  $tsize$1$i = 0;
  label = 191;
 } while (0);
 if ((label | 0) == 191) if ($550 >>> 0 < 2147483647) {
  $621 = _sbrk($550 | 0) | 0;
  $622 = _sbrk(0) | 0;
  if ($621 >>> 0 < $622 >>> 0 & (($621 | 0) != (-1 | 0) & ($622 | 0) != (-1 | 0))) {
   $628 = $622 - $621 | 0;
   $630 = $628 >>> 0 > ($nb$0 + 40 | 0) >>> 0;
   if ($630) {
    $tbase$255$i = $621;
    $tsize$254$i = $630 ? $628 : $tsize$1$i;
    label = 194;
   }
  }
 }
 if ((label | 0) == 194) {
  $632 = (HEAP32[1577] | 0) + $tsize$254$i | 0;
  HEAP32[1577] = $632;
  if ($632 >>> 0 > (HEAP32[1578] | 0) >>> 0) HEAP32[1578] = $632;
  $635 = HEAP32[1475] | 0;
  L299 : do if (!$635) {
   $637 = HEAP32[1473] | 0;
   if (($637 | 0) == 0 | $tbase$255$i >>> 0 < $637 >>> 0) HEAP32[1473] = $tbase$255$i;
   HEAP32[1581] = $tbase$255$i;
   HEAP32[1582] = $tsize$254$i;
   HEAP32[1584] = 0;
   HEAP32[1478] = HEAP32[1587];
   HEAP32[1477] = -1;
   $i$02$i$i = 0;
   do {
    $641 = $i$02$i$i << 1;
    $642 = 5916 + ($641 << 2) | 0;
    HEAP32[5916 + ($641 + 3 << 2) >> 2] = $642;
    HEAP32[5916 + ($641 + 2 << 2) >> 2] = $642;
    $i$02$i$i = $i$02$i$i + 1 | 0;
   } while (($i$02$i$i | 0) != 32);
   $648 = $tbase$255$i + 8 | 0;
   $653 = ($648 & 7 | 0) == 0 ? 0 : 0 - $648 & 7;
   $655 = $tsize$254$i + -40 - $653 | 0;
   HEAP32[1475] = $tbase$255$i + $653;
   HEAP32[1472] = $655;
   HEAP32[$tbase$255$i + ($653 + 4) >> 2] = $655 | 1;
   HEAP32[$tbase$255$i + ($tsize$254$i + -36) >> 2] = 40;
   HEAP32[1476] = HEAP32[1591];
  } else {
   $sp$084$i = 6324;
   do {
    $660 = HEAP32[$sp$084$i >> 2] | 0;
    $661 = $sp$084$i + 4 | 0;
    $662 = HEAP32[$661 >> 2] | 0;
    if (($tbase$255$i | 0) == ($660 + $662 | 0)) {
     $$lcssa222 = $660;
     $$lcssa224 = $661;
     $$lcssa226 = $662;
     $sp$084$i$lcssa = $sp$084$i;
     label = 204;
     break;
    }
    $sp$084$i = HEAP32[$sp$084$i + 8 >> 2] | 0;
   } while (($sp$084$i | 0) != 0);
   if ((label | 0) == 204) if (!(HEAP32[$sp$084$i$lcssa + 12 >> 2] & 8)) if ($635 >>> 0 < $tbase$255$i >>> 0 & $635 >>> 0 >= $$lcssa222 >>> 0) {
    HEAP32[$$lcssa224 >> 2] = $$lcssa226 + $tsize$254$i;
    $676 = (HEAP32[1472] | 0) + $tsize$254$i | 0;
    $678 = $635 + 8 | 0;
    $683 = ($678 & 7 | 0) == 0 ? 0 : 0 - $678 & 7;
    $685 = $676 - $683 | 0;
    HEAP32[1475] = $635 + $683;
    HEAP32[1472] = $685;
    HEAP32[$635 + ($683 + 4) >> 2] = $685 | 1;
    HEAP32[$635 + ($676 + 4) >> 2] = 40;
    HEAP32[1476] = HEAP32[1591];
    break;
   }
   $690 = HEAP32[1473] | 0;
   if ($tbase$255$i >>> 0 < $690 >>> 0) {
    HEAP32[1473] = $tbase$255$i;
    $755 = $tbase$255$i;
   } else $755 = $690;
   $692 = $tbase$255$i + $tsize$254$i | 0;
   $sp$183$i = 6324;
   while (1) {
    if ((HEAP32[$sp$183$i >> 2] | 0) == ($692 | 0)) {
     $$lcssa219 = $sp$183$i;
     $sp$183$i$lcssa = $sp$183$i;
     label = 212;
     break;
    }
    $sp$183$i = HEAP32[$sp$183$i + 8 >> 2] | 0;
    if (!$sp$183$i) {
     $sp$0$i$i$i = 6324;
     break;
    }
   }
   if ((label | 0) == 212) if (!(HEAP32[$sp$183$i$lcssa + 12 >> 2] & 8)) {
    HEAP32[$$lcssa219 >> 2] = $tbase$255$i;
    $702 = $sp$183$i$lcssa + 4 | 0;
    HEAP32[$702 >> 2] = (HEAP32[$702 >> 2] | 0) + $tsize$254$i;
    $706 = $tbase$255$i + 8 | 0;
    $711 = ($706 & 7 | 0) == 0 ? 0 : 0 - $706 & 7;
    $714 = $tbase$255$i + ($tsize$254$i + 8) | 0;
    $719 = ($714 & 7 | 0) == 0 ? 0 : 0 - $714 & 7;
    $720 = $tbase$255$i + ($719 + $tsize$254$i) | 0;
    $$sum$i19$i = $711 + $nb$0 | 0;
    $724 = $tbase$255$i + $$sum$i19$i | 0;
    $725 = $720 - ($tbase$255$i + $711) - $nb$0 | 0;
    HEAP32[$tbase$255$i + ($711 + 4) >> 2] = $nb$0 | 3;
    L324 : do if (($720 | 0) == ($635 | 0)) {
     $730 = (HEAP32[1472] | 0) + $725 | 0;
     HEAP32[1472] = $730;
     HEAP32[1475] = $724;
     HEAP32[$tbase$255$i + ($$sum$i19$i + 4) >> 2] = $730 | 1;
    } else {
     if (($720 | 0) == (HEAP32[1474] | 0)) {
      $736 = (HEAP32[1471] | 0) + $725 | 0;
      HEAP32[1471] = $736;
      HEAP32[1474] = $724;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 4) >> 2] = $736 | 1;
      HEAP32[$tbase$255$i + ($736 + $$sum$i19$i) >> 2] = $736;
      break;
     }
     $$sum2$i21$i = $tsize$254$i + 4 | 0;
     $741 = HEAP32[$tbase$255$i + ($$sum2$i21$i + $719) >> 2] | 0;
     if (($741 & 3 | 0) == 1) {
      $744 = $741 & -8;
      $745 = $741 >>> 3;
      L332 : do if ($741 >>> 0 < 256) {
       $748 = HEAP32[$tbase$255$i + (($719 | 8) + $tsize$254$i) >> 2] | 0;
       $750 = HEAP32[$tbase$255$i + ($tsize$254$i + 12 + $719) >> 2] | 0;
       $752 = 5916 + ($745 << 1 << 2) | 0;
       do if (($748 | 0) != ($752 | 0)) {
        if ($748 >>> 0 < $755 >>> 0) _abort();
        if ((HEAP32[$748 + 12 >> 2] | 0) == ($720 | 0)) break;
        _abort();
       } while (0);
       if (($750 | 0) == ($748 | 0)) {
        HEAP32[1469] = HEAP32[1469] & ~(1 << $745);
        break;
       }
       do if (($750 | 0) == ($752 | 0)) $$pre$phi58$i$iZ2D = $750 + 8 | 0; else {
        if ($750 >>> 0 < $755 >>> 0) _abort();
        $766 = $750 + 8 | 0;
        if ((HEAP32[$766 >> 2] | 0) == ($720 | 0)) {
         $$pre$phi58$i$iZ2D = $766;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$748 + 12 >> 2] = $750;
       HEAP32[$$pre$phi58$i$iZ2D >> 2] = $748;
      } else {
       $771 = HEAP32[$tbase$255$i + (($719 | 24) + $tsize$254$i) >> 2] | 0;
       $773 = HEAP32[$tbase$255$i + ($tsize$254$i + 12 + $719) >> 2] | 0;
       do if (($773 | 0) == ($720 | 0)) {
        $$sum67$i$i = $719 | 16;
        $784 = $tbase$255$i + ($$sum2$i21$i + $$sum67$i$i) | 0;
        $785 = HEAP32[$784 >> 2] | 0;
        if (!$785) {
         $787 = $tbase$255$i + ($$sum67$i$i + $tsize$254$i) | 0;
         $788 = HEAP32[$787 >> 2] | 0;
         if (!$788) {
          $R$1$i$i = 0;
          break;
         } else {
          $R$0$i$i = $788;
          $RP$0$i$i = $787;
         }
        } else {
         $R$0$i$i = $785;
         $RP$0$i$i = $784;
        }
        while (1) {
         $790 = $R$0$i$i + 20 | 0;
         $791 = HEAP32[$790 >> 2] | 0;
         if ($791) {
          $R$0$i$i = $791;
          $RP$0$i$i = $790;
          continue;
         }
         $793 = $R$0$i$i + 16 | 0;
         $794 = HEAP32[$793 >> 2] | 0;
         if (!$794) {
          $R$0$i$i$lcssa = $R$0$i$i;
          $RP$0$i$i$lcssa = $RP$0$i$i;
          break;
         } else {
          $R$0$i$i = $794;
          $RP$0$i$i = $793;
         }
        }
        if ($RP$0$i$i$lcssa >>> 0 < $755 >>> 0) _abort(); else {
         HEAP32[$RP$0$i$i$lcssa >> 2] = 0;
         $R$1$i$i = $R$0$i$i$lcssa;
         break;
        }
       } else {
        $776 = HEAP32[$tbase$255$i + (($719 | 8) + $tsize$254$i) >> 2] | 0;
        if ($776 >>> 0 < $755 >>> 0) _abort();
        $778 = $776 + 12 | 0;
        if ((HEAP32[$778 >> 2] | 0) != ($720 | 0)) _abort();
        $781 = $773 + 8 | 0;
        if ((HEAP32[$781 >> 2] | 0) == ($720 | 0)) {
         HEAP32[$778 >> 2] = $773;
         HEAP32[$781 >> 2] = $776;
         $R$1$i$i = $773;
         break;
        } else _abort();
       } while (0);
       if (!$771) break;
       $799 = HEAP32[$tbase$255$i + ($tsize$254$i + 28 + $719) >> 2] | 0;
       $800 = 6180 + ($799 << 2) | 0;
       do if (($720 | 0) == (HEAP32[$800 >> 2] | 0)) {
        HEAP32[$800 >> 2] = $R$1$i$i;
        if ($R$1$i$i) break;
        HEAP32[1470] = HEAP32[1470] & ~(1 << $799);
        break L332;
       } else {
        if ($771 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
        $809 = $771 + 16 | 0;
        if ((HEAP32[$809 >> 2] | 0) == ($720 | 0)) HEAP32[$809 >> 2] = $R$1$i$i; else HEAP32[$771 + 20 >> 2] = $R$1$i$i;
        if (!$R$1$i$i) break L332;
       } while (0);
       $814 = HEAP32[1473] | 0;
       if ($R$1$i$i >>> 0 < $814 >>> 0) _abort();
       HEAP32[$R$1$i$i + 24 >> 2] = $771;
       $$sum3132$i$i = $719 | 16;
       $818 = HEAP32[$tbase$255$i + ($$sum3132$i$i + $tsize$254$i) >> 2] | 0;
       do if ($818) if ($818 >>> 0 < $814 >>> 0) _abort(); else {
        HEAP32[$R$1$i$i + 16 >> 2] = $818;
        HEAP32[$818 + 24 >> 2] = $R$1$i$i;
        break;
       } while (0);
       $824 = HEAP32[$tbase$255$i + ($$sum2$i21$i + $$sum3132$i$i) >> 2] | 0;
       if (!$824) break;
       if ($824 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
        HEAP32[$R$1$i$i + 20 >> 2] = $824;
        HEAP32[$824 + 24 >> 2] = $R$1$i$i;
        break;
       }
      } while (0);
      $oldfirst$0$i$i = $tbase$255$i + (($744 | $719) + $tsize$254$i) | 0;
      $qsize$0$i$i = $744 + $725 | 0;
     } else {
      $oldfirst$0$i$i = $720;
      $qsize$0$i$i = $725;
     }
     $832 = $oldfirst$0$i$i + 4 | 0;
     HEAP32[$832 >> 2] = HEAP32[$832 >> 2] & -2;
     HEAP32[$tbase$255$i + ($$sum$i19$i + 4) >> 2] = $qsize$0$i$i | 1;
     HEAP32[$tbase$255$i + ($qsize$0$i$i + $$sum$i19$i) >> 2] = $qsize$0$i$i;
     $838 = $qsize$0$i$i >>> 3;
     if ($qsize$0$i$i >>> 0 < 256) {
      $840 = $838 << 1;
      $841 = 5916 + ($840 << 2) | 0;
      $842 = HEAP32[1469] | 0;
      $843 = 1 << $838;
      do if (!($842 & $843)) {
       HEAP32[1469] = $842 | $843;
       $$pre$phi$i23$iZ2D = 5916 + ($840 + 2 << 2) | 0;
       $F4$0$i$i = $841;
      } else {
       $847 = 5916 + ($840 + 2 << 2) | 0;
       $848 = HEAP32[$847 >> 2] | 0;
       if ($848 >>> 0 >= (HEAP32[1473] | 0) >>> 0) {
        $$pre$phi$i23$iZ2D = $847;
        $F4$0$i$i = $848;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i23$iZ2D >> 2] = $724;
      HEAP32[$F4$0$i$i + 12 >> 2] = $724;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $F4$0$i$i;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $841;
      break;
     }
     $854 = $qsize$0$i$i >>> 8;
     do if (!$854) $I7$0$i$i = 0; else {
      if ($qsize$0$i$i >>> 0 > 16777215) {
       $I7$0$i$i = 31;
       break;
      }
      $859 = ($854 + 1048320 | 0) >>> 16 & 8;
      $860 = $854 << $859;
      $863 = ($860 + 520192 | 0) >>> 16 & 4;
      $865 = $860 << $863;
      $868 = ($865 + 245760 | 0) >>> 16 & 2;
      $873 = 14 - ($863 | $859 | $868) + ($865 << $868 >>> 15) | 0;
      $I7$0$i$i = $qsize$0$i$i >>> ($873 + 7 | 0) & 1 | $873 << 1;
     } while (0);
     $879 = 6180 + ($I7$0$i$i << 2) | 0;
     HEAP32[$tbase$255$i + ($$sum$i19$i + 28) >> 2] = $I7$0$i$i;
     HEAP32[$tbase$255$i + ($$sum$i19$i + 20) >> 2] = 0;
     HEAP32[$tbase$255$i + ($$sum$i19$i + 16) >> 2] = 0;
     $883 = HEAP32[1470] | 0;
     $884 = 1 << $I7$0$i$i;
     if (!($883 & $884)) {
      HEAP32[1470] = $883 | $884;
      HEAP32[$879 >> 2] = $724;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 24) >> 2] = $879;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $724;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $724;
      break;
     }
     $891 = HEAP32[$879 >> 2] | 0;
     L418 : do if ((HEAP32[$891 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) $T$0$lcssa$i25$i = $891; else {
      $K8$051$i$i = $qsize$0$i$i << (($I7$0$i$i | 0) == 31 ? 0 : 25 - ($I7$0$i$i >>> 1) | 0);
      $T$050$i$i = $891;
      while (1) {
       $908 = $T$050$i$i + 16 + ($K8$051$i$i >>> 31 << 2) | 0;
       $903 = HEAP32[$908 >> 2] | 0;
       if (!$903) {
        $$lcssa = $908;
        $T$050$i$i$lcssa = $T$050$i$i;
        break;
       }
       if ((HEAP32[$903 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) {
        $T$0$lcssa$i25$i = $903;
        break L418;
       } else {
        $K8$051$i$i = $K8$051$i$i << 1;
        $T$050$i$i = $903;
       }
      }
      if ($$lcssa >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
       HEAP32[$$lcssa >> 2] = $724;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 24) >> 2] = $T$050$i$i$lcssa;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $724;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $724;
       break L324;
      }
     } while (0);
     $915 = $T$0$lcssa$i25$i + 8 | 0;
     $916 = HEAP32[$915 >> 2] | 0;
     $917 = HEAP32[1473] | 0;
     if ($916 >>> 0 >= $917 >>> 0 & $T$0$lcssa$i25$i >>> 0 >= $917 >>> 0) {
      HEAP32[$916 + 12 >> 2] = $724;
      HEAP32[$915 >> 2] = $724;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $916;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $T$0$lcssa$i25$i;
      HEAP32[$tbase$255$i + ($$sum$i19$i + 24) >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $mem$0 = $tbase$255$i + ($711 | 8) | 0;
    return $mem$0 | 0;
   } else $sp$0$i$i$i = 6324;
   while (1) {
    $925 = HEAP32[$sp$0$i$i$i >> 2] | 0;
    if ($925 >>> 0 <= $635 >>> 0) {
     $928 = HEAP32[$sp$0$i$i$i + 4 >> 2] | 0;
     $929 = $925 + $928 | 0;
     if ($929 >>> 0 > $635 >>> 0) {
      $$lcssa215 = $925;
      $$lcssa216 = $928;
      $$lcssa217 = $929;
      break;
     }
    }
    $sp$0$i$i$i = HEAP32[$sp$0$i$i$i + 8 >> 2] | 0;
   }
   $934 = $$lcssa215 + ($$lcssa216 + -39) | 0;
   $940 = $$lcssa215 + ($$lcssa216 + -47 + (($934 & 7 | 0) == 0 ? 0 : 0 - $934 & 7)) | 0;
   $941 = $635 + 16 | 0;
   $943 = $940 >>> 0 < $941 >>> 0 ? $635 : $940;
   $944 = $943 + 8 | 0;
   $947 = $tbase$255$i + 8 | 0;
   $952 = ($947 & 7 | 0) == 0 ? 0 : 0 - $947 & 7;
   $954 = $tsize$254$i + -40 - $952 | 0;
   HEAP32[1475] = $tbase$255$i + $952;
   HEAP32[1472] = $954;
   HEAP32[$tbase$255$i + ($952 + 4) >> 2] = $954 | 1;
   HEAP32[$tbase$255$i + ($tsize$254$i + -36) >> 2] = 40;
   HEAP32[1476] = HEAP32[1591];
   $959 = $943 + 4 | 0;
   HEAP32[$959 >> 2] = 27;
   HEAP32[$944 >> 2] = HEAP32[1581];
   HEAP32[$944 + 4 >> 2] = HEAP32[1582];
   HEAP32[$944 + 8 >> 2] = HEAP32[1583];
   HEAP32[$944 + 12 >> 2] = HEAP32[1584];
   HEAP32[1581] = $tbase$255$i;
   HEAP32[1582] = $tsize$254$i;
   HEAP32[1584] = 0;
   HEAP32[1583] = $944;
   $960 = $943 + 28 | 0;
   HEAP32[$960 >> 2] = 7;
   if (($943 + 32 | 0) >>> 0 < $$lcssa217 >>> 0) {
    $964 = $960;
    do {
     $964$looptemp = $964;
     $964 = $964 + 4 | 0;
     HEAP32[$964 >> 2] = 7;
    } while (($964$looptemp + 8 | 0) >>> 0 < $$lcssa217 >>> 0);
   }
   if (($943 | 0) != ($635 | 0)) {
    $970 = $943 - $635 | 0;
    HEAP32[$959 >> 2] = HEAP32[$959 >> 2] & -2;
    HEAP32[$635 + 4 >> 2] = $970 | 1;
    HEAP32[$943 >> 2] = $970;
    $975 = $970 >>> 3;
    if ($970 >>> 0 < 256) {
     $977 = $975 << 1;
     $978 = 5916 + ($977 << 2) | 0;
     $979 = HEAP32[1469] | 0;
     $980 = 1 << $975;
     if (!($979 & $980)) {
      HEAP32[1469] = $979 | $980;
      $$pre$phi$i$iZ2D = 5916 + ($977 + 2 << 2) | 0;
      $F$0$i$i = $978;
     } else {
      $984 = 5916 + ($977 + 2 << 2) | 0;
      $985 = HEAP32[$984 >> 2] | 0;
      if ($985 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
       $$pre$phi$i$iZ2D = $984;
       $F$0$i$i = $985;
      }
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $635;
     HEAP32[$F$0$i$i + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $F$0$i$i;
     HEAP32[$635 + 12 >> 2] = $978;
     break;
    }
    $991 = $970 >>> 8;
    if (!$991) $I1$0$i$i = 0; else if ($970 >>> 0 > 16777215) $I1$0$i$i = 31; else {
     $996 = ($991 + 1048320 | 0) >>> 16 & 8;
     $997 = $991 << $996;
     $1000 = ($997 + 520192 | 0) >>> 16 & 4;
     $1002 = $997 << $1000;
     $1005 = ($1002 + 245760 | 0) >>> 16 & 2;
     $1010 = 14 - ($1000 | $996 | $1005) + ($1002 << $1005 >>> 15) | 0;
     $I1$0$i$i = $970 >>> ($1010 + 7 | 0) & 1 | $1010 << 1;
    }
    $1016 = 6180 + ($I1$0$i$i << 2) | 0;
    HEAP32[$635 + 28 >> 2] = $I1$0$i$i;
    HEAP32[$635 + 20 >> 2] = 0;
    HEAP32[$941 >> 2] = 0;
    $1019 = HEAP32[1470] | 0;
    $1020 = 1 << $I1$0$i$i;
    if (!($1019 & $1020)) {
     HEAP32[1470] = $1019 | $1020;
     HEAP32[$1016 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $1016;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    }
    $1027 = HEAP32[$1016 >> 2] | 0;
    L459 : do if ((HEAP32[$1027 + 4 >> 2] & -8 | 0) == ($970 | 0)) $T$0$lcssa$i$i = $1027; else {
     $K2$07$i$i = $970 << (($I1$0$i$i | 0) == 31 ? 0 : 25 - ($I1$0$i$i >>> 1) | 0);
     $T$06$i$i = $1027;
     while (1) {
      $1044 = $T$06$i$i + 16 + ($K2$07$i$i >>> 31 << 2) | 0;
      $1039 = HEAP32[$1044 >> 2] | 0;
      if (!$1039) {
       $$lcssa211 = $1044;
       $T$06$i$i$lcssa = $T$06$i$i;
       break;
      }
      if ((HEAP32[$1039 + 4 >> 2] & -8 | 0) == ($970 | 0)) {
       $T$0$lcssa$i$i = $1039;
       break L459;
      } else {
       $K2$07$i$i = $K2$07$i$i << 1;
       $T$06$i$i = $1039;
      }
     }
     if ($$lcssa211 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
      HEAP32[$$lcssa211 >> 2] = $635;
      HEAP32[$635 + 24 >> 2] = $T$06$i$i$lcssa;
      HEAP32[$635 + 12 >> 2] = $635;
      HEAP32[$635 + 8 >> 2] = $635;
      break L299;
     }
    } while (0);
    $1051 = $T$0$lcssa$i$i + 8 | 0;
    $1052 = HEAP32[$1051 >> 2] | 0;
    $1053 = HEAP32[1473] | 0;
    if ($1052 >>> 0 >= $1053 >>> 0 & $T$0$lcssa$i$i >>> 0 >= $1053 >>> 0) {
     HEAP32[$1052 + 12 >> 2] = $635;
     HEAP32[$1051 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $1052;
     HEAP32[$635 + 12 >> 2] = $T$0$lcssa$i$i;
     HEAP32[$635 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } while (0);
  $1060 = HEAP32[1472] | 0;
  if ($1060 >>> 0 > $nb$0 >>> 0) {
   $1062 = $1060 - $nb$0 | 0;
   HEAP32[1472] = $1062;
   $1063 = HEAP32[1475] | 0;
   HEAP32[1475] = $1063 + $nb$0;
   HEAP32[$1063 + ($nb$0 + 4) >> 2] = $1062 | 1;
   HEAP32[$1063 + 4 >> 2] = $nb$0 | 3;
   $mem$0 = $1063 + 8 | 0;
   return $mem$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $mem$0 = 0;
 return $mem$0 | 0;
}

function ___floatscan($f, $prec, $pok) {
 $f = $f | 0;
 $prec = $prec | 0;
 $pok = $pok | 0;
 var $$0 = 0.0, $$0$i25 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3121$i = 0, $$in = 0, $$lcssa = 0, $$lcssa288 = 0, $$lcssa289 = 0, $$lcssa308 = 0, $$lcssa308$lcssa = 0, $$lcssa309 = 0, $$lcssa309$lcssa = 0, $$lcssa322 = 0, $$lcssa323 = 0, $$lcssa333 = 0, $$lcssa50$i = 0, $$not$i = 0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$sink$off0$us$i = 0, $$sink$off0$us93$i = 0, $0 = 0, $1 = 0, $100 = 0, $109 = 0, $117 = 0, $119 = 0, $126 = 0, $133 = 0, $141 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $153 = 0, $154 = 0, $158 = 0, $16 = 0, $163 = 0, $165 = 0, $177 = 0.0, $184 = 0, $186 = 0, $195 = 0, $199 = 0, $2 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $217 = 0, $218 = 0, $219 = 0, $229 = 0, $230 = 0, $243 = 0, $245 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $264 = 0, $266 = 0, $277 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $289 = 0, $29 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $304 = 0.0, $316 = 0.0, $324 = 0, $325 = 0, $332 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $352 = 0, $354 = 0, $356 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $365 = 0, $370 = 0, $371 = 0, $375 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $396 = 0, $397 = 0, $406 = 0, $407 = 0, $408 = 0, $416 = 0, $42 = 0, $421 = 0, $422 = 0, $424 = 0, $425 = 0, $438 = 0, $440 = 0, $45 = 0, $450 = 0, $452 = 0, $46 = 0, $464 = 0, $465 = 0, $466 = 0, $488 = 0, $500 = 0, $504 = 0, $507 = 0, $509 = 0, $510 = 0, $511 = 0, $514 = 0, $515 = 0, $528 = 0, $531 = 0, $533 = 0, $535 = 0, $536 = 0, $54 = 0, $542 = 0, $544 = 0, $549 = 0, $552 = 0, $557 = 0, $559 = 0, $561 = 0, $562 = 0, $568 = 0, $570 = 0, $575 = 0, $578 = 0, $582 = 0, $585 = 0, $590 = 0, $594 = 0, $595 = 0, $597 = 0, $601 = 0, $603 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $612 = 0, $613 = 0, $622 = 0, $627 = 0, $628 = 0, $63 = 0, $635 = 0, $637 = 0.0, $639 = 0, $643 = 0.0, $644 = 0.0, $647 = 0.0, $651 = 0, $654 = 0, $661 = 0.0, $679 = 0.0, $681 = 0, $687 = 0, $688 = 0, $698 = 0, $709 = 0, $71 = 0, $712 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $750 = 0, $76 = 0, $84 = 0, $9 = 0, $93 = 0, $99 = 0, $a$0$lcssa177$i = 0, $a$0101$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0, $a$3$i$lcssa300 = 0, $a$3$i301 = 0, $a$3$ph$i = 0, $a$3$ph183$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i23 = 0.0, $bits$0$ph = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$185 = 0, $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0103$i = 0, $carry1$0$us$i = 0, $carry1$0$us89$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0, $carry1$1$us94$i = 0, $carry1$1$us94$i$lcssa = 0, $carry3$081$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$us$i = 0, $e2$0$us84$i = 0, $e2$1$i = 0, $e2$1$i298 = 0, $e2$1$ph$i = 0, $e2$1$ph182$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa294 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa331 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3117$i = 0, $gotdig$3117$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1118$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$084 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0120$i = 0, $j$0120$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$3110$i = 0, $k$0$lcssa$i = 0, $k$0119$i = 0, $k$0119$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0, $k$3$i = 0, $k$4102$i = 0, $k$5$in$us$i = 0, $k$5$in$us88$i = 0, $k$5$us$i = 0, $k$5$us90$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0116$i = 0, $lnz$0116$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $or$cond16$i = 0, $or$cond19$i = 0, $or$cond9$i = 0, $rp$0$lcssa178$i = 0, $rp$0100$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0, $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i22 = 0.0, $y$2$i = 0.0, $y$2$i24 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $z$0$i = 0, $z$1$ph37$i = 0, $z$1$us$i = 0, $z$1$us85$i = 0, $z$2$us$i = 0, $z$2$us87$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0, $z$3$us97$i = 0, $z$3$us97$i$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x$i = sp;
 switch ($prec | 0) {
 case 0:
  {
   $bits$0$ph = 24;
   $emin$0$ph = -149;
   break;
  }
 case 1:
  {
   $bits$0$ph = 53;
   $emin$0$ph = -1074;
   break;
  }
 case 2:
  {
   $bits$0$ph = 53;
   $emin$0$ph = -1074;
   break;
  }
 default:
  {
   $$0 = 0.0;
   STACKTOP = sp;
   return +$$0;
  }
 }
 $0 = $f + 4 | 0;
 $1 = $f + 100 | 0;
 do {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $2 + 1;
   $9 = HEAPU8[$2 >> 0] | 0;
  } else $9 = ___shgetc($f) | 0;
 } while ((_isspace($9) | 0) != 0);
 $$lcssa333 = $9;
 L13 : do switch ($$lcssa333 | 0) {
 case 43:
 case 45:
  {
   $15 = 1 - ((($$lcssa333 | 0) == 45 & 1) << 1) | 0;
   $16 = HEAP32[$0 >> 2] | 0;
   if ($16 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $16 + 1;
    $c$0 = HEAPU8[$16 >> 0] | 0;
    $sign$0 = $15;
    break L13;
   } else {
    $c$0 = ___shgetc($f) | 0;
    $sign$0 = $15;
    break L13;
   }
   break;
  }
 default:
  {
   $c$0 = $$lcssa333;
   $sign$0 = 1;
  }
 } while (0);
 $c$185 = $c$0;
 $i$084 = 0;
 while (1) {
  if (($c$185 | 32 | 0) != (HEAP8[27824 + $i$084 >> 0] | 0)) {
   $c$1$lcssa = $c$185;
   $i$0$lcssa = $i$084;
   break;
  }
  do if ($i$084 >>> 0 < 7) {
   $29 = HEAP32[$0 >> 2] | 0;
   if ($29 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $29 + 1;
    $c$2 = HEAPU8[$29 >> 0] | 0;
    break;
   } else {
    $c$2 = ___shgetc($f) | 0;
    break;
   }
  } else $c$2 = $c$185; while (0);
  $36 = $i$084 + 1 | 0;
  if ($36 >>> 0 < 8) {
   $c$185 = $c$2;
   $i$084 = $36;
  } else {
   $c$1$lcssa = $c$2;
   $i$0$lcssa = $36;
   break;
  }
 }
 L29 : do switch ($i$0$lcssa | 0) {
 case 8:
  break;
 case 3:
  {
   label = 23;
   break;
  }
 default:
  {
   $39 = ($pok | 0) != 0;
   if ($39 & $i$0$lcssa >>> 0 > 3) if (($i$0$lcssa | 0) == 8) break L29; else {
    label = 23;
    break L29;
   }
   do if (!$i$0$lcssa) {
    if (($c$1$lcssa | 32 | 0) == 110) {
     $54 = HEAP32[$0 >> 2] | 0;
     if ($54 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $54 + 1;
      $c$4 = HEAPU8[$54 >> 0] | 0;
     } else $c$4 = ___shgetc($f) | 0;
     if (($c$4 | 32 | 0) != 97) break;
     $712 = HEAP32[$0 >> 2] | 0;
     if ($712 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $712 + 1;
      $c$4$1 = HEAPU8[$712 >> 0] | 0;
     } else $c$4$1 = ___shgetc($f) | 0;
     if (($c$4$1 | 32 | 0) != 110) break;
     $63 = HEAP32[$0 >> 2] | 0;
     if ($63 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $63 + 1;
      $71 = HEAPU8[$63 >> 0] | 0;
     } else $71 = ___shgetc($f) | 0;
     if (($71 | 0) == 40) $i$4 = 1; else {
      if (!(HEAP32[$1 >> 2] | 0)) {
       $$0 = nan;
       STACKTOP = sp;
       return +$$0;
      }
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $$0 = nan;
      STACKTOP = sp;
      return +$$0;
     }
     while (1) {
      $76 = HEAP32[$0 >> 2] | 0;
      if ($76 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $76 + 1;
       $84 = HEAPU8[$76 >> 0] | 0;
      } else $84 = ___shgetc($f) | 0;
      if (!(($84 + -48 | 0) >>> 0 < 10 | ($84 + -65 | 0) >>> 0 < 26)) if (!(($84 | 0) == 95 | ($84 + -97 | 0) >>> 0 < 26)) {
       $$lcssa289 = $84;
       $i$4$lcssa = $i$4;
       break;
      }
      $i$4 = $i$4 + 1 | 0;
     }
     if (($$lcssa289 | 0) == 41) {
      $$0 = nan;
      STACKTOP = sp;
      return +$$0;
     }
     $93 = (HEAP32[$1 >> 2] | 0) == 0;
     if (!$93) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     if (!$39) {
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim($f, 0);
      $$0 = 0.0;
      STACKTOP = sp;
      return +$$0;
     }
     if (($i$4$lcssa | 0) == 0 | $93) {
      $$0 = nan;
      STACKTOP = sp;
      return +$$0;
     }
     $$in = $i$4$lcssa;
     $100 = HEAP32[$0 >> 2] | 0;
     while (1) {
      $$in = $$in + -1 | 0;
      $99 = $100 + -1 | 0;
      if (!$$in) {
       $$lcssa288 = $99;
       break;
      } else $100 = $99;
     }
     HEAP32[$0 >> 2] = $$lcssa288;
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    do if (($c$1$lcssa | 0) == 48) {
     $109 = HEAP32[$0 >> 2] | 0;
     if ($109 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $109 + 1;
      $117 = HEAPU8[$109 >> 0] | 0;
     } else $117 = ___shgetc($f) | 0;
     if (($117 | 32 | 0) != 120) {
      if (!(HEAP32[$1 >> 2] | 0)) {
       $c$6 = 48;
       break;
      }
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $c$6 = 48;
      break;
     }
     $119 = HEAP32[$0 >> 2] | 0;
     if ($119 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $119 + 1;
      $c$0$i = HEAPU8[$119 >> 0] | 0;
      $gotdig$0$i = 0;
     } else {
      $c$0$i = ___shgetc($f) | 0;
      $gotdig$0$i = 0;
     }
     L99 : while (1) {
      switch ($c$0$i | 0) {
      case 46:
       {
        $gotdig$0$i$lcssa294 = $gotdig$0$i;
        label = 71;
        break L99;
        break;
       }
      case 48:
       break;
      default:
       {
        $163 = 0;
        $165 = 0;
        $721 = 0;
        $722 = 0;
        $c$2$i = $c$0$i;
        $gotdig$2$i = $gotdig$0$i;
        $gotrad$0$i = 0;
        $gottail$0$i = 0;
        $scale$0$i = 1.0;
        $x$0$i = 0;
        $y$0$i = 0.0;
        break L99;
       }
      }
      $126 = HEAP32[$0 >> 2] | 0;
      if ($126 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $126 + 1;
       $c$0$i = HEAPU8[$126 >> 0] | 0;
       $gotdig$0$i = 1;
       continue;
      } else {
       $c$0$i = ___shgetc($f) | 0;
       $gotdig$0$i = 1;
       continue;
      }
     }
     if ((label | 0) == 71) {
      $133 = HEAP32[$0 >> 2] | 0;
      if ($133 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $133 + 1;
       $c$1$ph$i = HEAPU8[$133 >> 0] | 0;
      } else $c$1$ph$i = ___shgetc($f) | 0;
      if (($c$1$ph$i | 0) == 48) {
       $148 = 0;
       $149 = 0;
       while (1) {
        $141 = HEAP32[$0 >> 2] | 0;
        if ($141 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $141 + 1;
         $153 = HEAPU8[$141 >> 0] | 0;
        } else $153 = ___shgetc($f) | 0;
        $150 = _i64Add($148 | 0, $149 | 0, -1, -1) | 0;
        $151 = tempRet0;
        if (($153 | 0) == 48) {
         $148 = $150;
         $149 = $151;
        } else {
         $163 = 0;
         $165 = 0;
         $721 = $150;
         $722 = $151;
         $c$2$i = $153;
         $gotdig$2$i = 1;
         $gotrad$0$i = 1;
         $gottail$0$i = 0;
         $scale$0$i = 1.0;
         $x$0$i = 0;
         $y$0$i = 0.0;
         break;
        }
       }
      } else {
       $163 = 0;
       $165 = 0;
       $721 = 0;
       $722 = 0;
       $c$2$i = $c$1$ph$i;
       $gotdig$2$i = $gotdig$0$i$lcssa294;
       $gotrad$0$i = 1;
       $gottail$0$i = 0;
       $scale$0$i = 1.0;
       $x$0$i = 0;
       $y$0$i = 0.0;
      }
     }
     while (1) {
      $154 = $c$2$i + -48 | 0;
      $$pre$i = $c$2$i | 32;
      if ($154 >>> 0 < 10) label = 83; else {
       $158 = ($c$2$i | 0) == 46;
       if (!($158 | ($$pre$i + -97 | 0) >>> 0 < 6)) {
        $207 = $165;
        $208 = $721;
        $210 = $163;
        $211 = $722;
        $c$2$lcssa$i = $c$2$i;
        $gotdig$2$i$lcssa = $gotdig$2$i;
        $gotrad$0$i$lcssa = $gotrad$0$i;
        $x$0$i$lcssa = $x$0$i;
        $y$0$i$lcssa = $y$0$i;
        break;
       }
       if ($158) if (!$gotrad$0$i) {
        $723 = $165;
        $724 = $163;
        $725 = $165;
        $726 = $163;
        $gotdig$3$i = $gotdig$2$i;
        $gotrad$1$i = 1;
        $gottail$2$i = $gottail$0$i;
        $scale$2$i = $scale$0$i;
        $x$2$i = $x$0$i;
        $y$2$i = $y$0$i;
       } else {
        $207 = $165;
        $208 = $721;
        $210 = $163;
        $211 = $722;
        $c$2$lcssa$i = 46;
        $gotdig$2$i$lcssa = $gotdig$2$i;
        $gotrad$0$i$lcssa = $gotrad$0$i;
        $x$0$i$lcssa = $x$0$i;
        $y$0$i$lcssa = $y$0$i;
        break;
       } else label = 83;
      }
      if ((label | 0) == 83) {
       label = 0;
       $d$0$i = ($c$2$i | 0) > 57 ? $$pre$i + -87 | 0 : $154;
       do if (($163 | 0) < 0 | ($163 | 0) == 0 & $165 >>> 0 < 8) {
        $gottail$1$i = $gottail$0$i;
        $scale$1$i = $scale$0$i;
        $x$1$i = $d$0$i + ($x$0$i << 4) | 0;
        $y$1$i = $y$0$i;
       } else {
        if (($163 | 0) < 0 | ($163 | 0) == 0 & $165 >>> 0 < 14) {
         $177 = $scale$0$i * .0625;
         $gottail$1$i = $gottail$0$i;
         $scale$1$i = $177;
         $x$1$i = $x$0$i;
         $y$1$i = $y$0$i + $177 * +($d$0$i | 0);
         break;
        }
        if (($gottail$0$i | 0) != 0 | ($d$0$i | 0) == 0) {
         $gottail$1$i = $gottail$0$i;
         $scale$1$i = $scale$0$i;
         $x$1$i = $x$0$i;
         $y$1$i = $y$0$i;
        } else {
         $gottail$1$i = 1;
         $scale$1$i = $scale$0$i;
         $x$1$i = $x$0$i;
         $y$1$i = $y$0$i + $scale$0$i * .5;
        }
       } while (0);
       $184 = _i64Add($165 | 0, $163 | 0, 1, 0) | 0;
       $723 = $721;
       $724 = $722;
       $725 = $184;
       $726 = tempRet0;
       $gotdig$3$i = 1;
       $gotrad$1$i = $gotrad$0$i;
       $gottail$2$i = $gottail$1$i;
       $scale$2$i = $scale$1$i;
       $x$2$i = $x$1$i;
       $y$2$i = $y$1$i;
      }
      $186 = HEAP32[$0 >> 2] | 0;
      if ($186 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $186 + 1;
       $163 = $726;
       $165 = $725;
       $721 = $723;
       $722 = $724;
       $c$2$i = HEAPU8[$186 >> 0] | 0;
       $gotdig$2$i = $gotdig$3$i;
       $gotrad$0$i = $gotrad$1$i;
       $gottail$0$i = $gottail$2$i;
       $scale$0$i = $scale$2$i;
       $x$0$i = $x$2$i;
       $y$0$i = $y$2$i;
       continue;
      } else {
       $163 = $726;
       $165 = $725;
       $721 = $723;
       $722 = $724;
       $c$2$i = ___shgetc($f) | 0;
       $gotdig$2$i = $gotdig$3$i;
       $gotrad$0$i = $gotrad$1$i;
       $gottail$0$i = $gottail$2$i;
       $scale$0$i = $scale$2$i;
       $x$0$i = $x$2$i;
       $y$0$i = $y$2$i;
       continue;
      }
     }
     if (!$gotdig$2$i$lcssa) {
      $195 = (HEAP32[$1 >> 2] | 0) == 0;
      if (!$195) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      if (!$pok) ___shlim($f, 0); else if (!$195) {
       $199 = HEAP32[$0 >> 2] | 0;
       HEAP32[$0 >> 2] = $199 + -1;
       if ($gotrad$0$i$lcssa) HEAP32[$0 >> 2] = $199 + -2;
      }
      $$0 = +($sign$0 | 0) * 0.0;
      STACKTOP = sp;
      return +$$0;
     }
     $205 = ($gotrad$0$i$lcssa | 0) == 0;
     $206 = $205 ? $207 : $208;
     $209 = $205 ? $210 : $211;
     if (($210 | 0) < 0 | ($210 | 0) == 0 & $207 >>> 0 < 8) {
      $218 = $207;
      $219 = $210;
      $x$324$i = $x$0$i$lcssa;
      while (1) {
       $217 = $x$324$i << 4;
       $218 = _i64Add($218 | 0, $219 | 0, 1, 0) | 0;
       $219 = tempRet0;
       if (!(($219 | 0) < 0 | ($219 | 0) == 0 & $218 >>> 0 < 8)) {
        $x$3$lcssa$i = $217;
        break;
       } else $x$324$i = $217;
      }
     } else $x$3$lcssa$i = $x$0$i$lcssa;
     do if (($c$2$lcssa$i | 32 | 0) == 112) {
      $229 = _scanexp($f, $pok) | 0;
      $230 = tempRet0;
      if (($229 | 0) == 0 & ($230 | 0) == -2147483648) if (!$pok) {
       ___shlim($f, 0);
       $$0 = 0.0;
       STACKTOP = sp;
       return +$$0;
      } else {
       if (!(HEAP32[$1 >> 2] | 0)) {
        $247 = 0;
        $248 = 0;
        break;
       }
       HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       $247 = 0;
       $248 = 0;
       break;
      } else {
       $247 = $229;
       $248 = $230;
      }
     } else if (!(HEAP32[$1 >> 2] | 0)) {
      $247 = 0;
      $248 = 0;
     } else {
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $247 = 0;
      $248 = 0;
     } while (0);
     $243 = _bitshift64Shl($206 | 0, $209 | 0, 2) | 0;
     $245 = _i64Add($243 | 0, tempRet0 | 0, -32, -1) | 0;
     $249 = _i64Add($245 | 0, tempRet0 | 0, $247 | 0, $248 | 0) | 0;
     $250 = tempRet0;
     if (!$x$3$lcssa$i) {
      $$0 = +($sign$0 | 0) * 0.0;
      STACKTOP = sp;
      return +$$0;
     }
     if (($250 | 0) > 0 | ($250 | 0) == 0 & $249 >>> 0 > (0 - $emin$0$ph | 0) >>> 0) {
      HEAP32[(___errno_location() | 0) >> 2] = 34;
      $$0 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
      STACKTOP = sp;
      return +$$0;
     }
     $264 = $emin$0$ph + -106 | 0;
     $266 = (($264 | 0) < 0) << 31 >> 31;
     if (($250 | 0) < ($266 | 0) | ($250 | 0) == ($266 | 0) & $249 >>> 0 < $264 >>> 0) {
      HEAP32[(___errno_location() | 0) >> 2] = 34;
      $$0 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
      STACKTOP = sp;
      return +$$0;
     }
     if (($x$3$lcssa$i | 0) > -1) {
      $282 = $249;
      $283 = $250;
      $x$419$i = $x$3$lcssa$i;
      $y$320$i = $y$0$i$lcssa;
      while (1) {
       $277 = !($y$320$i >= .5);
       $281 = $277 & 1 | $x$419$i << 1;
       $x$5$i = $281 ^ 1;
       $y$4$i = $y$320$i + ($277 ? $y$320$i : $y$320$i + -1.0);
       $284 = _i64Add($282 | 0, $283 | 0, -1, -1) | 0;
       $285 = tempRet0;
       if (($281 | 0) > -1) {
        $282 = $284;
        $283 = $285;
        $x$419$i = $x$5$i;
        $y$320$i = $y$4$i;
       } else {
        $291 = $284;
        $292 = $285;
        $x$4$lcssa$i = $x$5$i;
        $y$3$lcssa$i = $y$4$i;
        break;
       }
      }
     } else {
      $291 = $249;
      $292 = $250;
      $x$4$lcssa$i = $x$3$lcssa$i;
      $y$3$lcssa$i = $y$0$i$lcssa;
     }
     $289 = _i64Subtract(32, 0, $emin$0$ph | 0, (($emin$0$ph | 0) < 0) << 31 >> 31 | 0) | 0;
     $293 = _i64Add($291 | 0, $292 | 0, $289 | 0, tempRet0 | 0) | 0;
     $294 = tempRet0;
     if (0 > ($294 | 0) | 0 == ($294 | 0) & $bits$0$ph >>> 0 > $293 >>> 0) if (($293 | 0) < 0) {
      $$0710$i = 0;
      label = 124;
     } else {
      $$07$i = $293;
      label = 122;
     } else {
      $$07$i = $bits$0$ph;
      label = 122;
     }
     if ((label | 0) == 122) if (($$07$i | 0) < 53) {
      $$0710$i = $$07$i;
      label = 124;
     } else {
      $$0711$i = $$07$i;
      $$pre$phi42$iZ2D = +($sign$0 | 0);
      $bias$0$i = 0.0;
     }
     if ((label | 0) == 124) {
      $304 = +($sign$0 | 0);
      $$0711$i = $$0710$i;
      $$pre$phi42$iZ2D = $304;
      $bias$0$i = +_copysignl(+_scalbn(1.0, 84 - $$0710$i | 0), $304);
     }
     $or$cond9$i = ($x$4$lcssa$i & 1 | 0) == 0 & ($y$3$lcssa$i != 0.0 & ($$0711$i | 0) < 32);
     $316 = $$pre$phi42$iZ2D * ($or$cond9$i ? 0.0 : $y$3$lcssa$i) + ($bias$0$i + $$pre$phi42$iZ2D * +((($or$cond9$i & 1) + $x$4$lcssa$i | 0) >>> 0)) - $bias$0$i;
     if (!($316 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0 = +_scalbnl($316, $291);
     STACKTOP = sp;
     return +$$0;
    } else $c$6 = $c$1$lcssa; while (0);
    $sum$i = $emin$0$ph + $bits$0$ph | 0;
    $324 = 0 - $sum$i | 0;
    $$09$i = $c$6;
    $gotdig$0$i12 = 0;
    L195 : while (1) {
     switch ($$09$i | 0) {
     case 46:
      {
       $gotdig$0$i12$lcssa331 = $gotdig$0$i12;
       label = 135;
       break L195;
       break;
      }
     case 48:
      break;
     default:
      {
       $$2$i = $$09$i;
       $727 = 0;
       $728 = 0;
       $gotdig$2$i13 = $gotdig$0$i12;
       $gotrad$0$i14 = 0;
       break L195;
      }
     }
     $325 = HEAP32[$0 >> 2] | 0;
     if ($325 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $325 + 1;
      $$09$i = HEAPU8[$325 >> 0] | 0;
      $gotdig$0$i12 = 1;
      continue;
     } else {
      $$09$i = ___shgetc($f) | 0;
      $gotdig$0$i12 = 1;
      continue;
     }
    }
    if ((label | 0) == 135) {
     $332 = HEAP32[$0 >> 2] | 0;
     if ($332 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $332 + 1;
      $$1$ph$i = HEAPU8[$332 >> 0] | 0;
     } else $$1$ph$i = ___shgetc($f) | 0;
     if (($$1$ph$i | 0) == 48) {
      $340 = 0;
      $341 = 0;
      while (1) {
       $342 = _i64Add($340 | 0, $341 | 0, -1, -1) | 0;
       $343 = tempRet0;
       $344 = HEAP32[$0 >> 2] | 0;
       if ($344 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $344 + 1;
        $$1$be$i = HEAPU8[$344 >> 0] | 0;
       } else $$1$be$i = ___shgetc($f) | 0;
       if (($$1$be$i | 0) == 48) {
        $340 = $342;
        $341 = $343;
       } else {
        $$2$i = $$1$be$i;
        $727 = $342;
        $728 = $343;
        $gotdig$2$i13 = 1;
        $gotrad$0$i14 = 1;
        break;
       }
      }
     } else {
      $$2$i = $$1$ph$i;
      $727 = 0;
      $728 = 0;
      $gotdig$2$i13 = $gotdig$0$i12$lcssa331;
      $gotrad$0$i14 = 1;
     }
    }
    HEAP32[$x$i >> 2] = 0;
    $352 = $$2$i + -48 | 0;
    $354 = ($$2$i | 0) == 46;
    L214 : do if ($354 | $352 >>> 0 < 10) {
     $356 = $x$i + 496 | 0;
     $$3121$i = $$2$i;
     $359 = 0;
     $360 = 0;
     $729 = $354;
     $730 = $352;
     $731 = $727;
     $732 = $728;
     $gotdig$3117$i = $gotdig$2$i13;
     $gotrad$1118$i = $gotrad$0$i14;
     $j$0120$i = 0;
     $k$0119$i = 0;
     $lnz$0116$i = 0;
     L216 : while (1) {
      do if ($729) if (!$gotrad$1118$i) {
       $733 = $359;
       $734 = $360;
       $735 = $359;
       $736 = $360;
       $gotdig$4$i = $gotdig$3117$i;
       $gotrad$2$i = 1;
       $j$2$i = $j$0120$i;
       $k$2$i = $k$0119$i;
       $lnz$2$i = $lnz$0116$i;
      } else {
       $737 = $731;
       $738 = $732;
       $739 = $359;
       $740 = $360;
       $gotdig$3117$i$lcssa = $gotdig$3117$i;
       $j$0120$i$lcssa = $j$0120$i;
       $k$0119$i$lcssa = $k$0119$i;
       $lnz$0116$i$lcssa = $lnz$0116$i;
       break L216;
      } else {
       $361 = _i64Add($359 | 0, $360 | 0, 1, 0) | 0;
       $362 = tempRet0;
       $363 = ($$3121$i | 0) != 48;
       if (($k$0119$i | 0) >= 125) {
        if (!$363) {
         $733 = $731;
         $734 = $732;
         $735 = $361;
         $736 = $362;
         $gotdig$4$i = $gotdig$3117$i;
         $gotrad$2$i = $gotrad$1118$i;
         $j$2$i = $j$0120$i;
         $k$2$i = $k$0119$i;
         $lnz$2$i = $lnz$0116$i;
         break;
        }
        HEAP32[$356 >> 2] = HEAP32[$356 >> 2] | 1;
        $733 = $731;
        $734 = $732;
        $735 = $361;
        $736 = $362;
        $gotdig$4$i = $gotdig$3117$i;
        $gotrad$2$i = $gotrad$1118$i;
        $j$2$i = $j$0120$i;
        $k$2$i = $k$0119$i;
        $lnz$2$i = $lnz$0116$i;
        break;
       }
       $365 = $x$i + ($k$0119$i << 2) | 0;
       if (!$j$0120$i) $storemerge$i = $730; else $storemerge$i = $$3121$i + -48 + ((HEAP32[$365 >> 2] | 0) * 10 | 0) | 0;
       HEAP32[$365 >> 2] = $storemerge$i;
       $370 = $j$0120$i + 1 | 0;
       $371 = ($370 | 0) == 9;
       $733 = $731;
       $734 = $732;
       $735 = $361;
       $736 = $362;
       $gotdig$4$i = 1;
       $gotrad$2$i = $gotrad$1118$i;
       $j$2$i = $371 ? 0 : $370;
       $k$2$i = ($371 & 1) + $k$0119$i | 0;
       $lnz$2$i = $363 ? $361 : $lnz$0116$i;
      } while (0);
      $375 = HEAP32[$0 >> 2] | 0;
      if ($375 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $375 + 1;
       $$3$be$i = HEAPU8[$375 >> 0] | 0;
      } else $$3$be$i = ___shgetc($f) | 0;
      $730 = $$3$be$i + -48 | 0;
      $729 = ($$3$be$i | 0) == 46;
      if (!($729 | $730 >>> 0 < 10)) {
       $$3$lcssa$i = $$3$be$i;
       $388 = $735;
       $389 = $733;
       $391 = $736;
       $392 = $734;
       $gotdig$3$lcssa$i = $gotdig$4$i;
       $gotrad$1$lcssa$i = $gotrad$2$i;
       $j$0$lcssa$i = $j$2$i;
       $k$0$lcssa$i = $k$2$i;
       $lnz$0$lcssa$i = $lnz$2$i;
       label = 158;
       break L214;
      } else {
       $$3121$i = $$3$be$i;
       $359 = $735;
       $360 = $736;
       $731 = $733;
       $732 = $734;
       $gotdig$3117$i = $gotdig$4$i;
       $gotrad$1118$i = $gotrad$2$i;
       $j$0120$i = $j$2$i;
       $k$0119$i = $k$2$i;
       $lnz$0116$i = $lnz$2$i;
      }
     }
     $741 = $739;
     $742 = $740;
     $743 = $737;
     $744 = $738;
     $745 = ($gotdig$3117$i$lcssa | 0) != 0;
     $j$069$i = $j$0120$i$lcssa;
     $k$065$i = $k$0119$i$lcssa;
     $lnz$059$i = $lnz$0116$i$lcssa;
     label = 166;
    } else {
     $$3$lcssa$i = $$2$i;
     $388 = 0;
     $389 = $727;
     $391 = 0;
     $392 = $728;
     $gotdig$3$lcssa$i = $gotdig$2$i13;
     $gotrad$1$lcssa$i = $gotrad$0$i14;
     $j$0$lcssa$i = 0;
     $k$0$lcssa$i = 0;
     $lnz$0$lcssa$i = 0;
     label = 158;
    } while (0);
    do if ((label | 0) == 158) {
     $386 = ($gotrad$1$lcssa$i | 0) == 0;
     $387 = $386 ? $388 : $389;
     $390 = $386 ? $391 : $392;
     $393 = ($gotdig$3$lcssa$i | 0) != 0;
     if (!(($$3$lcssa$i | 32 | 0) == 101 & $393)) if (($$3$lcssa$i | 0) > -1) {
      $741 = $388;
      $742 = $391;
      $743 = $387;
      $744 = $390;
      $745 = $393;
      $j$069$i = $j$0$lcssa$i;
      $k$065$i = $k$0$lcssa$i;
      $lnz$059$i = $lnz$0$lcssa$i;
      label = 166;
      break;
     } else {
      $746 = $388;
      $747 = $391;
      $748 = $393;
      $749 = $387;
      $750 = $390;
      $j$068$i = $j$0$lcssa$i;
      $k$064$i = $k$0$lcssa$i;
      $lnz$058$i = $lnz$0$lcssa$i;
      label = 168;
      break;
     }
     $396 = _scanexp($f, $pok) | 0;
     $397 = tempRet0;
     if (($396 | 0) == 0 & ($397 | 0) == -2147483648) {
      if (!$pok) {
       ___shlim($f, 0);
       $$0$i25 = 0.0;
       break;
      }
      if (!(HEAP32[$1 >> 2] | 0)) {
       $406 = 0;
       $407 = 0;
      } else {
       HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       $406 = 0;
       $407 = 0;
      }
     } else {
      $406 = $396;
      $407 = $397;
     }
     $408 = _i64Add($406 | 0, $407 | 0, $387 | 0, $390 | 0) | 0;
     $421 = $408;
     $422 = $388;
     $424 = tempRet0;
     $425 = $391;
     $j$067$i = $j$0$lcssa$i;
     $k$063$i = $k$0$lcssa$i;
     $lnz$057$i = $lnz$0$lcssa$i;
     label = 170;
    } while (0);
    if ((label | 0) == 166) if (!(HEAP32[$1 >> 2] | 0)) {
     $746 = $741;
     $747 = $742;
     $748 = $745;
     $749 = $743;
     $750 = $744;
     $j$068$i = $j$069$i;
     $k$064$i = $k$065$i;
     $lnz$058$i = $lnz$059$i;
     label = 168;
    } else {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     if ($745) {
      $421 = $743;
      $422 = $741;
      $424 = $744;
      $425 = $742;
      $j$067$i = $j$069$i;
      $k$063$i = $k$065$i;
      $lnz$057$i = $lnz$059$i;
      label = 170;
     } else label = 169;
    }
    if ((label | 0) == 168) if ($748) {
     $421 = $749;
     $422 = $746;
     $424 = $750;
     $425 = $747;
     $j$067$i = $j$068$i;
     $k$063$i = $k$064$i;
     $lnz$057$i = $lnz$058$i;
     label = 170;
    } else label = 169;
    do if ((label | 0) == 169) {
     HEAP32[(___errno_location() | 0) >> 2] = 22;
     ___shlim($f, 0);
     $$0$i25 = 0.0;
    } else if ((label | 0) == 170) {
     $416 = HEAP32[$x$i >> 2] | 0;
     if (!$416) {
      $$0$i25 = +($sign$0 | 0) * 0.0;
      break;
     }
     if ((($425 | 0) < 0 | ($425 | 0) == 0 & $422 >>> 0 < 10) & (($421 | 0) == ($422 | 0) & ($424 | 0) == ($425 | 0))) if ($bits$0$ph >>> 0 > 30 | ($416 >>> $bits$0$ph | 0) == 0) {
      $$0$i25 = +($sign$0 | 0) * +($416 >>> 0);
      break;
     }
     $438 = ($emin$0$ph | 0) / -2 | 0;
     $440 = (($438 | 0) < 0) << 31 >> 31;
     if (($424 | 0) > ($440 | 0) | ($424 | 0) == ($440 | 0) & $421 >>> 0 > $438 >>> 0) {
      HEAP32[(___errno_location() | 0) >> 2] = 34;
      $$0$i25 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
      break;
     }
     $450 = $emin$0$ph + -106 | 0;
     $452 = (($450 | 0) < 0) << 31 >> 31;
     if (($424 | 0) < ($452 | 0) | ($424 | 0) == ($452 | 0) & $421 >>> 0 < $450 >>> 0) {
      HEAP32[(___errno_location() | 0) >> 2] = 34;
      $$0$i25 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
      break;
     }
     if (!$j$067$i) $k$3$i = $k$063$i; else {
      if (($j$067$i | 0) < 9) {
       $464 = $x$i + ($k$063$i << 2) | 0;
       $466 = HEAP32[$464 >> 2] | 0;
       $j$3110$i = $j$067$i;
       while (1) {
        $465 = $466 * 10 | 0;
        $j$3110$i = $j$3110$i + 1 | 0;
        if (($j$3110$i | 0) == 9) {
         $$lcssa323 = $465;
         break;
        } else $466 = $465;
       }
       HEAP32[$464 >> 2] = $$lcssa323;
      }
      $k$3$i = $k$063$i + 1 | 0;
     }
     if (($lnz$057$i | 0) < 9) if (($lnz$057$i | 0) <= ($421 | 0) & ($421 | 0) < 18) {
      if (($421 | 0) == 9) {
       $$0$i25 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0);
       break;
      }
      if (($421 | 0) < 9) {
       $$0$i25 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0) / +(HEAP32[5732 + (8 - $421 << 2) >> 2] | 0);
       break;
      }
      $488 = $bits$0$ph + 27 + (Math_imul($421, -3) | 0) | 0;
      $$pre$i17 = HEAP32[$x$i >> 2] | 0;
      if (($488 | 0) > 30 | ($$pre$i17 >>> $488 | 0) == 0) {
       $$0$i25 = +($sign$0 | 0) * +($$pre$i17 >>> 0) * +(HEAP32[5732 + ($421 + -10 << 2) >> 2] | 0);
       break;
      }
     }
     $500 = ($421 | 0) % 9 | 0;
     if (!$500) {
      $a$2$ph38$i = 0;
      $e2$0$ph$i = 0;
      $rp$2$ph36$i = $421;
      $z$1$ph37$i = $k$3$i;
     } else {
      $504 = ($421 | 0) > -1 ? $500 : $500 + 9 | 0;
      $507 = HEAP32[5732 + (8 - $504 << 2) >> 2] | 0;
      if (!$k$3$i) {
       $a$0$lcssa177$i = 0;
       $rp$0$lcssa178$i = $421;
       $z$0$i = 0;
      } else {
       $509 = 1e9 / ($507 | 0) | 0;
       $a$0101$i = 0;
       $carry$0103$i = 0;
       $k$4102$i = 0;
       $rp$0100$i = $421;
       while (1) {
        $510 = $x$i + ($k$4102$i << 2) | 0;
        $511 = HEAP32[$510 >> 2] | 0;
        $514 = (($511 >>> 0) / ($507 >>> 0) | 0) + $carry$0103$i | 0;
        HEAP32[$510 >> 2] = $514;
        $515 = Math_imul(($511 >>> 0) % ($507 >>> 0) | 0, $509) | 0;
        $or$cond16$i = ($k$4102$i | 0) == ($a$0101$i | 0) & ($514 | 0) == 0;
        $k$4102$i = $k$4102$i + 1 | 0;
        $rp$1$i18 = $or$cond16$i ? $rp$0100$i + -9 | 0 : $rp$0100$i;
        $a$1$i = $or$cond16$i ? $k$4102$i & 127 : $a$0101$i;
        if (($k$4102$i | 0) == ($k$3$i | 0)) {
         $$lcssa322 = $515;
         $a$1$i$lcssa = $a$1$i;
         $rp$1$i18$lcssa = $rp$1$i18;
         break;
        } else {
         $a$0101$i = $a$1$i;
         $carry$0103$i = $515;
         $rp$0100$i = $rp$1$i18;
        }
       }
       if (!$$lcssa322) {
        $a$0$lcssa177$i = $a$1$i$lcssa;
        $rp$0$lcssa178$i = $rp$1$i18$lcssa;
        $z$0$i = $k$3$i;
       } else {
        HEAP32[$x$i + ($k$3$i << 2) >> 2] = $$lcssa322;
        $a$0$lcssa177$i = $a$1$i$lcssa;
        $rp$0$lcssa178$i = $rp$1$i18$lcssa;
        $z$0$i = $k$3$i + 1 | 0;
       }
      }
      $a$2$ph38$i = $a$0$lcssa177$i;
      $e2$0$ph$i = 0;
      $rp$2$ph36$i = 9 - $504 + $rp$0$lcssa178$i | 0;
      $z$1$ph37$i = $z$0$i;
     }
     L295 : while (1) {
      $528 = $x$i + ($a$2$ph38$i << 2) | 0;
      if (($rp$2$ph36$i | 0) < 18) {
       $e2$0$us$i = $e2$0$ph$i;
       $z$1$us$i = $z$1$ph37$i;
       while (1) {
        $carry1$0$us$i = 0;
        $k$5$in$us$i = $z$1$us$i + 127 | 0;
        $z$2$us$i = $z$1$us$i;
        while (1) {
         $k$5$us$i = $k$5$in$us$i & 127;
         $531 = $x$i + ($k$5$us$i << 2) | 0;
         $533 = _bitshift64Shl(HEAP32[$531 >> 2] | 0, 0, 29) | 0;
         $535 = _i64Add($533 | 0, tempRet0 | 0, $carry1$0$us$i | 0, 0) | 0;
         $536 = tempRet0;
         if ($536 >>> 0 > 0 | ($536 | 0) == 0 & $535 >>> 0 > 1e9) {
          $542 = ___udivdi3($535 | 0, $536 | 0, 1e9, 0) | 0;
          $544 = ___uremdi3($535 | 0, $536 | 0, 1e9, 0) | 0;
          $$sink$off0$us$i = $544;
          $carry1$1$us$i = $542;
         } else {
          $$sink$off0$us$i = $535;
          $carry1$1$us$i = 0;
         }
         HEAP32[$531 >> 2] = $$sink$off0$us$i;
         $549 = ($k$5$us$i | 0) == ($a$2$ph38$i | 0);
         $z$3$us$i = ($k$5$us$i | 0) != ($z$2$us$i + 127 & 127 | 0) | $549 ? $z$2$us$i : ($$sink$off0$us$i | 0) == 0 ? $k$5$us$i : $z$2$us$i;
         if ($549) {
          $carry1$1$us$i$lcssa = $carry1$1$us$i;
          $z$3$us$i$lcssa = $z$3$us$i;
          break;
         } else {
          $carry1$0$us$i = $carry1$1$us$i;
          $k$5$in$us$i = $k$5$us$i + -1 | 0;
          $z$2$us$i = $z$3$us$i;
         }
        }
        $552 = $e2$0$us$i + -29 | 0;
        if (!$carry1$1$us$i$lcssa) {
         $e2$0$us$i = $552;
         $z$1$us$i = $z$3$us$i$lcssa;
        } else {
         $$lcssa50$i = $552;
         $carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa;
         $z$3$lcssa$lcssa$i = $z$3$us$i$lcssa;
         break;
        }
       }
      } else {
       if (($rp$2$ph36$i | 0) == 18) {
        $e2$0$us84$i = $e2$0$ph$i;
        $z$1$us85$i = $z$1$ph37$i;
       } else {
        $a$3$ph$i = $a$2$ph38$i;
        $e2$1$ph$i = $e2$0$ph$i;
        $rp$3$ph34$i = $rp$2$ph36$i;
        $z$5$ph$i = $z$1$ph37$i;
        break;
       }
       while (1) {
        if ((HEAP32[$528 >> 2] | 0) >>> 0 >= 9007199) {
         $a$3$ph$i = $a$2$ph38$i;
         $e2$1$ph$i = $e2$0$us84$i;
         $rp$3$ph34$i = 18;
         $z$5$ph$i = $z$1$us85$i;
         break L295;
        }
        $carry1$0$us89$i = 0;
        $k$5$in$us88$i = $z$1$us85$i + 127 | 0;
        $z$2$us87$i = $z$1$us85$i;
        while (1) {
         $k$5$us90$i = $k$5$in$us88$i & 127;
         $557 = $x$i + ($k$5$us90$i << 2) | 0;
         $559 = _bitshift64Shl(HEAP32[$557 >> 2] | 0, 0, 29) | 0;
         $561 = _i64Add($559 | 0, tempRet0 | 0, $carry1$0$us89$i | 0, 0) | 0;
         $562 = tempRet0;
         if ($562 >>> 0 > 0 | ($562 | 0) == 0 & $561 >>> 0 > 1e9) {
          $568 = ___udivdi3($561 | 0, $562 | 0, 1e9, 0) | 0;
          $570 = ___uremdi3($561 | 0, $562 | 0, 1e9, 0) | 0;
          $$sink$off0$us93$i = $570;
          $carry1$1$us94$i = $568;
         } else {
          $$sink$off0$us93$i = $561;
          $carry1$1$us94$i = 0;
         }
         HEAP32[$557 >> 2] = $$sink$off0$us93$i;
         $575 = ($k$5$us90$i | 0) == ($a$2$ph38$i | 0);
         $z$3$us97$i = ($k$5$us90$i | 0) != ($z$2$us87$i + 127 & 127 | 0) | $575 ? $z$2$us87$i : ($$sink$off0$us93$i | 0) == 0 ? $k$5$us90$i : $z$2$us87$i;
         if ($575) {
          $carry1$1$us94$i$lcssa = $carry1$1$us94$i;
          $z$3$us97$i$lcssa = $z$3$us97$i;
          break;
         } else {
          $carry1$0$us89$i = $carry1$1$us94$i;
          $k$5$in$us88$i = $k$5$us90$i + -1 | 0;
          $z$2$us87$i = $z$3$us97$i;
         }
        }
        $578 = $e2$0$us84$i + -29 | 0;
        if (!$carry1$1$us94$i$lcssa) {
         $e2$0$us84$i = $578;
         $z$1$us85$i = $z$3$us97$i$lcssa;
        } else {
         $$lcssa50$i = $578;
         $carry1$1$lcssa$lcssa$i = $carry1$1$us94$i$lcssa;
         $z$3$lcssa$lcssa$i = $z$3$us97$i$lcssa;
         break;
        }
       }
      }
      $582 = $a$2$ph38$i + 127 & 127;
      if (($582 | 0) == ($z$3$lcssa$lcssa$i | 0)) {
       $585 = $z$3$lcssa$lcssa$i + 127 & 127;
       $590 = $x$i + (($z$3$lcssa$lcssa$i + 126 & 127) << 2) | 0;
       HEAP32[$590 >> 2] = HEAP32[$590 >> 2] | HEAP32[$x$i + ($585 << 2) >> 2];
       $z$4$i = $585;
      } else $z$4$i = $z$3$lcssa$lcssa$i;
      HEAP32[$x$i + ($582 << 2) >> 2] = $carry1$1$lcssa$lcssa$i;
      $a$2$ph38$i = $582;
      $e2$0$ph$i = $$lcssa50$i;
      $rp$2$ph36$i = $rp$2$ph36$i + 9 | 0;
      $z$1$ph37$i = $z$4$i;
     }
     L320 : while (1) {
      $622 = $z$5$ph$i + 1 & 127;
      $627 = $x$i + (($z$5$ph$i + 127 & 127) << 2) | 0;
      $a$3$ph183$i = $a$3$ph$i;
      $e2$1$ph182$i = $e2$1$ph$i;
      $rp$3$ph$i = $rp$3$ph34$i;
      while (1) {
       $628 = ($rp$3$ph$i | 0) == 18;
       $$18$i = ($rp$3$ph$i | 0) > 27 ? 9 : 1;
       $$not$i = $628 ^ 1;
       $a$3$i = $a$3$ph183$i;
       $e2$1$i = $e2$1$ph182$i;
       while (1) {
        $594 = $a$3$i & 127;
        $595 = ($594 | 0) == ($z$5$ph$i | 0);
        do if ($595) label = 220; else {
         $597 = HEAP32[$x$i + ($594 << 2) >> 2] | 0;
         if ($597 >>> 0 < 9007199) {
          label = 220;
          break;
         }
         if ($597 >>> 0 > 9007199) break;
         $601 = $a$3$i + 1 & 127;
         if (($601 | 0) == ($z$5$ph$i | 0)) {
          label = 220;
          break;
         }
         $709 = HEAP32[$x$i + ($601 << 2) >> 2] | 0;
         if ($709 >>> 0 < 254740991) {
          label = 220;
          break;
         }
         if (!($709 >>> 0 > 254740991 | $$not$i)) {
          $635 = $594;
          $a$3$i301 = $a$3$i;
          $e2$1$i298 = $e2$1$i;
          $z$7$i = $z$5$ph$i;
          break L320;
         }
        } while (0);
        if ((label | 0) == 220) {
         label = 0;
         if ($628) {
          label = 221;
          break L320;
         }
        }
        $603 = $e2$1$i + $$18$i | 0;
        if (($a$3$i | 0) == ($z$5$ph$i | 0)) {
         $a$3$i = $z$5$ph$i;
         $e2$1$i = $603;
        } else {
         $$lcssa308 = $603;
         $a$3$i$lcssa300 = $a$3$i;
         break;
        }
       }
       $606 = (1 << $$18$i) + -1 | 0;
       $607 = 1e9 >>> $$18$i;
       $a$478$i = $a$3$i$lcssa300;
       $carry3$081$i = 0;
       $k$679$i = $a$3$i$lcssa300;
       $rp$477$i = $rp$3$ph$i;
       while (1) {
        $608 = $x$i + ($k$679$i << 2) | 0;
        $609 = HEAP32[$608 >> 2] | 0;
        $612 = ($609 >>> $$18$i) + $carry3$081$i | 0;
        HEAP32[$608 >> 2] = $612;
        $613 = Math_imul($609 & $606, $607) | 0;
        $or$cond19$i = ($k$679$i | 0) == ($a$478$i | 0) & ($612 | 0) == 0;
        $k$679$i = $k$679$i + 1 & 127;
        $rp$5$i = $or$cond19$i ? $rp$477$i + -9 | 0 : $rp$477$i;
        $a$5$i = $or$cond19$i ? $k$679$i : $a$478$i;
        if (($k$679$i | 0) == ($z$5$ph$i | 0)) {
         $$lcssa309 = $613;
         $a$5$i$lcssa = $a$5$i;
         $rp$5$i$lcssa = $rp$5$i;
         break;
        } else {
         $a$478$i = $a$5$i;
         $carry3$081$i = $613;
         $rp$477$i = $rp$5$i;
        }
       }
       if (!$$lcssa309) {
        $a$3$ph183$i = $a$5$i$lcssa;
        $e2$1$ph182$i = $$lcssa308;
        $rp$3$ph$i = $rp$5$i$lcssa;
        continue;
       }
       if (($622 | 0) != ($a$5$i$lcssa | 0)) {
        $$lcssa308$lcssa = $$lcssa308;
        $$lcssa309$lcssa = $$lcssa309;
        $a$5$i$lcssa$lcssa = $a$5$i$lcssa;
        $rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
        break;
       }
       HEAP32[$627 >> 2] = HEAP32[$627 >> 2] | 1;
       $a$3$ph183$i = $a$5$i$lcssa;
       $e2$1$ph182$i = $$lcssa308;
       $rp$3$ph$i = $rp$5$i$lcssa;
      }
      HEAP32[$x$i + ($z$5$ph$i << 2) >> 2] = $$lcssa309$lcssa;
      $a$3$ph$i = $a$5$i$lcssa$lcssa;
      $e2$1$ph$i = $$lcssa308$lcssa;
      $rp$3$ph34$i = $rp$5$i$lcssa$lcssa;
      $z$5$ph$i = $622;
     }
     if ((label | 0) == 221) if ($595) {
      HEAP32[$x$i + ($622 + -1 << 2) >> 2] = 0;
      $635 = $z$5$ph$i;
      $a$3$i301 = $a$3$i;
      $e2$1$i298 = $e2$1$i;
      $z$7$i = $622;
     } else {
      $635 = $594;
      $a$3$i301 = $a$3$i;
      $e2$1$i298 = $e2$1$i;
      $z$7$i = $z$5$ph$i;
     }
     $637 = +((HEAP32[$x$i + ($635 << 2) >> 2] | 0) >>> 0);
     $639 = $a$3$i301 + 1 & 127;
     if (($639 | 0) == ($z$7$i | 0)) {
      $698 = $a$3$i301 + 2 & 127;
      HEAP32[$x$i + ($698 + -1 << 2) >> 2] = 0;
      $z$7$1$i = $698;
     } else $z$7$1$i = $z$7$i;
     $661 = +($sign$0 | 0);
     $643 = $661 * ($637 * 1.0e9 + +((HEAP32[$x$i + ($639 << 2) >> 2] | 0) >>> 0));
     $681 = $e2$1$i298 + 53 | 0;
     $687 = $681 - $emin$0$ph | 0;
     $688 = ($687 | 0) < ($bits$0$ph | 0);
     $denormal$0$i = $688 & 1;
     $$010$i = $688 ? (($687 | 0) < 0 ? 0 : $687) : $bits$0$ph;
     if (($$010$i | 0) < 53) {
      $644 = +_copysignl(+_scalbn(1.0, 105 - $$010$i | 0), $643);
      $647 = +_fmodl($643, +_scalbn(1.0, 53 - $$010$i | 0));
      $bias$0$i23 = $644;
      $frac$0$i = $647;
      $y$1$i22 = $644 + ($643 - $647);
     } else {
      $bias$0$i23 = 0.0;
      $frac$0$i = 0.0;
      $y$1$i22 = $643;
     }
     $651 = $a$3$i301 + 2 & 127;
     do if (($651 | 0) == ($z$7$1$i | 0)) $frac$2$i = $frac$0$i; else {
      $654 = HEAP32[$x$i + ($651 << 2) >> 2] | 0;
      do if ($654 >>> 0 < 5e8) {
       if (!$654) if (($a$3$i301 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
        $frac$1$i = $frac$0$i;
        break;
       }
       $frac$1$i = $661 * .25 + $frac$0$i;
      } else {
       if ($654 >>> 0 > 5e8) {
        $frac$1$i = $661 * .75 + $frac$0$i;
        break;
       }
       if (($a$3$i301 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
        $frac$1$i = $661 * .5 + $frac$0$i;
        break;
       } else {
        $frac$1$i = $661 * .75 + $frac$0$i;
        break;
       }
      } while (0);
      if ((53 - $$010$i | 0) <= 1) {
       $frac$2$i = $frac$1$i;
       break;
      }
      if (+_fmodl($frac$1$i, 1.0) != 0.0) {
       $frac$2$i = $frac$1$i;
       break;
      }
      $frac$2$i = $frac$1$i + 1.0;
     } while (0);
     $679 = $y$1$i22 + $frac$2$i - $bias$0$i23;
     do if (($681 & 2147483647 | 0) > (-2 - $sum$i | 0)) {
      if (!(+Math_abs(+$679) >= 9007199254740992.0)) {
       $denormal$2$i = $denormal$0$i;
       $e2$2$i = $e2$1$i298;
       $y$2$i24 = $679;
      } else {
       $denormal$2$i = $688 & ($$010$i | 0) == ($687 | 0) ? 0 : $denormal$0$i;
       $e2$2$i = $e2$1$i298 + 1 | 0;
       $y$2$i24 = $679 * .5;
      }
      if (($e2$2$i + 50 | 0) <= ($324 | 0)) if (!($frac$2$i != 0.0 & ($denormal$2$i | 0) != 0)) {
       $e2$3$i = $e2$2$i;
       $y$3$i = $y$2$i24;
       break;
      }
      HEAP32[(___errno_location() | 0) >> 2] = 34;
      $e2$3$i = $e2$2$i;
      $y$3$i = $y$2$i24;
     } else {
      $e2$3$i = $e2$1$i298;
      $y$3$i = $679;
     } while (0);
     $$0$i25 = +_scalbnl($y$3$i, $e2$3$i);
    } while (0);
    $$0 = $$0$i25;
    STACKTOP = sp;
    return +$$0;
   } while (0);
   if (HEAP32[$1 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   HEAP32[(___errno_location() | 0) >> 2] = 22;
   ___shlim($f, 0);
   $$0 = 0.0;
   STACKTOP = sp;
   return +$$0;
  }
 } while (0);
 if ((label | 0) == 23) {
  $42 = (HEAP32[$1 >> 2] | 0) == 0;
  if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  if (!($i$0$lcssa >>> 0 < 4 | ($pok | 0) == 0 | $42)) {
   $46 = HEAP32[$0 >> 2] | 0;
   $i$1 = $i$0$lcssa;
   while (1) {
    $45 = $46 + -1 | 0;
    $i$1 = $i$1 + -1 | 0;
    if ($i$1 >>> 0 <= 3) {
     $$lcssa = $45;
     break;
    } else $46 = $45;
   }
   HEAP32[$0 >> 2] = $$lcssa;
  }
 }
 $$0 = +($sign$0 | 0) * inf;
 STACKTOP = sp;
 return +$$0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i16$i = 0, $$0$i$i$i23$i = 0, $$0$i$i$i33$i = 0, $$0$i$i$i42$i = 0, $$0$i$i$i52$i = 0, $$0$i10 = 0, $$02 = 0, $$07$i = 0, $$first = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $129 = 0, $13 = 0, $130 = 0, $134 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $144 = 0, $145 = 0, $15 = 0, $153 = 0, $154 = 0, $156 = 0, $16 = 0, $164 = 0, $166 = 0, $167 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $186 = 0, $189 = 0, $192 = 0, $2 = 0, $201 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $211 = 0, $212 = 0, $220 = 0, $221 = 0, $223 = 0, $23 = 0, $231 = 0, $233 = 0, $234 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $253 = 0, $256 = 0, $259 = 0, $268 = 0, $271 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $281 = 0, $282 = 0, $290 = 0, $291 = 0, $293 = 0, $3 = 0, $30 = 0, $301 = 0, $303 = 0, $304 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $323 = 0, $326 = 0, $329 = 0, $338 = 0, $34 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $349 = 0, $35 = 0, $351 = 0, $359 = 0, $361 = 0, $362 = 0, $37 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $381 = 0, $384 = 0, $387 = 0, $398 = 0, $4 = 0, $400 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $41 = 0, $410 = 0, $411 = 0, $419 = 0, $420 = 0, $422 = 0, $430 = 0, $432 = 0, $433 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $452 = 0, $455 = 0, $458 = 0, $469 = 0, $474 = 0, $476 = 0, $477 = 0, $478 = 0, $483 = 0, $484 = 0, $489 = 0, $49 = 0, $494 = 0, $497 = 0, $5 = 0, $50 = 0, $500 = 0, $502 = 0, $506 = 0, $507 = 0, $509 = 0, $51 = 0, $510 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $526 = 0, $528 = 0, $538 = 0, $539 = 0, $540 = 0, $542 = 0, $544 = 0, $545 = 0, $546 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $56 = 0, $562 = 0, $564 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $58 = 0, $588 = 0, $593 = 0, $594 = 0, $597 = 0, $6 = 0, $605 = 0, $606 = 0, $608 = 0, $61 = 0, $612 = 0, $613 = 0, $615 = 0, $62 = 0, $622 = 0, $624 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $638 = 0, $641 = 0, $644 = 0, $645 = 0, $65 = 0, $651 = 0, $653 = 0, $657 = 0, $659 = 0, $667 = 0, $668 = 0, $669 = 0, $670 = 0, $673 = 0, $675 = 0, $685 = 0, $690 = 0, $692 = 0, $693 = 0, $7 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $707 = 0, $709 = 0, $719 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $St$0$off0$i = 0, $__v$i$i51$i = 0, $cv$i = 0, $name$i11 = 0, $name1$i = 0, $name2$i12 = 0, $name3$i = 0, $name4$i = 0, $pop_subs$0$off0$i$ph$lcssa = 0, $pop_subs$0$off0$i$ph136 = 0, $t0$0$i = 0, $t0$0$i13 = 0, $t0$1$i = 0, $t0$2$i$be = 0, $t0$2$i$lcssa = 0, $t0$2$i$ph$be = 0, $t0$2$i$ph135 = 0, $t0$2$i131 = 0, $t0$2$i131$lcssa177 = 0, $t0$2$i131$lcssa178 = 0, $t0$2$i131$lcssa179 = 0, $t0$2$i131184 = 0, $tmp = 0, $tmp3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__v$i$i51$i = sp + 276 | 0;
 $cv$i = sp + 264 | 0;
 $name$i11 = sp + 252 | 0;
 $0 = sp + 240 | 0;
 $1 = sp + 224 | 0;
 $2 = sp + 216 | 0;
 $name1$i = sp + 204 | 0;
 $3 = sp + 192 | 0;
 $4 = sp + 176 | 0;
 $5 = sp + 168 | 0;
 $name2$i12 = sp + 156 | 0;
 $6 = sp + 144 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 124 | 0;
 $name3$i = sp + 112 | 0;
 $9 = sp + 96 | 0;
 $10 = sp + 76 | 0;
 $name4$i = sp + 64 | 0;
 $11 = sp + 48 | 0;
 $12 = sp + 8 | 0;
 $13 = sp;
 $14 = sp + 80 | 0;
 $15 = sp + 60 | 0;
 $tmp = sp + 36 | 0;
 $tmp3 = sp + 24 | 0;
 $16 = $last;
 L1 : do if (($16 - $first | 0) > 1) {
  $$first = (HEAP8[$first >> 0] | 0) == 76 ? $first + 1 | 0 : $first;
  $23 = HEAP8[$$first >> 0] | 0;
  switch ($23 << 24 >> 24 | 0) {
  case 78:
   {
    L44 : do if (($$first | 0) == ($last | 0)) $$07$i = $last; else if ($23 << 24 >> 24 == 78) {
     $28 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($$first + 1 | 0, $last, $cv$i) | 0;
     if (($28 | 0) == ($last | 0)) $$07$i = $$first; else {
      $30 = $db + 52 | 0;
      HEAP32[$30 >> 2] = 0;
      switch (HEAP8[$28 >> 0] | 0) {
      case 82:
       {
        HEAP32[$30 >> 2] = 1;
        $t0$0$i13 = $28 + 1 | 0;
        break;
       }
      case 79:
       {
        HEAP32[$30 >> 2] = 2;
        $t0$0$i13 = $28 + 1 | 0;
        break;
       }
      default:
       $t0$0$i13 = $28;
      }
      $34 = $db + 4 | 0;
      $35 = HEAP32[$34 >> 2] | 0;
      $37 = HEAP32[$db + 8 >> 2] | 0;
      if ($35 >>> 0 < $37 >>> 0) {
       HEAP32[$35 >> 2] = 0;
       HEAP32[$35 + 4 >> 2] = 0;
       HEAP32[$35 + 8 >> 2] = 0;
       HEAP32[$35 + 12 >> 2] = 0;
       HEAP32[$35 + 16 >> 2] = 0;
       HEAP32[$35 + 20 >> 2] = 0;
       HEAP32[$35 >> 2] = 0;
       HEAP32[$35 + 4 >> 2] = 0;
       HEAP32[$35 + 8 >> 2] = 0;
       $41 = $35 + 12 | 0;
       HEAP32[$41 >> 2] = 0;
       HEAP32[$41 + 4 >> 2] = 0;
       HEAP32[$41 + 8 >> 2] = 0;
       HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 24;
      } else {
       $49 = HEAP32[$db >> 2] | 0;
       $50 = $35 - $49 | 0;
       $51 = ($50 | 0) / 24 | 0;
       $52 = $51 + 1 | 0;
       if (($50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $56 = ($37 - $49 | 0) / 24 | 0;
       if ($56 >>> 0 < 1073741823) {
        $58 = $56 << 1;
        $$0$i$i$i$i = $58 >>> 0 < $52 >>> 0 ? $52 : $58;
       } else $$0$i$i$i$i = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i51$i, $$0$i$i$i$i, $51, $db + 12 | 0);
       $61 = $__v$i$i51$i + 8 | 0;
       $62 = HEAP32[$61 >> 2] | 0;
       HEAP32[$62 >> 2] = 0;
       HEAP32[$62 + 4 >> 2] = 0;
       HEAP32[$62 + 8 >> 2] = 0;
       HEAP32[$62 + 12 >> 2] = 0;
       HEAP32[$62 + 16 >> 2] = 0;
       HEAP32[$62 + 20 >> 2] = 0;
       HEAP32[$62 >> 2] = 0;
       HEAP32[$62 + 4 >> 2] = 0;
       HEAP32[$62 + 8 >> 2] = 0;
       $65 = $62 + 12 | 0;
       HEAP32[$65 >> 2] = 0;
       HEAP32[$65 + 4 >> 2] = 0;
       HEAP32[$65 + 8 >> 2] = 0;
       HEAP32[$61 >> 2] = $62 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i51$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i51$i);
      }
      if (($16 - $t0$0$i13 | 0) > 1) if ((HEAP8[$t0$0$i13 >> 0] | 0) == 83) if ((HEAP8[$t0$0$i13 + 1 >> 0] | 0) == 116) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj((HEAP32[$34 >> 2] | 0) + -24 | 0, 25757, 3);
       $t0$1$i = $t0$0$i13 + 2 | 0;
      } else $t0$1$i = $t0$0$i13; else $t0$1$i = $t0$0$i13; else $t0$1$i = $t0$0$i13;
      if (($t0$1$i | 0) == ($last | 0)) {
       $123 = HEAP32[$34 >> 2] | 0;
       $124 = $123 + -24 | 0;
       $126 = $123;
       while (1) {
        $125 = $126 + -24 | 0;
        HEAP32[$34 >> 2] = $125;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($125);
        $126 = HEAP32[$34 >> 2] | 0;
        if (($126 | 0) == ($124 | 0)) {
         $$07$i = $$first;
         break L44;
        }
       }
      }
      $81 = $name3$i + 8 | 0;
      $82 = $name3$i + 1 | 0;
      $83 = $name3$i + 4 | 0;
      $84 = $db + 12 | 0;
      $85 = $db + 16 | 0;
      $86 = $db + 20 | 0;
      $87 = $db + 24 | 0;
      $88 = $9 + 12 | 0;
      $89 = $9 + 4 | 0;
      $90 = $9 + 8 | 0;
      $91 = $db + 28 | 0;
      $92 = $__v$i$i51$i + 8 | 0;
      $93 = $12 + 12 | 0;
      $94 = $12 + 4 | 0;
      $95 = $12 + 8 | 0;
      $96 = $__v$i$i51$i + 8 | 0;
      $97 = $11 + 8 | 0;
      $98 = $11 + 1 | 0;
      $99 = $11 + 4 | 0;
      $100 = $0 + 8 | 0;
      $101 = $0 + 1 | 0;
      $102 = $0 + 4 | 0;
      $103 = $1 + 12 | 0;
      $104 = $1 + 4 | 0;
      $105 = $1 + 8 | 0;
      $106 = $__v$i$i51$i + 8 | 0;
      $107 = $4 + 12 | 0;
      $108 = $4 + 4 | 0;
      $109 = $4 + 8 | 0;
      $110 = $__v$i$i51$i + 8 | 0;
      $111 = $3 + 8 | 0;
      $112 = $3 + 1 | 0;
      $113 = $3 + 4 | 0;
      $114 = $7 + 12 | 0;
      $115 = $7 + 4 | 0;
      $116 = $7 + 8 | 0;
      $117 = $__v$i$i51$i + 8 | 0;
      $118 = $6 + 8 | 0;
      $119 = $6 + 1 | 0;
      $120 = $6 + 4 | 0;
      $121 = HEAP8[$t0$1$i >> 0] | 0;
      L72 : do if ($121 << 24 >> 24 == 69) {
       $pop_subs$0$off0$i$ph$lcssa = 0;
       $t0$2$i$lcssa = $t0$1$i;
      } else {
       $719 = $121;
       $pop_subs$0$off0$i$ph136 = 0;
       $t0$2$i$ph135 = $t0$1$i;
       L73 : while (1) {
        $129 = $719;
        $t0$2$i131 = $t0$2$i$ph135;
        L75 : while (1) {
         switch ($129 << 24 >> 24 | 0) {
         case 83:
          {
           $t0$2$i131$lcssa177 = $t0$2$i131;
           label = 25;
           break L75;
           break;
          }
         case 84:
          {
           $t0$2$i131$lcssa178 = $t0$2$i131;
           label = 44;
           break L75;
           break;
          }
         case 68:
          {
           $t0$2$i131$lcssa179 = $t0$2$i131;
           label = 61;
           break L75;
           break;
          }
         case 73:
          {
           $338 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131, $last, $db) | 0;
           if (($338 | 0) == ($t0$2$i131 | 0) | ($338 | 0) == ($last | 0)) {
            $$07$i = $$first;
            break L44;
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name3$i, (HEAP32[$34 >> 2] | 0) + -24 | 0);
           $343 = HEAP32[$34 >> 2] | 0;
           $344 = $343 + -24 | 0;
           $346 = $343;
           do {
            $345 = $346 + -24 | 0;
            HEAP32[$34 >> 2] = $345;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($345);
            $346 = HEAP32[$34 >> 2] | 0;
           } while (($346 | 0) != ($344 | 0));
           $349 = HEAP8[$name3$i >> 0] | 0;
           $351 = ($349 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($343 + -48 | 0, $351 ? $82 : HEAP32[$81 >> 2] | 0, $351 ? ($349 & 255) >>> 1 : HEAP32[$83 >> 2] | 0) | 0;
           $359 = (HEAP32[$34 >> 2] | 0) + -24 | 0;
           HEAP32[$10 >> 2] = HEAP32[$84 >> 2];
           __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($9, $359, $10);
           $361 = HEAP32[$86 >> 2] | 0;
           $362 = HEAP32[$87 >> 2] | 0;
           if ($361 >>> 0 < $362 >>> 0) {
            HEAP32[$361 + 12 >> 2] = HEAP32[$88 >> 2];
            HEAP32[$361 >> 2] = HEAP32[$9 >> 2];
            HEAP32[$361 + 4 >> 2] = HEAP32[$89 >> 2];
            HEAP32[$361 + 8 >> 2] = HEAP32[$90 >> 2];
            HEAP32[$90 >> 2] = 0;
            HEAP32[$89 >> 2] = 0;
            HEAP32[$9 >> 2] = 0;
            HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 16;
           } else {
            $375 = HEAP32[$85 >> 2] | 0;
            $376 = $361 - $375 | 0;
            $377 = $376 >> 4;
            $378 = $377 + 1 | 0;
            if (($376 | 0) < -16) {
             label = 86;
             break L73;
            }
            $381 = $362 - $375 | 0;
            if ($381 >> 4 >>> 0 < 1073741823) {
             $384 = $381 >> 3;
             $$0$i$i$i42$i = $384 >>> 0 < $378 >>> 0 ? $378 : $384;
            } else $$0$i$i$i42$i = 2147483647;
            __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i51$i, $$0$i$i$i42$i, $377, $91);
            $387 = HEAP32[$92 >> 2] | 0;
            HEAP32[$387 + 12 >> 2] = HEAP32[$88 >> 2];
            HEAP32[$387 >> 2] = HEAP32[$9 >> 2];
            HEAP32[$387 + 4 >> 2] = HEAP32[$89 >> 2];
            HEAP32[$387 + 8 >> 2] = HEAP32[$90 >> 2];
            HEAP32[$90 >> 2] = 0;
            HEAP32[$89 >> 2] = 0;
            HEAP32[$9 >> 2] = 0;
            HEAP32[$92 >> 2] = $387 + 16;
            __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85, $__v$i$i51$i);
            __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i51$i);
           }
           __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($9);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name3$i);
           $t0$2$i$be = $338;
           break;
          }
         case 76:
          {
           $398 = $t0$2$i131 + 1 | 0;
           if (($398 | 0) == ($last | 0)) {
            $$07$i = $$first;
            break L44;
           } else $t0$2$i$be = $398;
           break;
          }
         default:
          {
           $t0$2$i131184 = $t0$2$i131;
           label = 93;
           break L75;
          }
         }
         $129 = HEAP8[$t0$2$i$be >> 0] | 0;
         if ($129 << 24 >> 24 == 69) {
          $pop_subs$0$off0$i$ph$lcssa = $pop_subs$0$off0$i$ph136;
          $t0$2$i$lcssa = $t0$2$i$be;
          break L72;
         } else $t0$2$i131 = $t0$2$i$be;
        }
        L93 : do if ((label | 0) == 25) {
         label = 0;
         $130 = $t0$2$i131$lcssa177 + 1 | 0;
         if (($130 | 0) != ($last | 0)) if ((HEAP8[$130 >> 0] | 0) == 116) {
          $t0$2$i131184 = $t0$2$i131$lcssa177;
          label = 93;
          break;
         }
         $134 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131$lcssa177, $last, $db) | 0;
         if (($134 | 0) == ($t0$2$i131$lcssa177 | 0) | ($134 | 0) == ($last | 0)) {
          $$07$i = $$first;
          break L44;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name$i11, (HEAP32[$34 >> 2] | 0) + -24 | 0);
         $139 = HEAP32[$34 >> 2] | 0;
         $140 = $139 + -24 | 0;
         $142 = $139;
         do {
          $141 = $142 + -24 | 0;
          HEAP32[$34 >> 2] = $141;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($141);
          $142 = HEAP32[$34 >> 2] | 0;
         } while (($142 | 0) != ($140 | 0));
         $144 = $139 + -48 | 0;
         $145 = HEAP8[$144 >> 0] | 0;
         if (!($145 & 1)) $153 = ($145 & 255) >>> 1; else $153 = HEAP32[$139 + -44 >> 2] | 0;
         if (!$153) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($144, $name$i11); else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($0, 25761, $name$i11);
          $154 = HEAP8[$0 >> 0] | 0;
          $156 = ($154 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($144, $156 ? $101 : HEAP32[$100 >> 2] | 0, $156 ? ($154 & 255) >>> 1 : HEAP32[$102 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
          $164 = (HEAP32[$34 >> 2] | 0) + -24 | 0;
          HEAP32[$2 >> 2] = HEAP32[$84 >> 2];
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($1, $164, $2);
          $166 = HEAP32[$86 >> 2] | 0;
          $167 = HEAP32[$87 >> 2] | 0;
          if ($166 >>> 0 < $167 >>> 0) {
           HEAP32[$166 + 12 >> 2] = HEAP32[$103 >> 2];
           HEAP32[$166 >> 2] = HEAP32[$1 >> 2];
           HEAP32[$166 + 4 >> 2] = HEAP32[$104 >> 2];
           HEAP32[$166 + 8 >> 2] = HEAP32[$105 >> 2];
           HEAP32[$105 >> 2] = 0;
           HEAP32[$104 >> 2] = 0;
           HEAP32[$1 >> 2] = 0;
           HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 16;
          } else {
           $180 = HEAP32[$85 >> 2] | 0;
           $181 = $166 - $180 | 0;
           $182 = $181 >> 4;
           $183 = $182 + 1 | 0;
           if (($181 | 0) < -16) {
            label = 37;
            break L73;
           }
           $186 = $167 - $180 | 0;
           if ($186 >> 4 >>> 0 < 1073741823) {
            $189 = $186 >> 3;
            $$0$i$i$i16$i = $189 >>> 0 < $183 >>> 0 ? $183 : $189;
           } else $$0$i$i$i16$i = 2147483647;
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i51$i, $$0$i$i$i16$i, $182, $91);
           $192 = HEAP32[$106 >> 2] | 0;
           HEAP32[$192 + 12 >> 2] = HEAP32[$103 >> 2];
           HEAP32[$192 >> 2] = HEAP32[$1 >> 2];
           HEAP32[$192 + 4 >> 2] = HEAP32[$104 >> 2];
           HEAP32[$192 + 8 >> 2] = HEAP32[$105 >> 2];
           HEAP32[$105 >> 2] = 0;
           HEAP32[$104 >> 2] = 0;
           HEAP32[$1 >> 2] = 0;
           HEAP32[$106 >> 2] = $192 + 16;
           __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85, $__v$i$i51$i);
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i51$i);
          }
          __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($1);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name$i11);
         $t0$2$i$ph$be = $134;
        } else if ((label | 0) == 44) {
         label = 0;
         $201 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131$lcssa178, $last, $db) | 0;
         if (($201 | 0) == ($t0$2$i131$lcssa178 | 0) | ($201 | 0) == ($last | 0)) {
          $$07$i = $$first;
          break L44;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name1$i, (HEAP32[$34 >> 2] | 0) + -24 | 0);
         $206 = HEAP32[$34 >> 2] | 0;
         $207 = $206 + -24 | 0;
         $209 = $206;
         do {
          $208 = $209 + -24 | 0;
          HEAP32[$34 >> 2] = $208;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($208);
          $209 = HEAP32[$34 >> 2] | 0;
         } while (($209 | 0) != ($207 | 0));
         $211 = $206 + -48 | 0;
         $212 = HEAP8[$211 >> 0] | 0;
         if (!($212 & 1)) $220 = ($212 & 255) >>> 1; else $220 = HEAP32[$206 + -44 >> 2] | 0;
         if (!$220) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($211, $name1$i); else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($3, 25761, $name1$i);
          $221 = HEAP8[$3 >> 0] | 0;
          $223 = ($221 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($211, $223 ? $112 : HEAP32[$111 >> 2] | 0, $223 ? ($221 & 255) >>> 1 : HEAP32[$113 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         }
         $231 = (HEAP32[$34 >> 2] | 0) + -24 | 0;
         HEAP32[$5 >> 2] = HEAP32[$84 >> 2];
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4, $231, $5);
         $233 = HEAP32[$86 >> 2] | 0;
         $234 = HEAP32[$87 >> 2] | 0;
         if ($233 >>> 0 < $234 >>> 0) {
          HEAP32[$233 + 12 >> 2] = HEAP32[$107 >> 2];
          HEAP32[$233 >> 2] = HEAP32[$4 >> 2];
          HEAP32[$233 + 4 >> 2] = HEAP32[$108 >> 2];
          HEAP32[$233 + 8 >> 2] = HEAP32[$109 >> 2];
          HEAP32[$109 >> 2] = 0;
          HEAP32[$108 >> 2] = 0;
          HEAP32[$4 >> 2] = 0;
          HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 16;
         } else {
          $247 = HEAP32[$85 >> 2] | 0;
          $248 = $233 - $247 | 0;
          $249 = $248 >> 4;
          $250 = $249 + 1 | 0;
          if (($248 | 0) < -16) {
           label = 56;
           break L73;
          }
          $253 = $234 - $247 | 0;
          if ($253 >> 4 >>> 0 < 1073741823) {
           $256 = $253 >> 3;
           $$0$i$i$i23$i = $256 >>> 0 < $250 >>> 0 ? $250 : $256;
          } else $$0$i$i$i23$i = 2147483647;
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i51$i, $$0$i$i$i23$i, $249, $91);
          $259 = HEAP32[$110 >> 2] | 0;
          HEAP32[$259 + 12 >> 2] = HEAP32[$107 >> 2];
          HEAP32[$259 >> 2] = HEAP32[$4 >> 2];
          HEAP32[$259 + 4 >> 2] = HEAP32[$108 >> 2];
          HEAP32[$259 + 8 >> 2] = HEAP32[$109 >> 2];
          HEAP32[$109 >> 2] = 0;
          HEAP32[$108 >> 2] = 0;
          HEAP32[$4 >> 2] = 0;
          HEAP32[$110 >> 2] = $259 + 16;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85, $__v$i$i51$i);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i51$i);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name1$i);
         $t0$2$i$ph$be = $201;
        } else if ((label | 0) == 61) {
         label = 0;
         $268 = $t0$2$i131$lcssa179 + 1 | 0;
         if (($268 | 0) != ($last | 0)) switch (HEAP8[$268 >> 0] | 0) {
         case 84:
         case 116:
          break;
         default:
          {
           $t0$2$i131184 = $t0$2$i131$lcssa179;
           label = 93;
           break L93;
          }
         }
         $271 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131$lcssa179, $last, $db) | 0;
         if (($271 | 0) == ($t0$2$i131$lcssa179 | 0) | ($271 | 0) == ($last | 0)) {
          $$07$i = $$first;
          break L44;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name2$i12, (HEAP32[$34 >> 2] | 0) + -24 | 0);
         $276 = HEAP32[$34 >> 2] | 0;
         $277 = $276 + -24 | 0;
         $279 = $276;
         do {
          $278 = $279 + -24 | 0;
          HEAP32[$34 >> 2] = $278;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($278);
          $279 = HEAP32[$34 >> 2] | 0;
         } while (($279 | 0) != ($277 | 0));
         $281 = $276 + -48 | 0;
         $282 = HEAP8[$281 >> 0] | 0;
         if (!($282 & 1)) $290 = ($282 & 255) >>> 1; else $290 = HEAP32[$276 + -44 >> 2] | 0;
         if (!$290) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($281, $name2$i12); else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($6, 25761, $name2$i12);
          $291 = HEAP8[$6 >> 0] | 0;
          $293 = ($291 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($281, $293 ? $119 : HEAP32[$118 >> 2] | 0, $293 ? ($291 & 255) >>> 1 : HEAP32[$120 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
         }
         $301 = (HEAP32[$34 >> 2] | 0) + -24 | 0;
         HEAP32[$8 >> 2] = HEAP32[$84 >> 2];
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($7, $301, $8);
         $303 = HEAP32[$86 >> 2] | 0;
         $304 = HEAP32[$87 >> 2] | 0;
         if ($303 >>> 0 < $304 >>> 0) {
          HEAP32[$303 + 12 >> 2] = HEAP32[$114 >> 2];
          HEAP32[$303 >> 2] = HEAP32[$7 >> 2];
          HEAP32[$303 + 4 >> 2] = HEAP32[$115 >> 2];
          HEAP32[$303 + 8 >> 2] = HEAP32[$116 >> 2];
          HEAP32[$116 >> 2] = 0;
          HEAP32[$115 >> 2] = 0;
          HEAP32[$7 >> 2] = 0;
          HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 16;
         } else {
          $317 = HEAP32[$85 >> 2] | 0;
          $318 = $303 - $317 | 0;
          $319 = $318 >> 4;
          $320 = $319 + 1 | 0;
          if (($318 | 0) < -16) {
           label = 75;
           break L73;
          }
          $323 = $304 - $317 | 0;
          if ($323 >> 4 >>> 0 < 1073741823) {
           $326 = $323 >> 3;
           $$0$i$i$i33$i = $326 >>> 0 < $320 >>> 0 ? $320 : $326;
          } else $$0$i$i$i33$i = 2147483647;
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i51$i, $$0$i$i$i33$i, $319, $91);
          $329 = HEAP32[$117 >> 2] | 0;
          HEAP32[$329 + 12 >> 2] = HEAP32[$114 >> 2];
          HEAP32[$329 >> 2] = HEAP32[$7 >> 2];
          HEAP32[$329 + 4 >> 2] = HEAP32[$115 >> 2];
          HEAP32[$329 + 8 >> 2] = HEAP32[$116 >> 2];
          HEAP32[$116 >> 2] = 0;
          HEAP32[$115 >> 2] = 0;
          HEAP32[$7 >> 2] = 0;
          HEAP32[$117 >> 2] = $329 + 16;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85, $__v$i$i51$i);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i51$i);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($7);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name2$i12);
         $t0$2$i$ph$be = $271;
        } while (0);
        if ((label | 0) == 93) {
         label = 0;
         $400 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$2$i131184, $last, $db) | 0;
         if (($400 | 0) == ($t0$2$i131184 | 0) | ($400 | 0) == ($last | 0)) {
          $$07$i = $$first;
          break L44;
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name4$i, (HEAP32[$34 >> 2] | 0) + -24 | 0);
         $405 = HEAP32[$34 >> 2] | 0;
         $406 = $405 + -24 | 0;
         $408 = $405;
         do {
          $407 = $408 + -24 | 0;
          HEAP32[$34 >> 2] = $407;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($407);
          $408 = HEAP32[$34 >> 2] | 0;
         } while (($408 | 0) != ($406 | 0));
         $410 = $405 + -48 | 0;
         $411 = HEAP8[$410 >> 0] | 0;
         if (!($411 & 1)) $419 = ($411 & 255) >>> 1; else $419 = HEAP32[$405 + -44 >> 2] | 0;
         if (!$419) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($410, $name4$i); else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($11, 25761, $name4$i);
          $420 = HEAP8[$11 >> 0] | 0;
          $422 = ($420 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($410, $422 ? $98 : HEAP32[$97 >> 2] | 0, $422 ? ($420 & 255) >>> 1 : HEAP32[$99 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
         }
         $430 = (HEAP32[$34 >> 2] | 0) + -24 | 0;
         HEAP32[$13 >> 2] = HEAP32[$84 >> 2];
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($12, $430, $13);
         $432 = HEAP32[$86 >> 2] | 0;
         $433 = HEAP32[$87 >> 2] | 0;
         if ($432 >>> 0 < $433 >>> 0) {
          HEAP32[$432 + 12 >> 2] = HEAP32[$93 >> 2];
          HEAP32[$432 >> 2] = HEAP32[$12 >> 2];
          HEAP32[$432 + 4 >> 2] = HEAP32[$94 >> 2];
          HEAP32[$432 + 8 >> 2] = HEAP32[$95 >> 2];
          HEAP32[$95 >> 2] = 0;
          HEAP32[$94 >> 2] = 0;
          HEAP32[$12 >> 2] = 0;
          HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 16;
         } else {
          $446 = HEAP32[$85 >> 2] | 0;
          $447 = $432 - $446 | 0;
          $448 = $447 >> 4;
          $449 = $448 + 1 | 0;
          if (($447 | 0) < -16) {
           label = 105;
           break;
          }
          $452 = $433 - $446 | 0;
          if ($452 >> 4 >>> 0 < 1073741823) {
           $455 = $452 >> 3;
           $$0$i$i$i52$i = $455 >>> 0 < $449 >>> 0 ? $449 : $455;
          } else $$0$i$i$i52$i = 2147483647;
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i51$i, $$0$i$i$i52$i, $448, $91);
          $458 = HEAP32[$96 >> 2] | 0;
          HEAP32[$458 + 12 >> 2] = HEAP32[$93 >> 2];
          HEAP32[$458 >> 2] = HEAP32[$12 >> 2];
          HEAP32[$458 + 4 >> 2] = HEAP32[$94 >> 2];
          HEAP32[$458 + 8 >> 2] = HEAP32[$95 >> 2];
          HEAP32[$95 >> 2] = 0;
          HEAP32[$94 >> 2] = 0;
          HEAP32[$12 >> 2] = 0;
          HEAP32[$96 >> 2] = $458 + 16;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($85, $__v$i$i51$i);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i51$i);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($12);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($name4$i);
         $t0$2$i$ph$be = $400;
        }
        $719 = HEAP8[$t0$2$i$ph$be >> 0] | 0;
        if ($719 << 24 >> 24 == 69) {
         $pop_subs$0$off0$i$ph$lcssa = 1;
         $t0$2$i$lcssa = $t0$2$i$ph$be;
         break L72;
        } else {
         $pop_subs$0$off0$i$ph136 = 1;
         $t0$2$i$ph135 = $t0$2$i$ph$be;
        }
       }
       if ((label | 0) == 37) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($85); else if ((label | 0) == 56) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($85); else if ((label | 0) == 75) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($85); else if ((label | 0) == 86) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($85); else if ((label | 0) == 105) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($85);
      } while (0);
      $469 = $t0$2$i$lcssa + 1 | 0;
      HEAP32[$db + 48 >> 2] = HEAP32[$cv$i >> 2];
      if ($pop_subs$0$off0$i$ph$lcssa) {
       $474 = HEAP32[$86 >> 2] | 0;
       if ((HEAP32[$db + 16 >> 2] | 0) == ($474 | 0)) $$07$i = $469; else {
        $476 = $474 + -16 | 0;
        $478 = $474;
        do {
         $477 = $478 + -16 | 0;
         HEAP32[$86 >> 2] = $477;
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($477);
         $478 = HEAP32[$86 >> 2] | 0;
        } while (($478 | 0) != ($476 | 0));
        $$07$i = $469;
       }
      } else $$07$i = $469;
     }
    } else $$07$i = $$first; while (0);
    $$02 = ($$07$i | 0) == ($$first | 0) ? $first : $$07$i;
    break L1;
    break;
   }
  case 90:
   {
    L199 : do if (($$first | 0) == ($last | 0)) $$0$i10 = $last; else if ($23 << 24 >> 24 == 90) {
     $483 = $$first + 1 | 0;
     $484 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($483, $last, $db) | 0;
     if (($484 | 0) == ($483 | 0) | ($484 | 0) == ($last | 0)) $$0$i10 = $$first; else if ((HEAP8[$484 >> 0] | 0) == 69) {
      $489 = $484 + 1 | 0;
      if (($489 | 0) == ($last | 0)) $$0$i10 = $$first; else switch (HEAP8[$489 >> 0] | 0) {
      case 115:
       {
        $494 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($484 + 2 | 0, $last) | 0;
        $497 = HEAP32[$db + 4 >> 2] | 0;
        if ((HEAP32[$db >> 2] | 0) == ($497 | 0)) {
         $$0$i10 = $494;
         break L199;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($497 + -24 | 0, 25764) | 0;
        $$0$i10 = $494;
        break L199;
        break;
       }
      case 100:
       {
        $500 = $484 + 2 | 0;
        if (($500 | 0) == ($last | 0)) {
         $$0$i10 = $$first;
         break L199;
        }
        $502 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($500, $last) | 0;
        if (($502 | 0) == ($last | 0)) {
         $$0$i10 = $$first;
         break L199;
        }
        if ((HEAP8[$502 >> 0] | 0) != 95) {
         $$0$i10 = $$first;
         break L199;
        }
        $506 = $502 + 1 | 0;
        $507 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($506, $last, $db) | 0;
        $509 = $db + 4 | 0;
        $510 = HEAP32[$509 >> 2] | 0;
        if (($507 | 0) == ($506 | 0)) {
         $538 = $510 + -24 | 0;
         $540 = $510;
         while (1) {
          $539 = $540 + -24 | 0;
          HEAP32[$509 >> 2] = $539;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($539);
          $540 = HEAP32[$509 >> 2] | 0;
          if (($540 | 0) == ($538 | 0)) {
           $$0$i10 = $$first;
           break L199;
          }
         }
        }
        if ((($510 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
         $$0$i10 = $$first;
         break L199;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($__v$i$i51$i, $510 + -24 | 0);
        $518 = HEAP32[$509 >> 2] | 0;
        $519 = $518 + -24 | 0;
        $521 = $518;
        do {
         $520 = $521 + -24 | 0;
         HEAP32[$509 >> 2] = $520;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($520);
         $521 = HEAP32[$509 >> 2] | 0;
        } while (($521 | 0) != ($519 | 0));
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($518 + -48 | 0, 25761) | 0;
        $526 = HEAP8[$__v$i$i51$i >> 0] | 0;
        $528 = ($526 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$509 >> 2] | 0) + -24 | 0, $528 ? $__v$i$i51$i + 1 | 0 : HEAP32[$__v$i$i51$i + 8 >> 2] | 0, $528 ? ($526 & 255) >>> 1 : HEAP32[$__v$i$i51$i + 4 >> 2] | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($__v$i$i51$i);
        $$0$i10 = $507;
        break L199;
        break;
       }
      default:
       {
        $542 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($489, $last, $db) | 0;
        if (($542 | 0) == ($489 | 0)) {
         $574 = $db + 4 | 0;
         $575 = HEAP32[$574 >> 2] | 0;
         $576 = $575 + -24 | 0;
         $578 = $575;
         while (1) {
          $577 = $578 + -24 | 0;
          HEAP32[$574 >> 2] = $577;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($577);
          $578 = HEAP32[$574 >> 2] | 0;
          if (($578 | 0) == ($576 | 0)) {
           $$0$i10 = $$first;
           break L199;
          }
         }
        }
        $544 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($542, $last) | 0;
        $545 = $db + 4 | 0;
        $546 = HEAP32[$545 >> 2] | 0;
        if ((($546 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
         $$0$i10 = $544;
         break L199;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($cv$i, $546 + -24 | 0);
        $554 = HEAP32[$545 >> 2] | 0;
        $555 = $554 + -24 | 0;
        $557 = $554;
        do {
         $556 = $557 + -24 | 0;
         HEAP32[$545 >> 2] = $556;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($556);
         $557 = HEAP32[$545 >> 2] | 0;
        } while (($557 | 0) != ($555 | 0));
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($554 + -48 | 0, 25761) | 0;
        $562 = HEAP8[$cv$i >> 0] | 0;
        $564 = ($562 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$545 >> 2] | 0) + -24 | 0, $564 ? $cv$i + 1 | 0 : HEAP32[$cv$i + 8 >> 2] | 0, $564 ? ($562 & 255) >>> 1 : HEAP32[$cv$i + 4 >> 2] | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($cv$i);
        $$0$i10 = $544;
        break L199;
       }
      }
     } else $$0$i10 = $$first;
    } else $$0$i10 = $$first; while (0);
    STACKTOP = sp;
    return (($$0$i10 | 0) == ($$first | 0) ? $first : $$0$i10) | 0;
   }
  default:
   {
    do if (($16 - $$first | 0) > 1) {
     if ($23 << 24 >> 24 == 83) if ((HEAP8[$$first + 1 >> 0] | 0) == 116) {
      $588 = $$first + 2 | 0;
      if (($588 | 0) == ($last | 0)) {
       $St$0$off0$i = 0;
       $t0$0$i = $last;
      } else {
       $St$0$off0$i = 0;
       $t0$0$i = (HEAP8[$588 >> 0] | 0) == 76 ? $$first + 3 | 0 : $588;
      }
     } else {
      $St$0$off0$i = 1;
      $t0$0$i = $$first;
     } else {
      $St$0$off0$i = 1;
      $t0$0$i = $$first;
     }
     $593 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$0$i, $last, $db) | 0;
     $594 = ($593 | 0) == ($t0$0$i | 0);
     if ($St$0$off0$i | $594) $$0$i = $594 ? $$first : $593; else {
      $597 = HEAP32[$db + 4 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($597 | 0)) break;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($597 + -24 | 0, 0, 25781) | 0;
      $$0$i = $593;
     }
     if (($$0$i | 0) != ($$first | 0)) {
      if (($$0$i | 0) == ($last | 0)) {
       $$02 = $last;
       break L1;
      }
      if ((HEAP8[$$0$i >> 0] | 0) != 73) {
       $$02 = $$0$i;
       break L1;
      }
      $605 = $db + 4 | 0;
      $606 = HEAP32[$605 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($606 | 0)) {
       $$02 = $first;
       break L1;
      }
      $608 = $db + 16 | 0;
      HEAP32[$15 >> 2] = HEAP32[$db + 12 >> 2];
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($14, $606 + -24 | 0, $15);
      $612 = $db + 20 | 0;
      $613 = HEAP32[$612 >> 2] | 0;
      $615 = HEAP32[$db + 24 >> 2] | 0;
      if ($613 >>> 0 < $615 >>> 0) {
       HEAP32[$613 + 12 >> 2] = HEAP32[$14 + 12 >> 2];
       HEAP32[$613 >> 2] = HEAP32[$14 >> 2];
       $622 = $14 + 4 | 0;
       HEAP32[$613 + 4 >> 2] = HEAP32[$622 >> 2];
       $624 = $14 + 8 | 0;
       HEAP32[$613 + 8 >> 2] = HEAP32[$624 >> 2];
       HEAP32[$624 >> 2] = 0;
       HEAP32[$622 >> 2] = 0;
       HEAP32[$14 >> 2] = 0;
       HEAP32[$612 >> 2] = (HEAP32[$612 >> 2] | 0) + 16;
      } else {
       $632 = HEAP32[$608 >> 2] | 0;
       $633 = $613 - $632 | 0;
       $634 = $633 >> 4;
       $635 = $634 + 1 | 0;
       if (($633 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($608);
       $638 = $615 - $632 | 0;
       if ($638 >> 4 >>> 0 < 1073741823) {
        $641 = $638 >> 3;
        $$0$i$i$i = $641 >>> 0 < $635 >>> 0 ? $635 : $641;
       } else $$0$i$i$i = 2147483647;
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i51$i, $$0$i$i$i, $634, $db + 28 | 0);
       $644 = $__v$i$i51$i + 8 | 0;
       $645 = HEAP32[$644 >> 2] | 0;
       HEAP32[$645 + 12 >> 2] = HEAP32[$14 + 12 >> 2];
       HEAP32[$645 >> 2] = HEAP32[$14 >> 2];
       $651 = $14 + 4 | 0;
       HEAP32[$645 + 4 >> 2] = HEAP32[$651 >> 2];
       $653 = $14 + 8 | 0;
       HEAP32[$645 + 8 >> 2] = HEAP32[$653 >> 2];
       HEAP32[$653 >> 2] = 0;
       HEAP32[$651 >> 2] = 0;
       HEAP32[$14 >> 2] = 0;
       HEAP32[$644 >> 2] = $645 + 16;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($608, $__v$i$i51$i);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i51$i);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($14);
      $657 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($$0$i, $last, $db) | 0;
      if (($657 | 0) == ($$0$i | 0)) {
       $$02 = $first;
       break L1;
      }
      $659 = HEAP32[$605 >> 2] | 0;
      if ((($659 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       $$02 = $first;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp, $659 + -24 | 0);
      $667 = HEAP32[$605 >> 2] | 0;
      $668 = $667 + -24 | 0;
      $670 = $667;
      do {
       $669 = $670 + -24 | 0;
       HEAP32[$605 >> 2] = $669;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($669);
       $670 = HEAP32[$605 >> 2] | 0;
      } while (($670 | 0) != ($668 | 0));
      $673 = HEAP8[$tmp >> 0] | 0;
      $675 = ($673 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($667 + -48 | 0, $675 ? $tmp + 1 | 0 : HEAP32[$tmp + 8 >> 2] | 0, $675 ? ($673 & 255) >>> 1 : HEAP32[$tmp + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
      $$02 = $657;
      break L1;
     }
    } while (0);
    $685 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($$first, $last, $db) | 0;
    if (($685 | 0) == ($$first | 0) | ($685 | 0) == ($last | 0)) {
     $$02 = $first;
     break L1;
    }
    if ((HEAP8[$685 >> 0] | 0) != 73) {
     $$02 = $first;
     break L1;
    }
    $690 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($685, $last, $db) | 0;
    if (($690 | 0) == ($685 | 0)) {
     $$02 = $first;
     break L1;
    }
    $692 = $db + 4 | 0;
    $693 = HEAP32[$692 >> 2] | 0;
    if ((($693 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$02 = $first;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp3, $693 + -24 | 0);
    $701 = HEAP32[$692 >> 2] | 0;
    $702 = $701 + -24 | 0;
    $704 = $701;
    do {
     $703 = $704 + -24 | 0;
     HEAP32[$692 >> 2] = $703;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($703);
     $704 = HEAP32[$692 >> 2] | 0;
    } while (($704 | 0) != ($702 | 0));
    $707 = HEAP8[$tmp3 >> 0] | 0;
    $709 = ($707 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($701 + -48 | 0, $709 ? $tmp3 + 1 | 0 : HEAP32[$tmp3 + 8 >> 2] | 0, $709 ? ($707 & 255) >>> 1 : HEAP32[$tmp3 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp3);
    $$02 = $690;
    break L1;
   }
  }
 } else $$02 = $first; while (0);
 STACKTOP = sp;
 return $$02 | 0;
}

function __ZNSt3__16__sortIRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEvT0_SA_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $$0$lcssa223 = 0, $$0$lcssa224 = 0, $$0$lcssa225 = 0, $$0$lcssa226 = 0, $$0$lcssa227 = 0, $$0$lcssa230 = 0, $$0$ph = 0, $$01$ph = 0, $$01$ph$lcssa239 = 0, $$lcssa = 0, $$lcssa216 = 0, $$lcssa219 = 0, $$lcssa220 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa243 = 0, $$lcssa244 = 0, $$lcssa245 = 0, $$lcssa246 = 0, $$lcssa251 = 0, $$lcssa252 = 0, $$lcssa254 = 0, $0 = 0, $1 = 0, $100 = 0, $106 = 0, $106$phi = 0, $11 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $42 = 0, $50 = 0, $52 = 0, $59 = 0, $61 = 0, $68 = 0, $7 = 0, $73 = 0, $75 = 0, $81 = 0, $85 = 0, $87 = 0, $9 = 0, $97 = 0, $98 = 0, $__i$057 = 0, $__i$057$lcssa = 0, $__i$1 = 0, $__i$2 = 0, $__i$2$lcssa = 0, $__i$2$ph = 0, $__i$3 = 0, $__i$3$lcssa = 0, $__i$3$ph = 0, $__i$4 = 0, $__i$4$lcssa232 = 0, $__j$0 = 0, $__j$1$ph = 0, $__j$2 = 0, $__j$3 = 0, $__j$4$ph = 0, $__j$5 = 0, $__m$0$ph = 0, $__m$2 = 0, $__n_swaps$0 = 0, $__n_swaps$3 = 0, $__n_swaps$4$ph = 0, $__n_swaps$5 = 0, $__n_swaps$6 = 0, $__t$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__t$i23 = sp;
 $$0$ph = $__first;
 $$01$ph = $__last;
 L1 : while (1) {
  $0 = $$01$ph;
  $1 = $$01$ph + -24 | 0;
  $$0 = $$0$ph;
  L3 : while (1) {
   $2 = $$0;
   $3 = $0 - $2 | 0;
   switch (($3 | 0) / 24 | 0 | 0) {
   case 2:
    {
     $$0$lcssa223 = $$0;
     $$lcssa243 = $1;
     $$lcssa251 = $1;
     label = 4;
     break L1;
     break;
    }
   case 3:
    {
     $$0$lcssa224 = $$0;
     $$lcssa244 = $1;
     $$lcssa252 = $1;
     label = 6;
     break L1;
     break;
    }
   case 4:
    {
     $$0$lcssa225 = $$0;
     $$lcssa245 = $1;
     label = 14;
     break L1;
     break;
    }
   case 5:
    {
     $$0$lcssa226 = $$0;
     $$lcssa246 = $1;
     $$lcssa254 = $1;
     label = 15;
     break L1;
     break;
    }
   case 1:
   case 0:
    {
     label = 69;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($3 | 0) < 744) {
    $$0$lcssa227 = $$0;
    $$01$ph$lcssa239 = $$01$ph;
    label = 21;
    break L1;
   }
   $31 = ($3 | 0) / 48 | 0;
   $32 = $$0 + ($31 * 24 | 0) | 0;
   do if (($3 | 0) > 23976) {
    $33 = ($3 | 0) / 96 | 0;
    $34 = $$0 + ($33 * 24 | 0) | 0;
    $35 = $$0 + (($33 + $31 | 0) * 24 | 0) | 0;
    $36 = __ZNSt3__17__sort4IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEjT0_SA_SA_SA_T_($$0, $34, $32, $35, $__comp) | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($1, $35) | 0) {
     HEAP32[$__t$i23 >> 2] = HEAP32[$35 >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$35 + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$35 + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$35 + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$35 + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$35 + 20 >> 2];
     HEAP32[$35 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$35 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$35 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$35 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
     HEAP32[$35 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
     HEAP32[$35 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
     HEAP32[$1 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$1 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$1 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$1 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$1 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$1 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $39 = $36 + 1 | 0;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($35, $32) | 0) {
      HEAP32[$__t$i23 >> 2] = HEAP32[$32 >> 2];
      HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
      HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
      HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
      HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
      HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
      HEAP32[$32 >> 2] = HEAP32[$35 >> 2];
      HEAP32[$32 + 4 >> 2] = HEAP32[$35 + 4 >> 2];
      HEAP32[$32 + 8 >> 2] = HEAP32[$35 + 8 >> 2];
      HEAP32[$32 + 12 >> 2] = HEAP32[$35 + 12 >> 2];
      HEAP32[$32 + 16 >> 2] = HEAP32[$35 + 16 >> 2];
      HEAP32[$32 + 20 >> 2] = HEAP32[$35 + 20 >> 2];
      HEAP32[$35 >> 2] = HEAP32[$__t$i23 >> 2];
      HEAP32[$35 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
      HEAP32[$35 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
      HEAP32[$35 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
      HEAP32[$35 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
      HEAP32[$35 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
      $42 = $36 + 2 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($32, $34) | 0) {
       HEAP32[$__t$i23 >> 2] = HEAP32[$34 >> 2];
       HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$34 + 4 >> 2];
       HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$34 + 8 >> 2];
       HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$34 + 12 >> 2];
       HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$34 + 16 >> 2];
       HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$34 + 20 >> 2];
       HEAP32[$34 >> 2] = HEAP32[$32 >> 2];
       HEAP32[$34 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
       HEAP32[$34 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
       HEAP32[$34 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
       HEAP32[$34 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
       HEAP32[$34 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
       HEAP32[$32 >> 2] = HEAP32[$__t$i23 >> 2];
       HEAP32[$32 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
       HEAP32[$32 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
       HEAP32[$32 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
       HEAP32[$32 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
       HEAP32[$32 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
       if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($34, $$0) | 0) {
        HEAP32[$__t$i23 >> 2] = HEAP32[$$0 >> 2];
        HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0 + 4 >> 2];
        HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0 + 8 >> 2];
        HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0 + 12 >> 2];
        HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0 + 16 >> 2];
        HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0 + 20 >> 2];
        HEAP32[$$0 >> 2] = HEAP32[$34 >> 2];
        HEAP32[$$0 + 4 >> 2] = HEAP32[$34 + 4 >> 2];
        HEAP32[$$0 + 8 >> 2] = HEAP32[$34 + 8 >> 2];
        HEAP32[$$0 + 12 >> 2] = HEAP32[$34 + 12 >> 2];
        HEAP32[$$0 + 16 >> 2] = HEAP32[$34 + 16 >> 2];
        HEAP32[$$0 + 20 >> 2] = HEAP32[$34 + 20 >> 2];
        HEAP32[$34 >> 2] = HEAP32[$__t$i23 >> 2];
        HEAP32[$34 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
        HEAP32[$34 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
        HEAP32[$34 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
        HEAP32[$34 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
        HEAP32[$34 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
        $__n_swaps$0 = $36 + 4 | 0;
       } else $__n_swaps$0 = $36 + 3 | 0;
      } else $__n_swaps$0 = $42;
     } else $__n_swaps$0 = $39;
    } else $__n_swaps$0 = $36;
   } else {
    $50 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($32, $$0) | 0;
    $52 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($1, $32) | 0;
    if (!$50) {
     if (!$52) {
      $__n_swaps$0 = 0;
      break;
     };
     HEAP32[$__t$i23 >> 2] = HEAP32[$32 >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
     HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$32 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$32 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$32 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
     HEAP32[$32 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
     HEAP32[$32 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
     HEAP32[$1 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$1 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$1 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$1 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$1 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$1 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($32, $$0) | 0)) {
      $__n_swaps$0 = 1;
      break;
     };
     HEAP32[$__t$i23 >> 2] = HEAP32[$$0 >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0 + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0 + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0 + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0 + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0 + 20 >> 2];
     HEAP32[$$0 >> 2] = HEAP32[$32 >> 2];
     HEAP32[$$0 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
     HEAP32[$$0 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
     HEAP32[$$0 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
     HEAP32[$$0 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
     HEAP32[$$0 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
     HEAP32[$32 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$32 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$32 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$32 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$32 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$32 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $__n_swaps$0 = 2;
     break;
    }
    if ($52) {
     HEAP32[$__t$i23 >> 2] = HEAP32[$$0 >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0 + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0 + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0 + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0 + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0 + 20 >> 2];
     HEAP32[$$0 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$$0 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
     HEAP32[$$0 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
     HEAP32[$$0 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
     HEAP32[$1 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$1 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$1 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$1 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$1 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$1 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $__n_swaps$0 = 1;
     break;
    };
    HEAP32[$__t$i23 >> 2] = HEAP32[$$0 >> 2];
    HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0 + 4 >> 2];
    HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0 + 8 >> 2];
    HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0 + 12 >> 2];
    HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0 + 16 >> 2];
    HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0 + 20 >> 2];
    HEAP32[$$0 >> 2] = HEAP32[$32 >> 2];
    HEAP32[$$0 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
    HEAP32[$$0 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
    HEAP32[$$0 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
    HEAP32[$$0 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
    HEAP32[$$0 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
    HEAP32[$32 >> 2] = HEAP32[$__t$i23 >> 2];
    HEAP32[$32 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
    HEAP32[$32 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
    HEAP32[$32 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
    HEAP32[$32 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
    HEAP32[$32 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($1, $32) | 0) {
     HEAP32[$__t$i23 >> 2] = HEAP32[$32 >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
     HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$32 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$32 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$32 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
     HEAP32[$32 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
     HEAP32[$32 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
     HEAP32[$1 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$1 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$1 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$1 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$1 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$1 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $__n_swaps$0 = 2;
    } else $__n_swaps$0 = 1;
   } while (0);
   do if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$0, $32) | 0) {
    $__j$3 = $1;
    $__n_swaps$3 = $__n_swaps$0;
   } else {
    $__j$0 = $1;
    while (1) {
     $59 = $__j$0 + -24 | 0;
     if (($$0 | 0) == ($59 | 0)) break;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($59, $32) | 0) {
      $$lcssa216 = $59;
      label = 51;
      break;
     } else $__j$0 = $59;
    }
    if ((label | 0) == 51) {
     label = 0;
     HEAP32[$__t$i23 >> 2] = HEAP32[$$0 >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0 + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0 + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0 + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0 + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0 + 20 >> 2];
     HEAP32[$$0 >> 2] = HEAP32[$$lcssa216 >> 2];
     HEAP32[$$0 + 4 >> 2] = HEAP32[$$lcssa216 + 4 >> 2];
     HEAP32[$$0 + 8 >> 2] = HEAP32[$$lcssa216 + 8 >> 2];
     HEAP32[$$0 + 12 >> 2] = HEAP32[$$lcssa216 + 12 >> 2];
     HEAP32[$$0 + 16 >> 2] = HEAP32[$$lcssa216 + 16 >> 2];
     HEAP32[$$0 + 20 >> 2] = HEAP32[$$lcssa216 + 20 >> 2];
     HEAP32[$$lcssa216 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$$lcssa216 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$$lcssa216 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$$lcssa216 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$$lcssa216 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$$lcssa216 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $__j$3 = $$lcssa216;
     $__n_swaps$3 = $__n_swaps$0 + 1 | 0;
     break;
    }
    $61 = $$0 + 24 | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$0, $1) | 0) $__i$1 = $61; else {
     if (($61 | 0) == ($1 | 0)) {
      label = 69;
      break L1;
     } else {
      $106 = $$0;
      $__i$057 = $61;
     }
     while (1) {
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$0, $__i$057) | 0) {
       $$lcssa = $106;
       $__i$057$lcssa = $__i$057;
       break;
      }
      $68 = $__i$057 + 24 | 0;
      if (($68 | 0) == ($1 | 0)) {
       label = 69;
       break L1;
      } else {
       $106$phi = $__i$057;
       $__i$057 = $68;
       $106 = $106$phi;
      }
     }
     HEAP32[$__t$i23 >> 2] = HEAP32[$__i$057$lcssa >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$__i$057$lcssa + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$__i$057$lcssa + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$__i$057$lcssa + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$__i$057$lcssa + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$__i$057$lcssa + 20 >> 2];
     HEAP32[$__i$057$lcssa >> 2] = HEAP32[$1 >> 2];
     HEAP32[$__i$057$lcssa + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$__i$057$lcssa + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$__i$057$lcssa + 12 >> 2] = HEAP32[$1 + 12 >> 2];
     HEAP32[$__i$057$lcssa + 16 >> 2] = HEAP32[$1 + 16 >> 2];
     HEAP32[$__i$057$lcssa + 20 >> 2] = HEAP32[$1 + 20 >> 2];
     HEAP32[$1 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$1 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$1 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$1 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$1 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$1 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $__i$1 = $$lcssa + 48 | 0;
    }
    if (($__i$1 | 0) == ($1 | 0)) {
     label = 69;
     break L1;
    } else {
     $__i$2$ph = $__i$1;
     $__j$1$ph = $1;
    }
    while (1) {
     $__i$2 = $__i$2$ph;
     while (1) {
      $73 = $__i$2 + 24 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$0, $__i$2) | 0) {
       $$lcssa219 = $73;
       $__i$2$lcssa = $__i$2;
       break;
      } else $__i$2 = $73;
     }
     $__j$2 = $__j$1$ph;
     while (1) {
      $75 = $__j$2 + -24 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$0, $75) | 0) $__j$2 = $75; else {
       $$lcssa220 = $75;
       break;
      }
     }
     if ($__i$2$lcssa >>> 0 >= $$lcssa220 >>> 0) {
      $$0 = $__i$2$lcssa;
      continue L3;
     };
     HEAP32[$__t$i23 >> 2] = HEAP32[$__i$2$lcssa >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$__i$2$lcssa + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$__i$2$lcssa + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$__i$2$lcssa + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$__i$2$lcssa + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$__i$2$lcssa + 20 >> 2];
     HEAP32[$__i$2$lcssa >> 2] = HEAP32[$$lcssa220 >> 2];
     HEAP32[$__i$2$lcssa + 4 >> 2] = HEAP32[$$lcssa220 + 4 >> 2];
     HEAP32[$__i$2$lcssa + 8 >> 2] = HEAP32[$$lcssa220 + 8 >> 2];
     HEAP32[$__i$2$lcssa + 12 >> 2] = HEAP32[$$lcssa220 + 12 >> 2];
     HEAP32[$__i$2$lcssa + 16 >> 2] = HEAP32[$$lcssa220 + 16 >> 2];
     HEAP32[$__i$2$lcssa + 20 >> 2] = HEAP32[$$lcssa220 + 20 >> 2];
     HEAP32[$$lcssa220 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$$lcssa220 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$$lcssa220 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$$lcssa220 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$$lcssa220 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$$lcssa220 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $__i$2$ph = $$lcssa219;
     $__j$1$ph = $$lcssa220;
    }
   } while (0);
   $81 = $$0 + 24 | 0;
   L48 : do if ($81 >>> 0 < $__j$3 >>> 0) {
    $__i$3$ph = $81;
    $__j$4$ph = $__j$3;
    $__m$0$ph = $32;
    $__n_swaps$4$ph = $__n_swaps$3;
    while (1) {
     $__i$3 = $__i$3$ph;
     while (1) {
      $85 = $__i$3 + 24 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($__i$3, $__m$0$ph) | 0) $__i$3 = $85; else {
       $$lcssa221 = $85;
       $__i$3$lcssa = $__i$3;
       break;
      }
     }
     $__j$5 = $__j$4$ph;
     while (1) {
      $87 = $__j$5 + -24 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($87, $__m$0$ph) | 0) {
       $$lcssa222 = $87;
       break;
      } else $__j$5 = $87;
     }
     if ($__i$3$lcssa >>> 0 > $$lcssa222 >>> 0) {
      $__i$4 = $__i$3$lcssa;
      $__m$2 = $__m$0$ph;
      $__n_swaps$5 = $__n_swaps$4$ph;
      break L48;
     };
     HEAP32[$__t$i23 >> 2] = HEAP32[$__i$3$lcssa >> 2];
     HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$__i$3$lcssa + 4 >> 2];
     HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$__i$3$lcssa + 8 >> 2];
     HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$__i$3$lcssa + 12 >> 2];
     HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$__i$3$lcssa + 16 >> 2];
     HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$__i$3$lcssa + 20 >> 2];
     HEAP32[$__i$3$lcssa >> 2] = HEAP32[$$lcssa222 >> 2];
     HEAP32[$__i$3$lcssa + 4 >> 2] = HEAP32[$$lcssa222 + 4 >> 2];
     HEAP32[$__i$3$lcssa + 8 >> 2] = HEAP32[$$lcssa222 + 8 >> 2];
     HEAP32[$__i$3$lcssa + 12 >> 2] = HEAP32[$$lcssa222 + 12 >> 2];
     HEAP32[$__i$3$lcssa + 16 >> 2] = HEAP32[$$lcssa222 + 16 >> 2];
     HEAP32[$__i$3$lcssa + 20 >> 2] = HEAP32[$$lcssa222 + 20 >> 2];
     HEAP32[$$lcssa222 >> 2] = HEAP32[$__t$i23 >> 2];
     HEAP32[$$lcssa222 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
     HEAP32[$$lcssa222 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
     HEAP32[$$lcssa222 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
     HEAP32[$$lcssa222 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
     HEAP32[$$lcssa222 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
     $__i$3$ph = $$lcssa221;
     $__j$4$ph = $$lcssa222;
     $__m$0$ph = ($__m$0$ph | 0) == ($__i$3$lcssa | 0) ? $$lcssa222 : $__m$0$ph;
     $__n_swaps$4$ph = $__n_swaps$4$ph + 1 | 0;
    }
   } else {
    $__i$4 = $81;
    $__m$2 = $32;
    $__n_swaps$5 = $__n_swaps$3;
   } while (0);
   if (($__i$4 | 0) == ($__m$2 | 0)) $__n_swaps$6 = $__n_swaps$5; else if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($__m$2, $__i$4) | 0) {
    HEAP32[$__t$i23 >> 2] = HEAP32[$__i$4 >> 2];
    HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$__i$4 + 4 >> 2];
    HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$__i$4 + 8 >> 2];
    HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$__i$4 + 12 >> 2];
    HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$__i$4 + 16 >> 2];
    HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$__i$4 + 20 >> 2];
    HEAP32[$__i$4 >> 2] = HEAP32[$__m$2 >> 2];
    HEAP32[$__i$4 + 4 >> 2] = HEAP32[$__m$2 + 4 >> 2];
    HEAP32[$__i$4 + 8 >> 2] = HEAP32[$__m$2 + 8 >> 2];
    HEAP32[$__i$4 + 12 >> 2] = HEAP32[$__m$2 + 12 >> 2];
    HEAP32[$__i$4 + 16 >> 2] = HEAP32[$__m$2 + 16 >> 2];
    HEAP32[$__i$4 + 20 >> 2] = HEAP32[$__m$2 + 20 >> 2];
    HEAP32[$__m$2 >> 2] = HEAP32[$__t$i23 >> 2];
    HEAP32[$__m$2 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
    HEAP32[$__m$2 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
    HEAP32[$__m$2 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
    HEAP32[$__m$2 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
    HEAP32[$__m$2 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
    $__n_swaps$6 = $__n_swaps$5 + 1 | 0;
   } else $__n_swaps$6 = $__n_swaps$5;
   if (!$__n_swaps$6) {
    $97 = __ZNSt3__127__insertion_sort_incompleteIRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEbT0_SA_T_($$0, $__i$4, $__comp) | 0;
    $98 = $__i$4 + 24 | 0;
    if (__ZNSt3__127__insertion_sort_incompleteIRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEbT0_SA_T_($98, $$01$ph, $__comp) | 0) {
     label = 64;
     break;
    }
    if ($97) {
     $$0 = $98;
     continue;
    }
   }
   $100 = $__i$4;
   if (($100 - $2 | 0) >= ($0 - $100 | 0)) {
    $$0$lcssa230 = $$0;
    $__i$4$lcssa232 = $__i$4;
    label = 68;
    break;
   }
   __ZNSt3__16__sortIRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEvT0_SA_T_($$0, $__i$4, $__comp);
   $$0 = $__i$4 + 24 | 0;
  }
  if ((label | 0) == 64) {
   label = 0;
   if ($97) {
    label = 69;
    break;
   } else {
    $$0$ph = $$0;
    $$01$ph = $__i$4;
    continue;
   }
  } else if ((label | 0) == 68) {
   label = 0;
   __ZNSt3__16__sortIRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEvT0_SA_T_($__i$4$lcssa232 + 24 | 0, $$01$ph, $__comp);
   $$0$ph = $$0$lcssa230;
   $$01$ph = $__i$4$lcssa232;
   continue;
  }
 }
 if ((label | 0) == 4) {
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$lcssa243, $$0$lcssa223) | 0)) {
   STACKTOP = sp;
   return;
  };
  HEAP32[$__t$i23 >> 2] = HEAP32[$$0$lcssa223 >> 2];
  HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0$lcssa223 + 4 >> 2];
  HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0$lcssa223 + 8 >> 2];
  HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0$lcssa223 + 12 >> 2];
  HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0$lcssa223 + 16 >> 2];
  HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0$lcssa223 + 20 >> 2];
  HEAP32[$$0$lcssa223 >> 2] = HEAP32[$$lcssa251 >> 2];
  HEAP32[$$0$lcssa223 + 4 >> 2] = HEAP32[$$lcssa251 + 4 >> 2];
  HEAP32[$$0$lcssa223 + 8 >> 2] = HEAP32[$$lcssa251 + 8 >> 2];
  HEAP32[$$0$lcssa223 + 12 >> 2] = HEAP32[$$lcssa251 + 12 >> 2];
  HEAP32[$$0$lcssa223 + 16 >> 2] = HEAP32[$$lcssa251 + 16 >> 2];
  HEAP32[$$0$lcssa223 + 20 >> 2] = HEAP32[$$lcssa251 + 20 >> 2];
  HEAP32[$$lcssa251 >> 2] = HEAP32[$__t$i23 >> 2];
  HEAP32[$$lcssa251 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
  HEAP32[$$lcssa251 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
  HEAP32[$$lcssa251 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
  HEAP32[$$lcssa251 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
  HEAP32[$$lcssa251 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 6) {
  $7 = $$0$lcssa224 + 24 | 0;
  $9 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($7, $$0$lcssa224) | 0;
  $11 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$lcssa244, $7) | 0;
  if (!$9) {
   if (!$11) {
    STACKTOP = sp;
    return;
   };
   HEAP32[$__t$i23 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
   HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
   HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
   HEAP32[$7 >> 2] = HEAP32[$$lcssa252 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$$lcssa252 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$$lcssa252 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$$lcssa252 + 12 >> 2];
   HEAP32[$7 + 16 >> 2] = HEAP32[$$lcssa252 + 16 >> 2];
   HEAP32[$7 + 20 >> 2] = HEAP32[$$lcssa252 + 20 >> 2];
   HEAP32[$$lcssa252 >> 2] = HEAP32[$__t$i23 >> 2];
   HEAP32[$$lcssa252 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
   HEAP32[$$lcssa252 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
   HEAP32[$$lcssa252 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
   HEAP32[$$lcssa252 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
   HEAP32[$$lcssa252 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($7, $$0$lcssa224) | 0)) {
    STACKTOP = sp;
    return;
   };
   HEAP32[$__t$i23 >> 2] = HEAP32[$$0$lcssa224 >> 2];
   HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0$lcssa224 + 4 >> 2];
   HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0$lcssa224 + 8 >> 2];
   HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0$lcssa224 + 12 >> 2];
   HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0$lcssa224 + 16 >> 2];
   HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0$lcssa224 + 20 >> 2];
   HEAP32[$$0$lcssa224 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$0$lcssa224 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$$0$lcssa224 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$$0$lcssa224 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
   HEAP32[$$0$lcssa224 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
   HEAP32[$$0$lcssa224 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
   HEAP32[$7 >> 2] = HEAP32[$__t$i23 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
   HEAP32[$7 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
   HEAP32[$7 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
   STACKTOP = sp;
   return;
  }
  if ($11) {
   HEAP32[$__t$i23 >> 2] = HEAP32[$$0$lcssa224 >> 2];
   HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0$lcssa224 + 4 >> 2];
   HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0$lcssa224 + 8 >> 2];
   HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0$lcssa224 + 12 >> 2];
   HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0$lcssa224 + 16 >> 2];
   HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0$lcssa224 + 20 >> 2];
   HEAP32[$$0$lcssa224 >> 2] = HEAP32[$$lcssa252 >> 2];
   HEAP32[$$0$lcssa224 + 4 >> 2] = HEAP32[$$lcssa252 + 4 >> 2];
   HEAP32[$$0$lcssa224 + 8 >> 2] = HEAP32[$$lcssa252 + 8 >> 2];
   HEAP32[$$0$lcssa224 + 12 >> 2] = HEAP32[$$lcssa252 + 12 >> 2];
   HEAP32[$$0$lcssa224 + 16 >> 2] = HEAP32[$$lcssa252 + 16 >> 2];
   HEAP32[$$0$lcssa224 + 20 >> 2] = HEAP32[$$lcssa252 + 20 >> 2];
   HEAP32[$$lcssa252 >> 2] = HEAP32[$__t$i23 >> 2];
   HEAP32[$$lcssa252 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
   HEAP32[$$lcssa252 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
   HEAP32[$$lcssa252 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
   HEAP32[$$lcssa252 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
   HEAP32[$$lcssa252 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
   STACKTOP = sp;
   return;
  };
  HEAP32[$__t$i23 >> 2] = HEAP32[$$0$lcssa224 >> 2];
  HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0$lcssa224 + 4 >> 2];
  HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0$lcssa224 + 8 >> 2];
  HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0$lcssa224 + 12 >> 2];
  HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0$lcssa224 + 16 >> 2];
  HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0$lcssa224 + 20 >> 2];
  HEAP32[$$0$lcssa224 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$0$lcssa224 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$$0$lcssa224 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$$0$lcssa224 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
  HEAP32[$$0$lcssa224 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
  HEAP32[$$0$lcssa224 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
  HEAP32[$7 >> 2] = HEAP32[$__t$i23 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
  HEAP32[$7 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
  HEAP32[$7 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
  HEAP32[$7 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$lcssa244, $7) | 0)) {
   STACKTOP = sp;
   return;
  };
  HEAP32[$__t$i23 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
  HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
  HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
  HEAP32[$7 >> 2] = HEAP32[$$lcssa252 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$$lcssa252 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$$lcssa252 + 8 >> 2];
  HEAP32[$7 + 12 >> 2] = HEAP32[$$lcssa252 + 12 >> 2];
  HEAP32[$7 + 16 >> 2] = HEAP32[$$lcssa252 + 16 >> 2];
  HEAP32[$7 + 20 >> 2] = HEAP32[$$lcssa252 + 20 >> 2];
  HEAP32[$$lcssa252 >> 2] = HEAP32[$__t$i23 >> 2];
  HEAP32[$$lcssa252 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
  HEAP32[$$lcssa252 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
  HEAP32[$$lcssa252 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
  HEAP32[$$lcssa252 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
  HEAP32[$$lcssa252 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 14) {
  __ZNSt3__17__sort4IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEjT0_SA_SA_SA_T_($$0$lcssa225, $$0$lcssa225 + 24 | 0, $$0$lcssa225 + 48 | 0, $$lcssa245, $__comp) | 0;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 15) {
  $18 = $$0$lcssa226 + 24 | 0;
  $19 = $$0$lcssa226 + 48 | 0;
  $20 = $$0$lcssa226 + 72 | 0;
  __ZNSt3__17__sort4IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEjT0_SA_SA_SA_T_($$0$lcssa226, $18, $19, $20, $__comp) | 0;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$lcssa246, $20) | 0)) {
   STACKTOP = sp;
   return;
  };
  HEAP32[$__t$i23 >> 2] = HEAP32[$20 >> 2];
  HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
  HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
  HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$20 + 12 >> 2];
  HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$20 + 16 >> 2];
  HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$20 + 20 >> 2];
  HEAP32[$20 >> 2] = HEAP32[$$lcssa254 >> 2];
  HEAP32[$20 + 4 >> 2] = HEAP32[$$lcssa254 + 4 >> 2];
  HEAP32[$20 + 8 >> 2] = HEAP32[$$lcssa254 + 8 >> 2];
  HEAP32[$20 + 12 >> 2] = HEAP32[$$lcssa254 + 12 >> 2];
  HEAP32[$20 + 16 >> 2] = HEAP32[$$lcssa254 + 16 >> 2];
  HEAP32[$20 + 20 >> 2] = HEAP32[$$lcssa254 + 20 >> 2];
  HEAP32[$$lcssa254 >> 2] = HEAP32[$__t$i23 >> 2];
  HEAP32[$$lcssa254 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
  HEAP32[$$lcssa254 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
  HEAP32[$$lcssa254 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
  HEAP32[$$lcssa254 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
  HEAP32[$$lcssa254 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($20, $19) | 0)) {
   STACKTOP = sp;
   return;
  };
  HEAP32[$__t$i23 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
  HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
  HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
  HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$19 + 16 >> 2];
  HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$19 + 20 >> 2];
  HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
  HEAP32[$19 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
  HEAP32[$19 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
  HEAP32[$19 + 12 >> 2] = HEAP32[$20 + 12 >> 2];
  HEAP32[$19 + 16 >> 2] = HEAP32[$20 + 16 >> 2];
  HEAP32[$19 + 20 >> 2] = HEAP32[$20 + 20 >> 2];
  HEAP32[$20 >> 2] = HEAP32[$__t$i23 >> 2];
  HEAP32[$20 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
  HEAP32[$20 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
  HEAP32[$20 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
  HEAP32[$20 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
  HEAP32[$20 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($19, $18) | 0)) {
   STACKTOP = sp;
   return;
  };
  HEAP32[$__t$i23 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
  HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
  HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
  HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$18 + 16 >> 2];
  HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$18 + 20 >> 2];
  HEAP32[$18 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
  HEAP32[$18 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
  HEAP32[$18 + 16 >> 2] = HEAP32[$19 + 16 >> 2];
  HEAP32[$18 + 20 >> 2] = HEAP32[$19 + 20 >> 2];
  HEAP32[$19 >> 2] = HEAP32[$__t$i23 >> 2];
  HEAP32[$19 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
  HEAP32[$19 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
  HEAP32[$19 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
  HEAP32[$19 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
  HEAP32[$19 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($18, $$0$lcssa226) | 0)) {
   STACKTOP = sp;
   return;
  };
  HEAP32[$__t$i23 >> 2] = HEAP32[$$0$lcssa226 >> 2];
  HEAP32[$__t$i23 + 4 >> 2] = HEAP32[$$0$lcssa226 + 4 >> 2];
  HEAP32[$__t$i23 + 8 >> 2] = HEAP32[$$0$lcssa226 + 8 >> 2];
  HEAP32[$__t$i23 + 12 >> 2] = HEAP32[$$0$lcssa226 + 12 >> 2];
  HEAP32[$__t$i23 + 16 >> 2] = HEAP32[$$0$lcssa226 + 16 >> 2];
  HEAP32[$__t$i23 + 20 >> 2] = HEAP32[$$0$lcssa226 + 20 >> 2];
  HEAP32[$$0$lcssa226 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$$0$lcssa226 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
  HEAP32[$$0$lcssa226 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
  HEAP32[$$0$lcssa226 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
  HEAP32[$$0$lcssa226 + 16 >> 2] = HEAP32[$18 + 16 >> 2];
  HEAP32[$$0$lcssa226 + 20 >> 2] = HEAP32[$18 + 20 >> 2];
  HEAP32[$18 >> 2] = HEAP32[$__t$i23 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$__t$i23 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$__t$i23 + 8 >> 2];
  HEAP32[$18 + 12 >> 2] = HEAP32[$__t$i23 + 12 >> 2];
  HEAP32[$18 + 16 >> 2] = HEAP32[$__t$i23 + 16 >> 2];
  HEAP32[$18 + 20 >> 2] = HEAP32[$__t$i23 + 20 >> 2];
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 21) {
  __ZNSt3__118__insertion_sort_3IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEvT0_SA_T_($$0$lcssa227, $$01$ph$lcssa239, $__comp);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 69) {
  STACKTOP = sp;
  return;
 }
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i118 = 0, $$0$i$i$i$i136 = 0, $$0$i$i$i$i28 = 0, $$0$i$i$i$i43 = 0, $$0$i$i$i$i68 = 0, $$0$i$i$i$i90 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i124 = 0, $$0$i$i1$i$i142 = 0, $$0$i$i1$i$i34 = 0, $$0$i$i1$i$i49 = 0, $$0$i$i1$i$i74 = 0, $$0$i$i1$i$i96 = 0, $$0$i$i105 = 0, $$0$i$i111 = 0, $$0$i$i116 = 0, $$0$i$i133 = 0, $$0$i$i26 = 0, $$0$i$i40 = 0, $$0$i$i42 = 0, $$0$i$i56 = 0, $$0$i$i60 = 0, $$0$i$i65 = 0, $$0$i$i82 = 0, $$0$i$i87 = 0, $$in265 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa248 = 0, $$lcssa294 = 0, $$ph = 0, $$ph240 = 0, $$ph241 = 0, $$pre$i3$i$i126 = 0, $$pre$i3$i$i126190 = 0, $$pre$i3$i$i126192 = 0, $$pre$i3$i$i144203 = 0, $$pre$i3$i$i144204 = 0, $$pre$i3$i$i144270 = 0, $$pre$i3$i$i51 = 0, $$pre$i3$i$i51211 = 0, $$pre$i3$i$i51213 = 0, $$pre$i3$i$i76195$ph = 0, $$pre$i3$i$i76195216 = 0, $$pre$i3$i$i76261 = 0, $$pre$i3$i$i98 = 0, $$pre197 = 0, $$pre198 = 0, $$pre201 = 0, $$pre207 = 0, $0 = 0, $101 = 0, $103 = 0, $113 = 0, $114 = 0, $116 = 0, $129 = 0, $130 = 0, $131 = 0, $141 = 0, $147 = 0, $148 = 0, $15 = 0, $154 = 0, $157 = 0, $159 = 0, $16 = 0, $161 = 0, $163 = 0, $164 = 0, $17 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $187 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $204 = 0, $21 = 0, $212 = 0, $22 = 0, $223 = 0, $226 = 0, $23 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $241 = 0, $25 = 0, $26 = 0, $261 = 0, $262 = 0, $263 = 0, $27 = 0, $271 = 0, $287 = 0, $290 = 0, $291 = 0, $292 = 0, $295 = 0, $30 = 0, $301 = 0, $302 = 0, $308 = 0, $317 = 0, $323 = 0, $325 = 0, $334 = 0, $336 = 0, $337 = 0, $338 = 0, $340 = 0, $341 = 0, $342 = 0, $344 = 0, $348 = 0, $351 = 0, $352 = 0, $356 = 0, $362 = 0, $365 = 0, $376 = 0, $378 = 0, $388 = 0, $389 = 0, $391 = 0, $40 = 0, $401 = 0, $403 = 0, $404 = 0, $405 = 0, $415 = 0, $421 = 0, $423 = 0, $425 = 0, $43 = 0, $436 = 0, $439 = 0, $450 = 0, $452 = 0, $462 = 0, $463 = 0, $465 = 0, $478 = 0, $482 = 0, $484 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $500 = 0, $501 = 0, $514 = 0, $515 = 0, $516 = 0, $518 = 0, $521 = 0, $533 = 0, $543 = 0, $545 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $569 = 0, $57 = 0, $572 = 0, $583 = 0, $585 = 0, $59 = 0, $595 = 0, $596 = 0, $598 = 0, $616 = 0, $618 = 0, $627 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $650 = 0, $651 = 0, $652 = 0, $659 = 0, $660 = 0, $663 = 0, $673 = 0, $676 = 0, $686 = 0, $688 = 0, $702 = 0, $707 = 0, $708 = 0, $709 = 0, $710 = 0, $718 = 0, $72 = 0, $724 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $87 = 0, $90 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__p$0276 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0278 = 0, $__trailing_sign$1 = 0, $__ts = 0, label = 0, sp = 0, $630$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 96 | 0;
 $__gbuf = sp + 104 | 0;
 $__gb = sp + 88 | 0;
 $__gn = sp + 80 | 0;
 $__ge = sp + 76 | 0;
 $__pat = sp + 504 | 0;
 $__dp = sp + 72 | 0;
 $__ts = sp + 68 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $2 = $__gb + 4 | 0;
 HEAP32[$2 >> 2] = 164;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__psn >> 2] = 0;
 HEAP32[$__psn + 4 >> 2] = 0;
 HEAP32[$__psn + 8 >> 2] = 0;
 HEAP32[$__nsn >> 2] = 0;
 HEAP32[$__nsn + 4 >> 2] = 0;
 HEAP32[$__nsn + 8 >> 2] = 0;
 HEAP32[$__spaces >> 2] = 0;
 HEAP32[$__spaces + 4 >> 2] = 0;
 HEAP32[$__spaces + 8 >> 2] = 0;
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd);
 HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
 $15 = $__psn + 4 | 0;
 $16 = $__nsn + 4 | 0;
 $17 = $__nsn + 8 | 0;
 $18 = $__psn + 8 | 0;
 $20 = ($__flags & 512 | 0) != 0;
 $21 = $__sym + 8 | 0;
 $22 = $__sym + 4 | 0;
 $23 = $__spaces + 4 | 0;
 $24 = $__spaces + 8 | 0;
 $25 = $__pat + 3 | 0;
 $26 = $__grp + 4 | 0;
 $727 = $__gbuf;
 $__p$0276 = 0;
 $__trailing_sign$0278 = 0;
 L1 : while (1) {
  $27 = HEAP32[$__b >> 2] | 0;
  do if (!$27) $728 = 1; else {
   $30 = HEAP32[$27 + 12 >> 2] | 0;
   if (($30 | 0) == (HEAP32[$27 + 16 >> 2] | 0)) $$0$i$i$i$i28 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 127]($27) | 0; else $$0$i$i$i$i28 = HEAP32[$30 >> 2] | 0;
   if (($$0$i$i$i$i28 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $728 = 1;
    break;
   } else {
    $728 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $40 = HEAP32[$__e >> 2] | 0;
  do if (!$40) label = 15; else {
   $43 = HEAP32[$40 + 12 >> 2] | 0;
   if (($43 | 0) == (HEAP32[$40 + 16 >> 2] | 0)) $$0$i$i1$i$i34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 36 >> 2] & 127]($40) | 0; else $$0$i$i1$i$i34 = HEAP32[$43 >> 2] | 0;
   if (($$0$i$i1$i$i34 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 15;
    break;
   } else if ($728) {
    $729 = $40;
    break;
   } else {
    $$lcssa248 = $727;
    $__trailing_sign$0$lcssa = $__trailing_sign$0278;
    label = 217;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($728) {
    $$lcssa248 = $727;
    $__trailing_sign$0$lcssa = $__trailing_sign$0278;
    label = 217;
    break;
   } else $729 = 0;
  }
  L25 : do switch (HEAP8[$__pat + $__p$0276 >> 0] | 0) {
  case 1:
   {
    if (($__p$0276 | 0) == 3) {
     $730 = $727;
     $__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $57 = HEAP32[$__b >> 2] | 0;
     $59 = HEAP32[$57 + 12 >> 2] | 0;
     if (($59 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) $$0$i$i40 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 127]($57) | 0; else $$0$i$i40 = HEAP32[$59 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 8192, $$0$i$i40) | 0)) {
      label = 28;
      break L1;
     }
     $72 = HEAP32[$__b >> 2] | 0;
     $73 = $72 + 12 | 0;
     $74 = HEAP32[$73 >> 2] | 0;
     if (($74 | 0) == (HEAP32[$72 + 16 >> 2] | 0)) $$0$i$i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 40 >> 2] & 127]($72) | 0; else {
      HEAP32[$73 >> 2] = $74 + 4;
      $$0$i$i42 = HEAP32[$74 >> 2] | 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces, $$0$i$i42);
     $$pre$i3$i$i51 = $729;
     $101 = $729;
     label = 30;
    }
    break;
   }
  case 0:
   {
    if (($__p$0276 | 0) == 3) {
     $730 = $727;
     $__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $$pre$i3$i$i51 = $729;
     $101 = $729;
     label = 30;
    }
    break;
   }
  case 3:
   {
    $141 = HEAP8[$__psn >> 0] | 0;
    $147 = ($141 & 1) == 0 ? ($141 & 255) >>> 1 : HEAP32[$15 >> 2] | 0;
    $148 = HEAP8[$__nsn >> 0] | 0;
    $154 = ($148 & 1) == 0 ? ($148 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
    if (($147 | 0) == (0 - $154 | 0)) {
     $730 = $727;
     $__trailing_sign$1 = $__trailing_sign$0278;
    } else {
     $157 = ($147 | 0) == 0;
     $159 = HEAP32[$__b >> 2] | 0;
     $161 = HEAP32[$159 + 12 >> 2] | 0;
     $163 = HEAP32[$159 + 16 >> 2] | 0;
     $164 = ($161 | 0) == ($163 | 0);
     if ($157 | ($154 | 0) == 0) {
      if ($164) $$0$i$i82 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$159 >> 2] | 0) + 36 >> 2] & 127]($159) | 0; else $$0$i$i82 = HEAP32[$161 >> 2] | 0;
      if ($157) {
       if (($$0$i$i82 | 0) != (HEAP32[((HEAP8[$__nsn >> 0] & 1) == 0 ? $16 : HEAP32[$17 >> 2] | 0) >> 2] | 0)) {
        $730 = $727;
        $__trailing_sign$1 = $__trailing_sign$0278;
        break L25;
       }
       $202 = HEAP32[$__b >> 2] | 0;
       $203 = $202 + 12 | 0;
       $204 = HEAP32[$203 >> 2] | 0;
       if (($204 | 0) == (HEAP32[$202 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$202 >> 2] | 0) + 40 >> 2] & 127]($202) | 0; else HEAP32[$203 >> 2] = $204 + 4;
       HEAP8[$__neg >> 0] = 1;
       $212 = HEAP8[$__nsn >> 0] | 0;
       $730 = $727;
       $__trailing_sign$1 = (($212 & 1) == 0 ? ($212 & 255) >>> 1 : HEAP32[$16 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0278;
       break L25;
      }
      if (($$0$i$i82 | 0) != (HEAP32[((HEAP8[$__psn >> 0] & 1) == 0 ? $15 : HEAP32[$18 >> 2] | 0) >> 2] | 0)) {
       HEAP8[$__neg >> 0] = 1;
       $730 = $727;
       $__trailing_sign$1 = $__trailing_sign$0278;
       break L25;
      }
      $177 = HEAP32[$__b >> 2] | 0;
      $178 = $177 + 12 | 0;
      $179 = HEAP32[$178 >> 2] | 0;
      if (($179 | 0) == (HEAP32[$177 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$177 >> 2] | 0) + 40 >> 2] & 127]($177) | 0; else HEAP32[$178 >> 2] = $179 + 4;
      $187 = HEAP8[$__psn >> 0] | 0;
      $730 = $727;
      $__trailing_sign$1 = (($187 & 1) == 0 ? ($187 & 255) >>> 1 : HEAP32[$15 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0278;
      break L25;
     }
     if ($164) {
      $223 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$159 >> 2] | 0) + 36 >> 2] & 127]($159) | 0;
      $$pre207 = HEAP32[$__b >> 2] | 0;
      $$0$i$i105 = $223;
      $226 = HEAP8[$__psn >> 0] | 0;
      $233 = $$pre207;
      $235 = HEAP32[$$pre207 + 12 >> 2] | 0;
      $236 = HEAP32[$$pre207 + 16 >> 2] | 0;
     } else {
      $$0$i$i105 = HEAP32[$161 >> 2] | 0;
      $226 = $141;
      $233 = $159;
      $235 = $161;
      $236 = $163;
     }
     $232 = $233 + 12 | 0;
     $234 = ($235 | 0) == ($236 | 0);
     if (($$0$i$i105 | 0) == (HEAP32[(($226 & 1) == 0 ? $15 : HEAP32[$18 >> 2] | 0) >> 2] | 0)) {
      if ($234) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$233 >> 2] | 0) + 40 >> 2] & 127]($233) | 0; else HEAP32[$232 >> 2] = $235 + 4;
      $241 = HEAP8[$__psn >> 0] | 0;
      $730 = $727;
      $__trailing_sign$1 = (($241 & 1) == 0 ? ($241 & 255) >>> 1 : HEAP32[$15 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0278;
      break L25;
     }
     if ($234) $$0$i$i111 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$233 >> 2] | 0) + 36 >> 2] & 127]($233) | 0; else $$0$i$i111 = HEAP32[$235 >> 2] | 0;
     if (($$0$i$i111 | 0) != (HEAP32[((HEAP8[$__nsn >> 0] & 1) == 0 ? $16 : HEAP32[$17 >> 2] | 0) >> 2] | 0)) {
      label = 86;
      break L1;
     }
     $261 = HEAP32[$__b >> 2] | 0;
     $262 = $261 + 12 | 0;
     $263 = HEAP32[$262 >> 2] | 0;
     if (($263 | 0) == (HEAP32[$261 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$261 >> 2] | 0) + 40 >> 2] & 127]($261) | 0; else HEAP32[$262 >> 2] = $263 + 4;
     HEAP8[$__neg >> 0] = 1;
     $271 = HEAP8[$__nsn >> 0] | 0;
     $730 = $727;
     $__trailing_sign$1 = (($271 & 1) == 0 ? ($271 & 255) >>> 1 : HEAP32[$16 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0278;
    }
    break;
   }
  case 2:
   {
    if (!($__p$0276 >>> 0 < 2 | ($__trailing_sign$0278 | 0) != 0)) if (!($20 | ($__p$0276 | 0) == 2 & (HEAP8[$25 >> 0] | 0) != 0)) {
     $730 = $727;
     $__trailing_sign$1 = 0;
     break L25;
    }
    $287 = HEAP8[$__sym >> 0] | 0;
    $290 = HEAP32[$21 >> 2] | 0;
    $291 = ($287 & 1) == 0 ? $22 : $290;
    $292 = $291;
    L86 : do if (!$__p$0276) {
     $$ph = $290;
     $$ph240 = $287;
     $$ph241 = $292;
    } else if ((HEAPU8[$__pat + ($__p$0276 + -1) >> 0] | 0) < 2) {
     $308 = ($287 & 1) == 0;
     L89 : do if (($291 | 0) == (($308 ? $22 : $290) + (($308 ? ($287 & 255) >>> 1 : HEAP32[$22 >> 2] | 0) << 2) | 0)) {
      $334 = $287;
      $337 = $290;
      $340 = $292;
     } else {
      $317 = $291;
      $732 = $292;
      while (1) {
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 8192, HEAP32[$317 >> 2] | 0) | 0)) {
        $$lcssa294 = $732;
        break;
       }
       $317 = $317 + 4 | 0;
       $323 = $317;
       $$pre197 = HEAP8[$__sym >> 0] | 0;
       $$pre198 = HEAP32[$21 >> 2] | 0;
       $325 = ($$pre197 & 1) == 0;
       if (($317 | 0) == (($325 ? $22 : $$pre198) + (($325 ? ($$pre197 & 255) >>> 1 : HEAP32[$22 >> 2] | 0) << 2) | 0)) {
        $334 = $$pre197;
        $337 = $$pre198;
        $340 = $323;
        break L89;
       } else $732 = $323;
      }
      $334 = HEAP8[$__sym >> 0] | 0;
      $337 = HEAP32[$21 >> 2] | 0;
      $340 = $$lcssa294;
     } while (0);
     $336 = ($334 & 1) == 0 ? $22 : $337;
     $338 = $336;
     $341 = $340 - $338 >> 2;
     $342 = HEAP8[$__spaces >> 0] | 0;
     $344 = ($342 & 1) == 0;
     $348 = $344 ? ($342 & 255) >>> 1 : HEAP32[$23 >> 2] | 0;
     if ($348 >>> 0 < $341 >>> 0) {
      $$ph = $337;
      $$ph240 = $334;
      $$ph241 = $338;
     } else {
      $351 = $344 ? $23 : HEAP32[$24 >> 2] | 0;
      $352 = $351 + ($348 << 2) | 0;
      if (!$341) {
       $$ph = $337;
       $$ph240 = $334;
       $$ph241 = $340;
      } else {
       $$in265 = $336;
       $356 = $351 + ($348 - $341 << 2) | 0;
       while (1) {
        if ((HEAP32[$356 >> 2] | 0) != (HEAP32[$$in265 >> 2] | 0)) {
         $$ph = $337;
         $$ph240 = $334;
         $$ph241 = $338;
         break L86;
        }
        $356 = $356 + 4 | 0;
        if (($356 | 0) == ($352 | 0)) {
         $$ph = $337;
         $$ph240 = $334;
         $$ph241 = $340;
         break;
        } else $$in265 = $$in265 + 4 | 0;
       }
      }
     }
    } else {
     $$ph = $290;
     $$ph240 = $287;
     $$ph241 = $292;
    } while (0);
    $295 = ($$ph240 & 1) == 0;
    $301 = ($295 ? $22 : $$ph) + (($295 ? ($$ph240 & 255) >>> 1 : HEAP32[$22 >> 2] | 0) << 2) | 0;
    $302 = $$ph241;
    L101 : do if (($302 | 0) == ($301 | 0)) $$lcssa183 = $301; else {
     $$pre$i3$i$i144270 = $729;
     $376 = $729;
     $401 = $302;
     while (1) {
      $362 = HEAP32[$__b >> 2] | 0;
      do if (!$362) $388 = 1; else {
       $365 = HEAP32[$362 + 12 >> 2] | 0;
       if (($365 | 0) == (HEAP32[$362 + 16 >> 2] | 0)) $$0$i$i$i$i136 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$362 >> 2] | 0) + 36 >> 2] & 127]($362) | 0; else $$0$i$i$i$i136 = HEAP32[$365 >> 2] | 0;
       if (($$0$i$i$i$i136 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $388 = 1;
        break;
       } else {
        $388 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$376) {
       $$pre$i3$i$i144204 = $$pre$i3$i$i144270;
       label = 114;
      } else {
       $378 = HEAP32[$376 + 12 >> 2] | 0;
       if (($378 | 0) == (HEAP32[$376 + 16 >> 2] | 0)) $$0$i$i1$i$i142 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$376 >> 2] | 0) + 36 >> 2] & 127]($376) | 0; else $$0$i$i1$i$i142 = HEAP32[$378 >> 2] | 0;
       if (($$0$i$i1$i$i142 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i3$i$i144204 = 0;
        label = 114;
        break;
       } else if ($388 ^ ($$pre$i3$i$i144270 | 0) == 0) {
        $$pre$i3$i$i144203 = $$pre$i3$i$i144270;
        $733 = $$pre$i3$i$i144270;
        break;
       } else {
        $$lcssa183 = $401;
        break L101;
       }
      } while (0);
      if ((label | 0) == 114) {
       label = 0;
       if ($388) {
        $$lcssa183 = $401;
        break L101;
       } else {
        $$pre$i3$i$i144203 = $$pre$i3$i$i144204;
        $733 = 0;
       }
      }
      $389 = HEAP32[$__b >> 2] | 0;
      $391 = HEAP32[$389 + 12 >> 2] | 0;
      if (($391 | 0) == (HEAP32[$389 + 16 >> 2] | 0)) $$0$i$i133 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$389 >> 2] | 0) + 36 >> 2] & 127]($389) | 0; else $$0$i$i133 = HEAP32[$391 >> 2] | 0;
      if (($$0$i$i133 | 0) != (HEAP32[$401 >> 2] | 0)) {
       $$lcssa183 = $401;
       break L101;
      }
      $403 = HEAP32[$__b >> 2] | 0;
      $404 = $403 + 12 | 0;
      $405 = HEAP32[$404 >> 2] | 0;
      if (($405 | 0) == (HEAP32[$403 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$403 >> 2] | 0) + 40 >> 2] & 127]($403) | 0; else HEAP32[$404 >> 2] = $405 + 4;
      $401 = $401 + 4 | 0;
      $$pre201 = HEAP8[$__sym >> 0] | 0;
      $415 = ($$pre201 & 1) == 0;
      $421 = ($415 ? $22 : HEAP32[$21 >> 2] | 0) + (($415 ? ($$pre201 & 255) >>> 1 : HEAP32[$22 >> 2] | 0) << 2) | 0;
      if (($401 | 0) == ($421 | 0)) {
       $$lcssa183 = $421;
       break;
      } else {
       $$pre$i3$i$i144270 = $$pre$i3$i$i144203;
       $376 = $733;
      }
     }
    } while (0);
    if ($20) {
     $423 = HEAP8[$__sym >> 0] | 0;
     $425 = ($423 & 1) == 0;
     if (($$lcssa183 | 0) == (($425 ? $22 : HEAP32[$21 >> 2] | 0) + (($425 ? ($423 & 255) >>> 1 : HEAP32[$22 >> 2] | 0) << 2) | 0)) {
      $730 = $727;
      $__trailing_sign$1 = $__trailing_sign$0278;
     } else {
      label = 126;
      break L1;
     }
    } else {
     $730 = $727;
     $__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
  case 4:
   {
    $56 = HEAP32[$__ts >> 2] | 0;
    $$pre$i3$i$i126 = $729;
    $450 = $729;
    $496 = $727;
    $__ng$0 = 0;
    L138 : while (1) {
     $436 = HEAP32[$__b >> 2] | 0;
     do if (!$436) $462 = 1; else {
      $439 = HEAP32[$436 + 12 >> 2] | 0;
      if (($439 | 0) == (HEAP32[$436 + 16 >> 2] | 0)) $$0$i$i$i$i118 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$436 >> 2] | 0) + 36 >> 2] & 127]($436) | 0; else $$0$i$i$i$i118 = HEAP32[$439 >> 2] | 0;
      if (($$0$i$i$i$i118 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $462 = 1;
       break;
      } else {
       $462 = (HEAP32[$__b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$450) {
      $$pre$i3$i$i126190 = $$pre$i3$i$i126;
      label = 140;
     } else {
      $452 = HEAP32[$450 + 12 >> 2] | 0;
      if (($452 | 0) == (HEAP32[$450 + 16 >> 2] | 0)) $$0$i$i1$i$i124 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$450 >> 2] | 0) + 36 >> 2] & 127]($450) | 0; else $$0$i$i1$i$i124 = HEAP32[$452 >> 2] | 0;
      if (($$0$i$i1$i$i124 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i3$i$i126190 = 0;
       label = 140;
       break;
      } else if ($462 ^ ($$pre$i3$i$i126 | 0) == 0) {
       $$pre$i3$i$i126192 = $$pre$i3$i$i126;
       $734 = $$pre$i3$i$i126;
       break;
      } else {
       $$lcssa = $496;
       $$pre$i3$i$i98 = $$pre$i3$i$i126;
       $__ng$0$lcssa = $__ng$0;
       break L138;
      }
     } while (0);
     if ((label | 0) == 140) {
      label = 0;
      if ($462) {
       $$lcssa = $496;
       $$pre$i3$i$i98 = $$pre$i3$i$i126190;
       $__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i3$i$i126192 = $$pre$i3$i$i126190;
       $734 = 0;
      }
     }
     $463 = HEAP32[$__b >> 2] | 0;
     $465 = HEAP32[$463 + 12 >> 2] | 0;
     if (($465 | 0) == (HEAP32[$463 + 16 >> 2] | 0)) $$0$i$i116 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$463 >> 2] | 0) + 36 >> 2] & 127]($463) | 0; else $$0$i$i116 = HEAP32[$465 >> 2] | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 2048, $$0$i$i116) | 0) {
      $478 = HEAP32[$__wn >> 2] | 0;
      if (($478 | 0) == (HEAP32[$0 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb, $__wn, $0);
       $482 = HEAP32[$__wn >> 2] | 0;
      } else $482 = $478;
      HEAP32[$__wn >> 2] = $482 + 4;
      HEAP32[$482 >> 2] = $$0$i$i116;
      $735 = $496;
      $__ng$1 = $__ng$0 + 1 | 0;
     } else {
      $484 = HEAP8[$__grp >> 0] | 0;
      if (!(($$0$i$i116 | 0) == ($56 | 0) & (($__ng$0 | 0) != 0 ? ((($484 & 1) == 0 ? ($484 & 255) >>> 1 : HEAP32[$26 >> 2] | 0) | 0) != 0 : 0))) {
       $$lcssa = $496;
       $$pre$i3$i$i98 = $$pre$i3$i$i126192;
       $__ng$0$lcssa = $__ng$0;
       break;
      }
      if (($496 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb, $__gn, $__ge);
       $498 = HEAP32[$__gn >> 2] | 0;
      } else $498 = $496;
      $497 = $498 + 4 | 0;
      HEAP32[$__gn >> 2] = $497;
      HEAP32[$498 >> 2] = $__ng$0;
      $735 = $497;
      $__ng$1 = 0;
     }
     $499 = HEAP32[$__b >> 2] | 0;
     $500 = $499 + 12 | 0;
     $501 = HEAP32[$500 >> 2] | 0;
     if (($501 | 0) == (HEAP32[$499 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$499 >> 2] | 0) + 40 >> 2] & 127]($499) | 0;
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;
      $450 = $734;
      $496 = $735;
      $__ng$0 = $__ng$1;
      continue;
     } else {
      HEAP32[$500 >> 2] = $501 + 4;
      $$pre$i3$i$i126 = $$pre$i3$i$i126192;
      $450 = $734;
      $496 = $735;
      $__ng$0 = $__ng$1;
      continue;
     }
    }
    if (($__ng$0$lcssa | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa | 0) : 0) {
     if (($$lcssa | 0) == (HEAP32[$__ge >> 2] | 0)) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb, $__gn, $__ge);
      $515 = HEAP32[$__gn >> 2] | 0;
     } else $515 = $$lcssa;
     $514 = $515 + 4 | 0;
     HEAP32[$__gn >> 2] = $514;
     HEAP32[$515 >> 2] = $__ng$0$lcssa;
     $736 = $514;
    } else $736 = $$lcssa;
    $516 = HEAP32[$__fd >> 2] | 0;
    if (($516 | 0) > 0) {
     $518 = HEAP32[$__b >> 2] | 0;
     do if (!$518) $737 = 1; else {
      $521 = HEAP32[$518 + 12 >> 2] | 0;
      if (($521 | 0) == (HEAP32[$518 + 16 >> 2] | 0)) $$0$i$i$i$i90 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$518 >> 2] | 0) + 36 >> 2] & 127]($518) | 0; else $$0$i$i$i$i90 = HEAP32[$521 >> 2] | 0;
      if (($$0$i$i$i$i90 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $737 = 1;
       break;
      } else {
       $737 = (HEAP32[$__b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$$pre$i3$i$i98) label = 174; else {
      $533 = HEAP32[$$pre$i3$i$i98 + 12 >> 2] | 0;
      if (($533 | 0) == (HEAP32[$$pre$i3$i$i98 + 16 >> 2] | 0)) $$0$i$i1$i$i96 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i98 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i98) | 0; else $$0$i$i1$i$i96 = HEAP32[$533 >> 2] | 0;
      if (($$0$i$i1$i$i96 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 174;
       break;
      } else if ($737) {
       $738 = $$pre$i3$i$i98;
       break;
      } else {
       label = 180;
       break L1;
      }
     } while (0);
     if ((label | 0) == 174) {
      label = 0;
      if ($737) {
       label = 180;
       break L1;
      } else $738 = 0;
     }
     $543 = HEAP32[$__b >> 2] | 0;
     $545 = HEAP32[$543 + 12 >> 2] | 0;
     if (($545 | 0) == (HEAP32[$543 + 16 >> 2] | 0)) $$0$i$i87 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$543 >> 2] | 0) + 36 >> 2] & 127]($543) | 0; else $$0$i$i87 = HEAP32[$545 >> 2] | 0;
     if (($$0$i$i87 | 0) != (HEAP32[$__dp >> 2] | 0)) {
      label = 180;
      break L1;
     }
     $558 = HEAP32[$__b >> 2] | 0;
     $559 = $558 + 12 | 0;
     $560 = HEAP32[$559 >> 2] | 0;
     if (($560 | 0) == (HEAP32[$558 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$558 >> 2] | 0) + 40 >> 2] & 127]($558) | 0; else HEAP32[$559 >> 2] = $560 + 4;
     if (($516 | 0) > 0) {
      $$pre$i3$i$i76261 = $738;
      $583 = $738;
      $630 = $516;
      while (1) {
       $569 = HEAP32[$__b >> 2] | 0;
       do if (!$569) $595 = 1; else {
        $572 = HEAP32[$569 + 12 >> 2] | 0;
        if (($572 | 0) == (HEAP32[$569 + 16 >> 2] | 0)) $$0$i$i$i$i68 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$569 >> 2] | 0) + 36 >> 2] & 127]($569) | 0; else $$0$i$i$i$i68 = HEAP32[$572 >> 2] | 0;
        if (($$0$i$i$i$i68 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $595 = 1;
         break;
        } else {
         $595 = (HEAP32[$__b >> 2] | 0) == 0;
         break;
        }
       } while (0);
       do if (!$583) {
        $$pre$i3$i$i76195$ph = $$pre$i3$i$i76261;
        label = 198;
       } else {
        $585 = HEAP32[$583 + 12 >> 2] | 0;
        if (($585 | 0) == (HEAP32[$583 + 16 >> 2] | 0)) $$0$i$i1$i$i74 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$583 >> 2] | 0) + 36 >> 2] & 127]($583) | 0; else $$0$i$i1$i$i74 = HEAP32[$585 >> 2] | 0;
        if (($$0$i$i1$i$i74 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i3$i$i76195$ph = 0;
         label = 198;
         break;
        } else if ($595 ^ ($$pre$i3$i$i76261 | 0) == 0) {
         $$pre$i3$i$i76195216 = $$pre$i3$i$i76261;
         $739 = $$pre$i3$i$i76261;
         break;
        } else {
         label = 204;
         break L1;
        }
       } while (0);
       if ((label | 0) == 198) {
        label = 0;
        if ($595) {
         label = 204;
         break L1;
        } else {
         $$pre$i3$i$i76195216 = $$pre$i3$i$i76195$ph;
         $739 = 0;
        }
       }
       $596 = HEAP32[$__b >> 2] | 0;
       $598 = HEAP32[$596 + 12 >> 2] | 0;
       if (($598 | 0) == (HEAP32[$596 + 16 >> 2] | 0)) $$0$i$i65 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$596 >> 2] | 0) + 36 >> 2] & 127]($596) | 0; else $$0$i$i65 = HEAP32[$598 >> 2] | 0;
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 2048, $$0$i$i65) | 0)) {
        label = 204;
        break L1;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb, $__wn, $0);
       $616 = HEAP32[$__b >> 2] | 0;
       $618 = HEAP32[$616 + 12 >> 2] | 0;
       if (($618 | 0) == (HEAP32[$616 + 16 >> 2] | 0)) $$0$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$616 >> 2] | 0) + 36 >> 2] & 127]($616) | 0; else $$0$i$i26 = HEAP32[$618 >> 2] | 0;
       $627 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $627 + 4;
       HEAP32[$627 >> 2] = $$0$i$i26;
       $630$looptemp = $630;
       $630 = $630 + -1 | 0;
       HEAP32[$__fd >> 2] = $630;
       $631 = HEAP32[$__b >> 2] | 0;
       $632 = $631 + 12 | 0;
       $633 = HEAP32[$632 >> 2] | 0;
       if (($633 | 0) == (HEAP32[$631 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$631 >> 2] | 0) + 40 >> 2] & 127]($631) | 0; else HEAP32[$632 >> 2] = $633 + 4;
       if (($630$looptemp | 0) <= 1) break; else {
        $$pre$i3$i$i76261 = $$pre$i3$i$i76195216;
        $583 = $739;
       }
      }
     }
    }
    if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
     label = 215;
     break L1;
    } else {
     $730 = $736;
     $__trailing_sign$1 = $__trailing_sign$0278;
    }
    break;
   }
  default:
   {
    $730 = $727;
    $__trailing_sign$1 = $__trailing_sign$0278;
   }
  } while (0);
  L261 : do if ((label | 0) == 30) while (1) {
   label = 0;
   $87 = HEAP32[$__b >> 2] | 0;
   do if (!$87) $113 = 1; else {
    $90 = HEAP32[$87 + 12 >> 2] | 0;
    if (($90 | 0) == (HEAP32[$87 + 16 >> 2] | 0)) $$0$i$i$i$i43 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$87 >> 2] | 0) + 36 >> 2] & 127]($87) | 0; else $$0$i$i$i$i43 = HEAP32[$90 >> 2] | 0;
    if (($$0$i$i$i$i43 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $113 = 1;
     break;
    } else {
     $113 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$101) {
    $$pre$i3$i$i51211 = $$pre$i3$i$i51;
    label = 43;
   } else {
    $103 = HEAP32[$101 + 12 >> 2] | 0;
    if (($103 | 0) == (HEAP32[$101 + 16 >> 2] | 0)) $$0$i$i1$i$i49 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$101 >> 2] | 0) + 36 >> 2] & 127]($101) | 0; else $$0$i$i1$i$i49 = HEAP32[$103 >> 2] | 0;
    if (($$0$i$i1$i$i49 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i51211 = 0;
     label = 43;
     break;
    } else if ($113 ^ ($$pre$i3$i$i51 | 0) == 0) {
     $$pre$i3$i$i51213 = $$pre$i3$i$i51;
     $731 = $$pre$i3$i$i51;
     break;
    } else {
     $730 = $727;
     $__trailing_sign$1 = $__trailing_sign$0278;
     break L261;
    }
   } while (0);
   if ((label | 0) == 43) {
    label = 0;
    if ($113) {
     $730 = $727;
     $__trailing_sign$1 = $__trailing_sign$0278;
     break L261;
    } else {
     $$pre$i3$i$i51213 = $$pre$i3$i$i51211;
     $731 = 0;
    }
   }
   $114 = HEAP32[$__b >> 2] | 0;
   $116 = HEAP32[$114 + 12 >> 2] | 0;
   if (($116 | 0) == (HEAP32[$114 + 16 >> 2] | 0)) $$0$i$i56 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$114 >> 2] | 0) + 36 >> 2] & 127]($114) | 0; else $$0$i$i56 = HEAP32[$116 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 8192, $$0$i$i56) | 0)) {
    $730 = $727;
    $__trailing_sign$1 = $__trailing_sign$0278;
    break L261;
   }
   $129 = HEAP32[$__b >> 2] | 0;
   $130 = $129 + 12 | 0;
   $131 = HEAP32[$130 >> 2] | 0;
   if (($131 | 0) == (HEAP32[$129 + 16 >> 2] | 0)) $$0$i$i60 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 40 >> 2] & 127]($129) | 0; else {
    HEAP32[$130 >> 2] = $131 + 4;
    $$0$i$i60 = HEAP32[$131 >> 2] | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces, $$0$i$i60);
   $$pre$i3$i$i51 = $$pre$i3$i$i51213;
   $101 = $731;
   label = 30;
  } while (0);
  $__p$0276 = $__p$0276 + 1 | 0;
  if ($__p$0276 >>> 0 >= 4) {
   $$lcssa248 = $730;
   $__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 217;
   break;
  } else {
   $727 = $730;
   $__trailing_sign$0278 = $__trailing_sign$1;
  }
 }
 L296 : do if ((label | 0) == 28) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 86) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 126) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 180) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 204) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 215) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 217) {
  L298 : do if ($__trailing_sign$0$lcssa) {
   $650 = $__trailing_sign$0$lcssa + 4 | 0;
   $651 = $__trailing_sign$0$lcssa + 8 | 0;
   $__i$0 = 1;
   L300 : while (1) {
    $652 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
    if (!($652 & 1)) $659 = ($652 & 255) >>> 1; else $659 = HEAP32[$650 >> 2] | 0;
    if ($__i$0 >>> 0 >= $659 >>> 0) break L298;
    $660 = HEAP32[$__b >> 2] | 0;
    do if (!$660) $740 = 1; else {
     $663 = HEAP32[$660 + 12 >> 2] | 0;
     if (($663 | 0) == (HEAP32[$660 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$660 >> 2] | 0) + 36 >> 2] & 127]($660) | 0; else $$0$i$i$i$i = HEAP32[$663 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $740 = 1;
      break;
     } else {
      $740 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $673 = HEAP32[$__e >> 2] | 0;
    do if (!$673) label = 236; else {
     $676 = HEAP32[$673 + 12 >> 2] | 0;
     if (($676 | 0) == (HEAP32[$673 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$673 >> 2] | 0) + 36 >> 2] & 127]($673) | 0; else $$0$i$i1$i$i = HEAP32[$676 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 236;
      break;
     } else if ($740) break; else break L300;
    } while (0);
    if ((label | 0) == 236) {
     label = 0;
     if ($740) break;
    }
    $686 = HEAP32[$__b >> 2] | 0;
    $688 = HEAP32[$686 + 12 >> 2] | 0;
    if (($688 | 0) == (HEAP32[$686 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$686 >> 2] | 0) + 36 >> 2] & 127]($686) | 0; else $$0$i$i = HEAP32[$688 >> 2] | 0;
    if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $702 = $650; else $702 = HEAP32[$651 >> 2] | 0;
    if (($$0$i$i | 0) != (HEAP32[$702 + ($__i$0 << 2) >> 2] | 0)) break;
    $707 = $__i$0 + 1 | 0;
    $708 = HEAP32[$__b >> 2] | 0;
    $709 = $708 + 12 | 0;
    $710 = HEAP32[$709 >> 2] | 0;
    if (($710 | 0) == (HEAP32[$708 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$708 >> 2] | 0) + 40 >> 2] & 127]($708) | 0;
     $__i$0 = $707;
     continue;
    } else {
     HEAP32[$709 >> 2] = $710 + 4;
     $__i$0 = $707;
     continue;
    }
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $$0 = 0;
   break L296;
  } while (0);
  $718 = HEAP32[$__gb >> 2] | 0;
  if (($718 | 0) == ($$lcssa248 | 0)) $$0 = 1; else {
   HEAP32[$__et >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $718, $$lcssa248, $__et);
   if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
   }
  }
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $724 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($724) FUNCTION_TABLE_vi[HEAP32[$2 >> 2] & 255]($724);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i103 = 0, $$0$i$i105 = 0, $$0$i$i120 = 0, $$0$i$i27 = 0, $$0$i$i37 = 0, $$0$i$i39 = 0, $$0$i$i49 = 0, $$0$i$i55 = 0, $$0$i$i59 = 0, $$0$i$i75 = 0, $$0$i$i87 = 0, $$0$i$i95 = 0, $$in241 = 0, $$lcssa = 0, $$lcssa176 = 0, $$lcssa223 = 0, $$lcssa224 = 0, $$ph = 0, $$pre$i2$i$i113 = 0, $$pre$i2$i$i113183 = 0, $$pre$i2$i$i113185 = 0, $$pre$i2$i$i128192 = 0, $$pre$i2$i$i128193 = 0, $$pre$i2$i$i128246 = 0, $$pre$i2$i$i45 = 0, $$pre$i2$i$i45200 = 0, $$pre$i2$i$i45202 = 0, $$pre$i2$i$i67188$ph = 0, $$pre$i2$i$i67188205 = 0, $$pre$i2$i$i67237 = 0, $$pre$i2$i$i83 = 0, $$pre190 = 0, $$pre196 = 0, $0 = 0, $110 = 0, $111 = 0, $113 = 0, $125 = 0, $127 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $17 = 0, $171 = 0, $174 = 0, $176 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $188 = 0, $19 = 0, $196 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $206 = 0, $21 = 0, $221 = 0, $222 = 0, $223 = 0, $23 = 0, $231 = 0, $24 = 0, $242 = 0, $247 = 0, $25 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $26 = 0, $262 = 0, $27 = 0, $28 = 0, $284 = 0, $285 = 0, $286 = 0, $29 = 0, $294 = 0, $30 = 0, $31 = 0, $310 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $318 = 0, $32 = 0, $324 = 0, $325 = 0, $333 = 0, $334 = 0, $335 = 0, $337 = 0, $338 = 0, $345 = 0, $347 = 0, $348 = 0, $350 = 0, $354 = 0, $357 = 0, $358 = 0, $362 = 0, $368 = 0, $380 = 0, $381 = 0, $383 = 0, $395 = 0, $397 = 0, $409 = 0, $411 = 0, $412 = 0, $413 = 0, $423 = 0, $429 = 0, $431 = 0, $433 = 0, $44 = 0, $444 = 0, $45 = 0, $456 = 0, $457 = 0, $459 = 0, $46 = 0, $471 = 0, $473 = 0, $483 = 0, $490 = 0, $494 = 0, $496 = 0, $508 = 0, $509 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $526 = 0, $527 = 0, $528 = 0, $530 = 0, $542 = 0, $543 = 0, $555 = 0, $557 = 0, $572 = 0, $573 = 0, $574 = 0, $583 = 0, $595 = 0, $596 = 0, $598 = 0, $61 = 0, $610 = 0, $612 = 0, $62 = 0, $634 = 0, $636 = 0, $64 = 0, $647 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $680 = 0, $681 = 0, $693 = 0, $694 = 0, $695 = 0, $707 = 0, $709 = 0, $725 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $741 = 0, $747 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $760 = 0, $81 = 0, $82 = 0, $83 = 0, $98 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa = 0, $__ng$1 = 0, $__nsn = 0, $__p$0253 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0255 = 0, $__trailing_sign$1 = 0, $__ts = 0, label = 0, sp = 0, $650$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 88 | 0;
 $__gbuf = sp + 96 | 0;
 $__gb = sp + 80 | 0;
 $__gn = sp + 72 | 0;
 $__ge = sp + 68 | 0;
 $__pat = sp + 500 | 0;
 $__dp = sp + 497 | 0;
 $__ts = sp + 496 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $2 = $__gb + 4 | 0;
 HEAP32[$2 >> 2] = 164;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__psn >> 2] = 0;
 HEAP32[$__psn + 4 >> 2] = 0;
 HEAP32[$__psn + 8 >> 2] = 0;
 HEAP32[$__nsn >> 2] = 0;
 HEAP32[$__nsn + 4 >> 2] = 0;
 HEAP32[$__nsn + 8 >> 2] = 0;
 HEAP32[$__spaces >> 2] = 0;
 HEAP32[$__spaces + 4 >> 2] = 0;
 HEAP32[$__spaces + 8 >> 2] = 0;
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd);
 HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
 $15 = $__ct + 8 | 0;
 $16 = $__psn + 4 | 0;
 $17 = $__nsn + 4 | 0;
 $18 = $__nsn + 8 | 0;
 $19 = $__nsn + 1 | 0;
 $20 = $__psn + 8 | 0;
 $21 = $__psn + 1 | 0;
 $23 = ($__flags & 512 | 0) != 0;
 $24 = $__sym + 8 | 0;
 $25 = $__sym + 1 | 0;
 $26 = $__sym + 4 | 0;
 $27 = $__spaces + 4 | 0;
 $28 = $__spaces + 8 | 0;
 $29 = $__spaces + 1 | 0;
 $30 = $__pat + 3 | 0;
 $31 = $__grp + 4 | 0;
 $750 = $__gbuf;
 $__p$0253 = 0;
 $__trailing_sign$0255 = 0;
 L1 : while (1) {
  $32 = HEAP32[$__b >> 2] | 0;
  do if (!$32) $45 = 0; else if ((HEAP32[$32 + 12 >> 2] | 0) == (HEAP32[$32 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 36 >> 2] & 127]($32) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $45 = 0;
   break;
  } else {
   $45 = HEAP32[$__b >> 2] | 0;
   break;
  } else $45 = $32; while (0);
  $44 = ($45 | 0) == 0;
  $46 = HEAP32[$__e >> 2] | 0;
  do if (!$46) label = 12; else {
   if ((HEAP32[$46 + 12 >> 2] | 0) != (HEAP32[$46 + 16 >> 2] | 0)) if ($44) {
    $751 = $46;
    break;
   } else {
    $$lcssa224 = $750;
    $__trailing_sign$0$lcssa = $__trailing_sign$0255;
    label = 202;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 12;
    break;
   } else if ($44) {
    $751 = $46;
    break;
   } else {
    $$lcssa224 = $750;
    $__trailing_sign$0$lcssa = $__trailing_sign$0255;
    label = 202;
    break L1;
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   if ($44) {
    $$lcssa224 = $750;
    $__trailing_sign$0$lcssa = $__trailing_sign$0255;
    label = 202;
    break;
   } else $751 = 0;
  }
  L21 : do switch (HEAP8[$__pat + $__p$0253 >> 0] | 0) {
  case 1:
   {
    if (($__p$0253 | 0) == 3) {
     $752 = $750;
     $__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $62 = HEAP32[$__b >> 2] | 0;
     $64 = HEAP32[$62 + 12 >> 2] | 0;
     if (($64 | 0) == (HEAP32[$62 + 16 >> 2] | 0)) $$0$i$i37 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] & 127]($62) | 0; else $$0$i$i37 = HEAPU8[$64 >> 0] | 0;
     if (($$0$i$i37 & 255) << 24 >> 24 <= -1) {
      label = 26;
      break L1;
     }
     if (!(HEAP16[(HEAP32[$15 >> 2] | 0) + ($$0$i$i37 << 24 >> 24 << 1) >> 1] & 8192)) {
      label = 26;
      break L1;
     }
     $81 = HEAP32[$__b >> 2] | 0;
     $82 = $81 + 12 | 0;
     $83 = HEAP32[$82 >> 2] | 0;
     if (($83 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i39 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
      HEAP32[$82 >> 2] = $83 + 1;
      $$0$i$i39 = HEAPU8[$83 >> 0] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces, $$0$i$i39 & 255);
     $$pre$i2$i$i45 = $751;
     $113 = $751;
     label = 28;
    }
    break;
   }
  case 0:
   {
    if (($__p$0253 | 0) == 3) {
     $752 = $750;
     $__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $$pre$i2$i$i45 = $751;
     $113 = $751;
     label = 28;
    }
    break;
   }
  case 3:
   {
    $158 = HEAP8[$__psn >> 0] | 0;
    $164 = ($158 & 1) == 0 ? ($158 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
    $165 = HEAP8[$__nsn >> 0] | 0;
    $171 = ($165 & 1) == 0 ? ($165 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
    if (($164 | 0) == (0 - $171 | 0)) {
     $752 = $750;
     $__trailing_sign$1 = $__trailing_sign$0255;
    } else {
     $174 = ($164 | 0) == 0;
     $176 = HEAP32[$__b >> 2] | 0;
     $178 = HEAP32[$176 + 12 >> 2] | 0;
     $180 = HEAP32[$176 + 16 >> 2] | 0;
     $181 = ($178 | 0) == ($180 | 0);
     if ($174 | ($171 | 0) == 0) {
      if ($181) $$0$i$i87 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$176 >> 2] | 0) + 36 >> 2] & 127]($176) | 0; else $$0$i$i87 = HEAPU8[$178 >> 0] | 0;
      $188 = $$0$i$i87 & 255;
      if ($174) {
       if ($188 << 24 >> 24 != (HEAP8[((HEAP8[$__nsn >> 0] & 1) == 0 ? $19 : HEAP32[$18 >> 2] | 0) >> 0] | 0)) {
        $752 = $750;
        $__trailing_sign$1 = $__trailing_sign$0255;
        break L21;
       }
       $221 = HEAP32[$__b >> 2] | 0;
       $222 = $221 + 12 | 0;
       $223 = HEAP32[$222 >> 2] | 0;
       if (($223 | 0) == (HEAP32[$221 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$221 >> 2] | 0) + 40 >> 2] & 127]($221) | 0; else HEAP32[$222 >> 2] = $223 + 1;
       HEAP8[$__neg >> 0] = 1;
       $231 = HEAP8[$__nsn >> 0] | 0;
       $752 = $750;
       $__trailing_sign$1 = (($231 & 1) == 0 ? ($231 & 255) >>> 1 : HEAP32[$17 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0255;
       break L21;
      }
      if ($188 << 24 >> 24 != (HEAP8[((HEAP8[$__psn >> 0] & 1) == 0 ? $21 : HEAP32[$20 >> 2] | 0) >> 0] | 0)) {
       HEAP8[$__neg >> 0] = 1;
       $752 = $750;
       $__trailing_sign$1 = $__trailing_sign$0255;
       break L21;
      }
      $196 = HEAP32[$__b >> 2] | 0;
      $197 = $196 + 12 | 0;
      $198 = HEAP32[$197 >> 2] | 0;
      if (($198 | 0) == (HEAP32[$196 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 40 >> 2] & 127]($196) | 0; else HEAP32[$197 >> 2] = $198 + 1;
      $206 = HEAP8[$__psn >> 0] | 0;
      $752 = $750;
      $__trailing_sign$1 = (($206 & 1) == 0 ? ($206 & 255) >>> 1 : HEAP32[$16 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0255;
      break L21;
     }
     if ($181) {
      $242 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$176 >> 2] | 0) + 36 >> 2] & 127]($176) | 0;
      $$pre196 = HEAP32[$__b >> 2] | 0;
      $$0$i$i95 = $242;
      $247 = HEAP8[$__psn >> 0] | 0;
      $254 = $$pre196;
      $256 = HEAP32[$$pre196 + 12 >> 2] | 0;
      $257 = HEAP32[$$pre196 + 16 >> 2] | 0;
     } else {
      $$0$i$i95 = HEAPU8[$178 >> 0] | 0;
      $247 = $158;
      $254 = $176;
      $256 = $178;
      $257 = $180;
     }
     $253 = $254 + 12 | 0;
     $255 = ($256 | 0) == ($257 | 0);
     if (($$0$i$i95 & 255) << 24 >> 24 == (HEAP8[(($247 & 1) == 0 ? $21 : HEAP32[$20 >> 2] | 0) >> 0] | 0)) {
      if ($255) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$254 >> 2] | 0) + 40 >> 2] & 127]($254) | 0; else HEAP32[$253 >> 2] = $256 + 1;
      $262 = HEAP8[$__psn >> 0] | 0;
      $752 = $750;
      $__trailing_sign$1 = (($262 & 1) == 0 ? ($262 & 255) >>> 1 : HEAP32[$16 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0255;
      break L21;
     }
     if ($255) $$0$i$i105 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$254 >> 2] | 0) + 36 >> 2] & 127]($254) | 0; else $$0$i$i105 = HEAPU8[$256 >> 0] | 0;
     if (($$0$i$i105 & 255) << 24 >> 24 != (HEAP8[((HEAP8[$__nsn >> 0] & 1) == 0 ? $19 : HEAP32[$18 >> 2] | 0) >> 0] | 0)) {
      label = 82;
      break L1;
     }
     $284 = HEAP32[$__b >> 2] | 0;
     $285 = $284 + 12 | 0;
     $286 = HEAP32[$285 >> 2] | 0;
     if (($286 | 0) == (HEAP32[$284 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$284 >> 2] | 0) + 40 >> 2] & 127]($284) | 0; else HEAP32[$285 >> 2] = $286 + 1;
     HEAP8[$__neg >> 0] = 1;
     $294 = HEAP8[$__nsn >> 0] | 0;
     $752 = $750;
     $__trailing_sign$1 = (($294 & 1) == 0 ? ($294 & 255) >>> 1 : HEAP32[$17 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0255;
    }
    break;
   }
  case 2:
   {
    if (!($__p$0253 >>> 0 < 2 | ($__trailing_sign$0255 | 0) != 0)) if (!($23 | ($__p$0253 | 0) == 2 & (HEAP8[$30 >> 0] | 0) != 0)) {
     $752 = $750;
     $__trailing_sign$1 = 0;
     break L21;
    }
    $310 = HEAP8[$__sym >> 0] | 0;
    $312 = ($310 & 1) == 0;
    $313 = HEAP32[$24 >> 2] | 0;
    $314 = $312 ? $25 : $313;
    $315 = $314;
    L83 : do if (!$__p$0253) $$ph = $315; else if ((HEAPU8[$__pat + ($__p$0253 + -1) >> 0] | 0) < 2) {
     $333 = $312 ? ($310 & 255) >>> 1 : HEAP32[$26 >> 2] | 0;
     $334 = $314 + $333 | 0;
     $335 = HEAP32[$15 >> 2] | 0;
     L86 : do if (!$333) $$lcssa223 = $315; else {
      $338 = $314;
      $754 = $315;
      while (1) {
       $337 = HEAP8[$338 >> 0] | 0;
       if ($337 << 24 >> 24 <= -1) {
        $$lcssa223 = $754;
        break L86;
       }
       if (!(HEAP16[$335 + ($337 << 24 >> 24 << 1) >> 1] & 8192)) {
        $$lcssa223 = $754;
        break L86;
       }
       $338 = $338 + 1 | 0;
       $345 = $338;
       if (($338 | 0) == ($334 | 0)) {
        $$lcssa223 = $345;
        break;
       } else $754 = $345;
      }
     } while (0);
     $347 = $$lcssa223 - $315 | 0;
     $348 = HEAP8[$__spaces >> 0] | 0;
     $350 = ($348 & 1) == 0;
     $354 = $350 ? ($348 & 255) >>> 1 : HEAP32[$27 >> 2] | 0;
     if ($354 >>> 0 < $347 >>> 0) $$ph = $315; else {
      $357 = $350 ? $29 : HEAP32[$28 >> 2] | 0;
      $358 = $357 + $354 | 0;
      if (($$lcssa223 | 0) == ($315 | 0)) $$ph = $$lcssa223; else {
       $$in241 = $314;
       $362 = $357 + ($354 - $347) | 0;
       while (1) {
        if ((HEAP8[$362 >> 0] | 0) != (HEAP8[$$in241 >> 0] | 0)) {
         $$ph = $315;
         break L83;
        }
        $362 = $362 + 1 | 0;
        if (($362 | 0) == ($358 | 0)) {
         $$ph = $$lcssa223;
         break;
        } else $$in241 = $$in241 + 1 | 0;
       }
      }
     }
    } else $$ph = $315; while (0);
    $318 = ($310 & 1) == 0;
    $324 = ($318 ? $25 : $313) + ($318 ? ($310 & 255) >>> 1 : HEAP32[$26 >> 2] | 0) | 0;
    $325 = $$ph;
    L98 : do if (($325 | 0) == ($324 | 0)) $$lcssa176 = $324; else {
     $$pre$i2$i$i128246 = $751;
     $383 = $751;
     $409 = $325;
     while (1) {
      $368 = HEAP32[$__b >> 2] | 0;
      do if (!$368) $381 = 0; else if ((HEAP32[$368 + 12 >> 2] | 0) == (HEAP32[$368 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$368 >> 2] | 0) + 36 >> 2] & 127]($368) | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $381 = 0;
       break;
      } else {
       $381 = HEAP32[$__b >> 2] | 0;
       break;
      } else $381 = $368; while (0);
      $380 = ($381 | 0) == 0;
      do if (!$383) {
       $$pre$i2$i$i128193 = $$pre$i2$i$i128246;
       label = 107;
      } else {
       if ((HEAP32[$383 + 12 >> 2] | 0) != (HEAP32[$383 + 16 >> 2] | 0)) if ($380) {
        $$pre$i2$i$i128192 = $$pre$i2$i$i128246;
        $755 = $383;
        break;
       } else {
        $$lcssa176 = $409;
        break L98;
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$383 >> 2] | 0) + 36 >> 2] & 127]($383) | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i2$i$i128193 = 0;
        label = 107;
        break;
       } else if ($380 ^ ($$pre$i2$i$i128246 | 0) == 0) {
        $$pre$i2$i$i128192 = $$pre$i2$i$i128246;
        $755 = $$pre$i2$i$i128246;
        break;
       } else {
        $$lcssa176 = $409;
        break L98;
       }
      } while (0);
      if ((label | 0) == 107) {
       label = 0;
       if ($380) {
        $$lcssa176 = $409;
        break L98;
       } else {
        $$pre$i2$i$i128192 = $$pre$i2$i$i128193;
        $755 = 0;
       }
      }
      $395 = HEAP32[$__b >> 2] | 0;
      $397 = HEAP32[$395 + 12 >> 2] | 0;
      if (($397 | 0) == (HEAP32[$395 + 16 >> 2] | 0)) $$0$i$i120 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$395 >> 2] | 0) + 36 >> 2] & 127]($395) | 0; else $$0$i$i120 = HEAPU8[$397 >> 0] | 0;
      if (($$0$i$i120 & 255) << 24 >> 24 != (HEAP8[$409 >> 0] | 0)) {
       $$lcssa176 = $409;
       break L98;
      }
      $411 = HEAP32[$__b >> 2] | 0;
      $412 = $411 + 12 | 0;
      $413 = HEAP32[$412 >> 2] | 0;
      if (($413 | 0) == (HEAP32[$411 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$411 >> 2] | 0) + 40 >> 2] & 127]($411) | 0; else HEAP32[$412 >> 2] = $413 + 1;
      $409 = $409 + 1 | 0;
      $$pre190 = HEAP8[$__sym >> 0] | 0;
      $423 = ($$pre190 & 1) == 0;
      $429 = ($423 ? $25 : HEAP32[$24 >> 2] | 0) + ($423 ? ($$pre190 & 255) >>> 1 : HEAP32[$26 >> 2] | 0) | 0;
      if (($409 | 0) == ($429 | 0)) {
       $$lcssa176 = $429;
       break;
      } else {
       $$pre$i2$i$i128246 = $$pre$i2$i$i128192;
       $383 = $755;
      }
     }
    } while (0);
    if ($23) {
     $431 = HEAP8[$__sym >> 0] | 0;
     $433 = ($431 & 1) == 0;
     if (($$lcssa176 | 0) == (($433 ? $25 : HEAP32[$24 >> 2] | 0) + ($433 ? ($431 & 255) >>> 1 : HEAP32[$26 >> 2] | 0) | 0)) {
      $752 = $750;
      $__trailing_sign$1 = $__trailing_sign$0255;
     } else {
      label = 119;
      break L1;
     }
    } else {
     $752 = $750;
     $__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
  case 4:
   {
    $61 = HEAP8[$__ts >> 0] | 0;
    $$pre$i2$i$i113 = $751;
    $459 = $751;
    $508 = $750;
    $__ng$0 = 0;
    L131 : while (1) {
     $444 = HEAP32[$__b >> 2] | 0;
     do if (!$444) $457 = 0; else if ((HEAP32[$444 + 12 >> 2] | 0) == (HEAP32[$444 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$444 >> 2] | 0) + 36 >> 2] & 127]($444) | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $457 = 0;
      break;
     } else {
      $457 = HEAP32[$__b >> 2] | 0;
      break;
     } else $457 = $444; while (0);
     $456 = ($457 | 0) == 0;
     do if (!$459) {
      $$pre$i2$i$i113183 = $$pre$i2$i$i113;
      label = 130;
     } else {
      if ((HEAP32[$459 + 12 >> 2] | 0) != (HEAP32[$459 + 16 >> 2] | 0)) if ($456) {
       $$pre$i2$i$i113185 = $$pre$i2$i$i113;
       $756 = $459;
       break;
      } else {
       $$lcssa = $508;
       $$pre$i2$i$i83 = $$pre$i2$i$i113;
       $__ng$0$lcssa = $__ng$0;
       break L131;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$459 >> 2] | 0) + 36 >> 2] & 127]($459) | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i2$i$i113183 = 0;
       label = 130;
       break;
      } else if ($456 ^ ($$pre$i2$i$i113 | 0) == 0) {
       $$pre$i2$i$i113185 = $$pre$i2$i$i113;
       $756 = $$pre$i2$i$i113;
       break;
      } else {
       $$lcssa = $508;
       $$pre$i2$i$i83 = $$pre$i2$i$i113;
       $__ng$0$lcssa = $__ng$0;
       break L131;
      }
     } while (0);
     if ((label | 0) == 130) {
      label = 0;
      if ($456) {
       $$lcssa = $508;
       $$pre$i2$i$i83 = $$pre$i2$i$i113183;
       $__ng$0$lcssa = $__ng$0;
       break;
      } else {
       $$pre$i2$i$i113185 = $$pre$i2$i$i113183;
       $756 = 0;
      }
     }
     $471 = HEAP32[$__b >> 2] | 0;
     $473 = HEAP32[$471 + 12 >> 2] | 0;
     if (($473 | 0) == (HEAP32[$471 + 16 >> 2] | 0)) $$0$i$i103 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$471 >> 2] | 0) + 36 >> 2] & 127]($471) | 0; else $$0$i$i103 = HEAPU8[$473 >> 0] | 0;
     $483 = $$0$i$i103 & 255;
     if ($483 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$15 >> 2] | 0) + ($$0$i$i103 << 24 >> 24 << 1) >> 1] & 2048)) label = 140; else {
      $490 = HEAP32[$__wn >> 2] | 0;
      if (($490 | 0) == (HEAP32[$0 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb, $__wn, $0);
       $494 = HEAP32[$__wn >> 2] | 0;
      } else $494 = $490;
      HEAP32[$__wn >> 2] = $494 + 1;
      HEAP8[$494 >> 0] = $483;
      $757 = $508;
      $__ng$1 = $__ng$0 + 1 | 0;
     } else label = 140;
     if ((label | 0) == 140) {
      label = 0;
      $496 = HEAP8[$__grp >> 0] | 0;
      if (!($483 << 24 >> 24 == $61 << 24 >> 24 & (($__ng$0 | 0) != 0 ? ((($496 & 1) == 0 ? ($496 & 255) >>> 1 : HEAP32[$31 >> 2] | 0) | 0) != 0 : 0))) {
       $$lcssa = $508;
       $$pre$i2$i$i83 = $$pre$i2$i$i113185;
       $__ng$0$lcssa = $__ng$0;
       break;
      }
      if (($508 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb, $__gn, $__ge);
       $510 = HEAP32[$__gn >> 2] | 0;
      } else $510 = $508;
      $509 = $510 + 4 | 0;
      HEAP32[$__gn >> 2] = $509;
      HEAP32[$510 >> 2] = $__ng$0;
      $757 = $509;
      $__ng$1 = 0;
     }
     $511 = HEAP32[$__b >> 2] | 0;
     $512 = $511 + 12 | 0;
     $513 = HEAP32[$512 >> 2] | 0;
     if (($513 | 0) == (HEAP32[$511 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$511 >> 2] | 0) + 40 >> 2] & 127]($511) | 0;
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;
      $459 = $756;
      $508 = $757;
      $__ng$0 = $__ng$1;
      continue;
     } else {
      HEAP32[$512 >> 2] = $513 + 1;
      $$pre$i2$i$i113 = $$pre$i2$i$i113185;
      $459 = $756;
      $508 = $757;
      $__ng$0 = $__ng$1;
      continue;
     }
    }
    if (($__ng$0$lcssa | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa | 0) : 0) {
     if (($$lcssa | 0) == (HEAP32[$__ge >> 2] | 0)) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb, $__gn, $__ge);
      $527 = HEAP32[$__gn >> 2] | 0;
     } else $527 = $$lcssa;
     $526 = $527 + 4 | 0;
     HEAP32[$__gn >> 2] = $526;
     HEAP32[$527 >> 2] = $__ng$0$lcssa;
     $758 = $526;
    } else $758 = $$lcssa;
    $528 = HEAP32[$__fd >> 2] | 0;
    if (($528 | 0) > 0) {
     $530 = HEAP32[$__b >> 2] | 0;
     do if (!$530) $543 = 0; else if ((HEAP32[$530 + 12 >> 2] | 0) == (HEAP32[$530 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$530 >> 2] | 0) + 36 >> 2] & 127]($530) | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $543 = 0;
      break;
     } else {
      $543 = HEAP32[$__b >> 2] | 0;
      break;
     } else $543 = $530; while (0);
     $542 = ($543 | 0) == 0;
     do if (!$$pre$i2$i$i83) label = 162; else {
      if ((HEAP32[$$pre$i2$i$i83 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i83 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i83 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i83) | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 162;
       break;
      }
      if ($542) $759 = $$pre$i2$i$i83; else {
       label = 167;
       break L1;
      }
     } while (0);
     if ((label | 0) == 162) {
      label = 0;
      if ($542) {
       label = 167;
       break L1;
      } else $759 = 0;
     }
     $555 = HEAP32[$__b >> 2] | 0;
     $557 = HEAP32[$555 + 12 >> 2] | 0;
     if (($557 | 0) == (HEAP32[$555 + 16 >> 2] | 0)) $$0$i$i75 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$555 >> 2] | 0) + 36 >> 2] & 127]($555) | 0; else $$0$i$i75 = HEAPU8[$557 >> 0] | 0;
     if (($$0$i$i75 & 255) << 24 >> 24 != (HEAP8[$__dp >> 0] | 0)) {
      label = 167;
      break L1;
     }
     $572 = HEAP32[$__b >> 2] | 0;
     $573 = $572 + 12 | 0;
     $574 = HEAP32[$573 >> 2] | 0;
     if (($574 | 0) == (HEAP32[$572 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$572 >> 2] | 0) + 40 >> 2] & 127]($572) | 0; else HEAP32[$573 >> 2] = $574 + 1;
     if (($528 | 0) > 0) {
      $$pre$i2$i$i67237 = $759;
      $598 = $759;
      $650 = $528;
      while (1) {
       $583 = HEAP32[$__b >> 2] | 0;
       do if (!$583) $596 = 0; else if ((HEAP32[$583 + 12 >> 2] | 0) == (HEAP32[$583 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$583 >> 2] | 0) + 36 >> 2] & 127]($583) | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $596 = 0;
        break;
       } else {
        $596 = HEAP32[$__b >> 2] | 0;
        break;
       } else $596 = $583; while (0);
       $595 = ($596 | 0) == 0;
       do if (!$598) {
        $$pre$i2$i$i67188$ph = $$pre$i2$i$i67237;
        label = 182;
       } else {
        if ((HEAP32[$598 + 12 >> 2] | 0) != (HEAP32[$598 + 16 >> 2] | 0)) if ($595) {
         $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;
         $760 = $598;
         break;
        } else {
         label = 189;
         break L1;
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$598 >> 2] | 0) + 36 >> 2] & 127]($598) | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i2$i$i67188$ph = 0;
         label = 182;
         break;
        } else if ($595 ^ ($$pre$i2$i$i67237 | 0) == 0) {
         $$pre$i2$i$i67188205 = $$pre$i2$i$i67237;
         $760 = $$pre$i2$i$i67237;
         break;
        } else {
         label = 189;
         break L1;
        }
       } while (0);
       if ((label | 0) == 182) {
        label = 0;
        if ($595) {
         label = 189;
         break L1;
        } else {
         $$pre$i2$i$i67188205 = $$pre$i2$i$i67188$ph;
         $760 = 0;
        }
       }
       $610 = HEAP32[$__b >> 2] | 0;
       $612 = HEAP32[$610 + 12 >> 2] | 0;
       if (($612 | 0) == (HEAP32[$610 + 16 >> 2] | 0)) $$0$i$i59 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$610 >> 2] | 0) + 36 >> 2] & 127]($610) | 0; else $$0$i$i59 = HEAPU8[$612 >> 0] | 0;
       if (($$0$i$i59 & 255) << 24 >> 24 <= -1) {
        label = 189;
        break L1;
       }
       if (!(HEAP16[(HEAP32[$15 >> 2] | 0) + ($$0$i$i59 << 24 >> 24 << 1) >> 1] & 2048)) {
        label = 189;
        break L1;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb, $__wn, $0);
       $634 = HEAP32[$__b >> 2] | 0;
       $636 = HEAP32[$634 + 12 >> 2] | 0;
       if (($636 | 0) == (HEAP32[$634 + 16 >> 2] | 0)) $$0$i$i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$634 >> 2] | 0) + 36 >> 2] & 127]($634) | 0; else $$0$i$i27 = HEAPU8[$636 >> 0] | 0;
       $647 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $647 + 1;
       HEAP8[$647 >> 0] = $$0$i$i27;
       $650$looptemp = $650;
       $650 = $650 + -1 | 0;
       HEAP32[$__fd >> 2] = $650;
       $651 = HEAP32[$__b >> 2] | 0;
       $652 = $651 + 12 | 0;
       $653 = HEAP32[$652 >> 2] | 0;
       if (($653 | 0) == (HEAP32[$651 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$651 >> 2] | 0) + 40 >> 2] & 127]($651) | 0; else HEAP32[$652 >> 2] = $653 + 1;
       if (($650$looptemp | 0) <= 1) break; else {
        $$pre$i2$i$i67237 = $$pre$i2$i$i67188205;
        $598 = $760;
       }
      }
     }
    }
    if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
     label = 200;
     break L1;
    } else {
     $752 = $758;
     $__trailing_sign$1 = $__trailing_sign$0255;
    }
    break;
   }
  default:
   {
    $752 = $750;
    $__trailing_sign$1 = $__trailing_sign$0255;
   }
  } while (0);
  L243 : do if ((label | 0) == 28) while (1) {
   label = 0;
   $98 = HEAP32[$__b >> 2] | 0;
   do if (!$98) $111 = 0; else if ((HEAP32[$98 + 12 >> 2] | 0) == (HEAP32[$98 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$98 >> 2] | 0) + 36 >> 2] & 127]($98) | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $111 = 0;
    break;
   } else {
    $111 = HEAP32[$__b >> 2] | 0;
    break;
   } else $111 = $98; while (0);
   $110 = ($111 | 0) == 0;
   do if (!$113) {
    $$pre$i2$i$i45200 = $$pre$i2$i$i45;
    label = 38;
   } else {
    if ((HEAP32[$113 + 12 >> 2] | 0) != (HEAP32[$113 + 16 >> 2] | 0)) if ($110) {
     $$pre$i2$i$i45202 = $$pre$i2$i$i45;
     $753 = $113;
     break;
    } else {
     $752 = $750;
     $__trailing_sign$1 = $__trailing_sign$0255;
     break L243;
    }
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$113 >> 2] | 0) + 36 >> 2] & 127]($113) | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i2$i$i45200 = 0;
     label = 38;
     break;
    } else if ($110 ^ ($$pre$i2$i$i45 | 0) == 0) {
     $$pre$i2$i$i45202 = $$pre$i2$i$i45;
     $753 = $$pre$i2$i$i45;
     break;
    } else {
     $752 = $750;
     $__trailing_sign$1 = $__trailing_sign$0255;
     break L243;
    }
   } while (0);
   if ((label | 0) == 38) {
    label = 0;
    if ($110) {
     $752 = $750;
     $__trailing_sign$1 = $__trailing_sign$0255;
     break L243;
    } else {
     $$pre$i2$i$i45202 = $$pre$i2$i$i45200;
     $753 = 0;
    }
   }
   $125 = HEAP32[$__b >> 2] | 0;
   $127 = HEAP32[$125 + 12 >> 2] | 0;
   if (($127 | 0) == (HEAP32[$125 + 16 >> 2] | 0)) $$0$i$i49 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 127]($125) | 0; else $$0$i$i49 = HEAPU8[$127 >> 0] | 0;
   if (($$0$i$i49 & 255) << 24 >> 24 <= -1) {
    $752 = $750;
    $__trailing_sign$1 = $__trailing_sign$0255;
    break L243;
   }
   if (!(HEAP16[(HEAP32[$15 >> 2] | 0) + ($$0$i$i49 << 24 >> 24 << 1) >> 1] & 8192)) {
    $752 = $750;
    $__trailing_sign$1 = $__trailing_sign$0255;
    break L243;
   }
   $144 = HEAP32[$__b >> 2] | 0;
   $145 = $144 + 12 | 0;
   $146 = HEAP32[$145 >> 2] | 0;
   if (($146 | 0) == (HEAP32[$144 + 16 >> 2] | 0)) $$0$i$i55 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$144 >> 2] | 0) + 40 >> 2] & 127]($144) | 0; else {
    HEAP32[$145 >> 2] = $146 + 1;
    $$0$i$i55 = HEAPU8[$146 >> 0] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces, $$0$i$i55 & 255);
   $$pre$i2$i$i45 = $$pre$i2$i$i45202;
   $113 = $753;
   label = 28;
  } while (0);
  $__p$0253 = $__p$0253 + 1 | 0;
  if ($__p$0253 >>> 0 >= 4) {
   $$lcssa224 = $752;
   $__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 202;
   break;
  } else {
   $750 = $752;
   $__trailing_sign$0255 = $__trailing_sign$1;
  }
 }
 L275 : do if ((label | 0) == 26) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 82) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 119) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 167) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 189) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 200) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$0 = 0;
 } else if ((label | 0) == 202) {
  L277 : do if ($__trailing_sign$0$lcssa) {
   $670 = $__trailing_sign$0$lcssa + 1 | 0;
   $671 = $__trailing_sign$0$lcssa + 8 | 0;
   $672 = $__trailing_sign$0$lcssa + 4 | 0;
   $__i$0 = 1;
   L279 : while (1) {
    $673 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
    if (!($673 & 1)) $680 = ($673 & 255) >>> 1; else $680 = HEAP32[$672 >> 2] | 0;
    if ($__i$0 >>> 0 >= $680 >>> 0) break L277;
    $681 = HEAP32[$__b >> 2] | 0;
    do if (!$681) $694 = 0; else if ((HEAP32[$681 + 12 >> 2] | 0) == (HEAP32[$681 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$681 >> 2] | 0) + 36 >> 2] & 127]($681) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $694 = 0;
     break;
    } else {
     $694 = HEAP32[$__b >> 2] | 0;
     break;
    } else $694 = $681; while (0);
    $693 = ($694 | 0) == 0;
    $695 = HEAP32[$__e >> 2] | 0;
    do if (!$695) label = 218; else {
     if ((HEAP32[$695 + 12 >> 2] | 0) == (HEAP32[$695 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$695 >> 2] | 0) + 36 >> 2] & 127]($695) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 218;
      break;
     }
     if (!$693) break L279;
    } while (0);
    if ((label | 0) == 218) {
     label = 0;
     if ($693) break;
    }
    $707 = HEAP32[$__b >> 2] | 0;
    $709 = HEAP32[$707 + 12 >> 2] | 0;
    if (($709 | 0) == (HEAP32[$707 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$707 >> 2] | 0) + 36 >> 2] & 127]($707) | 0; else $$0$i$i = HEAPU8[$709 >> 0] | 0;
    if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $725 = $670; else $725 = HEAP32[$671 >> 2] | 0;
    if (($$0$i$i & 255) << 24 >> 24 != (HEAP8[$725 + $__i$0 >> 0] | 0)) break;
    $730 = $__i$0 + 1 | 0;
    $731 = HEAP32[$__b >> 2] | 0;
    $732 = $731 + 12 | 0;
    $733 = HEAP32[$732 >> 2] | 0;
    if (($733 | 0) == (HEAP32[$731 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$731 >> 2] | 0) + 40 >> 2] & 127]($731) | 0;
     $__i$0 = $730;
     continue;
    } else {
     HEAP32[$732 >> 2] = $733 + 1;
     $__i$0 = $730;
     continue;
    }
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $$0 = 0;
   break L275;
  } while (0);
  $741 = HEAP32[$__gb >> 2] | 0;
  if (($741 | 0) == ($$lcssa224 | 0)) $$0 = 1; else {
   HEAP32[$__et >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $741, $$lcssa224, $__et);
   if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
   }
  }
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $747 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($747) FUNCTION_TABLE_vi[HEAP32[$2 >> 2] & 255]($747);
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i46 = 0, $$0$i$i$i$i62 = 0, $$0$i$i$i26 = 0, $$0$i$i117 = 0, $$0$i49 = 0, $$01$i$i$i122 = 0, $$01$i$i$i41126 = 0, $$01$i$i$i57130 = 0, $$1$i = 0, $$lcssa = 0, $$lcssa154 = 0, $$lcssa155 = 0, $$lcssa157 = 0, $$lcssa158 = 0, $$lcssa160 = 0, $$lcssa161 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $104 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $123 = 0, $125 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $132 = 0, $134 = 0, $138 = 0, $14 = 0, $141 = 0, $145 = 0, $148 = 0, $148$phi = 0, $149 = 0, $15 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $17 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $18 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $190 = 0, $192 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $200 = 0, $204 = 0, $207 = 0, $21 = 0, $211 = 0, $214 = 0, $214$phi = 0, $215 = 0, $22 = 0, $222 = 0, $223 = 0, $225 = 0, $229 = 0, $23 = 0, $231 = 0, $236 = 0, $238 = 0, $239 = 0, $24 = 0, $241 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $255 = 0, $257 = 0, $260 = 0, $261 = 0, $265 = 0, $269 = 0, $272 = 0, $276 = 0, $279 = 0, $279$phi = 0, $280 = 0, $287 = 0, $288 = 0, $290 = 0, $294 = 0, $296 = 0, $3 = 0, $301 = 0, $303 = 0, $304 = 0, $306 = 0, $31 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $320 = 0, $322 = 0, $325 = 0, $326 = 0, $333 = 0, $334 = 0, $34 = 0, $340 = 0, $346 = 0, $35 = 0, $354 = 0, $356 = 0, $357 = 0, $360 = 0, $365 = 0, $372 = 0, $373 = 0, $382 = 0, $384 = 0, $394 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $60 = 0, $62 = 0, $65 = 0, $66 = 0, $69 = 0, $7 = 0, $70 = 0, $72 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $96 = 0, $98 = 0, $99 = 0, $__p$0$i$i116 = 0, $__p$0$ph$i$i = 0, $e$0$i124 = 0, $e$0$i124$lcssa153 = 0, $e$0$i33128 = 0, $e$0$i33128$lcssa156 = 0, $e$0$i52132 = 0, $e$0$i52132$lcssa159 = 0, $n$0120 = 0, $n$0120$lcssa = 0, $num$i51 = 0, $t$0$i125 = 0, $t$0$i34129 = 0, $t$0$i53133 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $vararg_buffer4 = sp + 72 | 0;
 $vararg_buffer1 = sp + 48 | 0;
 $vararg_buffer = sp + 24 | 0;
 $0 = sp;
 $num$i51 = sp + 432 | 0;
 $1 = sp + 408 | 0;
 $2 = sp + 396 | 0;
 $3 = sp + 384 | 0;
 $4 = sp + 360 | 0;
 $5 = sp + 336 | 0;
 $6 = sp + 320 | 0;
 $7 = sp + 308 | 0;
 $8 = sp + 296 | 0;
 $9 = sp + 284 | 0;
 $10 = sp + 272 | 0;
 $11 = sp + 260 | 0;
 $12 = sp + 248 | 0;
 $13 = sp + 236 | 0;
 $14 = sp + 224 | 0;
 $15 = sp + 212 | 0;
 $16 = sp + 200 | 0;
 $17 = sp + 188 | 0;
 $18 = sp + 176 | 0;
 $19 = sp + 152 | 0;
 $20 = sp + 140 | 0;
 $21 = sp + 128 | 0;
 $22 = sp + 116 | 0;
 $23 = sp + 104 | 0;
 $24 = sp + 92 | 0;
 $25 = $last;
 L1 : do if (($25 - $first | 0) > 3) if ((HEAP8[$first >> 0] | 0) == 76) {
  $31 = $first + 1 | 0;
  do switch (HEAP8[$31 >> 0] | 0) {
  case 84:
   {
    $$0 = $first;
    break L1;
    break;
   }
  case 119:
   {
    $34 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 26623, 7);
    $35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($34, $last, $3, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$0 = ($35 | 0) == ($34 | 0) ? $first : $35;
    break L1;
    break;
   }
  case 98:
   {
    if ((HEAP8[$first + 3 >> 0] | 0) != 69) {
     $$0 = $first;
     break L1;
    }
    switch (HEAP8[$first + 2 >> 0] | 0) {
    case 48:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($4, 30516);
      $43 = $db + 4 | 0;
      $44 = HEAP32[$43 >> 2] | 0;
      $46 = HEAP32[$db + 8 >> 2] | 0;
      if ($44 >>> 0 < $46 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($44, $4);
       HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 24;
      } else {
       $53 = HEAP32[$db >> 2] | 0;
       $54 = $44 - $53 | 0;
       $55 = ($54 | 0) / 24 | 0;
       $56 = $55 + 1 | 0;
       if (($54 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $60 = ($46 - $53 | 0) / 24 | 0;
       if ($60 >>> 0 < 1073741823) {
        $62 = $60 << 1;
        $$0$i$i$i = $62 >>> 0 < $56 >>> 0 ? $56 : $62;
       } else $$0$i$i$i = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($0, $$0$i$i$i, $55, $db + 12 | 0);
       $65 = $0 + 8 | 0;
       $66 = HEAP32[$65 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($66, $4);
       HEAP32[$65 >> 2] = $66 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $0);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($0);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      $$0 = $first + 4 | 0;
      break L1;
      break;
     }
    case 49:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($5, 30511);
      $69 = $db + 4 | 0;
      $70 = HEAP32[$69 >> 2] | 0;
      $72 = HEAP32[$db + 8 >> 2] | 0;
      if ($70 >>> 0 < $72 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($70, $5);
       HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 24;
      } else {
       $79 = HEAP32[$db >> 2] | 0;
       $80 = $70 - $79 | 0;
       $81 = ($80 | 0) / 24 | 0;
       $82 = $81 + 1 | 0;
       if (($80 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $86 = ($72 - $79 | 0) / 24 | 0;
       if ($86 >>> 0 < 1073741823) {
        $88 = $86 << 1;
        $$0$i$i$i26 = $88 >>> 0 < $82 >>> 0 ? $82 : $88;
       } else $$0$i$i$i26 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($0, $$0$i$i$i26, $81, $db + 12 | 0);
       $91 = $0 + 8 | 0;
       $92 = HEAP32[$91 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($92, $5);
       HEAP32[$91 >> 2] = $92 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $0);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($0);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
      $$0 = $first + 4 | 0;
      break L1;
      break;
     }
    default:
     {
      $$0 = $first;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    $95 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($6, 26631, 4);
    $96 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($95, $last, $6, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$0 = ($96 | 0) == ($95 | 0) ? $first : $96;
    break L1;
    break;
   }
  case 97:
   {
    $98 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($7, 26636, 11);
    $99 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($98, $last, $7, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    $$0 = ($99 | 0) == ($98 | 0) ? $first : $99;
    break L1;
    break;
   }
  case 104:
   {
    $101 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($8, 26648, 13);
    $102 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($101, $last, $8, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    $$0 = ($102 | 0) == ($101 | 0) ? $first : $102;
    break L1;
    break;
   }
  case 115:
   {
    $104 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($9, 26662, 5);
    $105 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($104, $last, $9, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
    $$0 = ($105 | 0) == ($104 | 0) ? $first : $105;
    break L1;
    break;
   }
  case 116:
   {
    $107 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($10, 26668, 14);
    $108 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($107, $last, $10, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
    $$0 = ($108 | 0) == ($107 | 0) ? $first : $108;
    break L1;
    break;
   }
  case 105:
   {
    $110 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($11, 30292, 0);
    $111 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($110, $last, $11, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
    $$0 = ($111 | 0) == ($110 | 0) ? $first : $111;
    break L1;
    break;
   }
  case 106:
   {
    $113 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($12, 26683, 1);
    $114 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($113, $last, $12, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
    $$0 = ($114 | 0) == ($113 | 0) ? $first : $114;
    break L1;
    break;
   }
  case 108:
   {
    $116 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($13, 30287, 1);
    $117 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($116, $last, $13, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
    $$0 = ($117 | 0) == ($116 | 0) ? $first : $117;
    break L1;
    break;
   }
  case 109:
   {
    $119 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($14, 26685, 2);
    $120 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($119, $last, $14, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
    $$0 = ($120 | 0) == ($119 | 0) ? $first : $120;
    break L1;
    break;
   }
  case 120:
   {
    $122 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($15, 30289, 2);
    $123 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($122, $last, $15, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
    $$0 = ($123 | 0) == ($122 | 0) ? $first : $123;
    break L1;
    break;
   }
  case 121:
   {
    $125 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($16, 26688, 3);
    $126 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($125, $last, $16, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($16);
    $$0 = ($126 | 0) == ($125 | 0) ? $first : $126;
    break L1;
    break;
   }
  case 110:
   {
    $128 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($17, 26692, 8);
    $129 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($128, $last, $17, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($17);
    $$0 = ($129 | 0) == ($128 | 0) ? $first : $129;
    break L1;
    break;
   }
  case 111:
   {
    $131 = $first + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($18, 26701, 17);
    $132 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($131, $last, $18, $db) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($18);
    $$0 = ($132 | 0) == ($131 | 0) ? $first : $132;
    break L1;
    break;
   }
  case 102:
   {
    $134 = $first + 2 | 0;
    L67 : do if (($25 - $134 | 0) >>> 0 > 8) {
     $138 = $first + 10 | 0;
     $141 = HEAP8[$134 >> 0] | 0;
     $148 = $first;
     $e$0$i124 = $0;
     $t$0$i125 = $134;
     while (1) {
      if (!(_isxdigit($141 << 24 >> 24) | 0)) {
       $$0$i = $134;
       break L67;
      }
      $145 = HEAP8[$t$0$i125 >> 0] | 0;
      $149 = HEAP8[$148 + 3 >> 0] | 0;
      HEAP8[$e$0$i124 >> 0] = ((($149 << 24 >> 24) + -48 | 0) >>> 0 < 10 ? 208 : 169) + ($149 & 255) + ((($145 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $145 << 4);
      $156 = $t$0$i125 + 2 | 0;
      $157 = $e$0$i124 + 1 | 0;
      $159 = HEAP8[$156 >> 0] | 0;
      if (($156 | 0) == ($138 | 0)) {
       $$lcssa154 = $157;
       $$lcssa155 = $159;
       $e$0$i124$lcssa153 = $e$0$i124;
       break;
      } else {
       $148$phi = $t$0$i125;
       $141 = $159;
       $e$0$i124 = $157;
       $t$0$i125 = $156;
       $148 = $148$phi;
      }
     }
     if ($$lcssa155 << 24 >> 24 == 69) {
      if (($0 | 0) != ($$lcssa154 | 0) & $0 >>> 0 < $e$0$i124$lcssa153 >>> 0) {
       $$01$i$i$i122 = $0;
       $165 = $e$0$i124$lcssa153;
       do {
        $163 = HEAP8[$$01$i$i$i122 >> 0] | 0;
        HEAP8[$$01$i$i$i122 >> 0] = HEAP8[$165 >> 0] | 0;
        HEAP8[$165 >> 0] = $163;
        $$01$i$i$i122 = $$01$i$i$i122 + 1 | 0;
        $165 = $165 + -1 | 0;
       } while ($$01$i$i$i122 >>> 0 < $165 >>> 0);
      }
      dest = $num$i51;
      stop = dest + 24 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAPF64[$vararg_buffer >> 3] = +HEAPF32[$0 >> 2];
      $171 = _snprintf($num$i51, 24, 26719, $vararg_buffer) | 0;
      if ($171 >>> 0 > 23) $$0$i = $134; else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2, $num$i51, $171);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
       $173 = $db + 4 | 0;
       $174 = HEAP32[$173 >> 2] | 0;
       $176 = HEAP32[$db + 8 >> 2] | 0;
       if ($174 >>> 0 < $176 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($174, $1);
        HEAP32[$173 >> 2] = (HEAP32[$173 >> 2] | 0) + 24;
       } else {
        $183 = HEAP32[$db >> 2] | 0;
        $184 = $174 - $183 | 0;
        $185 = ($184 | 0) / 24 | 0;
        $186 = $185 + 1 | 0;
        if (($184 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
        $190 = ($176 - $183 | 0) / 24 | 0;
        if ($190 >>> 0 < 1073741823) {
         $192 = $190 << 1;
         $$0$i$i$i$i = $192 >>> 0 < $186 >>> 0 ? $186 : $192;
        } else $$0$i$i$i$i = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer, $$0$i$i$i$i, $185, $db + 12 | 0);
        $195 = $vararg_buffer + 8 | 0;
        $196 = HEAP32[$195 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($196, $1);
        HEAP32[$195 >> 2] = $196 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $vararg_buffer);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       $$0$i = $first + 11 | 0;
      }
     } else $$0$i = $134;
    } else $$0$i = $134; while (0);
    $$0 = ($$0$i | 0) == ($134 | 0) ? $first : $$0$i;
    break L1;
    break;
   }
  case 100:
   {
    $200 = $first + 2 | 0;
    L91 : do if (($25 - $200 | 0) >>> 0 > 16) {
     $204 = $first + 18 | 0;
     $207 = HEAP8[$200 >> 0] | 0;
     $214 = $first;
     $e$0$i33128 = $0;
     $t$0$i34129 = $200;
     while (1) {
      if (!(_isxdigit($207 << 24 >> 24) | 0)) {
       $$0$i49 = $200;
       break L91;
      }
      $211 = HEAP8[$t$0$i34129 >> 0] | 0;
      $215 = HEAP8[$214 + 3 >> 0] | 0;
      HEAP8[$e$0$i33128 >> 0] = ((($215 << 24 >> 24) + -48 | 0) >>> 0 < 10 ? 208 : 169) + ($215 & 255) + ((($211 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $211 << 4);
      $222 = $t$0$i34129 + 2 | 0;
      $223 = $e$0$i33128 + 1 | 0;
      $225 = HEAP8[$222 >> 0] | 0;
      if (($222 | 0) == ($204 | 0)) {
       $$lcssa157 = $223;
       $$lcssa158 = $225;
       $e$0$i33128$lcssa156 = $e$0$i33128;
       break;
      } else {
       $214$phi = $t$0$i34129;
       $207 = $225;
       $e$0$i33128 = $223;
       $t$0$i34129 = $222;
       $214 = $214$phi;
      }
     }
     if ($$lcssa158 << 24 >> 24 == 69) {
      if (($0 | 0) != ($$lcssa157 | 0) & $0 >>> 0 < $e$0$i33128$lcssa156 >>> 0) {
       $$01$i$i$i41126 = $0;
       $231 = $e$0$i33128$lcssa156;
       do {
        $229 = HEAP8[$$01$i$i$i41126 >> 0] | 0;
        HEAP8[$$01$i$i$i41126 >> 0] = HEAP8[$231 >> 0] | 0;
        HEAP8[$231 >> 0] = $229;
        $$01$i$i$i41126 = $$01$i$i$i41126 + 1 | 0;
        $231 = $231 + -1 | 0;
       } while ($$01$i$i$i41126 >>> 0 < $231 >>> 0);
      }
      dest = $num$i51;
      stop = dest + 32 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAPF64[$vararg_buffer1 >> 3] = +HEAPF64[$0 >> 3];
      $236 = _snprintf($num$i51, 32, 26723, $vararg_buffer1) | 0;
      if ($236 >>> 0 > 31) $$0$i49 = $200; else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2, $num$i51, $236);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
       $238 = $db + 4 | 0;
       $239 = HEAP32[$238 >> 2] | 0;
       $241 = HEAP32[$db + 8 >> 2] | 0;
       if ($239 >>> 0 < $241 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($239, $1);
        HEAP32[$238 >> 2] = (HEAP32[$238 >> 2] | 0) + 24;
       } else {
        $248 = HEAP32[$db >> 2] | 0;
        $249 = $239 - $248 | 0;
        $250 = ($249 | 0) / 24 | 0;
        $251 = $250 + 1 | 0;
        if (($249 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
        $255 = ($241 - $248 | 0) / 24 | 0;
        if ($255 >>> 0 < 1073741823) {
         $257 = $255 << 1;
         $$0$i$i$i$i46 = $257 >>> 0 < $251 >>> 0 ? $251 : $257;
        } else $$0$i$i$i$i46 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer1, $$0$i$i$i$i46, $250, $db + 12 | 0);
        $260 = $vararg_buffer1 + 8 | 0;
        $261 = HEAP32[$260 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($261, $1);
        HEAP32[$260 >> 2] = $261 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $vararg_buffer1);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer1);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       $$0$i49 = $first + 19 | 0;
      }
     } else $$0$i49 = $200;
    } else $$0$i49 = $200; while (0);
    $$0 = ($$0$i49 | 0) == ($200 | 0) ? $first : $$0$i49;
    break L1;
    break;
   }
  case 101:
   {
    $265 = $first + 2 | 0;
    L115 : do if (($25 - $265 | 0) >>> 0 > 20) {
     $269 = $first + 22 | 0;
     $272 = HEAP8[$265 >> 0] | 0;
     $279 = $first;
     $e$0$i52132 = $0;
     $t$0$i53133 = $265;
     while (1) {
      if (!(_isxdigit($272 << 24 >> 24) | 0)) {
       $$1$i = $265;
       break L115;
      }
      $276 = HEAP8[$t$0$i53133 >> 0] | 0;
      $280 = HEAP8[$279 + 3 >> 0] | 0;
      HEAP8[$e$0$i52132 >> 0] = ((($280 << 24 >> 24) + -48 | 0) >>> 0 < 10 ? 208 : 169) + ($280 & 255) + ((($276 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $276 << 4);
      $287 = $t$0$i53133 + 2 | 0;
      $288 = $e$0$i52132 + 1 | 0;
      $290 = HEAP8[$287 >> 0] | 0;
      if (($287 | 0) == ($269 | 0)) {
       $$lcssa160 = $288;
       $$lcssa161 = $290;
       $e$0$i52132$lcssa159 = $e$0$i52132;
       break;
      } else {
       $279$phi = $t$0$i53133;
       $272 = $290;
       $e$0$i52132 = $288;
       $t$0$i53133 = $287;
       $279 = $279$phi;
      }
     }
     if ($$lcssa161 << 24 >> 24 == 69) {
      if (($0 | 0) != ($$lcssa160 | 0) & $0 >>> 0 < $e$0$i52132$lcssa159 >>> 0) {
       $$01$i$i$i57130 = $0;
       $296 = $e$0$i52132$lcssa159;
       do {
        $294 = HEAP8[$$01$i$i$i57130 >> 0] | 0;
        HEAP8[$$01$i$i$i57130 >> 0] = HEAP8[$296 >> 0] | 0;
        HEAP8[$296 >> 0] = $294;
        $$01$i$i$i57130 = $$01$i$i$i57130 + 1 | 0;
        $296 = $296 + -1 | 0;
       } while ($$01$i$i$i57130 >>> 0 < $296 >>> 0);
      }
      dest = $num$i51;
      stop = dest + 40 | 0;
      do {
       HEAP8[dest >> 0] = 0;
       dest = dest + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAPF64[$vararg_buffer4 >> 3] = +HEAPF64[$0 >> 3];
      $301 = _snprintf($num$i51, 40, 26726, $vararg_buffer4) | 0;
      if ($301 >>> 0 > 39) {
       $$1$i = $265;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2, $num$i51, $301);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
      $303 = $db + 4 | 0;
      $304 = HEAP32[$303 >> 2] | 0;
      $306 = HEAP32[$db + 8 >> 2] | 0;
      if ($304 >>> 0 < $306 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($304, $1);
       HEAP32[$303 >> 2] = (HEAP32[$303 >> 2] | 0) + 24;
      } else {
       $313 = HEAP32[$db >> 2] | 0;
       $314 = $304 - $313 | 0;
       $315 = ($314 | 0) / 24 | 0;
       $316 = $315 + 1 | 0;
       if (($314 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $320 = ($306 - $313 | 0) / 24 | 0;
       if ($320 >>> 0 < 1073741823) {
        $322 = $320 << 1;
        $$0$i$i$i$i62 = $322 >>> 0 < $316 >>> 0 ? $316 : $322;
       } else $$0$i$i$i$i62 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer4, $$0$i$i$i$i62, $315, $db + 12 | 0);
       $325 = $vararg_buffer4 + 8 | 0;
       $326 = HEAP32[$325 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($326, $1);
       HEAP32[$325 >> 2] = $326 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $vararg_buffer4);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer4);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
      $$1$i = $first + 23 | 0;
     } else $$1$i = $265;
    } else $$1$i = $265; while (0);
    $$0 = ($$1$i | 0) == ($265 | 0) ? $first : $$1$i;
    break L1;
    break;
   }
  case 95:
   {
    if ((HEAP8[$first + 2 >> 0] | 0) != 90) {
     $$0 = $first;
     break L1;
    }
    $333 = $first + 3 | 0;
    $334 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($333, $last, $db) | 0;
    if (($334 | 0) == ($333 | 0) | ($334 | 0) == ($last | 0)) {
     $$0 = $first;
     break L1;
    }
    STACKTOP = sp;
    return ((HEAP8[$334 >> 0] | 0) == 69 ? $334 + 1 | 0 : $first) | 0;
   }
  default:
   {
    $340 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($31, $last, $db) | 0;
    if (($340 | 0) == ($31 | 0) | ($340 | 0) == ($last | 0)) {
     $$0 = $first;
     break L1;
    }
    if ((HEAP8[$340 >> 0] | 0) == 69) {
     $$0 = $340 + 1 | 0;
     break L1;
    }
    if (($340 | 0) == ($last | 0)) {
     $$0 = $first;
     break L1;
    } else $n$0120 = $340;
    while (1) {
     $346 = HEAP8[$n$0120 >> 0] | 0;
     if ((($346 << 24 >> 24) + -48 | 0) >>> 0 >= 10) {
      $$lcssa = $346;
      $n$0120$lcssa = $n$0120;
      break;
     }
     $n$0120 = $n$0120 + 1 | 0;
     if (($n$0120 | 0) == ($last | 0)) {
      $$0 = $first;
      break L1;
     }
    }
    if (!(($n$0120$lcssa | 0) != ($340 | 0) & $$lcssa << 24 >> 24 == 69)) {
     $$0 = $first;
     break L1;
    }
    $354 = HEAP32[$db + 4 >> 2] | 0;
    if ((HEAP32[$db >> 2] | 0) == ($354 | 0)) {
     $$0 = $first;
     break L1;
    }
    $356 = $354 + -24 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($23, $356);
    $357 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($23, 0, 25573) | 0;
    HEAP32[$22 >> 2] = HEAP32[$357 >> 2];
    HEAP32[$22 + 4 >> 2] = HEAP32[$357 + 4 >> 2];
    HEAP32[$22 + 8 >> 2] = HEAP32[$357 + 8 >> 2];
    HEAP32[$357 >> 2] = 0;
    HEAP32[$357 + 4 >> 2] = 0;
    HEAP32[$357 + 8 >> 2] = 0;
    $360 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($22, 25478) | 0;
    HEAP32[$21 >> 2] = HEAP32[$360 >> 2];
    HEAP32[$21 + 4 >> 2] = HEAP32[$360 + 4 >> 2];
    HEAP32[$21 + 8 >> 2] = HEAP32[$360 + 8 >> 2];
    HEAP32[$360 >> 2] = 0;
    HEAP32[$360 + 4 >> 2] = 0;
    HEAP32[$360 + 8 >> 2] = 0;
    $365 = $n$0120$lcssa - $340 | 0;
    if ($365 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($24);
    if ($365 >>> 0 < 11) {
     HEAP8[$24 >> 0] = $365 << 1;
     $__p$0$ph$i$i = $24 + 1 | 0;
    } else {
     $372 = $365 + 16 & -16;
     $373 = _malloc($372) | 0;
     HEAP32[$24 + 8 >> 2] = $373;
     HEAP32[$24 >> 2] = $372 | 1;
     HEAP32[$24 + 4 >> 2] = $365;
     $__p$0$ph$i$i = $373;
    }
    if (($340 | 0) != ($n$0120$lcssa | 0)) {
     $$0$i$i117 = $340;
     $__p$0$i$i116 = $__p$0$ph$i$i;
     while (1) {
      HEAP8[$__p$0$i$i116 >> 0] = HEAP8[$$0$i$i117 >> 0] | 0;
      $$0$i$i117 = $$0$i$i117 + 1 | 0;
      if (($$0$i$i117 | 0) == ($n$0120$lcssa | 0)) break; else $__p$0$i$i116 = $__p$0$i$i116 + 1 | 0;
     }
    }
    HEAP8[$__p$0$ph$i$i + $365 >> 0] = 0;
    $382 = HEAP8[$24 >> 0] | 0;
    $384 = ($382 & 1) == 0;
    $394 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($21, $384 ? $24 + 1 | 0 : HEAP32[$24 + 8 >> 2] | 0, $384 ? ($382 & 255) >>> 1 : HEAP32[$24 + 4 >> 2] | 0) | 0;
    HEAP32[$20 >> 2] = HEAP32[$394 >> 2];
    HEAP32[$20 + 4 >> 2] = HEAP32[$394 + 4 >> 2];
    HEAP32[$20 + 8 >> 2] = HEAP32[$394 + 8 >> 2];
    HEAP32[$394 >> 2] = 0;
    HEAP32[$394 + 4 >> 2] = 0;
    HEAP32[$394 + 8 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($19, $20);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($356, $19);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($20);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($24);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($21);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($22);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($23);
    $$0 = $n$0120$lcssa + 1 | 0;
    break L1;
   }
  } while (0);
 } else $$0 = $first; else $$0 = $first; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo5State13DoInstructionEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $102 = 0, $104 = 0, $110 = 0, $117 = 0, $123 = 0, $125 = 0, $126 = 0, $13 = 0, $134 = 0, $140 = 0, $147 = 0, $15 = 0, $153 = 0, $155 = 0, $156 = 0, $164 = 0, $170 = 0, $177 = 0, $183 = 0, $185 = 0, $186 = 0, $19 = 0, $194 = 0, $200 = 0, $207 = 0, $213 = 0, $215 = 0, $216 = 0, $224 = 0, $229 = 0, $233 = 0, $237 = 0, $240 = 0, $241 = 0, $247 = 0, $25 = 0, $252 = 0, $260 = 0, $262 = 0, $264 = 0, $265 = 0, $266 = 0, $269 = 0, $27 = 0, $270 = 0, $276 = 0, $28 = 0, $281 = 0, $289 = 0, $290 = 0, $292 = 0, $296 = 0, $3 = 0, $300 = 0, $303 = 0, $305 = 0, $308 = 0, $314 = 0, $318 = 0, $319 = 0, $339 = 0, $34 = 0, $348 = 0, $351 = 0, $355 = 0, $356 = 0, $36 = 0, $375 = 0, $376 = 0, $384 = 0, $393 = 0, $396 = 0, $4 = 0, $400 = 0, $401 = 0, $41 = 0, $415 = 0, $427 = 0, $43 = 0, $435 = 0, $437 = 0, $438 = 0, $449 = 0, $457 = 0, $458 = 0, $466 = 0, $474 = 0, $475 = 0, $483 = 0, $491 = 0, $493 = 0, $50 = 0, $500 = 0, $503 = 0, $505 = 0, $509 = 0, $513 = 0, $514 = 0, $524 = 0, $53 = 0, $533 = 0, $541 = 0, $546 = 0, $547 = 0, $55 = 0, $551 = 0, $555 = 0, $556 = 0, $566 = 0, $575 = 0, $583 = 0, $585 = 0, $59 = 0, $591 = 0, $594 = 0, $597 = 0, $599 = 0, $6 = 0, $603 = 0, $607 = 0, $608 = 0, $618 = 0, $627 = 0, $63 = 0, $635 = 0, $637 = 0, $64 = 0, $644 = 0, $647 = 0, $649 = 0, $653 = 0, $657 = 0, $658 = 0, $668 = 0, $677 = 0, $685 = 0, $690 = 0, $691 = 0, $695 = 0, $699 = 0, $700 = 0, $710 = 0, $719 = 0, $727 = 0, $728 = 0, $732 = 0, $74 = 0, $744 = 0, $752 = 0, $753 = 0, $762 = 0, $770 = 0, $771 = 0, $780 = 0, $792 = 0, $793 = 0, $796 = 0, $8 = 0, $800 = 0, $807 = 0, $810 = 0, $811 = 0, $817 = 0, $818 = 0, $824 = 0, $828 = 0, $83 = 0, $838 = 0, $847 = 0, $854 = 0, $856 = 0, $857 = 0, $858 = 0, $874 = 0, $881 = 0, $890 = 0, $896 = 0, $9 = 0, $903 = 0, $912 = 0, $916 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0, $i$0108 = 0, $i1$0107 = 0, $ops = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $ops = sp;
 $0 = $this + 24 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$1 + 32 >> 2] | 0;
 $4 = $ops + 20 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $6 = HEAP32[$1 + 8 >> 2] | 0;
 if (!$6) ___assert_fail(18986, 18044, 1431, 19011);
 $8 = $this + 28 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 if ($9 >>> 0 >= (HEAP32[$1 + 20 >> 2] | 0) >>> 0) ___assert_fail(19025, 18044, 1435, 19011);
 $13 = $9 + 1 | 0;
 HEAP32[$8 >> 2] = $13;
 $15 = HEAP8[$9 >> 0] | 0;
 L7 : do switch ($15 & 192 | 0) {
 case 0:
  {
   L10 : do switch ($15 | 0) {
   case 1:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19049, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $97 = $ops + 8 | 0;
     $102 = HEAP32[$97 + 4 >> 2] | 0;
     $104 = $this + 16 | 0;
     HEAP32[$104 >> 2] = HEAP32[$97 >> 2];
     HEAP32[$104 + 4 >> 2] = $102;
     break;
    }
   case 2:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19051, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $110 = $ops + 8 | 0;
     $117 = $3 + 56 | 0;
     $123 = ___muldi3(HEAP32[$117 >> 2] | 0, HEAP32[$117 + 4 >> 2] | 0, HEAP32[$110 >> 2] | 0, HEAP32[$110 + 4 >> 2] | 0) | 0;
     $125 = $this + 16 | 0;
     $126 = $125;
     $134 = $125;
     HEAP32[$134 >> 2] = _i64Add(HEAP32[$126 >> 2] | 0, HEAP32[$126 + 4 >> 2] | 0, $123 | 0, tempRet0 | 0) | 0;
     HEAP32[$134 + 4 >> 2] = tempRet0;
     break;
    }
   case 3:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19053, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $140 = $ops + 8 | 0;
     $147 = $3 + 56 | 0;
     $153 = ___muldi3(HEAP32[$147 >> 2] | 0, HEAP32[$147 + 4 >> 2] | 0, HEAP32[$140 >> 2] | 0, HEAP32[$140 + 4 >> 2] | 0) | 0;
     $155 = $this + 16 | 0;
     $156 = $155;
     $164 = $155;
     HEAP32[$164 >> 2] = _i64Add(HEAP32[$156 >> 2] | 0, HEAP32[$156 + 4 >> 2] | 0, $153 | 0, tempRet0 | 0) | 0;
     HEAP32[$164 + 4 >> 2] = tempRet0;
     break;
    }
   case 4:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19055, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $170 = $ops + 8 | 0;
     $177 = $3 + 56 | 0;
     $183 = ___muldi3(HEAP32[$177 >> 2] | 0, HEAP32[$177 + 4 >> 2] | 0, HEAP32[$170 >> 2] | 0, HEAP32[$170 + 4 >> 2] | 0) | 0;
     $185 = $this + 16 | 0;
     $186 = $185;
     $194 = $185;
     HEAP32[$194 >> 2] = _i64Add(HEAP32[$186 >> 2] | 0, HEAP32[$186 + 4 >> 2] | 0, $183 | 0, tempRet0 | 0) | 0;
     HEAP32[$194 + 4 >> 2] = tempRet0;
     break;
    }
   case 29:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19057, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $200 = $ops + 8 | 0;
     $207 = $3 + 56 | 0;
     $213 = ___muldi3(HEAP32[$207 >> 2] | 0, HEAP32[$207 + 4 >> 2] | 0, HEAP32[$200 >> 2] | 0, HEAP32[$200 + 4 >> 2] | 0) | 0;
     $215 = $this + 16 | 0;
     $216 = $215;
     $224 = $215;
     HEAP32[$224 >> 2] = _i64Add(HEAP32[$216 >> 2] | 0, HEAP32[$216 + 4 >> 2] | 0, $213 | 0, tempRet0 | 0) | 0;
     HEAP32[$224 + 4 >> 2] = tempRet0;
     break;
    }
   case 12:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19059, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $229 = HEAP32[$ops >> 2] | 0;
     $233 = HEAP32[$ops + 8 >> 2] | 0;
     $237 = __Znwj(12) | 0;
     HEAP32[$237 >> 2] = 4860;
     HEAP32[$237 + 4 >> 2] = $229;
     HEAP32[$237 + 8 >> 2] = $233;
     $240 = $this + 32 | 0;
     $241 = HEAP32[$240 >> 2] | 0;
     if (!$241) $247 = 4860; else {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$241 >> 2] | 0) + 4 >> 2] & 255]($241);
      $247 = HEAP32[$237 >> 2] | 0;
     }
     HEAP32[$240 >> 2] = $237;
     $252 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[$247 + 8 >> 2] & 63]($237, HEAP32[$this + 4 >> 2] | 0, HEAP32[$252 >> 2] | 0, HEAP32[$252 + 4 >> 2] | 0, -1) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 18:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19062, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $260 = HEAP32[$ops >> 2] | 0;
     $262 = HEAP32[$ops + 16 >> 2] | 0;
     $264 = HEAP32[$3 + 64 >> 2] | 0;
     $265 = __Znwj(12) | 0;
     $266 = Math_imul($264, $262) | 0;
     HEAP32[$265 >> 2] = 4860;
     HEAP32[$265 + 4 >> 2] = $260;
     HEAP32[$265 + 8 >> 2] = $266;
     $269 = $this + 32 | 0;
     $270 = HEAP32[$269 >> 2] | 0;
     if (!$270) $276 = 4860; else {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$270 >> 2] | 0) + 4 >> 2] & 255]($270);
      $276 = HEAP32[$265 >> 2] | 0;
     }
     HEAP32[$269 >> 2] = $265;
     $281 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[$276 + 8 >> 2] & 63]($265, HEAP32[$this + 4 >> 2] | 0, HEAP32[$281 >> 2] | 0, HEAP32[$281 + 4 >> 2] | 0, -1) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 13:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19065, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $289 = $this + 32 | 0;
     $290 = HEAP32[$289 >> 2] | 0;
     if ($290) {
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$290 >> 2] | 0) + 20 >> 2] & 63]($290, HEAP32[$ops >> 2] | 0);
      $339 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$290 >> 2] | 0) + 8 >> 2] & 63]($290, HEAP32[$this + 4 >> 2] | 0, HEAP32[$339 >> 2] | 0, HEAP32[$339 + 4 >> 2] | 0, -1) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     $292 = HEAP32[$ops >> 2] | 0;
     $296 = HEAP32[$ops + 8 >> 2] | 0;
     $300 = __Znwj(12) | 0;
     HEAP32[$300 >> 2] = 4860;
     HEAP32[$300 + 4 >> 2] = $292;
     HEAP32[$300 + 8 >> 2] = $296;
     $$pre = HEAP32[$this + 4 >> 2] | 0;
     $303 = $this + 16 | 0;
     $305 = HEAP32[$303 >> 2] | 0;
     $308 = HEAP32[$303 + 4 >> 2] | 0;
     HEAP32[$289 >> 2] = $300;
     if (!(FUNCTION_TABLE_iiiiiii[HEAP32[(HEAP32[$$pre >> 2] | 0) + 24 >> 2] & 63]($$pre, $305, $308, -1, $292, $296) | 0)) {
      $314 = HEAP32[$this + 8 >> 2] | 0;
      $318 = HEAP32[$0 >> 2] | 0;
      $319 = HEAP32[$318 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$314 >> 2] | 0) + 48 >> 2] & 15]($314, $319, 0, HEAP32[$318 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $319 - (HEAP32[$318 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 14:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19047, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $348 = HEAP32[$this + 32 >> 2] | 0;
     if (!$348) {
      $351 = HEAP32[$this + 8 >> 2] | 0;
      $355 = HEAP32[$0 >> 2] | 0;
      $356 = HEAP32[$355 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$351 >> 2] | 0) + 48 >> 2] & 15]($351, $356, 0, HEAP32[$355 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $356 - (HEAP32[$355 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     } else {
      $375 = HEAP32[(HEAP32[$348 >> 2] | 0) + 24 >> 2] | 0;
      $376 = _bitshift64Ashr(0, HEAP32[$ops + 8 >> 2] | 0, 32) | 0;
      FUNCTION_TABLE_viii[$375 & 15]($348, $376, tempRet0);
      $384 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$348 >> 2] | 0) + 8 >> 2] & 63]($348, HEAP32[$this + 4 >> 2] | 0, HEAP32[$384 >> 2] | 0, HEAP32[$384 + 4 >> 2] | 0, -1) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     break;
    }
   case 19:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19067, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $393 = HEAP32[$this + 32 >> 2] | 0;
     if (!$393) {
      $396 = HEAP32[$this + 8 >> 2] | 0;
      $400 = HEAP32[$0 >> 2] | 0;
      $401 = HEAP32[$400 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$396 >> 2] | 0) + 48 >> 2] & 15]($396, $401, 0, HEAP32[$400 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $401 - (HEAP32[$400 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     } else {
      $415 = Math_imul(HEAP32[$3 + 64 >> 2] | 0, HEAP32[$ops + 16 >> 2] | 0) | 0;
      FUNCTION_TABLE_viii[HEAP32[(HEAP32[$393 >> 2] | 0) + 24 >> 2] & 15]($393, $415, (($415 | 0) < 0) << 31 >> 31);
      $427 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$393 >> 2] | 0) + 8 >> 2] & 63]($393, HEAP32[$this + 4 >> 2] | 0, HEAP32[$427 >> 2] | 0, HEAP32[$427 + 4 >> 2] | 0, -1) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     break;
    }
   case 15:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19069, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $435 = __Znwj(16) | 0;
     HEAP32[$435 >> 2] = 4896;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($435 + 4 | 0, $4);
     $437 = $this + 32 | 0;
     $438 = HEAP32[$437 >> 2] | 0;
     if ($438) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$438 >> 2] | 0) + 4 >> 2] & 255]($438);
     HEAP32[$437 >> 2] = $435;
     $449 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$435 >> 2] | 0) + 8 >> 2] & 63]($435, HEAP32[$this + 4 >> 2] | 0, HEAP32[$449 >> 2] | 0, HEAP32[$449 + 4 >> 2] | 0, -1) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 7:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19065, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $457 = HEAP32[$ops >> 2] | 0;
     $458 = __Znwj(4) | 0;
     HEAP32[$458 >> 2] = 4932;
     __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($this + 32 | 0, $457, $458);
     $466 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$458 >> 2] | 0) + 8 >> 2] & 63]($458, HEAP32[$this + 4 >> 2] | 0, HEAP32[$466 >> 2] | 0, HEAP32[$466 + 4 >> 2] | 0, $457) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 8:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19065, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $474 = HEAP32[$ops >> 2] | 0;
     $475 = __Znwj(4) | 0;
     HEAP32[$475 >> 2] = 4968;
     __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($this + 32 | 0, $474, $475);
     $483 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$475 >> 2] | 0) + 8 >> 2] & 63]($475, HEAP32[$this + 4 >> 2] | 0, HEAP32[$483 >> 2] | 0, HEAP32[$483 + 4 >> 2] | 0, $474) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 5:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19059, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $491 = HEAP32[$ops >> 2] | 0;
     $493 = $ops + 8 | 0;
     $500 = HEAP32[$3 + 64 >> 2] | 0;
     $503 = ___muldi3($500 | 0, (($500 | 0) < 0) << 31 >> 31 | 0, HEAP32[$493 >> 2] | 0, HEAP32[$493 + 4 >> 2] | 0) | 0;
     $505 = $this + 32 | 0;
     if (!(HEAP32[$505 >> 2] | 0)) {
      $509 = HEAP32[$this + 8 >> 2] | 0;
      $513 = HEAP32[$0 >> 2] | 0;
      $514 = HEAP32[$513 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$509 >> 2] | 0) + 48 >> 2] & 15]($509, $514, 0, HEAP32[$513 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $514 - (HEAP32[$513 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     } else {
      $524 = __Znwj(12) | 0;
      HEAP32[$524 >> 2] = 4824;
      HEAP32[$524 + 4 >> 2] = -1;
      HEAP32[$524 + 8 >> 2] = $503;
      __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($505, $491, $524);
      $533 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$524 >> 2] | 0) + 8 >> 2] & 63]($524, HEAP32[$this + 4 >> 2] | 0, HEAP32[$533 >> 2] | 0, HEAP32[$533 + 4 >> 2] | 0, $491) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     break;
    }
   case 17:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19062, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $541 = HEAP32[$ops >> 2] | 0;
     $546 = Math_imul(HEAP32[$3 + 64 >> 2] | 0, HEAP32[$ops + 16 >> 2] | 0) | 0;
     $547 = $this + 32 | 0;
     if (!(HEAP32[$547 >> 2] | 0)) {
      $551 = HEAP32[$this + 8 >> 2] | 0;
      $555 = HEAP32[$0 >> 2] | 0;
      $556 = HEAP32[$555 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$551 >> 2] | 0) + 48 >> 2] & 15]($551, $556, 0, HEAP32[$555 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $556 - (HEAP32[$555 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     } else {
      $566 = __Znwj(12) | 0;
      HEAP32[$566 >> 2] = 4824;
      HEAP32[$566 + 4 >> 2] = -1;
      HEAP32[$566 + 8 >> 2] = $546;
      __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($547, $541, $566);
      $575 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$566 >> 2] | 0) + 8 >> 2] & 63]($566, HEAP32[$this + 4 >> 2] | 0, HEAP32[$575 >> 2] | 0, HEAP32[$575 + 4 >> 2] | 0, $541) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     break;
    }
   case 47:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19059, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $583 = HEAP32[$ops >> 2] | 0;
     $585 = $ops + 8 | 0;
     $591 = _i64Subtract(0, 0, HEAP32[$585 >> 2] | 0, HEAP32[$585 + 4 >> 2] | 0) | 0;
     $594 = HEAP32[$3 + 64 >> 2] | 0;
     $597 = ___muldi3($594 | 0, (($594 | 0) < 0) << 31 >> 31 | 0, $591 | 0, tempRet0 | 0) | 0;
     $599 = $this + 32 | 0;
     if (!(HEAP32[$599 >> 2] | 0)) {
      $603 = HEAP32[$this + 8 >> 2] | 0;
      $607 = HEAP32[$0 >> 2] | 0;
      $608 = HEAP32[$607 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$603 >> 2] | 0) + 48 >> 2] & 15]($603, $608, 0, HEAP32[$607 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $608 - (HEAP32[$607 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     } else {
      $618 = __Znwj(12) | 0;
      HEAP32[$618 >> 2] = 4824;
      HEAP32[$618 + 4 >> 2] = -1;
      HEAP32[$618 + 8 >> 2] = $597;
      __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($599, $583, $618);
      $627 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$618 >> 2] | 0) + 8 >> 2] & 63]($618, HEAP32[$this + 4 >> 2] | 0, HEAP32[$627 >> 2] | 0, HEAP32[$627 + 4 >> 2] | 0, $583) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     break;
    }
   case 20:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19059, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $635 = HEAP32[$ops >> 2] | 0;
     $637 = $ops + 8 | 0;
     $644 = HEAP32[$3 + 64 >> 2] | 0;
     $647 = ___muldi3($644 | 0, (($644 | 0) < 0) << 31 >> 31 | 0, HEAP32[$637 >> 2] | 0, HEAP32[$637 + 4 >> 2] | 0) | 0;
     $649 = $this + 32 | 0;
     if (!(HEAP32[$649 >> 2] | 0)) {
      $653 = HEAP32[$this + 8 >> 2] | 0;
      $657 = HEAP32[$0 >> 2] | 0;
      $658 = HEAP32[$657 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$653 >> 2] | 0) + 48 >> 2] & 15]($653, $658, 0, HEAP32[$657 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $658 - (HEAP32[$657 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     } else {
      $668 = __Znwj(12) | 0;
      HEAP32[$668 >> 2] = 4860;
      HEAP32[$668 + 4 >> 2] = -1;
      HEAP32[$668 + 8 >> 2] = $647;
      __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($649, $635, $668);
      $677 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$668 >> 2] | 0) + 8 >> 2] & 63]($668, HEAP32[$this + 4 >> 2] | 0, HEAP32[$677 >> 2] | 0, HEAP32[$677 + 4 >> 2] | 0, $635) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     break;
    }
   case 21:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19062, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $685 = HEAP32[$ops >> 2] | 0;
     $690 = Math_imul(HEAP32[$3 + 64 >> 2] | 0, HEAP32[$ops + 16 >> 2] | 0) | 0;
     $691 = $this + 32 | 0;
     if (!(HEAP32[$691 >> 2] | 0)) {
      $695 = HEAP32[$this + 8 >> 2] | 0;
      $699 = HEAP32[$0 >> 2] | 0;
      $700 = HEAP32[$699 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$695 >> 2] | 0) + 48 >> 2] & 15]($695, $700, 0, HEAP32[$699 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $700 - (HEAP32[$699 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     } else {
      $710 = __Znwj(12) | 0;
      HEAP32[$710 >> 2] = 4860;
      HEAP32[$710 + 4 >> 2] = -1;
      HEAP32[$710 + 8 >> 2] = $690;
      __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($691, $685, $710);
      $719 = $this + 16 | 0;
      if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$710 >> 2] | 0) + 8 >> 2] & 63]($710, HEAP32[$this + 4 >> 2] | 0, HEAP32[$719 >> 2] | 0, HEAP32[$719 + 4 >> 2] | 0, $685) | 0) break L10; else {
       $$0 = 0;
       break L7;
      }
     }
     break;
    }
   case 9:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19059, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $727 = HEAP32[$ops >> 2] | 0;
     $728 = __Znwj(8) | 0;
     $732 = HEAP32[$ops + 8 >> 2] | 0;
     HEAP32[$728 >> 2] = 5004;
     HEAP32[$728 + 4 >> 2] = $732;
     __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($this + 32 | 0, $727, $728);
     $744 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$728 >> 2] | 0) + 8 >> 2] & 63]($728, HEAP32[$this + 4 >> 2] | 0, HEAP32[$744 >> 2] | 0, HEAP32[$744 + 4 >> 2] | 0, $727) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 16:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19071, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $752 = HEAP32[$ops >> 2] | 0;
     $753 = __Znwj(16) | 0;
     HEAP32[$753 >> 2] = 5040;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($753 + 4 | 0, $4);
     __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($this + 32 | 0, $752, $753);
     $762 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$753 >> 2] | 0) + 8 >> 2] & 63]($753, HEAP32[$this + 4 >> 2] | 0, HEAP32[$762 >> 2] | 0, HEAP32[$762 + 4 >> 2] | 0, $752) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 22:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19071, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     $770 = HEAP32[$ops >> 2] | 0;
     $771 = __Znwj(16) | 0;
     HEAP32[$771 >> 2] = 4896;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($771 + 4 | 0, $4);
     __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($this + 32 | 0, $770, $771);
     $780 = $this + 16 | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$771 >> 2] | 0) + 8 >> 2] & 63]($771, HEAP32[$this + 4 >> 2] | 0, HEAP32[$780 >> 2] | 0, HEAP32[$780 + 4 >> 2] | 0, $770) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 6:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19065, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     if (!(__ZN12dwarf2reader13CallFrameInfo5State9DoRestoreEj($this, HEAP32[$ops >> 2] | 0) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   case 10:
    {
     __ZNSt3__15dequeIN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS3_EEE9push_backERKS3_($this + 64 | 0, $this + 32 | 0);
     break;
    }
   case 11:
    {
     $792 = $this + 84 | 0;
     $793 = HEAP32[$792 >> 2] | 0;
     if (!$793) {
      $796 = HEAP32[$this + 8 >> 2] | 0;
      $800 = HEAP32[$1 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$796 >> 2] | 0) + 52 >> 2] & 15]($796, $800, 0, $6, $800 + $13 - (HEAP32[$1 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     }
     $807 = $this + 80 | 0;
     $810 = $793 + -1 + (HEAP32[$807 >> 2] | 0) | 0;
     $811 = $this + 68 | 0;
     $817 = (HEAP32[(HEAP32[$811 >> 2] | 0) + ($810 >>> 8 << 2) >> 2] | 0) + (($810 & 255) << 4) | 0;
     $818 = $this + 32 | 0;
     if (HEAP32[$818 >> 2] | 0) if (!(HEAP32[$817 >> 2] | 0)) {
      $824 = HEAP32[$this + 8 >> 2] | 0;
      $828 = HEAP32[$1 >> 2] | 0;
      FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$824 >> 2] | 0) + 56 >> 2] & 15]($824, $828, 0, $6, $828 + $13 - (HEAP32[$1 + 4 >> 2] | 0) | 0, 0);
      $$0 = 0;
      break L7;
     }
     $838 = $this + 16 | 0;
     __ZNK12dwarf2reader13CallFrameInfo7RuleMap18HandleTransitionToEPNS0_7HandlerEyRKS1_($818, HEAP32[$this + 4 >> 2] | 0, HEAP32[$838 >> 2] | 0, HEAP32[$838 + 4 >> 2] | 0, $817) | 0;
     __ZN12dwarf2reader13CallFrameInfo7RuleMapaSERKS1_($818, $817) | 0;
     $847 = (HEAP32[$792 >> 2] | 0) + -1 + (HEAP32[$807 >> 2] | 0) | 0;
     __ZN12dwarf2reader13CallFrameInfo7RuleMapD2Ev((HEAP32[(HEAP32[$811 >> 2] | 0) + ($847 >>> 8 << 2) >> 2] | 0) + (($847 & 255) << 4) | 0);
     $854 = HEAP32[$792 >> 2] | 0;
     HEAP32[$792 >> 2] = $854 + -1;
     $856 = $this + 72 | 0;
     $857 = HEAP32[$856 >> 2] | 0;
     $858 = HEAP32[$811 >> 2] | 0;
     if ((1 - $854 - (HEAP32[$807 >> 2] | 0) + (($857 | 0) == ($858 | 0) ? 0 : ($857 - $858 << 6) + -1 | 0) | 0) >>> 0 > 511) {
      __ZdlPv(HEAP32[$857 + -4 >> 2] | 0);
      HEAP32[$856 >> 2] = (HEAP32[$856 >> 2] | 0) + -4;
     }
     break;
    }
   case 0:
    break;
   case 45:
    {
     $92 = $this + 32 | 0;
     $93 = $this + 4 | 0;
     $94 = $this + 16 | 0;
     $i$0108 = 8;
     do {
      $874 = __Znwj(8) | 0;
      HEAP32[$874 >> 2] = 5004;
      HEAP32[$874 + 4 >> 2] = $i$0108 + 16;
      __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($92, $i$0108, $874);
      $881 = $94;
      if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$874 >> 2] | 0) + 8 >> 2] & 63]($874, HEAP32[$93 >> 2] | 0, HEAP32[$881 >> 2] | 0, HEAP32[$881 + 4 >> 2] | 0, $i$0108) | 0)) {
       $$0 = 0;
       break L7;
      }
      $i$0108 = $i$0108 + 1 | 0;
     } while (($i$0108 | 0) < 16);
     $i1$0107 = 16;
     do {
      $890 = __Znwj(12) | 0;
      $896 = Math_imul(HEAPU8[(HEAP32[$this >> 2] | 0) + 24 >> 0] | 0, $i1$0107 + -16 | 0) | 0;
      HEAP32[$890 >> 2] = 4824;
      HEAP32[$890 + 4 >> 2] = -1;
      HEAP32[$890 + 8 >> 2] = $896;
      __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($92, $i1$0107, $890);
      $903 = $94;
      if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$890 >> 2] | 0) + 8 >> 2] & 63]($890, HEAP32[$93 >> 2] | 0, HEAP32[$903 >> 2] | 0, HEAP32[$903 + 4 >> 2] | 0, $i1$0107) | 0)) {
       $$0 = 0;
       break L7;
      }
      $i1$0107 = $i1$0107 + 1 | 0;
     } while (($i1$0107 | 0) < 32);
     break;
    }
   case 46:
    {
     if (!(__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19047, $ops) | 0)) {
      $$0 = 0;
      break L7;
     }
     break;
    }
   default:
    {
     $912 = HEAP32[$this + 8 >> 2] | 0;
     $916 = HEAP32[$1 >> 2] | 0;
     FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$912 >> 2] | 0) + 44 >> 2] & 15]($912, $916, 0, $6, $916 + $13 - (HEAP32[$1 + 4 >> 2] | 0) | 0, 0);
     $$0 = 0;
     break L7;
    }
   } while (0);
   $$0 = 1;
   break;
  }
 case 64:
  {
   $19 = $3 + 56 | 0;
   $25 = ___muldi3(HEAP32[$19 >> 2] | 0, HEAP32[$19 + 4 >> 2] | 0, $15 & 63 | 0, 0) | 0;
   $27 = $this + 16 | 0;
   $28 = $27;
   $34 = _i64Add(HEAP32[$28 >> 2] | 0, HEAP32[$28 + 4 >> 2] | 0, $25 | 0, tempRet0 | 0) | 0;
   $36 = $27;
   HEAP32[$36 >> 2] = $34;
   HEAP32[$36 + 4 >> 2] = tempRet0;
   label = 13;
   break;
  }
 case 128:
  {
   if (__ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, 19047, $ops) | 0) {
    $41 = $15 & 63;
    $43 = $ops + 8 | 0;
    $50 = HEAP32[$3 + 64 >> 2] | 0;
    $53 = ___muldi3($50 | 0, (($50 | 0) < 0) << 31 >> 31 | 0, HEAP32[$43 >> 2] | 0, HEAP32[$43 + 4 >> 2] | 0) | 0;
    $55 = $this + 32 | 0;
    if (!(HEAP32[$55 >> 2] | 0)) {
     $59 = HEAP32[$this + 8 >> 2] | 0;
     $63 = HEAP32[$0 >> 2] | 0;
     $64 = HEAP32[$63 >> 2] | 0;
     FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$59 >> 2] | 0) + 48 >> 2] & 15]($59, $64, 0, HEAP32[$63 + 8 >> 2] | 0, (HEAP32[$8 >> 2] | 0) + $64 - (HEAP32[$63 + 4 >> 2] | 0) | 0, 0);
     $$0 = 0;
     break L7;
    } else {
     $74 = __Znwj(12) | 0;
     HEAP32[$74 >> 2] = 4824;
     HEAP32[$74 + 4 >> 2] = -1;
     HEAP32[$74 + 8 >> 2] = $53;
     __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($55, $41, $74);
     $83 = $this + 16 | 0;
     if (FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$74 >> 2] | 0) + 8 >> 2] & 63]($74, HEAP32[$this + 4 >> 2] | 0, HEAP32[$83 >> 2] | 0, HEAP32[$83 + 4 >> 2] | 0, $41) | 0) {
      label = 13;
      break L7;
     } else {
      $$0 = 0;
      break L7;
     }
    }
   } else $$0 = 0;
   break;
  }
 case 192:
  {
   if (__ZN12dwarf2reader13CallFrameInfo5State9DoRestoreEj($this, $15 & 63) | 0) label = 13; else $$0 = 0;
   break;
  }
 default:
  ___assert_fail(22458, 18044, 1461, 19011);
 } while (0);
 if ((label | 0) == 13) $$0 = 1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return $$0 | 0;
}

function _main($argc, $argv) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 var $$$i$i = 0, $$043$i = 0, $$123$i = 0, $$224$i = 0, $$lcssa = 0, $$lcssa48 = 0, $$lcssa49$i$i = 0, $$lcssa50$i$i = 0, $$sink37$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $119 = 0, $12 = 0, $123 = 0, $136 = 0, $138 = 0, $140 = 0, $145 = 0, $146 = 0, $148 = 0, $158 = 0, $16 = 0, $162 = 0, $176 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $186 = 0, $196 = 0, $2 = 0, $20 = 0, $200 = 0, $214 = 0, $216 = 0, $22 = 0, $221 = 0, $222 = 0, $224 = 0, $234 = 0, $238 = 0, $252 = 0, $254 = 0, $259 = 0, $260 = 0, $262 = 0, $272 = 0, $276 = 0, $28 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $291 = 0, $292 = 0, $293 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $3 = 0, $302 = 0, $303 = 0, $305 = 0, $308 = 0, $31 = 0, $310 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $323 = 0, $324 = 0, $326 = 0, $329 = 0, $336 = 0, $340 = 0, $342 = 0, $351 = 0, $354 = 0, $355 = 0, $357 = 0, $358 = 0, $36 = 0, $364 = 0, $366 = 0, $367 = 0, $374 = 0, $377 = 0, $378 = 0, $379 = 0, $380 = 0, $39 = 0, $4 = 0, $45 = 0, $5 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $64 = 0, $7 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $81 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $93 = 0, $95 = 0, $99 = 0, $__lhs_sz$05$i$i = 0, $__lhs_sz$05$i$i$i = 0, $__lhs_sz$05$i$i55$i = 0, $__lhs_sz$05$i$i65$i = 0, $__lhs_sz$05$i$i75$i = 0, $__lp$03$i$i = 0, $__lp$03$i$i$i = 0, $__lp$03$i$i57$i = 0, $__lp$03$i$i67$i = 0, $__lp$03$i$i77$i = 0, $__rp$04$i$i = 0, $__rp$04$i$i$i = 0, $__rp$04$i$i56$i = 0, $__rp$04$i$i66$i = 0, $__rp$04$i$i76$i = 0, $cfi_module$i = 0, $dump_symbols$i = 0, $from_data$i$i = 0, $i$0126$i = 0, $module$i = 0, $options = 0, $phitmp$i74$i = 0, $to_data$i$i = 0, $vararg_buffer = 0, $vararg_buffer14 = 0, $vararg_buffer18 = 0, $vararg_buffer22 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $vararg_buffer22 = sp + 24 | 0;
 $vararg_buffer18 = sp + 16 | 0;
 $vararg_buffer14 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 256 | 0;
 $from_data$i$i = sp + 244 | 0;
 $to_data$i$i = sp + 232 | 0;
 $dump_symbols$i = sp + 168 | 0;
 $module$i = sp + 164 | 0;
 $cfi_module$i = sp + 160 | 0;
 $1 = sp + 148 | 0;
 $2 = sp + 136 | 0;
 $3 = sp + 124 | 0;
 $4 = sp + 112 | 0;
 $5 = sp + 100 | 0;
 $6 = sp + 88 | 0;
 $7 = sp + 76 | 0;
 $8 = sp + 64 | 0;
 $options = sp + 32 | 0;
 $9 = $options + 28 | 0;
 HEAP32[$options >> 2] = 0;
 HEAP32[$options + 4 >> 2] = 0;
 HEAP32[$options + 8 >> 2] = 0;
 HEAP32[$options + 12 >> 2] = 0;
 HEAP32[$options + 16 >> 2] = 0;
 HEAP32[$options + 20 >> 2] = 0;
 HEAP32[$options + 24 >> 2] = 0;
 HEAP8[$9 >> 0] = 1;
 $10 = $options + 29 | 0;
 HEAP8[$10 >> 0] = 1;
 $11 = $options + 24 | 0;
 $12 = $options + 12 | 0;
 L1 : while (1) switch ((_getopt($argc, $argv, 24094) | 0) << 24 >> 24 | 0) {
 case -1:
  {
   label = 10;
   break L1;
   break;
  }
 case 104:
 case 63:
  {
   label = 9;
   break L1;
   break;
  }
 case 97:
  {
   $16 = __ZN15google_breakpad27BreakpadGetArchInfoFromNameEPKc(HEAP32[1339] | 0) | 0;
   if (!$16) {
    label = 4;
    break L1;
   }
   HEAP32[$11 >> 2] = $16;
   continue L1;
   break;
  }
 case 103:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($12, HEAP32[1339] | 0) | 0;
   continue L1;
   break;
  }
 case 99:
  {
   HEAP8[$9 >> 0] = 0;
   continue L1;
   break;
  }
 case 114:
  {
   HEAP8[$10 >> 0] = 0;
   continue L1;
   break;
  }
 default:
  continue L1;
 }
 if ((label | 0) == 4) {
  $18 = HEAP32[_stderr >> 2] | 0;
  $20 = HEAP32[1339] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[$argv >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = $20;
  _fprintf($18 | 0, 24103, $vararg_buffer | 0) | 0;
  __ZL5UsageiPPKc($argv);
  _exit(1);
 } else if ((label | 0) == 9) {
  __ZL5UsageiPPKc($argv);
  _exit(0);
 } else if ((label | 0) == 10) {
  $22 = HEAP32[1334] | 0;
  if (($argc - $22 | 0) != 1) {
   _fwrite(24133, 25, 1, HEAP32[_stderr >> 2] | 0) | 0;
   __ZL5UsageiPPKc($argv);
   _exit(1);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($options, HEAP32[$argv + ($22 << 2) >> 2] | 0) | 0;
  $28 = HEAP16[$9 >> 1] | 0;
  $29 = $28 & 255;
  $31 = ($29 ^ 1) & 255;
  HEAP32[$dump_symbols$i >> 2] = $31;
  HEAP8[$dump_symbols$i + 4 >> 0] = ($28 & 65535) >>> 8;
  dest = $dump_symbols$i + 8 | 0;
  stop = dest + 56 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  $36 = HEAP8[$12 >> 0] | 0;
  $39 = $options + 16 | 0;
  if (!((($36 & 1) == 0 ? ($36 & 255) >>> 1 : HEAP32[$39 >> 2] | 0) | 0)) $55 = 0; else {
   $45 = HEAP8[$options >> 0] | 0;
   $55 = $29 << 24 >> 24 != 0 ? ((($45 & 1) == 0 ? ($45 & 255) >>> 1 : HEAP32[$options + 4 >> 2] | 0) | 0) != 0 : 0;
  }
  $54 = $55 ? $12 : $options;
  if (!(__ZN15google_breakpad11DumpSymbols4ReadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($dump_symbols$i, $54) | 0)) {
   $$224$i = 0;
   __ZN15google_breakpad11DumpSymbolsD2Ev($dump_symbols$i);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   $377 = $$224$i & 1;
   $378 = $377 ^ 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($options);
   STACKTOP = sp;
   return $378 | 0;
  }
  $57 = HEAP32[$11 >> 2] | 0;
  if ($57) if (!(__ZN15google_breakpad11DumpSymbols15SetArchitectureEii($dump_symbols$i, HEAP32[$57 + 4 >> 2] | 0, HEAP32[$57 + 8 >> 2] | 0) | 0)) {
   $64 = HEAP32[_stderr >> 2] | 0;
   if (!(HEAP8[$54 >> 0] & 1)) $73 = $54 + 1 | 0; else $73 = HEAP32[$54 + 8 >> 2] | 0;
   $72 = HEAP32[HEAP32[$11 >> 2] >> 2] | 0;
   HEAP32[$vararg_buffer14 >> 2] = $73;
   HEAP32[$vararg_buffer14 + 4 >> 2] = $72;
   _fprintf($64 | 0, 24159, $vararg_buffer14 | 0) | 0;
   $75 = HEAP32[$dump_symbols$i + 40 >> 2] | 0;
   $77 = HEAP32[$dump_symbols$i + 36 >> 2] | 0;
   $81 = $75 - $77 >> 5;
   $$$i$i = ($75 | 0) == ($77 | 0) ? 0 : $77;
   if (($81 | 0) == 1) {
    _fwrite(24205, 28, 1, $64 | 0) | 0;
    $i$0126$i = 0;
   } else {
    _fwrite(24234, 39, 1, $64 | 0) | 0;
    if (!$81) {
     $$224$i = 0;
     __ZN15google_breakpad11DumpSymbolsD2Ev($dump_symbols$i);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
     $377 = $$224$i & 1;
     $378 = $377 ^ 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($options);
     STACKTOP = sp;
     return $378 | 0;
    } else $i$0126$i = 0;
   }
   do {
    $85 = $$$i$i + ($i$0126$i << 5) | 0;
    $87 = $$$i$i + ($i$0126$i << 5) + 4 | 0;
    $89 = __ZN15google_breakpad30BreakpadGetArchInfoFromCpuTypeEii(HEAP32[$85 >> 2] | 0, HEAP32[$87 >> 2] | 0) | 0;
    if (!$89) {
     $95 = HEAP32[$87 >> 2] | 0;
     HEAP32[$vararg_buffer22 >> 2] = HEAP32[$85 >> 2];
     HEAP32[$vararg_buffer22 + 4 >> 2] = $95;
     _fprintf($64 | 0, 24283, $vararg_buffer22 | 0) | 0;
    } else {
     $93 = HEAP32[$89 + 16 >> 2] | 0;
     HEAP32[$vararg_buffer18 >> 2] = HEAP32[$89 >> 2];
     HEAP32[$vararg_buffer18 + 4 >> 2] = $93;
     _fprintf($64 | 0, 24274, $vararg_buffer18 | 0) | 0;
    }
    $i$0126$i = $i$0126$i + 1 | 0;
   } while ($i$0126$i >>> 0 < $81 >>> 0);
   $$224$i = 0;
   __ZN15google_breakpad11DumpSymbolsD2Ev($dump_symbols$i);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   $377 = $$224$i & 1;
   $378 = $377 ^ 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($options);
   STACKTOP = sp;
   return $378 | 0;
  }
  HEAP32[$module$i >> 2] = 0;
  if (!(__ZN15google_breakpad11DumpSymbols14ReadSymbolDataEPPNS_6ModuleE($dump_symbols$i, $module$i) | 0)) {
   $$224$i = 0;
   __ZN15google_breakpad11DumpSymbolsD2Ev($dump_symbols$i);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   $377 = $$224$i & 1;
   $378 = $377 ^ 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($options);
   STACKTOP = sp;
   return $378 | 0;
  }
  $99 = HEAP32[$module$i >> 2] | 0;
  L42 : do if ($55) {
   $100 = HEAP8[$54 >> 0] | 0;
   $102 = ($100 & 1) == 0;
   $107 = $102 ? ($100 & 255) >>> 1 : HEAP32[$54 + 4 >> 2] | 0;
   $108 = HEAP8[$12 >> 0] | 0;
   $110 = ($108 & 1) == 0;
   if (($107 | 0) == (($110 ? ($108 & 255) >>> 1 : HEAP32[$39 >> 2] | 0) | 0)) {
    $119 = $102 ? $54 + 1 | 0 : HEAP32[$54 + 8 >> 2] | 0;
    $123 = $110 ? $12 + 1 | 0 : HEAP32[$options + 20 >> 2] | 0;
    if ($102) {
     if ($107) {
      $__lhs_sz$05$i$i = $107;
      $__lp$03$i$i = $119;
      $__rp$04$i$i = $123;
      while (1) {
       if ((HEAP8[$__lp$03$i$i >> 0] | 0) != (HEAP8[$__rp$04$i$i >> 0] | 0)) {
        $374 = $99;
        label = 97;
        break L42;
       }
       $__lhs_sz$05$i$i = $__lhs_sz$05$i$i + -1 | 0;
       if (!$__lhs_sz$05$i$i) break; else {
        $__lp$03$i$i = $__lp$03$i$i + 1 | 0;
        $__rp$04$i$i = $__rp$04$i$i + 1 | 0;
       }
      }
     }
    } else if (_memcmp($119, $123, $107) | 0) {
     $374 = $99;
     label = 97;
     break;
    }
    if (__ZN15google_breakpad11DumpSymbols4ReadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($dump_symbols$i, $options) | 0) {
     HEAP32[$cfi_module$i >> 2] = 0;
     if (__ZN15google_breakpad11DumpSymbols14ReadSymbolDataEPPNS_6ModuleE($dump_symbols$i, $cfi_module$i) | 0) {
      $136 = HEAP32[$cfi_module$i >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($1, $136);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, HEAP32[$module$i >> 2] | 0);
      $138 = HEAP8[$1 >> 0] | 0;
      $140 = ($138 & 1) == 0;
      $145 = $140 ? ($138 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0;
      $146 = HEAP8[$2 >> 0] | 0;
      $148 = ($146 & 1) == 0;
      L54 : do if (($145 | 0) == (($148 ? ($146 & 255) >>> 1 : HEAP32[$2 + 4 >> 2] | 0) | 0)) {
       $158 = $140 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0;
       $162 = $148 ? $2 + 1 | 0 : HEAP32[$2 + 8 >> 2] | 0;
       L56 : do if ($140) {
        if ($145) {
         $__lhs_sz$05$i$i$i = $145;
         $__lp$03$i$i$i = $158;
         $__rp$04$i$i$i = $162;
         while (1) {
          if ((HEAP8[$__lp$03$i$i$i >> 0] | 0) != (HEAP8[$__rp$04$i$i$i >> 0] | 0)) break;
          $__lhs_sz$05$i$i$i = $__lhs_sz$05$i$i$i + -1 | 0;
          if (!$__lhs_sz$05$i$i$i) break L56; else {
           $__lp$03$i$i$i = $__lp$03$i$i$i + 1 | 0;
           $__rp$04$i$i$i = $__rp$04$i$i$i + 1 | 0;
          }
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         label = 72;
         break L54;
        }
       } else if (_memcmp($158, $162, $145) | 0) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        label = 72;
        break L54;
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, (HEAP32[$cfi_module$i >> 2] | 0) + 12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($4, (HEAP32[$module$i >> 2] | 0) + 12 | 0);
       $176 = HEAP8[$3 >> 0] | 0;
       $178 = ($176 & 1) == 0;
       $183 = $178 ? ($176 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0;
       $184 = HEAP8[$4 >> 0] | 0;
       $186 = ($184 & 1) == 0;
       if (($183 | 0) != (($186 ? ($184 & 255) >>> 1 : HEAP32[$4 + 4 >> 2] | 0) | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        label = 72;
        break;
       }
       $196 = $178 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0;
       $200 = $186 ? $4 + 1 | 0 : HEAP32[$4 + 8 >> 2] | 0;
       L68 : do if ($178) {
        if ($183) {
         $__lhs_sz$05$i$i55$i = $183;
         $__lp$03$i$i57$i = $196;
         $__rp$04$i$i56$i = $200;
         while (1) {
          if ((HEAP8[$__lp$03$i$i57$i >> 0] | 0) != (HEAP8[$__rp$04$i$i56$i >> 0] | 0)) break;
          $__lhs_sz$05$i$i55$i = $__lhs_sz$05$i$i55$i + -1 | 0;
          if (!$__lhs_sz$05$i$i55$i) break L68; else {
           $__lp$03$i$i57$i = $__lp$03$i$i57$i + 1 | 0;
           $__rp$04$i$i56$i = $__rp$04$i$i56$i + 1 | 0;
          }
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         label = 72;
         break L54;
        }
       } else if (_memcmp($196, $200, $183) | 0) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        label = 72;
        break L54;
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, (HEAP32[$cfi_module$i >> 2] | 0) + 24 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6, (HEAP32[$module$i >> 2] | 0) + 24 | 0);
       $214 = HEAP8[$5 >> 0] | 0;
       $216 = ($214 & 1) == 0;
       $221 = $216 ? ($214 & 255) >>> 1 : HEAP32[$5 + 4 >> 2] | 0;
       $222 = HEAP8[$6 >> 0] | 0;
       $224 = ($222 & 1) == 0;
       if (($221 | 0) != (($224 ? ($222 & 255) >>> 1 : HEAP32[$6 + 4 >> 2] | 0) | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        label = 72;
        break;
       }
       $234 = $216 ? $5 + 1 | 0 : HEAP32[$5 + 8 >> 2] | 0;
       $238 = $224 ? $6 + 1 | 0 : HEAP32[$6 + 8 >> 2] | 0;
       L80 : do if ($216) {
        if (!$221) break; else {
         $__lhs_sz$05$i$i65$i = $221;
         $__lp$03$i$i67$i = $234;
         $__rp$04$i$i66$i = $238;
        }
        while (1) {
         if ((HEAP8[$__lp$03$i$i67$i >> 0] | 0) != (HEAP8[$__rp$04$i$i66$i >> 0] | 0)) break;
         $__lhs_sz$05$i$i65$i = $__lhs_sz$05$i$i65$i + -1 | 0;
         if (!$__lhs_sz$05$i$i65$i) break L80; else {
          $__lp$03$i$i67$i = $__lp$03$i$i67$i + 1 | 0;
          $__rp$04$i$i66$i = $__rp$04$i$i66$i + 1 | 0;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        label = 72;
        break L54;
       } else {
        if (!(_memcmp($234, $238, $221) | 0)) break;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        label = 72;
        break L54;
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($7, (HEAP32[$cfi_module$i >> 2] | 0) + 36 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($8, (HEAP32[$module$i >> 2] | 0) + 36 | 0);
       $252 = HEAP8[$7 >> 0] | 0;
       $254 = ($252 & 1) == 0;
       $259 = $254 ? ($252 & 255) >>> 1 : HEAP32[$7 + 4 >> 2] | 0;
       $260 = HEAP8[$8 >> 0] | 0;
       $262 = ($260 & 1) == 0;
       if (($259 | 0) != (($262 ? ($260 & 255) >>> 1 : HEAP32[$8 + 4 >> 2] | 0) | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        label = 72;
        break;
       }
       $272 = $254 ? $7 + 1 | 0 : HEAP32[$7 + 8 >> 2] | 0;
       $276 = $262 ? $8 + 1 | 0 : HEAP32[$8 + 8 >> 2] | 0;
       do if ($254) {
        if (!$259) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         break;
        } else {
         $__lhs_sz$05$i$i75$i = $259;
         $__lp$03$i$i77$i = $272;
         $__rp$04$i$i76$i = $276;
        }
        while (1) {
         if ((HEAP8[$__lp$03$i$i77$i >> 0] | 0) != (HEAP8[$__rp$04$i$i76$i >> 0] | 0)) {
          label = 71;
          break;
         }
         $__lhs_sz$05$i$i75$i = $__lhs_sz$05$i$i75$i + -1 | 0;
         if (!$__lhs_sz$05$i$i75$i) {
          label = 74;
          break;
         } else {
          $__lp$03$i$i77$i = $__lp$03$i$i77$i + 1 | 0;
          $__rp$04$i$i76$i = $__rp$04$i$i76$i + 1 | 0;
         }
        }
        if ((label | 0) == 71) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         label = 72;
         break L54;
        } else if ((label | 0) == 74) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         break;
        }
       } else {
        $phitmp$i74$i = (_memcmp($272, $276, $259) | 0) != 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        if ($phitmp$i74$i) {
         label = 72;
         break L54;
        }
       } while (0);
       $287 = HEAP32[$module$i >> 2] | 0;
       $288 = HEAP32[$cfi_module$i >> 2] | 0;
       HEAP32[$from_data$i$i >> 2] = 0;
       $289 = $from_data$i$i + 4 | 0;
       HEAP32[$289 >> 2] = 0;
       HEAP32[$from_data$i$i + 8 >> 2] = 0;
       __ZNK15google_breakpad6Module20GetStackFrameEntriesEPNSt3__16vectorIPNS0_15StackFrameEntryENS1_9allocatorIS4_EEEE($288, $from_data$i$i);
       $291 = HEAP32[$from_data$i$i >> 2] | 0;
       $292 = HEAP32[$289 >> 2] | 0;
       HEAP32[$0 >> 2] = 30;
       __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEvT0_SB_T_($291, $292, $0);
       HEAP32[$to_data$i$i >> 2] = 0;
       $293 = $to_data$i$i + 4 | 0;
       HEAP32[$293 >> 2] = 0;
       HEAP32[$to_data$i$i + 8 >> 2] = 0;
       __ZNK15google_breakpad6Module20GetStackFrameEntriesEPNSt3__16vectorIPNS0_15StackFrameEntryENS1_9allocatorIS4_EEEE($287, $to_data$i$i);
       $295 = HEAP32[$to_data$i$i >> 2] | 0;
       $296 = HEAP32[$293 >> 2] | 0;
       HEAP32[$0 >> 2] = 30;
       __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEvT0_SB_T_($295, $296, $0);
       $297 = HEAP32[$from_data$i$i >> 2] | 0;
       $298 = HEAP32[$289 >> 2] | 0;
       if (($297 | 0) != ($298 | 0)) {
        $$sink37$i$i = $297;
        $320 = HEAP32[$to_data$i$i >> 2] | 0;
        $379 = $298;
        while (1) {
         $302 = HEAP32[$$sink37$i$i >> 2] | 0;
         $303 = $302;
         $305 = HEAP32[$303 >> 2] | 0;
         $308 = HEAP32[$303 + 4 >> 2] | 0;
         $310 = $302 + 8 | 0;
         $316 = _i64Add(HEAP32[$310 >> 2] | 0, HEAP32[$310 + 4 >> 2] | 0, $305 | 0, $308 | 0) | 0;
         $317 = tempRet0;
         $318 = HEAP32[$293 >> 2] | 0;
         $319 = $320;
         L108 : do if (($319 | 0) == ($318 | 0)) {
          $$lcssa50$i$i = $320;
          label = 82;
         } else {
          $323 = $319;
          $380 = $320;
          while (1) {
           $324 = HEAP32[$323 >> 2] | 0;
           $326 = HEAP32[$324 >> 2] | 0;
           $329 = HEAP32[$324 + 4 >> 2] | 0;
           if (!($308 >>> 0 > $329 >>> 0 | ($308 | 0) == ($329 | 0) & $305 >>> 0 > $326 >>> 0)) {
            $$lcssa = $323;
            $$lcssa48 = $380;
            $340 = $329;
            $342 = $326;
            break;
           }
           $323 = $323 + 4 | 0;
           $336 = $323;
           if (($323 | 0) == ($318 | 0)) {
            $$lcssa50$i$i = $336;
            label = 82;
            break L108;
           } else $380 = $336;
          }
          if (($$lcssa | 0) == ($318 | 0)) {
           $$lcssa50$i$i = $$lcssa48;
           label = 82;
           break;
          }
          if (($308 >>> 0 < $340 >>> 0 | ($308 | 0) == ($340 | 0) & $305 >>> 0 < $342 >>> 0) & ($317 >>> 0 < $340 >>> 0 | ($317 | 0) == ($340 | 0) & $316 >>> 0 < $342 >>> 0)) {
           $$lcssa50$i$i = $$lcssa48;
           label = 82;
          } else {
           $$lcssa49$i$i = $$lcssa48;
           $354 = $379;
          }
         } while (0);
         if ((label | 0) == 82) {
          label = 0;
          $351 = __Znwj(40) | 0;
          __ZN15google_breakpad6Module15StackFrameEntryC2ERKS1_($351, $302);
          __ZN15google_breakpad6Module18AddStackFrameEntryEPNS0_15StackFrameEntryE($287, $351);
          $$lcssa49$i$i = $$lcssa50$i$i;
          $354 = HEAP32[$289 >> 2] | 0;
         }
         $$sink37$i$i = $$sink37$i$i + 4 | 0;
         if (($$sink37$i$i | 0) == ($354 | 0)) break; else {
          $320 = $$lcssa49$i$i;
          $379 = $354;
         }
        }
       }
       $355 = HEAP32[$to_data$i$i >> 2] | 0;
       $357 = $355;
       if ($355) {
        $358 = HEAP32[$293 >> 2] | 0;
        if (($358 | 0) != ($355 | 0)) HEAP32[$293 >> 2] = $358 + (~(($358 + -4 - $357 | 0) >>> 2) << 2);
        __ZdlPv($355);
       }
       $364 = HEAP32[$from_data$i$i >> 2] | 0;
       $366 = $364;
       if ($364) {
        $367 = HEAP32[$289 >> 2] | 0;
        if (($367 | 0) != ($364 | 0)) HEAP32[$289 >> 2] = $367 + (~(($367 + -4 - $366 | 0) >>> 2) << 2);
        __ZdlPv($364);
       }
       $$043$i = 0;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       label = 72;
      } while (0);
      if ((label | 0) == 72) {
       _fwrite(24325, 68, 1, HEAP32[_stderr >> 2] | 0) | 0;
       $$043$i = 1;
      }
      if ($136) {
       __ZN15google_breakpad6ModuleD2Ev($136);
       __ZdlPv($136);
      }
      if (!$$043$i) {
       $374 = HEAP32[$module$i >> 2] | 0;
       label = 97;
      } else $$123$i = 0;
     } else $$123$i = 0;
    } else $$123$i = 0;
   } else {
    $374 = $99;
    label = 97;
   }
  } else {
   $374 = $99;
   label = 97;
  } while (0);
  if ((label | 0) == 97) $$123$i = __ZN15google_breakpad6Module5WriteERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE10SymbolData($374, 6460, $31) | 0;
  if (!$99) {
   $$224$i = $$123$i;
   __ZN15google_breakpad11DumpSymbolsD2Ev($dump_symbols$i);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   $377 = $$224$i & 1;
   $378 = $377 ^ 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($options);
   STACKTOP = sp;
   return $378 | 0;
  }
  __ZN15google_breakpad6ModuleD2Ev($99);
  __ZdlPv($99);
  $$224$i = $$123$i;
  __ZN15google_breakpad11DumpSymbolsD2Ev($dump_symbols$i);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  $377 = $$224$i & 1;
  $378 = $377 ^ 1;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($options);
  STACKTOP = sp;
  return $378 | 0;
 }
 return 0;
}

function _MUSL_vfscanf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa520 = 0, $$pre = 0, $$pre$phi224Z2D = 0, $$pre210 = 0, $$pre220 = 0, $$size$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $121 = 0, $125 = 0, $13 = 0, $132 = 0, $137 = 0, $141 = 0, $146 = 0, $147 = 0, $153 = 0, $156 = 0, $16 = 0, $160 = 0, $162 = 0, $164 = 0, $169 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $177 = 0, $182 = 0, $186 = 0, $191 = 0, $192 = 0, $193 = 0, $195 = 0, $201 = 0, $205 = 0, $21 = 0, $215 = 0, $219 = 0, $231 = 0, $239 = 0, $248 = 0, $250 = 0, $254 = 0, $256 = 0, $264 = 0, $272 = 0, $273 = 0, $276 = 0, $278 = 0, $28 = 0, $284 = 0, $291 = 0, $293 = 0, $299 = 0, $3 = 0, $305 = 0, $309 = 0, $312 = 0, $319 = 0, $33 = 0, $334 = 0, $338 = 0.0, $37 = 0, $4 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $58 = 0, $6 = 0, $7 = 0, $77 = 0, $78 = 0, $8 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $alloc$0 = 0, $alloc$0203 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$lcssa = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$0$ph20$us105 = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0, $isdigittmp = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0110 = 0, $matches$0110$lcssa = 0, $matches$0110501 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $or$cond$us = 0, $p$0116 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0115 = 0, $pos$1 = 0, $pos$2 = 0, $s$0108 = 0, $s$0108$lcssa = 0, $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $wc = 0, $wcs$0109 = 0, $wcs$0109$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph138 = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $ap2$i = sp + 16 | 0;
 $st = sp + 8 | 0;
 $scanset = sp + 33 | 0;
 $wc = sp;
 $0 = sp + 32 | 0;
 $1 = HEAP8[$fmt >> 0] | 0;
 if (!($1 << 24 >> 24)) {
  $matches$3 = 0;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 $5 = $f + 108 | 0;
 $6 = $f + 8 | 0;
 $7 = $scanset + 10 | 0;
 $8 = $scanset + 33 | 0;
 $9 = $st + 4 | 0;
 $10 = $scanset + 46 | 0;
 $11 = $scanset + 94 | 0;
 $13 = $1;
 $matches$0110 = 0;
 $p$0116 = $fmt;
 $pos$0115 = 0;
 $s$0108 = 0;
 $wcs$0109 = 0;
 L4 : while (1) {
  L6 : do if (!(_isspace($13 & 255) | 0)) {
   $43 = (HEAP8[$p$0116 >> 0] | 0) == 37;
   L8 : do if ($43) {
    $44 = $p$0116 + 1 | 0;
    $45 = HEAP8[$44 >> 0] | 0;
    L10 : do switch ($45 << 24 >> 24) {
    case 37:
     {
      break L8;
      break;
     }
    case 42:
     {
      $dest$0 = 0;
      $p$2 = $p$0116 + 2 | 0;
      break;
     }
    default:
     {
      $isdigittmp = ($45 & 255) + -48 | 0;
      if ($isdigittmp >>> 0 < 10) if ((HEAP8[$p$0116 + 2 >> 0] | 0) == 36) {
       HEAP32[$ap2$i >> 2] = HEAP32[$ap >> 2];
       $i$0$i = $isdigittmp;
       while (1) {
        $77 = (HEAP32[$ap2$i >> 2] | 0) + (4 - 1) & ~(4 - 1);
        $78 = HEAP32[$77 >> 2] | 0;
        HEAP32[$ap2$i >> 2] = $77 + 4;
        if ($i$0$i >>> 0 > 1) $i$0$i = $i$0$i + -1 | 0; else {
         $$lcssa = $78;
         break;
        }
       }
       $dest$0 = $$lcssa;
       $p$2 = $p$0116 + 3 | 0;
       break L10;
      }
      $86 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
      $87 = HEAP32[$86 >> 2] | 0;
      HEAP32[$ap >> 2] = $86 + 4;
      $dest$0 = $87;
      $p$2 = $44;
     }
    } while (0);
    $88 = HEAP8[$p$2 >> 0] | 0;
    $89 = $88 & 255;
    if (($89 + -48 | 0) >>> 0 < 10) {
     $93 = $89;
     $p$396 = $p$2;
     $width$097 = 0;
     while (1) {
      $92 = ($width$097 * 10 | 0) + -48 + $93 | 0;
      $94 = $p$396 + 1 | 0;
      $95 = HEAP8[$94 >> 0] | 0;
      $93 = $95 & 255;
      if (($93 + -48 | 0) >>> 0 >= 10) {
       $$lcssa38 = $95;
       $p$3$lcssa = $94;
       $width$0$lcssa = $92;
       break;
      } else {
       $p$396 = $94;
       $width$097 = $92;
      }
     }
    } else {
     $$lcssa38 = $88;
     $p$3$lcssa = $p$2;
     $width$0$lcssa = 0;
    }
    if ($$lcssa38 << 24 >> 24 == 109) {
     $100 = $p$3$lcssa + 1 | 0;
     $103 = HEAP8[$100 >> 0] | 0;
     $alloc$0 = ($dest$0 | 0) != 0 & 1;
     $p$4 = $100;
     $s$1 = 0;
     $wcs$1 = 0;
    } else {
     $103 = $$lcssa38;
     $alloc$0 = 0;
     $p$4 = $p$3$lcssa;
     $s$1 = $s$0108;
     $wcs$1 = $wcs$0109;
    }
    $101 = $p$4 + 1 | 0;
    switch ($103 & 255 | 0) {
    case 104:
     {
      $105 = (HEAP8[$101 >> 0] | 0) == 104;
      $p$5 = $105 ? $p$4 + 2 | 0 : $101;
      $size$0 = $105 ? -2 : -1;
      break;
     }
    case 108:
     {
      $108 = (HEAP8[$101 >> 0] | 0) == 108;
      $p$5 = $108 ? $p$4 + 2 | 0 : $101;
      $size$0 = $108 ? 3 : 1;
      break;
     }
    case 106:
     {
      $p$5 = $101;
      $size$0 = 3;
      break;
     }
    case 116:
    case 122:
     {
      $p$5 = $101;
      $size$0 = 1;
      break;
     }
    case 76:
     {
      $p$5 = $101;
      $size$0 = 2;
      break;
     }
    case 110:
    case 112:
    case 67:
    case 83:
    case 91:
    case 99:
    case 115:
    case 88:
    case 71:
    case 70:
    case 69:
    case 65:
    case 103:
    case 102:
    case 101:
    case 97:
    case 120:
    case 117:
    case 111:
    case 105:
    case 100:
     {
      $p$5 = $p$4;
      $size$0 = 0;
      break;
     }
    default:
     {
      $alloc$0203 = $alloc$0;
      $matches$0110501 = $matches$0110;
      $s$6 = $s$1;
      $wcs$7 = $wcs$1;
      label = 164;
      break L4;
     }
    }
    $111 = HEAPU8[$p$5 >> 0] | 0;
    $113 = ($111 & 47 | 0) == 3;
    $$ = $113 ? $111 | 32 : $111;
    $$size$0 = $113 ? 1 : $size$0;
    switch ($$ | 0) {
    case 99:
     {
      $pos$1 = $pos$0115;
      $width$1 = ($width$0$lcssa | 0) < 1 ? 1 : $width$0$lcssa;
      break;
     }
    case 91:
     {
      $pos$1 = $pos$0115;
      $width$1 = $width$0$lcssa;
      break;
     }
    case 110:
     {
      if (!$dest$0) {
       $matches$1 = $matches$0110;
       $p$11 = $p$5;
       $pos$2 = $pos$0115;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
      }
      switch ($$size$0 | 0) {
      case -2:
       {
        HEAP8[$dest$0 >> 0] = $pos$0115;
        $matches$1 = $matches$0110;
        $p$11 = $p$5;
        $pos$2 = $pos$0115;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L6;
        break;
       }
      case -1:
       {
        HEAP16[$dest$0 >> 1] = $pos$0115;
        $matches$1 = $matches$0110;
        $p$11 = $p$5;
        $pos$2 = $pos$0115;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L6;
        break;
       }
      case 0:
       {
        HEAP32[$dest$0 >> 2] = $pos$0115;
        $matches$1 = $matches$0110;
        $p$11 = $p$5;
        $pos$2 = $pos$0115;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L6;
        break;
       }
      case 1:
       {
        HEAP32[$dest$0 >> 2] = $pos$0115;
        $matches$1 = $matches$0110;
        $p$11 = $p$5;
        $pos$2 = $pos$0115;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L6;
        break;
       }
      case 3:
       {
        $121 = $dest$0;
        HEAP32[$121 >> 2] = $pos$0115;
        HEAP32[$121 + 4 >> 2] = (($pos$0115 | 0) < 0) << 31 >> 31;
        $matches$1 = $matches$0110;
        $p$11 = $p$5;
        $pos$2 = $pos$0115;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L6;
        break;
       }
      default:
       {
        $matches$1 = $matches$0110;
        $p$11 = $p$5;
        $pos$2 = $pos$0115;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L6;
       }
      }
      break;
     }
    default:
     {
      ___shlim($f, 0);
      do {
       $125 = HEAP32[$3 >> 2] | 0;
       if ($125 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $125 + 1;
        $132 = HEAPU8[$125 >> 0] | 0;
       } else $132 = ___shgetc($f) | 0;
      } while ((_isspace($132) | 0) != 0);
      $$pre210 = HEAP32[$3 >> 2] | 0;
      if (!(HEAP32[$4 >> 2] | 0)) $141 = $$pre210; else {
       $137 = $$pre210 + -1 | 0;
       HEAP32[$3 >> 2] = $137;
       $141 = $137;
      }
      $pos$1 = (HEAP32[$5 >> 2] | 0) + $pos$0115 + $141 - (HEAP32[$6 >> 2] | 0) | 0;
      $width$1 = $width$0$lcssa;
     }
    }
    ___shlim($f, $width$1);
    $146 = HEAP32[$3 >> 2] | 0;
    $147 = HEAP32[$4 >> 2] | 0;
    if ($146 >>> 0 < $147 >>> 0) {
     HEAP32[$3 >> 2] = $146 + 1;
     $153 = $147;
    } else {
     if ((___shgetc($f) | 0) < 0) {
      $alloc$0203 = $alloc$0;
      $matches$0110501 = $matches$0110;
      $s$6 = $s$1;
      $wcs$7 = $wcs$1;
      label = 164;
      break L4;
     }
     $153 = HEAP32[$4 >> 2] | 0;
    }
    if ($153) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    L65 : do switch ($$ | 0) {
    case 91:
    case 99:
    case 115:
     {
      $156 = ($$ | 0) == 99;
      L67 : do if (($$ & 239 | 0) == 99) {
       _memset($scanset | 0, -1, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       if (($$ | 0) == 115) {
        HEAP8[$8 >> 0] = 0;
        HEAP8[$7 >> 0] = 0;
        HEAP8[$7 + 1 >> 0] = 0;
        HEAP8[$7 + 2 >> 0] = 0;
        HEAP8[$7 + 3 >> 0] = 0;
        HEAP8[$7 + 4 >> 0] = 0;
        $p$9 = $p$5;
       } else $p$9 = $p$5;
      } else {
       $160 = $p$5 + 1 | 0;
       $162 = (HEAP8[$160 >> 0] | 0) == 94;
       $invert$0 = $162 & 1;
       $164 = $162 ? $160 : $p$5;
       $p$6 = $162 ? $p$5 + 2 | 0 : $160;
       _memset($scanset | 0, $162 & 1 | 0, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       switch (HEAP8[$p$6 >> 0] | 0) {
       case 45:
        {
         $169 = ($invert$0 ^ 1) & 255;
         HEAP8[$10 >> 0] = $169;
         $$pre$phi224Z2D = $169;
         $p$7$ph = $164 + 2 | 0;
         break;
        }
       case 93:
        {
         $172 = ($invert$0 ^ 1) & 255;
         HEAP8[$11 >> 0] = $172;
         $$pre$phi224Z2D = $172;
         $p$7$ph = $164 + 2 | 0;
         break;
        }
       default:
        {
         $$pre$phi224Z2D = ($invert$0 ^ 1) & 255;
         $p$7$ph = $p$6;
        }
       }
       $p$7 = $p$7$ph;
       while (1) {
        $173 = HEAP8[$p$7 >> 0] | 0;
        L78 : do switch ($173 << 24 >> 24) {
        case 0:
         {
          $alloc$0203 = $alloc$0;
          $matches$0110501 = $matches$0110;
          $s$6 = $s$1;
          $wcs$7 = $wcs$1;
          label = 164;
          break L4;
          break;
         }
        case 93:
         {
          $p$9 = $p$7;
          break L67;
          break;
         }
        case 45:
         {
          $174 = $p$7 + 1 | 0;
          $175 = HEAP8[$174 >> 0] | 0;
          switch ($175 << 24 >> 24) {
          case 93:
          case 0:
           {
            $186 = 45;
            $p$8 = $p$7;
            break L78;
            break;
           }
          default:
           {}
          }
          $177 = HEAP8[$p$7 + -1 >> 0] | 0;
          if (($177 & 255) < ($175 & 255)) {
           $c$0100 = $177 & 255;
           do {
            $c$0100 = $c$0100 + 1 | 0;
            HEAP8[$scanset + $c$0100 >> 0] = $$pre$phi224Z2D;
            $182 = HEAP8[$174 >> 0] | 0;
           } while (($c$0100 | 0) < ($182 & 255 | 0));
           $186 = $182;
           $p$8 = $174;
          } else {
           $186 = $175;
           $p$8 = $174;
          }
          break;
         }
        default:
         {
          $186 = $173;
          $p$8 = $p$7;
         }
        } while (0);
        HEAP8[$scanset + (($186 & 255) + 1) >> 0] = $$pre$phi224Z2D;
        $p$7 = $p$8 + 1 | 0;
       }
      } while (0);
      $191 = $156 ? $width$1 + 1 | 0 : 31;
      $192 = ($$size$0 | 0) == 1;
      $193 = ($alloc$0 | 0) != 0;
      L86 : do if ($192) {
       if ($193) {
        $195 = _malloc($191 << 2) | 0;
        if (!$195) {
         $alloc$0203 = $alloc$0;
         $matches$0110501 = $matches$0110;
         $s$6 = 0;
         $wcs$7 = $195;
         label = 164;
         break L4;
        } else $wcs$2 = $195;
       } else $wcs$2 = $dest$0;
       HEAP32[$st >> 2] = 0;
       HEAP32[$9 >> 2] = 0;
       $i$0$ph = 0;
       $k$0$ph = $191;
       $wcs$3$ph = $wcs$2;
       L92 : while (1) {
        L94 : do if (!$wcs$3$ph) {
         $or$cond$us = $193 & ($i$0$ph | 0) == ($k$0$ph | 0);
         L96 : while (1) {
          $201 = HEAP32[$3 >> 2] | 0;
          if ($201 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $201 + 1;
           $205 = HEAPU8[$201 >> 0] | 0;
          } else $205 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($205 + 1) >> 0] | 0)) {
           $i$0$ph20$lcssa = $i$0$ph;
           $wcs$3$ph138 = 0;
           break L92;
          }
          HEAP8[$0 >> 0] = $205;
          switch (_mbrtowc($wc, $0, 1, $st) | 0) {
          case -1:
           {
            $alloc$0203 = $alloc$0;
            $matches$0110501 = $matches$0110;
            $s$6 = 0;
            $wcs$7 = 0;
            label = 164;
            break L4;
            break;
           }
          case -2:
           {
            continue L96;
            break;
           }
          default:
           {}
          }
          if ($or$cond$us) {
           $i$1$lcssa = $i$0$ph;
           break L94;
          }
         }
        } else {
         if ($193) $i$0$ph20$us105 = $i$0$ph; else {
          $i$0$ph$lcssa = $i$0$ph;
          $wcs$3$ph$lcssa = $wcs$3$ph;
          label = 86;
          break L92;
         }
         while (1) {
          L107 : while (1) {
           $215 = HEAP32[$3 >> 2] | 0;
           if ($215 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
            HEAP32[$3 >> 2] = $215 + 1;
            $219 = HEAPU8[$215 >> 0] | 0;
           } else $219 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($219 + 1) >> 0] | 0)) {
            $i$0$ph20$lcssa = $i$0$ph20$us105;
            $wcs$3$ph138 = $wcs$3$ph;
            break L92;
           }
           HEAP8[$0 >> 0] = $219;
           switch (_mbrtowc($wc, $0, 1, $st) | 0) {
           case -1:
            {
             $alloc$0203 = $alloc$0;
             $matches$0110501 = $matches$0110;
             $s$6 = 0;
             $wcs$7 = $wcs$3$ph;
             label = 164;
             break L4;
             break;
            }
           case -2:
            break;
           default:
            break L107;
           }
          }
          HEAP32[$wcs$3$ph + ($i$0$ph20$us105 << 2) >> 2] = HEAP32[$wc >> 2];
          $i$0$ph20$us105 = $i$0$ph20$us105 + 1 | 0;
          if (($i$0$ph20$us105 | 0) == ($k$0$ph | 0)) {
           $i$1$lcssa = $k$0$ph;
           break;
          }
         }
        } while (0);
        $248 = $k$0$ph << 1 | 1;
        $250 = _realloc($wcs$3$ph, $248 << 2) | 0;
        if (!$250) {
         $alloc$0203 = $alloc$0;
         $matches$0110501 = $matches$0110;
         $s$6 = 0;
         $wcs$7 = $wcs$3$ph;
         label = 164;
         break L4;
        }
        $i$0$ph = $i$1$lcssa;
        $k$0$ph = $248;
        $wcs$3$ph = $250;
       }
       L117 : do if ((label | 0) == 86) {
        label = 0;
        $i$0$ph20 = $i$0$ph$lcssa;
        while (1) {
         L121 : while (1) {
          $231 = HEAP32[$3 >> 2] | 0;
          if ($231 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $231 + 1;
           $239 = HEAPU8[$231 >> 0] | 0;
          } else $239 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($239 + 1) >> 0] | 0)) {
           $i$0$ph20$lcssa = $i$0$ph20;
           $wcs$3$ph138 = $wcs$3$ph$lcssa;
           break L117;
          }
          HEAP8[$0 >> 0] = $239;
          switch (_mbrtowc($wc, $0, 1, $st) | 0) {
          case -1:
           {
            $alloc$0203 = 0;
            $matches$0110501 = $matches$0110;
            $s$6 = 0;
            $wcs$7 = $wcs$3$ph$lcssa;
            label = 164;
            break L4;
            break;
           }
          case -2:
           break;
          default:
           break L121;
          }
         }
         HEAP32[$wcs$3$ph$lcssa + ($i$0$ph20 << 2) >> 2] = HEAP32[$wc >> 2];
         $i$0$ph20 = $i$0$ph20 + 1 | 0;
        }
       } while (0);
       if (!(_mbsinit($st) | 0)) {
        $alloc$0203 = $alloc$0;
        $matches$0110501 = $matches$0110;
        $s$6 = 0;
        $wcs$7 = $wcs$3$ph138;
        label = 164;
        break L4;
       } else {
        $i$4 = $i$0$ph20$lcssa;
        $s$3 = 0;
        $wcs$4 = $wcs$3$ph138;
       }
      } else {
       if ($193) {
        $254 = _malloc($191) | 0;
        if (!$254) {
         $alloc$0203 = $alloc$0;
         $matches$0110501 = $matches$0110;
         $s$6 = 0;
         $wcs$7 = 0;
         label = 164;
         break L4;
        } else {
         $i$2$ph = 0;
         $k$1$ph = $191;
         $s$2$ph = $254;
        }
        while (1) {
         $i$2 = $i$2$ph;
         do {
          $256 = HEAP32[$3 >> 2] | 0;
          if ($256 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $256 + 1;
           $264 = HEAPU8[$256 >> 0] | 0;
          } else $264 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($264 + 1) >> 0] | 0)) {
           $i$4 = $i$2;
           $s$3 = $s$2$ph;
           $wcs$4 = 0;
           break L86;
          }
          HEAP8[$s$2$ph + $i$2 >> 0] = $264;
          $i$2 = $i$2 + 1 | 0;
         } while (($i$2 | 0) != ($k$1$ph | 0));
         $272 = $k$1$ph << 1 | 1;
         $273 = _realloc($s$2$ph, $272) | 0;
         if (!$273) {
          $alloc$0203 = $alloc$0;
          $matches$0110501 = $matches$0110;
          $s$6 = $s$2$ph;
          $wcs$7 = 0;
          label = 164;
          break L4;
         } else {
          $i$2$ph$phi = $k$1$ph;
          $k$1$ph = $272;
          $s$2$ph = $273;
          $i$2$ph = $i$2$ph$phi;
         }
        }
       }
       if (!$dest$0) {
        $293 = $153;
        while (1) {
         $291 = HEAP32[$3 >> 2] | 0;
         if ($291 >>> 0 < $293 >>> 0) {
          HEAP32[$3 >> 2] = $291 + 1;
          $299 = HEAPU8[$291 >> 0] | 0;
         } else $299 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($299 + 1) >> 0] | 0)) {
          $i$4 = 0;
          $s$3 = 0;
          $wcs$4 = 0;
          break L86;
         }
         $293 = HEAP32[$4 >> 2] | 0;
        }
       } else {
        $278 = $153;
        $i$3 = 0;
        while (1) {
         $276 = HEAP32[$3 >> 2] | 0;
         if ($276 >>> 0 < $278 >>> 0) {
          HEAP32[$3 >> 2] = $276 + 1;
          $284 = HEAPU8[$276 >> 0] | 0;
         } else $284 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($284 + 1) >> 0] | 0)) {
          $i$4 = $i$3;
          $s$3 = $dest$0;
          $wcs$4 = 0;
          break L86;
         }
         HEAP8[$dest$0 + $i$3 >> 0] = $284;
         $278 = HEAP32[$4 >> 2] | 0;
         $i$3 = $i$3 + 1 | 0;
        }
       }
      } while (0);
      $$pre220 = HEAP32[$3 >> 2] | 0;
      if (!(HEAP32[$4 >> 2] | 0)) $309 = $$pre220; else {
       $305 = $$pre220 + -1 | 0;
       HEAP32[$3 >> 2] = $305;
       $309 = $305;
      }
      $312 = $309 - (HEAP32[$6 >> 2] | 0) + (HEAP32[$5 >> 2] | 0) | 0;
      if (!$312) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0110;
       $s$8 = $s$3;
       $wcs$9 = $wcs$4;
       break L4;
      }
      if (!(($312 | 0) == ($width$1 | 0) | $156 ^ 1)) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0110;
       $s$8 = $s$3;
       $wcs$9 = $wcs$4;
       break L4;
      }
      do if ($193) if ($192) {
       HEAP32[$dest$0 >> 2] = $wcs$4;
       break;
      } else {
       HEAP32[$dest$0 >> 2] = $s$3;
       break;
      } while (0);
      if ($156) {
       $p$10 = $p$9;
       $s$4 = $s$3;
       $wcs$5 = $wcs$4;
      } else {
       if ($wcs$4) HEAP32[$wcs$4 + ($i$4 << 2) >> 2] = 0;
       if (!$s$3) {
        $p$10 = $p$9;
        $s$4 = 0;
        $wcs$5 = $wcs$4;
       } else {
        HEAP8[$s$3 + $i$4 >> 0] = 0;
        $p$10 = $p$9;
        $s$4 = $s$3;
        $wcs$5 = $wcs$4;
       }
      }
      break;
     }
    case 120:
    case 88:
    case 112:
     {
      $base$0 = 16;
      label = 146;
      break;
     }
    case 111:
     {
      $base$0 = 8;
      label = 146;
      break;
     }
    case 117:
    case 100:
     {
      $base$0 = 10;
      label = 146;
      break;
     }
    case 105:
     {
      $base$0 = 0;
      label = 146;
      break;
     }
    case 71:
    case 103:
    case 70:
    case 102:
    case 69:
    case 101:
    case 65:
    case 97:
     {
      $338 = +___floatscan($f, $$size$0, 0);
      if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0110;
       $s$8 = $s$1;
       $wcs$9 = $wcs$1;
       break L4;
      }
      if (!$dest$0) {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
      } else switch ($$size$0 | 0) {
      case 0:
       {
        HEAPF32[$dest$0 >> 2] = $338;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L65;
        break;
       }
      case 1:
       {
        HEAPF64[$dest$0 >> 3] = $338;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L65;
        break;
       }
      case 2:
       {
        HEAPF64[$dest$0 >> 3] = $338;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L65;
        break;
       }
      default:
       {
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L65;
       }
      }
      break;
     }
    default:
     {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     }
    } while (0);
    L186 : do if ((label | 0) == 146) {
     label = 0;
     $319 = ___intscan($f, $base$0, 0, -1, -1) | 0;
     if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
      $alloc$2 = $alloc$0;
      $matches$2 = $matches$0110;
      $s$8 = $s$1;
      $wcs$9 = $wcs$1;
      break L4;
     }
     if (($dest$0 | 0) != 0 & ($$ | 0) == 112) {
      HEAP32[$dest$0 >> 2] = $319;
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
      break;
     }
     if (!$dest$0) {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     } else switch ($$size$0 | 0) {
     case -2:
      {
       HEAP8[$dest$0 >> 0] = $319;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L186;
       break;
      }
     case -1:
      {
       HEAP16[$dest$0 >> 1] = $319;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L186;
       break;
      }
     case 0:
      {
       HEAP32[$dest$0 >> 2] = $319;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L186;
       break;
      }
     case 1:
      {
       HEAP32[$dest$0 >> 2] = $319;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L186;
       break;
      }
     case 3:
      {
       $334 = $dest$0;
       HEAP32[$334 >> 2] = $319;
       HEAP32[$334 + 4 >> 2] = tempRet0;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L186;
       break;
      }
     default:
      {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L186;
      }
     }
    } while (0);
    $matches$1 = (($dest$0 | 0) != 0 & 1) + $matches$0110 | 0;
    $p$11 = $p$10;
    $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$1 + (HEAP32[$3 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
    $s$5 = $s$4;
    $wcs$6 = $wcs$5;
    break L6;
   } while (0);
   $47 = $p$0116 + ($43 & 1) | 0;
   ___shlim($f, 0);
   $48 = HEAP32[$3 >> 2] | 0;
   if ($48 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $48 + 1;
    $58 = HEAPU8[$48 >> 0] | 0;
   } else $58 = ___shgetc($f) | 0;
   if (($58 | 0) != (HEAPU8[$47 >> 0] | 0)) {
    $$lcssa520 = $58;
    $matches$0110$lcssa = $matches$0110;
    $s$0108$lcssa = $s$0108;
    $wcs$0109$lcssa = $wcs$0109;
    label = 19;
    break L4;
   }
   $matches$1 = $matches$0110;
   $p$11 = $47;
   $pos$2 = $pos$0115 + 1 | 0;
   $s$5 = $s$0108;
   $wcs$6 = $wcs$0109;
  } else {
   $p$1 = $p$0116;
   while (1) {
    $16 = $p$1 + 1 | 0;
    if (!(_isspace(HEAPU8[$16 >> 0] | 0) | 0)) {
     $p$1$lcssa = $p$1;
     break;
    } else $p$1 = $16;
   }
   ___shlim($f, 0);
   do {
    $21 = HEAP32[$3 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $21 + 1;
     $28 = HEAPU8[$21 >> 0] | 0;
    } else $28 = ___shgetc($f) | 0;
   } while ((_isspace($28) | 0) != 0);
   $$pre = HEAP32[$3 >> 2] | 0;
   if (!(HEAP32[$4 >> 2] | 0)) $37 = $$pre; else {
    $33 = $$pre + -1 | 0;
    HEAP32[$3 >> 2] = $33;
    $37 = $33;
   }
   $matches$1 = $matches$0110;
   $p$11 = $p$1$lcssa;
   $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$0115 + $37 - (HEAP32[$6 >> 2] | 0) | 0;
   $s$5 = $s$0108;
   $wcs$6 = $wcs$0109;
  } while (0);
  $p$0116 = $p$11 + 1 | 0;
  $13 = HEAP8[$p$0116 >> 0] | 0;
  if (!($13 << 24 >> 24)) {
   $matches$3 = $matches$1;
   label = 168;
   break;
  } else {
   $matches$0110 = $matches$1;
   $pos$0115 = $pos$2;
   $s$0108 = $s$5;
   $wcs$0109 = $wcs$6;
  }
 }
 if ((label | 0) == 19) {
  if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
  if (($matches$0110$lcssa | 0) != 0 | ($$lcssa520 | 0) > -1) {
   $matches$3 = $matches$0110$lcssa;
   STACKTOP = sp;
   return $matches$3 | 0;
  } else {
   $alloc$1 = 0;
   $s$7 = $s$0108$lcssa;
   $wcs$8 = $wcs$0109$lcssa;
   label = 165;
  }
 } else if ((label | 0) == 164) if (!$matches$0110501) {
  $alloc$1 = $alloc$0203;
  $s$7 = $s$6;
  $wcs$8 = $wcs$7;
  label = 165;
 } else {
  $alloc$2 = $alloc$0203;
  $matches$2 = $matches$0110501;
  $s$8 = $s$6;
  $wcs$9 = $wcs$7;
 } else if ((label | 0) == 168) {
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 if ((label | 0) == 165) {
  $alloc$2 = $alloc$1;
  $matches$2 = -1;
  $s$8 = $s$7;
  $wcs$9 = $wcs$8;
 }
 if (!$alloc$2) {
  $matches$3 = $matches$2;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;
 return $matches$3 | 0;
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0$i = 0, $$24$ph = 0, $$7 = 0, $$in = 0, $$in109 = 0, $$lcssa150 = 0, $$lcssa151 = 0, $$lcssa156 = 0, $$ph96 = 0, $$pre$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $111 = 0, $118 = 0, $120 = 0, $123 = 0, $127 = 0, $13 = 0, $130 = 0, $135 = 0, $136 = 0, $139 = 0, $140 = 0, $142 = 0, $143 = 0, $152 = 0, $155 = 0, $160 = 0, $162 = 0, $166 = 0, $171 = 0, $175 = 0, $176 = 0, $18 = 0, $180 = 0, $183 = 0, $184 = 0, $188 = 0, $191 = 0, $193 = 0, $195 = 0, $199 = 0, $2 = 0, $203 = 0, $204 = 0, $206 = 0, $207 = 0, $209 = 0, $21 = 0, $215 = 0, $22 = 0, $226 = 0, $228 = 0, $240 = 0, $252 = 0, $255 = 0, $257 = 0, $26 = 0, $264 = 0, $267 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $277 = 0, $281 = 0, $284 = 0, $287 = 0, $29 = 0, $3 = 0, $30 = 0, $303 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $318 = 0, $320 = 0, $331 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $345 = 0, $347 = 0, $349 = 0, $350 = 0, $356 = 0, $361 = 0, $37 = 0, $371 = 0, $373 = 0, $38 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $389 = 0, $392 = 0, $398 = 0, $4 = 0, $402 = 0, $404 = 0, $405 = 0, $411 = 0, $413 = 0, $414 = 0, $42 = 0, $434 = 0, $436 = 0, $446 = 0, $45 = 0, $46 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $62 = 0, $65 = 0, $66 = 0, $68 = 0, $7 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $8 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $91 = 0, $94 = 0, $99 = 0, $first_arg$0$off0$ph = 0, $first_arg$3$off0$ph = 0, $k$0121 = 0, $k2$0122 = 0, $left$i = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i = 0, $ret1 = 0, $ret2 = 0, $t$0 = 0, $t$1 = 0, $t$1$ph = 0, $t$2 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $left$i = sp + 96 | 0;
 $0 = sp + 84 | 0;
 $1 = sp + 72 | 0;
 $2 = sp + 60 | 0;
 $3 = sp + 48 | 0;
 $ret2 = sp + 36 | 0;
 $ret1 = sp + 24 | 0;
 $tmp = sp + 12 | 0;
 $4 = sp;
 L1 : do if (($first | 0) == ($last | 0)) $$7 = $first; else {
  $6 = $db + 56 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $8 = $7 + 1 | 0;
  HEAP32[$6 >> 2] = $8;
  $9 = $db + 61 | 0;
  $10 = HEAP8[$9 >> 0] | 0;
  if ($8 >>> 0 > 1) HEAP8[$9 >> 0] = 1;
  $13 = HEAP8[$first >> 0] | 0;
  L6 : do switch ($13 | 0) {
  case 84:
  case 71:
   {
    L107 : do if (($last - $first | 0) > 2) {
     switch ($13 | 0) {
     case 84:
      break;
     case 71:
      {
       switch (HEAP8[$first + 1 >> 0] | 0) {
       case 86:
        {
         $175 = $first + 2 | 0;
         $176 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($175, $last, $db) | 0;
         if (($176 | 0) == ($175 | 0)) {
          $$0$i = $first;
          break L107;
         }
         $180 = HEAP32[$db + 4 >> 2] | 0;
         if ((HEAP32[$db >> 2] | 0) == ($180 | 0)) {
          $$0$i = $first;
          break L107;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($180 + -24 | 0, 0, 27368) | 0;
         $$0$i = $176;
         break L107;
         break;
        }
       case 82:
        {
         $183 = $first + 2 | 0;
         $184 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($183, $last, $db) | 0;
         if (($184 | 0) == ($183 | 0)) {
          $$0$i = $first;
          break L107;
         }
         $188 = HEAP32[$db + 4 >> 2] | 0;
         if ((HEAP32[$db >> 2] | 0) == ($188 | 0)) {
          $$0$i = $first;
          break L107;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($188 + -24 | 0, 0, 27388) | 0;
         $$0$i = $184;
         break L107;
         break;
        }
       default:
        {
         $$0$i = $first;
         break L107;
        }
       }
       break;
      }
     default:
      {
       $$0$i = $first;
       break L107;
      }
     }
     $18 = $first + 1 | 0;
     switch (HEAP8[$18 >> 0] | 0) {
     case 86:
      {
       $21 = $first + 2 | 0;
       $22 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($21, $last, $db) | 0;
       if (($22 | 0) == ($21 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $26 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($26 | 0)) {
        $$0$i = $first;
        break L107;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($26 + -24 | 0, 0, 27217) | 0;
       $$0$i = $22;
       break L107;
       break;
      }
     case 84:
      {
       $29 = $first + 2 | 0;
       $30 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($29, $last, $db) | 0;
       if (($30 | 0) == ($29 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $34 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($34 | 0)) {
        $$0$i = $first;
        break L107;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($34 + -24 | 0, 0, 27229) | 0;
       $$0$i = $30;
       break L107;
       break;
      }
     case 73:
      {
       $37 = $first + 2 | 0;
       $38 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($37, $last, $db) | 0;
       if (($38 | 0) == ($37 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $42 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($42 | 0)) {
        $$0$i = $first;
        break L107;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($42 + -24 | 0, 0, 27238) | 0;
       $$0$i = $38;
       break L107;
       break;
      }
     case 83:
      {
       $45 = $first + 2 | 0;
       $46 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($45, $last, $db) | 0;
       if (($46 | 0) == ($45 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $50 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($50 | 0)) {
        $$0$i = $first;
        break L107;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($50 + -24 | 0, 0, 27252) | 0;
       $$0$i = $46;
       break L107;
       break;
      }
     case 99:
      {
       $53 = $first + 2 | 0;
       $54 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($53, $last) | 0;
       if (($54 | 0) == ($53 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $56 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($54, $last) | 0;
       if (($56 | 0) == ($54 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $58 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($56, $last, $db) | 0;
       if (($58 | 0) == ($56 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $62 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($62 | 0)) {
        $$0$i = $first;
        break L107;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($62 + -24 | 0, 0, 27271) | 0;
       $$0$i = $58;
       break L107;
       break;
      }
     case 67:
      {
       $65 = $first + 2 | 0;
       $66 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($65, $last, $db) | 0;
       if (($66 | 0) == ($65 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $68 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($66, $last) | 0;
       if (($68 | 0) == ($66 | 0) | ($68 | 0) == ($last | 0)) {
        $$0$i = $first;
        break L107;
       }
       if ((HEAP8[$68 >> 0] | 0) != 95) {
        $$0$i = $first;
        break L107;
       }
       $73 = $68 + 1 | 0;
       $74 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($73, $last, $db) | 0;
       if (($74 | 0) == ($73 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $76 = $db + 4 | 0;
       $77 = HEAP32[$76 >> 2] | 0;
       if ((($77 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
        $$0$i = $first;
        break L107;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($left$i, $77 + -24 | 0);
       $85 = HEAP32[$76 >> 2] | 0;
       $86 = $85 + -24 | 0;
       $88 = $85;
       do {
        $87 = $88 + -24 | 0;
        HEAP32[$76 >> 2] = $87;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($87);
        $88 = HEAP32[$76 >> 2] | 0;
       } while (($88 | 0) != ($86 | 0));
       $90 = $85 + -48 | 0;
       $91 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($left$i, 0, 27298) | 0;
       HEAP32[$2 >> 2] = HEAP32[$91 >> 2];
       HEAP32[$2 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
       HEAP32[$2 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
       HEAP32[$91 >> 2] = 0;
       HEAP32[$91 + 4 >> 2] = 0;
       HEAP32[$91 + 8 >> 2] = 0;
       $94 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 27323) | 0;
       HEAP32[$1 >> 2] = HEAP32[$94 >> 2];
       HEAP32[$1 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
       HEAP32[$1 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
       HEAP32[$94 >> 2] = 0;
       HEAP32[$94 + 4 >> 2] = 0;
       HEAP32[$94 + 8 >> 2] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, (HEAP32[$76 >> 2] | 0) + -24 | 0);
       $99 = HEAP8[$3 >> 0] | 0;
       $101 = ($99 & 1) == 0;
       $111 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1, $101 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0, $101 ? ($99 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0) | 0;
       HEAP32[$0 >> 2] = HEAP32[$111 >> 2];
       HEAP32[$0 + 4 >> 2] = HEAP32[$111 + 4 >> 2];
       HEAP32[$0 + 8 >> 2] = HEAP32[$111 + 8 >> 2];
       HEAP32[$111 >> 2] = 0;
       HEAP32[$111 + 4 >> 2] = 0;
       HEAP32[$111 + 8 >> 2] = 0;
       do if (!(HEAP8[$90 >> 0] & 1)) {
        HEAP8[$90 + 1 >> 0] = 0;
        HEAP8[$90 >> 0] = 0;
       } else {
        $118 = $85 + -40 | 0;
        HEAP8[HEAP32[$118 >> 2] >> 0] = 0;
        $120 = $85 + -44 | 0;
        HEAP32[$120 >> 2] = 0;
        $$pre$i$i$i$i = HEAP8[$90 >> 0] | 0;
        if (!($$pre$i$i$i$i & 1)) {
         $127 = $$pre$i$i$i$i;
         $136 = 10;
        } else {
         $123 = HEAP32[$90 >> 2] | 0;
         $127 = $123 & 255;
         $136 = ($123 & -2) + -1 | 0;
        }
        if (!($127 & 1)) {
         $130 = ($127 & 255) >>> 1;
         if (($127 & 255) < 22) {
          $135 = 10;
          $155 = $130;
          $446 = 1;
         } else {
          $135 = ($130 + 16 & 240) + -1 | 0;
          $155 = $130;
          $446 = 1;
         }
        } else {
         $135 = 10;
         $155 = 0;
         $446 = 0;
        }
        if (($135 | 0) != ($136 | 0)) {
         if (($135 | 0) == 10) {
          $142 = $90 + 1 | 0;
          $143 = HEAP32[$118 >> 2] | 0;
          if ($446) {
           _memcpy($142 | 0, $143 | 0, (($127 & 255) >>> 1) + 1 | 0) | 0;
           _free($143);
          } else {
           HEAP8[$142 >> 0] = HEAP8[$143 >> 0] | 0;
           _free($143);
          }
          HEAP8[$90 >> 0] = $155 << 1;
          break;
         }
         $139 = $135 + 1 | 0;
         $140 = _malloc($139) | 0;
         if (!($135 >>> 0 <= $136 >>> 0 & ($140 | 0) == 0)) {
          if ($446) _memcpy($140 | 0, $90 + 1 | 0, (($127 & 255) >>> 1) + 1 | 0) | 0; else {
           $152 = HEAP32[$118 >> 2] | 0;
           HEAP8[$140 >> 0] = HEAP8[$152 >> 0] | 0;
           _free($152);
          }
          HEAP32[$90 >> 2] = $139 | 1;
          HEAP32[$120 >> 2] = $155;
          HEAP32[$118 >> 2] = $140;
         }
        }
       } while (0);
       HEAP32[$90 >> 2] = HEAP32[$0 >> 2];
       HEAP32[$90 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
       HEAP32[$90 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
       HEAP32[$0 >> 2] = 0;
       HEAP32[$0 + 4 >> 2] = 0;
       HEAP32[$0 + 8 >> 2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($left$i);
       $$0$i = $74;
       break L107;
       break;
      }
     default:
      {
       $160 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($18, $last) | 0;
       if (($160 | 0) == ($18 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $162 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($160, $last, $db) | 0;
       if (($162 | 0) == ($160 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $166 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($166 | 0)) {
        $$0$i = $first;
        break L107;
       }
       $171 = $166 + -24 | 0;
       if ((HEAP8[$first + 2 >> 0] | 0) == 118) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($171, 0, 27328) | 0;
        $$0$i = $162;
        break L107;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($171, 0, 27346) | 0;
        $$0$i = $162;
        break L107;
       }
      }
     }
    } else $$0$i = $first; while (0);
    $$24$ph = $$0$i;
    break;
   }
  default:
   {
    $191 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    $193 = HEAP32[$db + 48 >> 2] | 0;
    $195 = HEAP32[$db + 52 >> 2] | 0;
    if (($191 | 0) == ($first | 0)) $$24$ph = $first; else if (($191 | 0) == ($last | 0)) $$24$ph = $last; else {
     switch (HEAP8[$191 >> 0] | 0) {
     case 46:
     case 69:
      {
       $$24$ph = $191;
       break L6;
       break;
      }
     default:
      {}
     }
     $199 = HEAP8[$9 >> 0] | 0;
     HEAP8[$9 >> 0] = 0;
     HEAP32[$ret2 >> 2] = 0;
     HEAP32[$ret2 + 4 >> 2] = 0;
     HEAP32[$ret2 + 8 >> 2] = 0;
     $203 = $db + 4 | 0;
     $204 = HEAP32[$203 >> 2] | 0;
     L11 : do if ((HEAP32[$db >> 2] | 0) != ($204 | 0)) {
      $206 = $204 + -24 | 0;
      $207 = HEAP8[$206 >> 0] | 0;
      $209 = ($207 & 1) == 0;
      if ($209) $215 = ($207 & 255) >>> 1; else $215 = HEAP32[$204 + -20 >> 2] | 0;
      if ($215) {
       if (!(HEAP8[$db + 60 >> 0] | 0)) {
        if ($209) {
         $226 = ($207 & 255) >>> 1;
         $228 = $206 + 1 | 0;
        } else {
         $226 = HEAP32[$204 + -20 >> 2] | 0;
         $228 = HEAP32[$204 + -16 >> 2] | 0;
        }
        if ((HEAP8[$228 + ($226 + -1) >> 0] | 0) == 62) {
         if ($209) {
          $$in = ($207 & 255) >>> 1;
          $240 = $206 + 1 | 0;
         } else {
          $$in = HEAP32[$204 + -20 >> 2] | 0;
          $240 = HEAP32[$204 + -16 >> 2] | 0;
         }
         if ((HEAP8[$240 + ($$in + -2) >> 0] | 0) == 45) {
          $331 = $204;
          $t$0 = $191;
         } else {
          if ($209) {
           $$in109 = ($207 & 255) >>> 1;
           $252 = $206 + 1 | 0;
          } else {
           $$in109 = HEAP32[$204 + -20 >> 2] | 0;
           $252 = HEAP32[$204 + -16 >> 2] | 0;
          }
          if ((HEAP8[$252 + ($$in109 + -2) >> 0] | 0) == 62) {
           $331 = $204;
           $t$0 = $191;
          } else {
           $255 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($191, $last, $db) | 0;
           if (($255 | 0) == ($191 | 0)) break;
           $257 = HEAP32[$203 >> 2] | 0;
           if ((($257 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break;
           $264 = $257 + -24 | 0;
           HEAP32[$ret1 >> 2] = HEAP32[$264 >> 2];
           HEAP32[$ret1 + 4 >> 2] = HEAP32[$264 + 4 >> 2];
           HEAP32[$ret1 + 8 >> 2] = HEAP32[$264 + 8 >> 2];
           HEAP32[$264 >> 2] = 0;
           HEAP32[$264 + 4 >> 2] = 0;
           HEAP32[$264 + 8 >> 2] = 0;
           $267 = $257 + -12 | 0;
           L37 : do if (!(HEAP8[$ret2 >> 0] & 1)) {
            HEAP8[$ret2 + 1 >> 0] = 0;
            HEAP8[$ret2 >> 0] = 0;
           } else {
            $272 = $ret2 + 8 | 0;
            $273 = HEAP32[$272 >> 2] | 0;
            HEAP8[$273 >> 0] = 0;
            $274 = $ret2 + 4 | 0;
            HEAP32[$274 >> 2] = 0;
            $275 = HEAP32[$ret2 >> 2] | 0;
            $phitmp$i$i$i$i$i$i = ($275 & -2) + -1 | 0;
            $277 = $275 & 255;
            do if (!($277 & 1)) {
             $281 = $275 >>> 1 & 127;
             if (($277 & 255) < 22) {
              _memcpy($ret2 + 1 | 0, $273 | 0, ($275 >>> 1 & 127) + 1 | 0) | 0;
              _free($273);
              $$ph96 = $281;
              break;
             }
             $284 = $281 + 16 & 240;
             $phitmp$i2$i$i$i$i$i = $284 + -1 | 0;
             if (($phitmp$i2$i$i$i$i$i | 0) == ($phitmp$i$i$i$i$i$i | 0)) break L37;
             $287 = _malloc($284) | 0;
             if ($phitmp$i2$i$i$i$i$i >>> 0 <= $phitmp$i$i$i$i$i$i >>> 0 & ($287 | 0) == 0) break L37;
             _memcpy($287 | 0, $ret2 + 1 | 0, ($275 >>> 1 & 127) + 1 | 0) | 0;
             HEAP32[$ret2 >> 2] = $284 | 1;
             HEAP32[$274 >> 2] = $281;
             HEAP32[$272 >> 2] = $287;
             break L37;
            } else {
             HEAP8[$ret2 + 1 >> 0] = 0;
             _free($273);
             $$ph96 = 0;
            } while (0);
            HEAP8[$ret2 >> 0] = $$ph96 << 1;
           } while (0);
           HEAP32[$ret2 >> 2] = HEAP32[$267 >> 2];
           HEAP32[$ret2 + 4 >> 2] = HEAP32[$267 + 4 >> 2];
           HEAP32[$ret2 + 8 >> 2] = HEAP32[$267 + 8 >> 2];
           HEAP32[$267 >> 2] = 0;
           HEAP32[$267 + 4 >> 2] = 0;
           HEAP32[$267 + 8 >> 2] = 0;
           $303 = HEAP8[$ret2 >> 0] | 0;
           if (!((($303 & 1) == 0 ? ($303 & 255) >>> 1 : HEAP32[$ret2 + 4 >> 2] | 0) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($ret1, 32);
           $312 = HEAP32[$203 >> 2] | 0;
           $313 = $312 + -24 | 0;
           $315 = $312;
           do {
            $314 = $315 + -24 | 0;
            HEAP32[$203 >> 2] = $314;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($314);
            $315 = HEAP32[$203 >> 2] | 0;
           } while (($315 | 0) != ($313 | 0));
           $318 = HEAP8[$ret1 >> 0] | 0;
           $320 = ($318 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($312 + -48 | 0, 0, $320 ? $ret1 + 1 | 0 : HEAP32[$ret1 + 8 >> 2] | 0, $320 ? ($318 & 255) >>> 1 : HEAP32[$ret1 + 4 >> 2] | 0) | 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret1);
           $331 = HEAP32[$203 >> 2] | 0;
           $t$0 = $255;
          }
         }
        } else {
         $331 = $204;
         $t$0 = $191;
        }
       } else {
        $331 = $204;
        $t$0 = $191;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($331 + -24 | 0, 40);
       if (($t$0 | 0) == ($last | 0)) label = 105; else if ((HEAP8[$t$0 >> 0] | 0) == 118) {
        $413 = HEAP32[$db >> 2] | 0;
        $414 = HEAP32[$203 >> 2] | 0;
        $t$2 = $t$0 + 1 | 0;
       } else label = 105;
       L60 : do if ((label | 0) == 105) {
        $335 = $tmp + 4 | 0;
        $336 = $4 + 8 | 0;
        $337 = $4 + 1 | 0;
        $338 = $4 + 4 | 0;
        $339 = $tmp + 8 | 0;
        $340 = $tmp + 1 | 0;
        $341 = $tmp + 4 | 0;
        $342 = $tmp + 8 | 0;
        $first_arg$0$off0$ph = 1;
        $t$1$ph = $t$0;
        while (1) {
         $345 = HEAP32[$203 >> 2] | 0;
         $347 = HEAP32[$db >> 2] | 0;
         $t$1 = $t$1$ph;
         while (1) {
          $349 = ($345 - $347 | 0) / 24 | 0;
          $350 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$1, $last, $db) | 0;
          $345 = HEAP32[$203 >> 2] | 0;
          $347 = HEAP32[$db >> 2] | 0;
          $356 = ($345 - $347 | 0) / 24 | 0;
          if (($350 | 0) == ($t$1 | 0)) {
           $413 = $347;
           $414 = $345;
           $t$2 = $t$1;
           break L60;
          }
          if ($356 >>> 0 > $349 >>> 0) {
           $$lcssa150 = $349;
           $$lcssa151 = $350;
           $$lcssa156 = $356;
           break;
          } else $t$1 = $350;
         }
         HEAP32[$tmp >> 2] = 0;
         HEAP32[$341 >> 2] = 0;
         HEAP32[$342 >> 2] = 0;
         if ($$lcssa150 >>> 0 < $$lcssa156 >>> 0) {
          $k$0121 = $$lcssa150;
          do {
           $361 = HEAP8[$tmp >> 0] | 0;
           if ((($361 & 1) == 0 ? ($361 & 255) >>> 1 : HEAP32[$335 >> 2] | 0) | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($tmp, 25575) | 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$db >> 2] | 0) + ($k$0121 * 24 | 0) | 0);
           $371 = HEAP8[$4 >> 0] | 0;
           $373 = ($371 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($tmp, $373 ? $337 : HEAP32[$336 >> 2] | 0, $373 ? ($371 & 255) >>> 1 : HEAP32[$338 >> 2] | 0) | 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
           $k$0121 = $k$0121 + 1 | 0;
          } while ($k$0121 >>> 0 < $$lcssa156 >>> 0);
         }
         if ($$lcssa150 >>> 0 < $$lcssa156 >>> 0) {
          $k2$0122 = $$lcssa150;
          do {
           $382 = HEAP32[$203 >> 2] | 0;
           $383 = $382 + -24 | 0;
           $385 = $382;
           do {
            $384 = $385 + -24 | 0;
            HEAP32[$203 >> 2] = $384;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($384);
            $385 = HEAP32[$203 >> 2] | 0;
           } while (($385 | 0) != ($383 | 0));
           $k2$0122 = $k2$0122 + 1 | 0;
          } while ($k2$0122 >>> 0 < $$lcssa156 >>> 0);
         }
         $389 = HEAP8[$tmp >> 0] | 0;
         $392 = HEAP32[$335 >> 2] | 0;
         if (!((($389 & 1) == 0 ? ($389 & 255) >>> 1 : $392) | 0)) $first_arg$3$off0$ph = $first_arg$0$off0$ph; else {
          $398 = HEAP32[$203 >> 2] | 0;
          if ((HEAP32[$db >> 2] | 0) == ($398 | 0)) break;
          if ($first_arg$0$off0$ph) {
           $402 = $398;
           $404 = $389;
           $411 = $392;
          } else {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($398 + -24 | 0, 25575) | 0;
           $402 = HEAP32[$203 >> 2] | 0;
           $404 = HEAP8[$tmp >> 0] | 0;
           $411 = HEAP32[$335 >> 2] | 0;
          }
          $405 = ($404 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($402 + -24 | 0, $405 ? $340 : HEAP32[$339 >> 2] | 0, $405 ? ($404 & 255) >>> 1 : $411) | 0;
          $first_arg$3$off0$ph = 0;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
         $first_arg$0$off0$ph = $first_arg$3$off0$ph;
         $t$1$ph = $$lcssa151;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp);
        break L11;
       } while (0);
       if (($413 | 0) != ($414 | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($414 + -24 | 0, 41);
        if ($193 & 1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$203 >> 2] | 0) + -24 | 0, 25528) | 0;
        if ($193 & 2) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$203 >> 2] | 0) + -24 | 0, 25535) | 0;
        if ($193 & 4) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$203 >> 2] | 0) + -24 | 0, 25545) | 0;
        switch ($195 | 0) {
        case 1:
         {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$203 >> 2] | 0) + -24 | 0, 25578) | 0;
          break;
         }
        case 2:
         {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$203 >> 2] | 0) + -24 | 0, 25581) | 0;
          break;
         }
        default:
         {}
        }
        $434 = HEAP8[$ret2 >> 0] | 0;
        $436 = ($434 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$203 >> 2] | 0) + -24 | 0, $436 ? $ret2 + 1 | 0 : HEAP32[$ret2 + 8 >> 2] | 0, $436 ? ($434 & 255) >>> 1 : HEAP32[$ret2 + 4 >> 2] | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret2);
        HEAP8[$9 >> 0] = $199;
        $$24$ph = $t$2;
        break L6;
       }
      }
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($ret2);
     HEAP8[$9 >> 0] = $10;
     HEAP32[$6 >> 2] = $7;
     $$7 = $first;
     break L1;
    }
   }
  } while (0);
  HEAP8[$9 >> 0] = $10;
  HEAP32[$6 >> 2] = $7;
  $$7 = $$24$ph;
 } while (0);
 STACKTOP = sp;
 return $$7 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i6 = 0, $$0$i$i$i18$i = 0, $$0$i$i$i7$i = 0, $$0$i$i49 = 0, $$03$i = 0, $$1$i9 = 0, $$lcssa = 0, $$ph26 = 0, $$pre$i$i$i$i = 0, $0 = 0, $1 = 0, $100 = 0, $104 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $121 = 0, $13 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $140 = 0, $141 = 0, $143 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $157 = 0, $159 = 0, $162 = 0, $163 = 0, $165 = 0, $171 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $191 = 0, $193 = 0, $194 = 0, $196 = 0, $198 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $205 = 0, $207 = 0, $217 = 0, $218 = 0, $22 = 0, $220 = 0, $224 = 0, $227 = 0, $230 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $246 = 0, $248 = 0, $252 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $268 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $277 = 0, $283 = 0, $284 = 0, $285 = 0, $29 = 0, $292 = 0, $297 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $304 = 0, $31 = 0, $312 = 0, $318 = 0, $32 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $341 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $50 = 0, $53 = 0, $55 = 0, $6 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $69 = 0, $7 = 0, $71 = 0, $74 = 0, $75 = 0, $87 = 0, $88 = 0, $90 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$i$i = 0, $__p$1$i$i48 = 0, $__v$i$i17$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $t0$0$i = 0, $t01$0$i = 0, $t01$0$i$lcssa67 = 0, $t01$1$i = 0, $t01$2$i = 0, $t1$0$i$lcssa = 0, $t1$0$i45 = 0, $t13$0$i$lcssa = 0, $t13$0$i51 = 0, $tmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__v$i$i17$i = sp + 104 | 0;
 $0 = sp + 80 | 0;
 $1 = sp + 64 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 24 | 0;
 $tmp$i = sp + 12 | 0;
 $4 = sp;
 L1 : do if (($first | 0) == ($last | 0)) $$0 = $first; else {
  $6 = HEAP8[$first >> 0] | 0;
  $7 = $6 << 24 >> 24;
  switch ($7 | 0) {
  case 68:
  case 67:
   {
    L6 : do if (($last - $first | 0) > 1) {
     $13 = $db + 4 | 0;
     $14 = HEAP32[$13 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($14 | 0)) $$03$i = $first; else switch ($7 | 0) {
     case 67:
      {
       switch (HEAP8[$first + 1 >> 0] | 0) {
       case 53:
       case 51:
       case 50:
       case 49:
        break;
       default:
        {
         $$03$i = $first;
         break L6;
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($1, $14 + -24 | 0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
       $20 = HEAP32[$13 >> 2] | 0;
       $22 = HEAP32[$db + 8 >> 2] | 0;
       if ($20 >>> 0 < $22 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($20, $0);
        HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 24;
       } else {
        $29 = HEAP32[$db >> 2] | 0;
        $30 = $20 - $29 | 0;
        $31 = ($30 | 0) / 24 | 0;
        $32 = $31 + 1 | 0;
        if (($30 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
        $36 = ($22 - $29 | 0) / 24 | 0;
        if ($36 >>> 0 < 1073741823) {
         $38 = $36 << 1;
         $$0$i$i$i$i = $38 >>> 0 < $32 >>> 0 ? $32 : $38;
        } else $$0$i$i$i$i = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17$i, $$0$i$i$i$i, $31, $db + 12 | 0);
        $41 = $__v$i$i17$i + 8 | 0;
        $42 = HEAP32[$41 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($42, $0);
        HEAP32[$41 >> 2] = $42 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i17$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
       HEAP8[$db + 60 >> 0] = 1;
       $$03$i = $first + 2 | 0;
       break L6;
       break;
      }
     case 68:
      {
       switch (HEAP8[$first + 1 >> 0] | 0) {
       case 53:
       case 50:
       case 49:
       case 48:
        break;
       default:
        {
         $$03$i = $first;
         break L6;
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($tmp$i, $14 + -24 | 0);
       $50 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($tmp$i, 0, 25787) | 0;
       HEAP32[$3 >> 2] = HEAP32[$50 >> 2];
       HEAP32[$3 + 4 >> 2] = HEAP32[$50 + 4 >> 2];
       HEAP32[$3 + 8 >> 2] = HEAP32[$50 + 8 >> 2];
       HEAP32[$50 >> 2] = 0;
       HEAP32[$50 + 4 >> 2] = 0;
       HEAP32[$50 + 8 >> 2] = 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($2, $3);
       $53 = HEAP32[$13 >> 2] | 0;
       $55 = HEAP32[$db + 8 >> 2] | 0;
       if ($53 >>> 0 < $55 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($53, $2);
        HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 24;
       } else {
        $62 = HEAP32[$db >> 2] | 0;
        $63 = $53 - $62 | 0;
        $64 = ($63 | 0) / 24 | 0;
        $65 = $64 + 1 | 0;
        if (($63 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
        $69 = ($55 - $62 | 0) / 24 | 0;
        if ($69 >>> 0 < 1073741823) {
         $71 = $69 << 1;
         $$0$i$i$i7$i = $71 >>> 0 < $65 >>> 0 ? $65 : $71;
        } else $$0$i$i$i7$i = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17$i, $$0$i$i$i7$i, $64, $db + 12 | 0);
        $74 = $__v$i$i17$i + 8 | 0;
        $75 = HEAP32[$74 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($75, $2);
        HEAP32[$74 >> 2] = $75 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i17$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
       HEAP8[$db + 60 >> 0] = 1;
       $$03$i = $first + 2 | 0;
       break L6;
       break;
      }
     default:
      {
       $$03$i = $first;
       break L6;
      }
     }
    } else $$03$i = $first; while (0);
    $$0 = $$03$i;
    break L1;
    break;
   }
  case 85:
   {
    L36 : do if (($last - $first | 0) > 2 & $6 << 24 >> 24 == 85) {
     switch (HEAP8[$first + 1 >> 0] | 0) {
     case 116:
      {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($1, 25789, 8);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
       $87 = $db + 4 | 0;
       $88 = HEAP32[$87 >> 2] | 0;
       $90 = HEAP32[$db + 8 >> 2] | 0;
       if ($88 >>> 0 < $90 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($88, $0);
        HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 24;
       } else {
        $97 = HEAP32[$db >> 2] | 0;
        $98 = $88 - $97 | 0;
        $99 = ($98 | 0) / 24 | 0;
        $100 = $99 + 1 | 0;
        if (($98 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
        $104 = ($90 - $97 | 0) / 24 | 0;
        if ($104 >>> 0 < 1073741823) {
         $106 = $104 << 1;
         $$0$i$i$i$i6 = $106 >>> 0 < $100 >>> 0 ? $100 : $106;
        } else $$0$i$i$i$i6 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17$i, $$0$i$i$i$i6, $99, $db + 12 | 0);
        $109 = $__v$i$i17$i + 8 | 0;
        $110 = HEAP32[$109 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($110, $0);
        HEAP32[$109 >> 2] = $110 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i17$i);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17$i);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
       $112 = $first + 2 | 0;
       if (($112 | 0) == ($last | 0)) {
        $114 = HEAP32[$87 >> 2] | 0;
        $115 = $114 + -24 | 0;
        $117 = $114;
        while (1) {
         $116 = $117 + -24 | 0;
         HEAP32[$87 >> 2] = $116;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($116);
         $117 = HEAP32[$87 >> 2] | 0;
         if (($117 | 0) == ($115 | 0)) {
          $$1$i9 = $first;
          break L36;
         }
        }
       }
       if (((HEAP8[$112 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
        $121 = $first + 3 | 0;
        L57 : do if (($121 | 0) == ($last | 0)) $t1$0$i$lcssa = $last; else {
         $t1$0$i45 = $121;
         while (1) {
          if (((HEAP8[$t1$0$i45 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
           $t1$0$i$lcssa = $t1$0$i45;
           break L57;
          }
          $t1$0$i45 = $t1$0$i45 + 1 | 0;
          if (($t1$0$i45 | 0) == ($last | 0)) {
           $t1$0$i$lcssa = $last;
           break;
          }
         }
        } while (0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_((HEAP32[$87 >> 2] | 0) + -24 | 0, $112, $t1$0$i$lcssa);
        $t0$0$i = $t1$0$i$lcssa;
       } else $t0$0$i = $112;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$87 >> 2] | 0) + -24 | 0, 39);
       if (($t0$0$i | 0) != ($last | 0)) if ((HEAP8[$t0$0$i >> 0] | 0) == 95) {
        $$1$i9 = $t0$0$i + 1 | 0;
        break L36;
       }
       $134 = HEAP32[$87 >> 2] | 0;
       $135 = $134 + -24 | 0;
       $137 = $134;
       while (1) {
        $136 = $137 + -24 | 0;
        HEAP32[$87 >> 2] = $136;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($136);
        $137 = HEAP32[$87 >> 2] | 0;
        if (($137 | 0) == ($135 | 0)) {
         $$1$i9 = $first;
         break L36;
        }
       }
       break;
      }
     case 108:
      break;
     default:
      {
       $$1$i9 = $first;
       break L36;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 25798, 9);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($2, $3);
     $140 = $db + 4 | 0;
     $141 = HEAP32[$140 >> 2] | 0;
     $143 = HEAP32[$db + 8 >> 2] | 0;
     if ($141 >>> 0 < $143 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($141, $2);
      HEAP32[$140 >> 2] = (HEAP32[$140 >> 2] | 0) + 24;
     } else {
      $150 = HEAP32[$db >> 2] | 0;
      $151 = $141 - $150 | 0;
      $152 = ($151 | 0) / 24 | 0;
      $153 = $152 + 1 | 0;
      if (($151 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
      $157 = ($143 - $150 | 0) / 24 | 0;
      if ($157 >>> 0 < 1073741823) {
       $159 = $157 << 1;
       $$0$i$i$i18$i = $159 >>> 0 < $153 >>> 0 ? $153 : $159;
      } else $$0$i$i$i18$i = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17$i, $$0$i$i$i18$i, $152, $db + 12 | 0);
      $162 = $__v$i$i17$i + 8 | 0;
      $163 = HEAP32[$162 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($163, $2);
      HEAP32[$162 >> 2] = $163 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i17$i);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17$i);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $165 = $first + 2 | 0;
     do if ((HEAP8[$165 >> 0] | 0) == 118) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$140 >> 2] | 0) + -24 | 0, 41);
      $t01$1$i = $first + 3 | 0;
     } else {
      $171 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($165, $last, $db) | 0;
      $173 = HEAP32[$140 >> 2] | 0;
      if (($171 | 0) == ($165 | 0)) {
       $174 = $173 + -24 | 0;
       $176 = $173;
       while (1) {
        $175 = $176 + -24 | 0;
        HEAP32[$140 >> 2] = $175;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($175);
        $176 = HEAP32[$140 >> 2] | 0;
        if (($176 | 0) == ($174 | 0)) {
         $$1$i9 = $first;
         break L36;
        }
       }
      }
      if ((($173 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       $$1$i9 = $first;
       break L36;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp$i, $173 + -24 | 0);
      $185 = HEAP32[$140 >> 2] | 0;
      $186 = $185 + -24 | 0;
      $188 = $185;
      do {
       $187 = $188 + -24 | 0;
       HEAP32[$140 >> 2] = $187;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($187);
       $188 = HEAP32[$140 >> 2] | 0;
      } while (($188 | 0) != ($186 | 0));
      $191 = HEAP8[$tmp$i >> 0] | 0;
      $193 = ($191 & 1) == 0;
      $194 = $tmp$i + 8 | 0;
      $196 = $tmp$i + 1 | 0;
      $198 = $tmp$i + 4 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($185 + -48 | 0, $193 ? $196 : HEAP32[$194 >> 2] | 0, $193 ? ($191 & 255) >>> 1 : HEAP32[$198 >> 2] | 0) | 0;
      $203 = $4 + 4 | 0;
      $204 = $4 + 8 | 0;
      $$pre$i$i$i$i = $191;
      $t01$0$i = $171;
      while (1) {
       $205 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t01$0$i, $last, $db) | 0;
       $207 = HEAP32[$140 >> 2] | 0;
       if (($205 | 0) == ($t01$0$i | 0)) {
        $$lcssa = $207;
        $t01$0$i$lcssa67 = $t01$0$i;
        label = 79;
        break;
       }
       if ((($207 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
        label = 113;
        break;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $207 + -24 | 0);
       L96 : do if (!($$pre$i$i$i$i & 1)) {
        HEAP8[$196 >> 0] = 0;
        HEAP8[$tmp$i >> 0] = 0;
       } else {
        $217 = HEAP32[$194 >> 2] | 0;
        HEAP8[$217 >> 0] = 0;
        HEAP32[$198 >> 2] = 0;
        $218 = HEAP32[$tmp$i >> 2] | 0;
        $phitmp$i$i$i$i$i$i$i = ($218 & -2) + -1 | 0;
        $220 = $218 & 255;
        do if (!($220 & 1)) {
         $224 = $218 >>> 1 & 127;
         if (($220 & 255) < 22) {
          _memcpy($196 | 0, $217 | 0, ($218 >>> 1 & 127) + 1 | 0) | 0;
          _free($217);
          $$ph26 = $224;
          break;
         }
         $227 = $224 + 16 & 240;
         $phitmp$i2$i$i$i$i$i$i = $227 + -1 | 0;
         if (($phitmp$i2$i$i$i$i$i$i | 0) == ($phitmp$i$i$i$i$i$i$i | 0)) break L96;
         $230 = _malloc($227) | 0;
         if ($phitmp$i2$i$i$i$i$i$i >>> 0 <= $phitmp$i$i$i$i$i$i$i >>> 0 & ($230 | 0) == 0) break L96;
         _memcpy($230 | 0, $196 | 0, ($218 >>> 1 & 127) + 1 | 0) | 0;
         HEAP32[$tmp$i >> 2] = $227 | 1;
         HEAP32[$198 >> 2] = $224;
         HEAP32[$194 >> 2] = $230;
         break L96;
        } else {
         HEAP8[$196 >> 0] = 0;
         _free($217);
         $$ph26 = 0;
        } while (0);
        HEAP8[$tmp$i >> 0] = $$ph26 << 1;
       } while (0);
       HEAP32[$tmp$i >> 2] = HEAP32[$4 >> 2];
       HEAP32[$tmp$i + 4 >> 2] = HEAP32[$4 + 4 >> 2];
       HEAP32[$tmp$i + 8 >> 2] = HEAP32[$4 + 8 >> 2];
       HEAP32[$4 >> 2] = 0;
       HEAP32[$203 >> 2] = 0;
       HEAP32[$204 >> 2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
       $241 = HEAP32[$140 >> 2] | 0;
       $242 = $241 + -24 | 0;
       $244 = $241;
       do {
        $243 = $244 + -24 | 0;
        HEAP32[$140 >> 2] = $243;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($243);
        $244 = HEAP32[$140 >> 2] | 0;
       } while (($244 | 0) != ($242 | 0));
       $246 = HEAP8[$tmp$i >> 0] | 0;
       $248 = ($246 & 1) == 0;
       $252 = $248 ? ($246 & 255) >>> 1 : HEAP32[$198 >> 2] | 0;
       if (!$252) {
        $$pre$i$i$i$i = $246;
        $t01$0$i = $205;
        continue;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($241 + -48 | 0, 25575) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$140 >> 2] | 0) + -24 | 0, $248 ? $196 : HEAP32[$194 >> 2] | 0, $252) | 0;
       $$pre$i$i$i$i = $246;
       $t01$0$i = $205;
      }
      if ((label | 0) == 79) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($$lcssa + -24 | 0, 25478) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
       $t01$1$i = $t01$0$i$lcssa67;
       break;
      } else if ((label | 0) == 113) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($tmp$i);
       $$1$i9 = $first;
       break L36;
      }
     } while (0);
     if (($t01$1$i | 0) != ($last | 0)) if ((HEAP8[$t01$1$i >> 0] | 0) == 69) {
      $268 = $t01$1$i + 1 | 0;
      if (($268 | 0) == ($last | 0)) {
       $270 = HEAP32[$140 >> 2] | 0;
       $271 = $270 + -24 | 0;
       $273 = $270;
       while (1) {
        $272 = $273 + -24 | 0;
        HEAP32[$140 >> 2] = $272;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($272);
        $273 = HEAP32[$140 >> 2] | 0;
        if (($273 | 0) == ($271 | 0)) {
         $$1$i9 = $first;
         break L36;
        }
       }
      }
      if (((HEAP8[$268 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
       $277 = $t01$1$i + 2 | 0;
       L127 : do if (($277 | 0) == ($last | 0)) $t13$0$i$lcssa = $last; else {
        $t13$0$i51 = $277;
        while (1) {
         if (((HEAP8[$t13$0$i51 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
          $t13$0$i$lcssa = $t13$0$i51;
          break L127;
         }
         $t13$0$i51 = $t13$0$i51 + 1 | 0;
         if (($t13$0$i51 | 0) == ($last | 0)) {
          $t13$0$i$lcssa = $last;
          break;
         }
        }
       } while (0);
       $283 = HEAP32[$140 >> 2] | 0;
       $284 = $283 + -24 | 0;
       $285 = HEAP8[$284 >> 0] | 0;
       if (!($285 & 1)) {
        $300 = 10;
        $301 = ($285 & 255) >>> 1;
        $304 = $285;
       } else {
        $292 = HEAP32[$284 >> 2] | 0;
        $300 = ($292 & -2) + -1 | 0;
        $301 = HEAP32[$283 + -20 >> 2] | 0;
        $304 = $292 & 255;
       }
       $297 = $t13$0$i$lcssa - $268 | 0;
       if (($t13$0$i$lcssa | 0) == ($268 | 0)) $t01$2$i = $268; else {
        if (($300 - $301 | 0) >>> 0 < $297 >>> 0) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($284, $300, $301 + $297 - $300 | 0, $301, 7, $297);
         $__p$0$i$i = HEAP32[$283 + -16 >> 2] | 0;
        } else {
         if (!($304 & 1)) $312 = $284 + 1 | 0; else $312 = HEAP32[$283 + -16 >> 2] | 0;
         if (($301 | 0) == 7) $__p$0$i$i = $312; else {
          _memmove($312 + ($297 + 7) | 0, $312 + 7 | 0, $301 + -7 | 0) | 0;
          $__p$0$i$i = $312;
         }
        }
        $318 = $301 + $297 | 0;
        if (!(HEAP8[$284 >> 0] & 1)) HEAP8[$284 >> 0] = $318 << 1; else HEAP32[$283 + -20 >> 2] = $318;
        HEAP8[$__p$0$i$i + $318 >> 0] = 0;
        if (($268 | 0) == ($t13$0$i$lcssa | 0)) $t01$2$i = $t13$0$i$lcssa; else {
         $$0$i$i49 = $268;
         $__p$1$i$i48 = $__p$0$i$i + 7 | 0;
         while (1) {
          HEAP8[$__p$1$i$i48 >> 0] = HEAP8[$$0$i$i49 >> 0] | 0;
          $$0$i$i49 = $$0$i$i49 + 1 | 0;
          if (($$0$i$i49 | 0) == ($t13$0$i$lcssa | 0)) {
           $t01$2$i = $t13$0$i$lcssa;
           break;
          } else $__p$1$i$i48 = $__p$1$i$i48 + 1 | 0;
         }
        }
       }
      } else $t01$2$i = $268;
      if (($t01$2$i | 0) != ($last | 0)) if ((HEAP8[$t01$2$i >> 0] | 0) == 95) {
       $$1$i9 = $t01$2$i + 1 | 0;
       break;
      }
      $335 = HEAP32[$140 >> 2] | 0;
      $336 = $335 + -24 | 0;
      $338 = $335;
      while (1) {
       $337 = $338 + -24 | 0;
       HEAP32[$140 >> 2] = $337;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($337);
       $338 = HEAP32[$140 >> 2] | 0;
       if (($338 | 0) == ($336 | 0)) {
        $$1$i9 = $first;
        break L36;
       }
      }
     }
     $263 = HEAP32[$140 >> 2] | 0;
     $264 = $263 + -24 | 0;
     $266 = $263;
     do {
      $265 = $266 + -24 | 0;
      HEAP32[$140 >> 2] = $265;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($265);
      $266 = HEAP32[$140 >> 2] | 0;
     } while (($266 | 0) != ($264 | 0));
     $$1$i9 = $first;
    } else $$1$i9 = $first; while (0);
    $$0 = $$1$i9;
    break L1;
    break;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    $341 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    STACKTOP = sp;
    return $341 | 0;
   }
  default:
   {
    $$0 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
    break L1;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12dwarf2reader15CompilationUnit16ProcessAttributeEyPKcNS_14DwarfAttributeENS_9DwarfFormE($this, $0, $1, $start, $attr, $form) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $start = $start | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 var $$0 = 0, $$0$i = 0, $$0$i14 = 0, $$0$i19 = 0, $$0$i27 = 0, $$0$i38$mask = 0, $$0$i43 = 0, $$0$in$i = 0, $$0$in$i21 = 0, $$0$in$i29 = 0, $$0$in$i32 = 0, $$0$in$i37 = 0, $$0$in$i8 = 0, $$field = 0, $$field11 = 0, $$field14 = 0, $$field17 = 0, $$field2 = 0, $$field20 = 0, $$field23 = 0, $$field26 = 0, $$field5 = 0, $$field8 = 0, $$lcssa = 0, $$lcssa106 = 0, $$lcssa108 = 0, $$lcssa109 = 0, $$lcssa111 = 0, $$lcssa112 = 0, $$lcssa114 = 0, $101 = 0, $104 = 0, $107 = 0, $11 = 0, $110 = 0, $113 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $124 = 0, $126 = 0, $129 = 0, $130 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $142 = 0, $143 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $171 = 0, $172 = 0, $175 = 0, $178 = 0, $183 = 0, $186 = 0, $189 = 0, $19 = 0, $190 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $2 = 0, $201 = 0, $202 = 0, $205 = 0, $208 = 0, $211 = 0, $212 = 0, $214 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $226 = 0, $229 = 0, $231 = 0, $232 = 0, $233 = 0, $236 = 0, $239 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $248 = 0, $253 = 0, $254 = 0, $262 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $274 = 0, $279 = 0, $280 = 0, $288 = 0, $291 = 0, $295 = 0, $3 = 0, $301 = 0, $305 = 0, $308 = 0, $311 = 0, $313 = 0, $326 = 0, $332 = 0, $336 = 0, $339 = 0, $343 = 0, $346 = 0, $349 = 0, $35 = 0, $352 = 0, $369 = 0, $375 = 0, $379 = 0, $382 = 0, $386 = 0, $389 = 0, $392 = 0, $395 = 0, $398 = 0, $401 = 0, $404 = 0, $407 = 0, $41 = 0, $411 = 0, $412 = 0, $414 = 0, $417 = 0, $418 = 0, $422 = 0, $423 = 0, $426 = 0, $427 = 0, $43 = 0, $430 = 0, $431 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $460 = 0, $466 = 0, $467 = 0, $468 = 0, $472 = 0, $475 = 0, $478 = 0, $479 = 0, $481 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $491 = 0, $497 = 0, $498 = 0, $499 = 0, $503 = 0, $507 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $519 = 0, $524 = 0, $525 = 0, $532 = 0, $533 = 0, $538 = 0, $543 = 0, $544 = 0, $552 = 0, $555 = 0, $559 = 0, $562 = 0, $565 = 0, $568 = 0, $57 = 0, $571 = 0, $574 = 0, $577 = 0, $580 = 0, $584 = 0, $585 = 0, $587 = 0, $590 = 0, $591 = 0, $595 = 0, $596 = 0, $599 = 0, $6 = 0, $600 = 0, $603 = 0, $604 = 0, $608 = 0, $609 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $632 = 0, $633 = 0, $635 = 0, $638 = 0, $64 = 0, $647 = 0, $649 = 0, $662 = 0, $67 = 0, $671 = 0, $674 = 0, $677 = 0, $680 = 0, $697 = 0, $7 = 0, $70 = 0, $705 = 0, $706 = 0, $708 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $718 = 0, $723 = 0, $724 = 0, $726 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $737 = 0, $742 = 0, $743 = 0, $754 = 0, $756 = 0, $759 = 0, $9 = 0, $91 = 0, $94 = 0, $98 = 0, $num_read$0$i = 0, $num_read$0$i12 = 0, $num_read$0$i18 = 0, $num_read$0$i25 = 0, $num_read$0$i41 = 0, $shift$0$i = 0, $shift$0$i13 = 0, $shift$0$i17 = 0, $shift$0$i26 = 0, $shift$0$i42 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 do switch ($form | 0) {
 case 22:
  {
   $$0$i = $start;
   $12 = 0;
   $14 = 0;
   $num_read$0$i = 0;
   $shift$0$i = 0;
   while (1) {
    $6 = $num_read$0$i + 1 | 0;
    $7 = HEAPU8[$$0$i >> 0] | 0;
    $9 = _bitshift64Shl($7 & 127 | 0, 0, $shift$0$i | 0) | 0;
    $11 = $9 | $12;
    if (!($7 & 128)) {
     $$lcssa = $6;
     $19 = $11;
     break;
    } else {
     $$0$i = $$0$i + 1 | 0;
     $12 = $11;
     $14 = tempRet0 | $14;
     $num_read$0$i = $6;
     $shift$0$i = $shift$0$i + 7 | 0;
    }
   }
   $$0 = __ZN12dwarf2reader15CompilationUnit16ProcessAttributeEyPKcNS_14DwarfAttributeENS_9DwarfFormE($this, $0, $1, $start + $$lcssa | 0, $attr, $19) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 25:
  {
   $22 = HEAP32[$this + 76 >> 2] | 0;
   FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 7]($22, $0, $1, $attr, 25, 1, 0);
   $$0 = $start;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 12:
 case 11:
  {
   $27 = HEAP32[$this + 76 >> 2] | 0;
   FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$27 >> 2] | 0) + 16 >> 2] & 7]($27, $0, $1, $attr, $form, HEAPU8[$start >> 0] | 0, 0);
   $$0 = $start + 1 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 5:
  {
   $35 = HEAP32[$this + 76 >> 2] | 0;
   $41 = HEAP8[$start >> 0] | 0;
   $43 = HEAP8[$start + 1 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i = ($43 & 255) << 8 | $41 & 255; else $$0$in$i = $43 & 255 | ($41 & 255) << 8;
   FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$35 >> 2] | 0) + 16 >> 2] & 7]($35, $0, $1, $attr, 5, $$0$in$i & 65535, 0);
   $$0 = $start + 2 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 6:
  {
   $57 = HEAP32[$this + 76 >> 2] | 0;
   $64 = HEAPU8[$start >> 0] | 0;
   $67 = HEAPU8[$start + 1 >> 0] | 0;
   $70 = HEAPU8[$start + 2 >> 0] | 0;
   $73 = HEAPU8[$start + 3 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i8 = $67 << 8 | $64 | $70 << 16 | $73 << 24; else $$0$in$i8 = $67 << 16 | $64 << 24 | $70 << 8 | $73;
   FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$57 >> 2] | 0) + 16 >> 2] & 7]($57, $0, $1, $attr, 6, $$0$in$i8, 0);
   $$0 = $start + 4 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 7:
  {
   $91 = HEAP32[$this + 76 >> 2] | 0;
   $94 = HEAP32[(HEAP32[$91 >> 2] | 0) + 16 >> 2] | 0;
   $98 = HEAPU8[$start >> 0] | 0;
   $101 = HEAPU8[$start + 1 >> 0] | 0;
   $104 = HEAPU8[$start + 2 >> 0] | 0;
   $107 = HEAPU8[$start + 3 >> 0] | 0;
   $110 = HEAPU8[$start + 4 >> 0] | 0;
   $113 = HEAPU8[$start + 5 >> 0] | 0;
   $116 = HEAPU8[$start + 6 >> 0] | 0;
   $119 = HEAPU8[$start + 7 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) {
    $123 = _bitshift64Shl($101 | 0, 0, 8) | 0;
    $124 = tempRet0;
    $126 = _bitshift64Shl($104 | 0, 0, 16) | 0;
    $129 = $124 | tempRet0;
    $130 = _bitshift64Shl($107 | 0, 0, 24) | 0;
    $134 = $129 | tempRet0 | $110;
    $135 = _bitshift64Shl($113 | 0, 0, 40) | 0;
    $138 = $134 | tempRet0;
    $139 = _bitshift64Shl($116 | 0, 0, 48) | 0;
    $142 = $138 | tempRet0;
    $143 = _bitshift64Shl($119 | 0, 0, 56) | 0;
    $171 = $123 | $98 | $126 | $130 | $135 | $139 | $143;
    $172 = $142 | tempRet0;
   } else {
    $147 = _bitshift64Shl($116 | 0, 0, 8) | 0;
    $148 = tempRet0;
    $149 = _bitshift64Shl($113 | 0, 0, 16) | 0;
    $150 = tempRet0;
    $151 = _bitshift64Shl($110 | 0, 0, 24) | 0;
    $152 = tempRet0;
    $153 = _bitshift64Shl($104 | 0, 0, 40) | 0;
    $154 = tempRet0;
    $155 = _bitshift64Shl($101 | 0, 0, 48) | 0;
    $156 = tempRet0;
    $157 = _bitshift64Shl($98 | 0, 0, 56) | 0;
    $171 = $155 | $157 | $153 | $151 | $149 | $147 | $119;
    $172 = $156 | tempRet0 | $154 | $107 | $152 | $150 | $148;
   }
   FUNCTION_TABLE_viiiiiii[$94 & 7]($91, $0, $1, $attr, 7, $171, $172);
   $$0 = $start + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 8:
  {
   $175 = HEAP32[$this + 76 >> 2] | 0;
   $178 = HEAP32[(HEAP32[$175 >> 2] | 0) + 32 >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $start, _strlen($start | 0) | 0);
   FUNCTION_TABLE_viiiiii[$178 & 15]($175, $0, $1, $attr, 8, $2);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $$0 = $start + ((_strlen($start | 0) | 0) + 1) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 15:
  {
   $183 = HEAP32[$this + 76 >> 2] | 0;
   $186 = HEAP32[(HEAP32[$183 >> 2] | 0) + 16 >> 2] | 0;
   $$0$i14 = $start;
   $195 = 0;
   $197 = 0;
   $num_read$0$i12 = 0;
   $shift$0$i13 = 0;
   while (1) {
    $189 = $num_read$0$i12 + 1 | 0;
    $190 = HEAPU8[$$0$i14 >> 0] | 0;
    $192 = _bitshift64Shl($190 & 127 | 0, 0, $shift$0$i13 | 0) | 0;
    $194 = $192 | $195;
    $196 = tempRet0 | $197;
    if (!($190 & 128)) {
     $$lcssa106 = $189;
     $201 = $194;
     $202 = $196;
     break;
    } else {
     $$0$i14 = $$0$i14 + 1 | 0;
     $195 = $194;
     $197 = $196;
     $num_read$0$i12 = $189;
     $shift$0$i13 = $shift$0$i13 + 7 | 0;
    }
   }
   FUNCTION_TABLE_viiiiiii[$186 & 7]($183, $0, $1, $attr, 15, $201, $202);
   $$0 = $start + $$lcssa106 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 13:
  {
   $205 = HEAP32[$this + 76 >> 2] | 0;
   $208 = HEAP32[(HEAP32[$205 >> 2] | 0) + 20 >> 2] | 0;
   $$0$i19 = $start;
   $217 = 0;
   $219 = 0;
   $num_read$0$i18 = 0;
   $shift$0$i17 = 0;
   while (1) {
    $211 = $num_read$0$i18 + 1 | 0;
    $212 = HEAPU8[$$0$i19 >> 0] | 0;
    $214 = _bitshift64Shl($212 & 127 | 0, 0, $shift$0$i17 | 0) | 0;
    $216 = $214 | $217;
    $218 = tempRet0 | $219;
    $220 = $shift$0$i17 + 7 | 0;
    if (!($212 & 128)) {
     $$lcssa108 = $211;
     $$lcssa109 = $212;
     $$lcssa111 = $220;
     $229 = $216;
     $231 = $218;
     break;
    } else {
     $$0$i19 = $$0$i19 + 1 | 0;
     $217 = $216;
     $219 = $218;
     $num_read$0$i18 = $211;
     $shift$0$i17 = $220;
    }
   }
   if ($$lcssa111 >>> 0 > 63 | ($$lcssa109 & 64 | 0) == 0) {
    $232 = $229;
    $233 = $231;
   } else {
    $226 = _bitshift64Shl(-1, -1, $$lcssa111 | 0) | 0;
    $232 = $229 | $226;
    $233 = $231 | tempRet0;
   }
   FUNCTION_TABLE_viiiiiii[$208 & 7]($205, $0, $1, $attr, 13, $232, $233);
   $$0 = $start + $$lcssa108 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 1:
  {
   $236 = HEAP32[$this + 76 >> 2] | 0;
   $239 = HEAP32[(HEAP32[$236 >> 2] | 0) + 16 >> 2] | 0;
   $240 = $this + 68 | 0;
   $241 = HEAP32[$240 >> 2] | 0;
   $242 = $241 + 12 | 0;
   $$field = HEAP32[$242 >> 2] | 0;
   $$field2 = HEAP32[$242 + 4 >> 2] | 0;
   $243 = $$field2 & 1;
   if (!($243 | $$field)) ___assert_fail(18598, 18394, 143, 18620);
   $248 = $241 + ($$field2 >> 1) | 0;
   if (!$243) $253 = $$field; else $253 = HEAP32[(HEAP32[$248 >> 2] | 0) + $$field >> 2] | 0;
   $254 = FUNCTION_TABLE_iii[$253 & 31]($248, $start) | 0;
   FUNCTION_TABLE_viiiiiii[$239 & 7]($236, $0, $1, $attr, 1, $254, tempRet0);
   $$0 = $start + (HEAPU8[(HEAP32[$240 >> 2] | 0) + 24 >> 0] | 0) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 23:
  {
   $262 = HEAP32[$this + 76 >> 2] | 0;
   $265 = HEAP32[(HEAP32[$262 >> 2] | 0) + 16 >> 2] | 0;
   $266 = $this + 68 | 0;
   $267 = HEAP32[$266 >> 2] | 0;
   $268 = $267 + 4 | 0;
   $$field5 = HEAP32[$268 >> 2] | 0;
   $$field8 = HEAP32[$268 + 4 >> 2] | 0;
   $269 = $$field8 & 1;
   if (!($269 | $$field5)) ___assert_fail(18373, 18394, 138, 18430);
   $274 = $267 + ($$field8 >> 1) | 0;
   if (!$269) $279 = $$field5; else $279 = HEAP32[(HEAP32[$274 >> 2] | 0) + $$field5 >> 2] | 0;
   $280 = FUNCTION_TABLE_iii[$279 & 31]($274, $start) | 0;
   FUNCTION_TABLE_viiiiiii[$265 & 7]($262, $0, $1, $attr, 23, $280, tempRet0);
   $$0 = $start + (HEAPU8[(HEAP32[$266 >> 2] | 0) + 25 >> 0] | 0) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 17:
  {
   $288 = HEAP32[$this + 76 >> 2] | 0;
   $291 = HEAP32[(HEAP32[$288 >> 2] | 0) + 24 >> 2] | 0;
   $295 = $this + 40 | 0;
   $301 = _i64Add(HEAPU8[$start >> 0] | 0 | 0, 0, HEAP32[$295 >> 2] | 0, HEAP32[$295 + 4 >> 2] | 0) | 0;
   FUNCTION_TABLE_viiiiiii[$291 & 7]($288, $0, $1, $attr, 17, $301, tempRet0);
   $$0 = $start + 1 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 18:
  {
   $305 = HEAP32[$this + 76 >> 2] | 0;
   $308 = HEAP32[(HEAP32[$305 >> 2] | 0) + 24 >> 2] | 0;
   $311 = HEAP8[$start >> 0] | 0;
   $313 = HEAP8[$start + 1 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i21 = ($313 & 255) << 8 | $311 & 255; else $$0$in$i21 = $313 & 255 | ($311 & 255) << 8;
   $326 = $this + 40 | 0;
   $332 = _i64Add($$0$in$i21 & 65535 | 0, 0, HEAP32[$326 >> 2] | 0, HEAP32[$326 + 4 >> 2] | 0) | 0;
   FUNCTION_TABLE_viiiiiii[$308 & 7]($305, $0, $1, $attr, 18, $332, tempRet0);
   $$0 = $start + 2 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 19:
  {
   $336 = HEAP32[$this + 76 >> 2] | 0;
   $339 = HEAP32[(HEAP32[$336 >> 2] | 0) + 24 >> 2] | 0;
   $343 = HEAPU8[$start >> 0] | 0;
   $346 = HEAPU8[$start + 1 >> 0] | 0;
   $349 = HEAPU8[$start + 2 >> 0] | 0;
   $352 = HEAPU8[$start + 3 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i29 = $346 << 8 | $343 | $349 << 16 | $352 << 24; else $$0$in$i29 = $346 << 16 | $343 << 24 | $349 << 8 | $352;
   $369 = $this + 40 | 0;
   $375 = _i64Add($$0$in$i29 | 0, 0, HEAP32[$369 >> 2] | 0, HEAP32[$369 + 4 >> 2] | 0) | 0;
   FUNCTION_TABLE_viiiiiii[$339 & 7]($336, $0, $1, $attr, 19, $375, tempRet0);
   $$0 = $start + 4 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 20:
  {
   $379 = HEAP32[$this + 76 >> 2] | 0;
   $382 = HEAP32[(HEAP32[$379 >> 2] | 0) + 24 >> 2] | 0;
   $386 = HEAPU8[$start >> 0] | 0;
   $389 = HEAPU8[$start + 1 >> 0] | 0;
   $392 = HEAPU8[$start + 2 >> 0] | 0;
   $395 = HEAPU8[$start + 3 >> 0] | 0;
   $398 = HEAPU8[$start + 4 >> 0] | 0;
   $401 = HEAPU8[$start + 5 >> 0] | 0;
   $404 = HEAPU8[$start + 6 >> 0] | 0;
   $407 = HEAPU8[$start + 7 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) {
    $411 = _bitshift64Shl($389 | 0, 0, 8) | 0;
    $412 = tempRet0;
    $414 = _bitshift64Shl($392 | 0, 0, 16) | 0;
    $417 = $412 | tempRet0;
    $418 = _bitshift64Shl($395 | 0, 0, 24) | 0;
    $422 = $417 | tempRet0 | $398;
    $423 = _bitshift64Shl($401 | 0, 0, 40) | 0;
    $426 = $422 | tempRet0;
    $427 = _bitshift64Shl($404 | 0, 0, 48) | 0;
    $430 = $426 | tempRet0;
    $431 = _bitshift64Shl($407 | 0, 0, 56) | 0;
    $466 = $411 | $386 | $414 | $418 | $423 | $427 | $431;
    $467 = $430 | tempRet0;
   } else {
    $435 = _bitshift64Shl($404 | 0, 0, 8) | 0;
    $436 = tempRet0;
    $437 = _bitshift64Shl($401 | 0, 0, 16) | 0;
    $438 = tempRet0;
    $439 = _bitshift64Shl($398 | 0, 0, 24) | 0;
    $440 = tempRet0;
    $441 = _bitshift64Shl($392 | 0, 0, 40) | 0;
    $442 = tempRet0;
    $443 = _bitshift64Shl($389 | 0, 0, 48) | 0;
    $444 = tempRet0;
    $445 = _bitshift64Shl($386 | 0, 0, 56) | 0;
    $466 = $443 | $445 | $441 | $439 | $437 | $435 | $407;
    $467 = $444 | tempRet0 | $442 | $395 | $440 | $438 | $436;
   }
   $460 = $this + 40 | 0;
   $468 = _i64Add(HEAP32[$460 >> 2] | 0, HEAP32[$460 + 4 >> 2] | 0, $466 | 0, $467 | 0) | 0;
   FUNCTION_TABLE_viiiiiii[$382 & 7]($379, $0, $1, $attr, 20, $468, tempRet0);
   $$0 = $start + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 21:
  {
   $472 = HEAP32[$this + 76 >> 2] | 0;
   $475 = HEAP32[(HEAP32[$472 >> 2] | 0) + 24 >> 2] | 0;
   $$0$i43 = $start;
   $484 = 0;
   $486 = 0;
   $num_read$0$i41 = 0;
   $shift$0$i42 = 0;
   while (1) {
    $478 = $num_read$0$i41 + 1 | 0;
    $479 = HEAPU8[$$0$i43 >> 0] | 0;
    $481 = _bitshift64Shl($479 & 127 | 0, 0, $shift$0$i42 | 0) | 0;
    $483 = $481 | $484;
    $485 = tempRet0 | $486;
    if (!($479 & 128)) {
     $$lcssa112 = $478;
     $497 = $483;
     $498 = $485;
     break;
    } else {
     $$0$i43 = $$0$i43 + 1 | 0;
     $484 = $483;
     $486 = $485;
     $num_read$0$i41 = $478;
     $shift$0$i42 = $shift$0$i42 + 7 | 0;
    }
   }
   $491 = $this + 40 | 0;
   $499 = _i64Add(HEAP32[$491 >> 2] | 0, HEAP32[$491 + 4 >> 2] | 0, $497 | 0, $498 | 0) | 0;
   FUNCTION_TABLE_viiiiiii[$475 & 7]($472, $0, $1, $attr, 21, $499, tempRet0);
   $$0 = $start + $$lcssa112 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 16:
  {
   $503 = HEAP16[$this + 16 >> 1] | 0;
   if (($503 & 65535) <= 1) ___assert_fail(18164, 18044, 396, 18632);
   $507 = HEAP32[$this + 76 >> 2] | 0;
   $510 = HEAP32[(HEAP32[$507 >> 2] | 0) + 24 >> 2] | 0;
   $511 = $this + 68 | 0;
   $512 = HEAP32[$511 >> 2] | 0;
   if ($503 << 16 >> 16 == 2) {
    $513 = $512 + 12 | 0;
    $$field11 = HEAP32[$513 >> 2] | 0;
    $$field14 = HEAP32[$513 + 4 >> 2] | 0;
    $514 = $$field14 & 1;
    if (!($514 | $$field11)) ___assert_fail(18598, 18394, 143, 18620);
    $519 = $512 + ($$field14 >> 1) | 0;
    if (!$514) $524 = $$field11; else $524 = HEAP32[(HEAP32[$519 >> 2] | 0) + $$field11 >> 2] | 0;
    $525 = FUNCTION_TABLE_iii[$524 & 31]($519, $start) | 0;
    FUNCTION_TABLE_viiiiiii[$510 & 7]($507, $0, $1, $attr, 16, $525, tempRet0);
    $$0 = $start + (HEAPU8[(HEAP32[$511 >> 2] | 0) + 24 >> 0] | 0) | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    $532 = $512 + 4 | 0;
    $$field17 = HEAP32[$532 >> 2] | 0;
    $$field20 = HEAP32[$532 + 4 >> 2] | 0;
    $533 = $$field20 & 1;
    if (!($533 | $$field17)) ___assert_fail(18373, 18394, 138, 18430);
    $538 = $512 + ($$field20 >> 1) | 0;
    if (!$533) $543 = $$field17; else $543 = HEAP32[(HEAP32[$538 >> 2] | 0) + $$field17 >> 2] | 0;
    $544 = FUNCTION_TABLE_iii[$543 & 31]($538, $start) | 0;
    FUNCTION_TABLE_viiiiiii[$510 & 7]($507, $0, $1, $attr, 16, $544, tempRet0);
    $$0 = $start + (HEAPU8[(HEAP32[$511 >> 2] | 0) + 25 >> 0] | 0) | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   break;
  }
 case 32:
  {
   $552 = HEAP32[$this + 76 >> 2] | 0;
   $555 = HEAP32[(HEAP32[$552 >> 2] | 0) + 36 >> 2] | 0;
   $559 = HEAPU8[$start >> 0] | 0;
   $562 = HEAPU8[$start + 1 >> 0] | 0;
   $565 = HEAPU8[$start + 2 >> 0] | 0;
   $568 = HEAPU8[$start + 3 >> 0] | 0;
   $571 = HEAPU8[$start + 4 >> 0] | 0;
   $574 = HEAPU8[$start + 5 >> 0] | 0;
   $577 = HEAPU8[$start + 6 >> 0] | 0;
   $580 = HEAPU8[$start + 7 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) {
    $584 = _bitshift64Shl($562 | 0, 0, 8) | 0;
    $585 = tempRet0;
    $587 = _bitshift64Shl($565 | 0, 0, 16) | 0;
    $590 = $585 | tempRet0;
    $591 = _bitshift64Shl($568 | 0, 0, 24) | 0;
    $595 = $590 | tempRet0 | $571;
    $596 = _bitshift64Shl($574 | 0, 0, 40) | 0;
    $599 = $595 | tempRet0;
    $600 = _bitshift64Shl($577 | 0, 0, 48) | 0;
    $603 = $599 | tempRet0;
    $604 = _bitshift64Shl($580 | 0, 0, 56) | 0;
    $632 = $584 | $559 | $587 | $591 | $596 | $600 | $604;
    $633 = $603 | tempRet0;
   } else {
    $608 = _bitshift64Shl($577 | 0, 0, 8) | 0;
    $609 = tempRet0;
    $610 = _bitshift64Shl($574 | 0, 0, 16) | 0;
    $611 = tempRet0;
    $612 = _bitshift64Shl($571 | 0, 0, 24) | 0;
    $613 = tempRet0;
    $614 = _bitshift64Shl($565 | 0, 0, 40) | 0;
    $615 = tempRet0;
    $616 = _bitshift64Shl($562 | 0, 0, 48) | 0;
    $617 = tempRet0;
    $618 = _bitshift64Shl($559 | 0, 0, 56) | 0;
    $632 = $616 | $618 | $614 | $612 | $610 | $608 | $580;
    $633 = $617 | tempRet0 | $615 | $568 | $613 | $611 | $609;
   }
   FUNCTION_TABLE_viiiiiii[$555 & 7]($552, $0, $1, $attr, 32, $632, $633);
   $$0 = $start + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 10:
  {
   $635 = HEAP8[$start >> 0] | 0;
   $638 = HEAP32[$this + 76 >> 2] | 0;
   FUNCTION_TABLE_viiiiiiii[HEAP32[(HEAP32[$638 >> 2] | 0) + 28 >> 2] & 3]($638, $0, $1, $attr, 10, $start + 1 | 0, $635 & 255, 0);
   $$0 = $start + (($635 & 255) + 1) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 3:
  {
   $647 = HEAP8[$start >> 0] | 0;
   $649 = HEAP8[$start + 1 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i37 = ($649 & 255) << 8 | $647 & 255; else $$0$in$i37 = $649 & 255 | ($647 & 255) << 8;
   $$0$i38$mask = $$0$in$i37 & 65535;
   $662 = HEAP32[$this + 76 >> 2] | 0;
   FUNCTION_TABLE_viiiiiiii[HEAP32[(HEAP32[$662 >> 2] | 0) + 28 >> 2] & 3]($662, $0, $1, $attr, 3, $start + 2 | 0, $$0$i38$mask, 0);
   $$0 = $start + ($$0$i38$mask + 2) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 4:
  {
   $671 = HEAPU8[$start >> 0] | 0;
   $674 = HEAPU8[$start + 1 >> 0] | 0;
   $677 = HEAPU8[$start + 2 >> 0] | 0;
   $680 = HEAPU8[$start + 3 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i32 = $674 << 8 | $671 | $677 << 16 | $680 << 24; else $$0$in$i32 = $674 << 16 | $671 << 24 | $677 << 8 | $680;
   $697 = HEAP32[$this + 76 >> 2] | 0;
   FUNCTION_TABLE_viiiiiiii[HEAP32[(HEAP32[$697 >> 2] | 0) + 28 >> 2] & 3]($697, $0, $1, $attr, 4, $start + 4 | 0, $$0$in$i32, 0);
   $$0 = $start + ($$0$in$i32 + 4) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 24:
 case 9:
  {
   $$0$i27 = $start;
   $711 = 0;
   $713 = 0;
   $num_read$0$i25 = 0;
   $shift$0$i26 = 0;
   while (1) {
    $705 = $num_read$0$i25 + 1 | 0;
    $706 = HEAPU8[$$0$i27 >> 0] | 0;
    $708 = _bitshift64Shl($706 & 127 | 0, 0, $shift$0$i26 | 0) | 0;
    $710 = $708 | $711;
    $712 = tempRet0 | $713;
    if (!($706 & 128)) {
     $$lcssa114 = $705;
     $723 = $710;
     $724 = $712;
     break;
    } else {
     $$0$i27 = $$0$i27 + 1 | 0;
     $711 = $710;
     $713 = $712;
     $num_read$0$i25 = $705;
     $shift$0$i26 = $shift$0$i26 + 7 | 0;
    }
   }
   $718 = HEAP32[$this + 76 >> 2] | 0;
   FUNCTION_TABLE_viiiiiiii[HEAP32[(HEAP32[$718 >> 2] | 0) + 28 >> 2] & 3]($718, $0, $1, $attr, $form, $start + $$lcssa114 | 0, $723, $724);
   $$0 = $start + ($723 + $$lcssa114) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 14:
  {
   $726 = $this + 84 | 0;
   if (!(HEAP32[$726 >> 2] | 0)) ___assert_fail(18649, 18044, 438, 18632);
   $729 = $this + 68 | 0;
   $730 = HEAP32[$729 >> 2] | 0;
   $731 = $730 + 4 | 0;
   $$field23 = HEAP32[$731 >> 2] | 0;
   $$field26 = HEAP32[$731 + 4 >> 2] | 0;
   $732 = $$field26 & 1;
   if (!($732 | $$field23)) ___assert_fail(18373, 18394, 138, 18430);
   $737 = $730 + ($$field26 >> 1) | 0;
   if (!$732) $742 = $$field23; else $742 = HEAP32[(HEAP32[$737 >> 2] | 0) + $$field23 >> 2] | 0;
   $743 = FUNCTION_TABLE_iii[$742 & 31]($737, $start) | 0;
   if (($743 | 0) >= (HEAP32[$this + 88 >> 2] | 0)) ___assert_fail(18672, 18044, 441, 18632);
   $754 = (HEAP32[$726 >> 2] | 0) + $743 | 0;
   $756 = HEAP32[$this + 76 >> 2] | 0;
   $759 = HEAP32[(HEAP32[$756 >> 2] | 0) + 32 >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, $754, _strlen($754 | 0) | 0);
   FUNCTION_TABLE_viiiiii[$759 & 15]($756, $0, $1, $attr, 14, $3);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$0 = $start + (HEAPU8[(HEAP32[$729 >> 2] | 0) + 25 >> 0] | 0) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {
   _fwrite(18737, 20, 1, HEAP32[_stderr >> 2] | 0) | 0;
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 return 0;
}

function __ZNSt3__127__insertion_sort_incompleteIRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEbT0_SA_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $$lcssa = 0, $10 = 0, $12 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $42 = 0, $48 = 0, $5 = 0, $50 = 0, $54 = 0, $7 = 0, $8 = 0, $__count$014 = 0, $__count$1 = 0, $__i$015 = 0, $__i$015$lcssa = 0, $__j$013 = 0, $__j$013$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0, $__t = 0, $__t$i4$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__t$i4$i5 = sp + 24 | 0;
 $__t = sp;
 switch (($__last - $__first | 0) / 24 | 0 | 0) {
 case 2:
  {
   $5 = $__last + -24 | 0;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($5, $__first) | 0)) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   };
   HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
   HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
   HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
   HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
   HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
   HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
   HEAP32[$__first >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__first + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$__first + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   HEAP32[$__first + 12 >> 2] = HEAP32[$5 + 12 >> 2];
   HEAP32[$__first + 16 >> 2] = HEAP32[$5 + 16 >> 2];
   HEAP32[$__first + 20 >> 2] = HEAP32[$5 + 20 >> 2];
   HEAP32[$5 >> 2] = HEAP32[$__t$i4$i5 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
   HEAP32[$5 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
   HEAP32[$5 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
   HEAP32[$5 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 3:
  {
   $7 = $__first + 24 | 0;
   $8 = $__last + -24 | 0;
   $10 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($7, $__first) | 0;
   $12 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($8, $7) | 0;
   if (!$10) {
    if (!$12) {
     $$0 = 1;
     STACKTOP = sp;
     return $$0 | 0;
    };
    HEAP32[$__t$i4$i5 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
    HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
    HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
    HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
    HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
    HEAP32[$7 + 16 >> 2] = HEAP32[$8 + 16 >> 2];
    HEAP32[$7 + 20 >> 2] = HEAP32[$8 + 20 >> 2];
    HEAP32[$8 >> 2] = HEAP32[$__t$i4$i5 >> 2];
    HEAP32[$8 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
    HEAP32[$8 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
    HEAP32[$8 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
    HEAP32[$8 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
    HEAP32[$8 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
    if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($7, $__first) | 0)) {
     $$0 = 1;
     STACKTOP = sp;
     return $$0 | 0;
    };
    HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
    HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
    HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
    HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
    HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
    HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
    HEAP32[$__first >> 2] = HEAP32[$7 >> 2];
    HEAP32[$__first + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$__first + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$__first + 12 >> 2] = HEAP32[$7 + 12 >> 2];
    HEAP32[$__first + 16 >> 2] = HEAP32[$7 + 16 >> 2];
    HEAP32[$__first + 20 >> 2] = HEAP32[$7 + 20 >> 2];
    HEAP32[$7 >> 2] = HEAP32[$__t$i4$i5 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
    HEAP32[$7 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
    HEAP32[$7 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
    HEAP32[$7 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   if ($12) {
    HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
    HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
    HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
    HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
    HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
    HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
    HEAP32[$__first >> 2] = HEAP32[$8 >> 2];
    HEAP32[$__first + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    HEAP32[$__first + 8 >> 2] = HEAP32[$8 + 8 >> 2];
    HEAP32[$__first + 12 >> 2] = HEAP32[$8 + 12 >> 2];
    HEAP32[$__first + 16 >> 2] = HEAP32[$8 + 16 >> 2];
    HEAP32[$__first + 20 >> 2] = HEAP32[$8 + 20 >> 2];
    HEAP32[$8 >> 2] = HEAP32[$__t$i4$i5 >> 2];
    HEAP32[$8 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
    HEAP32[$8 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
    HEAP32[$8 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
    HEAP32[$8 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
    HEAP32[$8 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   };
   HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
   HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
   HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
   HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
   HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
   HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
   HEAP32[$__first >> 2] = HEAP32[$7 >> 2];
   HEAP32[$__first + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__first + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$__first + 12 >> 2] = HEAP32[$7 + 12 >> 2];
   HEAP32[$__first + 16 >> 2] = HEAP32[$7 + 16 >> 2];
   HEAP32[$__first + 20 >> 2] = HEAP32[$7 + 20 >> 2];
   HEAP32[$7 >> 2] = HEAP32[$__t$i4$i5 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
   HEAP32[$7 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
   HEAP32[$7 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($8, $7) | 0)) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   };
   HEAP32[$__t$i4$i5 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
   HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
   HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
   HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
   HEAP32[$7 + 16 >> 2] = HEAP32[$8 + 16 >> 2];
   HEAP32[$7 + 20 >> 2] = HEAP32[$8 + 20 >> 2];
   HEAP32[$8 >> 2] = HEAP32[$__t$i4$i5 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
   HEAP32[$8 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
   HEAP32[$8 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
   HEAP32[$8 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 4:
  {
   __ZNSt3__17__sort4IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEjT0_SA_SA_SA_T_($__first, $__first + 24 | 0, $__first + 48 | 0, $__last + -24 | 0, $__comp) | 0;
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 5:
  {
   $20 = $__first + 24 | 0;
   $21 = $__first + 48 | 0;
   $22 = $__first + 72 | 0;
   $23 = $__last + -24 | 0;
   __ZNSt3__17__sort4IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEjT0_SA_SA_SA_T_($__first, $20, $21, $22, $__comp) | 0;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($23, $22) | 0)) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   };
   HEAP32[$__t$i4$i5 >> 2] = HEAP32[$22 >> 2];
   HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
   HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
   HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$22 + 12 >> 2];
   HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$22 + 16 >> 2];
   HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$22 + 20 >> 2];
   HEAP32[$22 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$22 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
   HEAP32[$22 + 8 >> 2] = HEAP32[$23 + 8 >> 2];
   HEAP32[$22 + 12 >> 2] = HEAP32[$23 + 12 >> 2];
   HEAP32[$22 + 16 >> 2] = HEAP32[$23 + 16 >> 2];
   HEAP32[$22 + 20 >> 2] = HEAP32[$23 + 20 >> 2];
   HEAP32[$23 >> 2] = HEAP32[$__t$i4$i5 >> 2];
   HEAP32[$23 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
   HEAP32[$23 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
   HEAP32[$23 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
   HEAP32[$23 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
   HEAP32[$23 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($22, $21) | 0)) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   };
   HEAP32[$__t$i4$i5 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
   HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
   HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
   HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$21 + 16 >> 2];
   HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$21 + 20 >> 2];
   HEAP32[$21 >> 2] = HEAP32[$22 >> 2];
   HEAP32[$21 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
   HEAP32[$21 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
   HEAP32[$21 + 12 >> 2] = HEAP32[$22 + 12 >> 2];
   HEAP32[$21 + 16 >> 2] = HEAP32[$22 + 16 >> 2];
   HEAP32[$21 + 20 >> 2] = HEAP32[$22 + 20 >> 2];
   HEAP32[$22 >> 2] = HEAP32[$__t$i4$i5 >> 2];
   HEAP32[$22 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
   HEAP32[$22 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
   HEAP32[$22 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
   HEAP32[$22 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
   HEAP32[$22 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($21, $20) | 0)) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   };
   HEAP32[$__t$i4$i5 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
   HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
   HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$20 + 12 >> 2];
   HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$20 + 16 >> 2];
   HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$20 + 20 >> 2];
   HEAP32[$20 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
   HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
   HEAP32[$20 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
   HEAP32[$20 + 16 >> 2] = HEAP32[$21 + 16 >> 2];
   HEAP32[$20 + 20 >> 2] = HEAP32[$21 + 20 >> 2];
   HEAP32[$21 >> 2] = HEAP32[$__t$i4$i5 >> 2];
   HEAP32[$21 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
   HEAP32[$21 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
   HEAP32[$21 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
   HEAP32[$21 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
   HEAP32[$21 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($20, $__first) | 0)) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   };
   HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
   HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
   HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
   HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
   HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
   HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
   HEAP32[$__first >> 2] = HEAP32[$20 >> 2];
   HEAP32[$__first + 4 >> 2] = HEAP32[$20 + 4 >> 2];
   HEAP32[$__first + 8 >> 2] = HEAP32[$20 + 8 >> 2];
   HEAP32[$__first + 12 >> 2] = HEAP32[$20 + 12 >> 2];
   HEAP32[$__first + 16 >> 2] = HEAP32[$20 + 16 >> 2];
   HEAP32[$__first + 20 >> 2] = HEAP32[$20 + 20 >> 2];
   HEAP32[$20 >> 2] = HEAP32[$__t$i4$i5 >> 2];
   HEAP32[$20 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
   HEAP32[$20 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
   HEAP32[$20 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
   HEAP32[$20 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
   HEAP32[$20 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 1:
 case 0:
  {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {
   $32 = $__first + 48 | 0;
   $33 = $__first + 24 | 0;
   $35 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($33, $__first) | 0;
   $37 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($32, $33) | 0;
   do if ($35) {
    if ($37) {
     HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
     HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
     HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
     HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
     HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
     HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
     HEAP32[$__first >> 2] = HEAP32[$32 >> 2];
     HEAP32[$__first + 4 >> 2] = HEAP32[$32 + 4 >> 2];
     HEAP32[$__first + 8 >> 2] = HEAP32[$32 + 8 >> 2];
     HEAP32[$__first + 12 >> 2] = HEAP32[$32 + 12 >> 2];
     HEAP32[$__first + 16 >> 2] = HEAP32[$32 + 16 >> 2];
     HEAP32[$__first + 20 >> 2] = HEAP32[$32 + 20 >> 2];
     HEAP32[$32 >> 2] = HEAP32[$__t$i4$i5 >> 2];
     HEAP32[$32 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
     HEAP32[$32 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
     HEAP32[$32 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
     HEAP32[$32 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
     HEAP32[$32 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
     break;
    };
    HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
    HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
    HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
    HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
    HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
    HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
    HEAP32[$__first >> 2] = HEAP32[$33 >> 2];
    HEAP32[$__first + 4 >> 2] = HEAP32[$33 + 4 >> 2];
    HEAP32[$__first + 8 >> 2] = HEAP32[$33 + 8 >> 2];
    HEAP32[$__first + 12 >> 2] = HEAP32[$33 + 12 >> 2];
    HEAP32[$__first + 16 >> 2] = HEAP32[$33 + 16 >> 2];
    HEAP32[$__first + 20 >> 2] = HEAP32[$33 + 20 >> 2];
    HEAP32[$33 >> 2] = HEAP32[$__t$i4$i5 >> 2];
    HEAP32[$33 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
    HEAP32[$33 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
    HEAP32[$33 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
    HEAP32[$33 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
    HEAP32[$33 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($32, $33) | 0) {
     HEAP32[$__t$i4$i5 >> 2] = HEAP32[$33 >> 2];
     HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$33 + 4 >> 2];
     HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$33 + 8 >> 2];
     HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$33 + 12 >> 2];
     HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$33 + 16 >> 2];
     HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$33 + 20 >> 2];
     HEAP32[$33 >> 2] = HEAP32[$32 >> 2];
     HEAP32[$33 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
     HEAP32[$33 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
     HEAP32[$33 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
     HEAP32[$33 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
     HEAP32[$33 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
     HEAP32[$32 >> 2] = HEAP32[$__t$i4$i5 >> 2];
     HEAP32[$32 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
     HEAP32[$32 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
     HEAP32[$32 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
     HEAP32[$32 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
     HEAP32[$32 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
    }
   } else if ($37) {
    HEAP32[$__t$i4$i5 >> 2] = HEAP32[$33 >> 2];
    HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$33 + 4 >> 2];
    HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$33 + 8 >> 2];
    HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$33 + 12 >> 2];
    HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$33 + 16 >> 2];
    HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$33 + 20 >> 2];
    HEAP32[$33 >> 2] = HEAP32[$32 >> 2];
    HEAP32[$33 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
    HEAP32[$33 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
    HEAP32[$33 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
    HEAP32[$33 + 16 >> 2] = HEAP32[$32 + 16 >> 2];
    HEAP32[$33 + 20 >> 2] = HEAP32[$32 + 20 >> 2];
    HEAP32[$32 >> 2] = HEAP32[$__t$i4$i5 >> 2];
    HEAP32[$32 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
    HEAP32[$32 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
    HEAP32[$32 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
    HEAP32[$32 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
    HEAP32[$32 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($33, $__first) | 0) {
     HEAP32[$__t$i4$i5 >> 2] = HEAP32[$__first >> 2];
     HEAP32[$__t$i4$i5 + 4 >> 2] = HEAP32[$__first + 4 >> 2];
     HEAP32[$__t$i4$i5 + 8 >> 2] = HEAP32[$__first + 8 >> 2];
     HEAP32[$__t$i4$i5 + 12 >> 2] = HEAP32[$__first + 12 >> 2];
     HEAP32[$__t$i4$i5 + 16 >> 2] = HEAP32[$__first + 16 >> 2];
     HEAP32[$__t$i4$i5 + 20 >> 2] = HEAP32[$__first + 20 >> 2];
     HEAP32[$__first >> 2] = HEAP32[$33 >> 2];
     HEAP32[$__first + 4 >> 2] = HEAP32[$33 + 4 >> 2];
     HEAP32[$__first + 8 >> 2] = HEAP32[$33 + 8 >> 2];
     HEAP32[$__first + 12 >> 2] = HEAP32[$33 + 12 >> 2];
     HEAP32[$__first + 16 >> 2] = HEAP32[$33 + 16 >> 2];
     HEAP32[$__first + 20 >> 2] = HEAP32[$33 + 20 >> 2];
     HEAP32[$33 >> 2] = HEAP32[$__t$i4$i5 >> 2];
     HEAP32[$33 + 4 >> 2] = HEAP32[$__t$i4$i5 + 4 >> 2];
     HEAP32[$33 + 8 >> 2] = HEAP32[$__t$i4$i5 + 8 >> 2];
     HEAP32[$33 + 12 >> 2] = HEAP32[$__t$i4$i5 + 12 >> 2];
     HEAP32[$33 + 16 >> 2] = HEAP32[$__t$i4$i5 + 16 >> 2];
     HEAP32[$33 + 20 >> 2] = HEAP32[$__t$i4$i5 + 20 >> 2];
    }
   } while (0);
   $42 = $__first + 72 | 0;
   if (($42 | 0) == ($__last | 0)) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $__count$014 = 0;
   $__i$015 = $42;
   $__j$013 = $32;
   while (1) {
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($__i$015, $__j$013) | 0) {
     HEAP32[$__t >> 2] = HEAP32[$__i$015 >> 2];
     HEAP32[$__t + 4 >> 2] = HEAP32[$__i$015 + 4 >> 2];
     HEAP32[$__t + 8 >> 2] = HEAP32[$__i$015 + 8 >> 2];
     HEAP32[$__t + 12 >> 2] = HEAP32[$__i$015 + 12 >> 2];
     HEAP32[$__t + 16 >> 2] = HEAP32[$__i$015 + 16 >> 2];
     HEAP32[$__t + 20 >> 2] = HEAP32[$__i$015 + 20 >> 2];
     $__j$1 = $__i$015;
     $__k$0 = $__j$013;
     while (1) {
      HEAP32[$__j$1 >> 2] = HEAP32[$__k$0 >> 2];
      HEAP32[$__j$1 + 4 >> 2] = HEAP32[$__k$0 + 4 >> 2];
      HEAP32[$__j$1 + 8 >> 2] = HEAP32[$__k$0 + 8 >> 2];
      HEAP32[$__j$1 + 12 >> 2] = HEAP32[$__k$0 + 12 >> 2];
      HEAP32[$__j$1 + 16 >> 2] = HEAP32[$__k$0 + 16 >> 2];
      HEAP32[$__j$1 + 20 >> 2] = HEAP32[$__k$0 + 20 >> 2];
      if (($__k$0 | 0) == ($__first | 0)) {
       $$lcssa = $__k$0;
       break;
      }
      $48 = $__k$0 + -24 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($__t, $48) | 0) {
       $__j$1$phi = $__k$0;
       $__k$0 = $48;
       $__j$1 = $__j$1$phi;
      } else {
       $$lcssa = $__k$0;
       break;
      }
     }
     HEAP32[$$lcssa >> 2] = HEAP32[$__t >> 2];
     HEAP32[$$lcssa + 4 >> 2] = HEAP32[$__t + 4 >> 2];
     HEAP32[$$lcssa + 8 >> 2] = HEAP32[$__t + 8 >> 2];
     HEAP32[$$lcssa + 12 >> 2] = HEAP32[$__t + 12 >> 2];
     HEAP32[$$lcssa + 16 >> 2] = HEAP32[$__t + 16 >> 2];
     HEAP32[$$lcssa + 20 >> 2] = HEAP32[$__t + 20 >> 2];
     $50 = $__count$014 + 1 | 0;
     if (($50 | 0) == 8) {
      $__i$015$lcssa = $__i$015;
      break;
     } else $__count$1 = $50;
    } else $__count$1 = $__count$014;
    $54 = $__i$015 + 24 | 0;
    if (($54 | 0) == ($__last | 0)) {
     $$0 = 1;
     label = 35;
     break;
    } else {
     $__j$013$phi = $__i$015;
     $__count$014 = $__count$1;
     $__i$015 = $54;
     $__j$013 = $__j$013$phi;
    }
   }
   if ((label | 0) == 35) {
    STACKTOP = sp;
    return $$0 | 0;
   }
   $$0 = ($__i$015$lcssa + 24 | 0) == ($__last | 0);
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZN15google_breakpad6Module5WriteERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE10SymbolData($this, $stream, $symbol_data) {
 $this = $this | 0;
 $stream = $stream | 0;
 $symbol_data = $symbol_data | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i13 = 0, $$0$i$i$i18 = 0, $$0$i$i$i3 = 0, $$0$i$i$i5 = 0, $$0$i$i10 = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i15 = 0, $$01$i$i7 = 0, $$sink50 = 0, $0 = 0, $1 = 0, $106 = 0, $112 = 0, $116 = 0, $123 = 0, $128 = 0, $130 = 0, $133 = 0, $138 = 0, $139 = 0, $141 = 0, $143 = 0, $144 = 0, $145 = 0, $149 = 0, $154 = 0, $16 = 0, $160 = 0, $166 = 0, $169 = 0, $17 = 0, $171 = 0, $178 = 0, $18 = 0, $180 = 0, $187 = 0, $188 = 0, $190 = 0, $2 = 0, $20 = 0, $200 = 0, $204 = 0, $213 = 0, $217 = 0, $220 = 0, $224 = 0, $229 = 0, $230 = 0, $236 = 0, $237 = 0, $241 = 0, $242 = 0, $248 = 0, $254 = 0, $257 = 0, $259 = 0, $266 = 0, $270 = 0, $277 = 0, $282 = 0, $288 = 0, $292 = 0, $299 = 0, $3 = 0, $304 = 0, $306 = 0, $309 = 0, $31 = 0, $314 = 0, $315 = 0, $317 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $325 = 0, $329 = 0, $33 = 0, $335 = 0, $341 = 0, $344 = 0, $345 = 0, $346 = 0, $348 = 0, $35 = 0, $358 = 0, $362 = 0, $371 = 0, $375 = 0, $377 = 0, $379 = 0, $382 = 0, $388 = 0, $389 = 0, $392 = 0, $393 = 0, $394 = 0, $398 = 0, $402 = 0, $408 = 0, $414 = 0, $417 = 0, $419 = 0, $426 = 0, $430 = 0, $442 = 0, $451 = 0, $455 = 0, $457 = 0, $458 = 0, $46 = 0, $461 = 0, $465 = 0, $47 = 0, $470 = 0, $471 = 0, $477 = 0, $483 = 0, $486 = 0, $49 = 0, $490 = 0, $5 = 0, $502 = 0, $511 = 0, $515 = 0, $516 = 0, $517 = 0, $519 = 0, $521 = 0, $524 = 0, $59 = 0, $65 = 0, $69 = 0, $76 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $87 = 0, $90 = 0, $93 = 0, $94 = 0, $96 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer13 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 44 | 0;
 $1 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, 16675, 7) | 0;
 $2 = $this + 12 | 0;
 $3 = HEAP8[$2 >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $16 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($1, $5 ? $2 + 1 | 0 : HEAP32[$this + 20 >> 2] | 0, $5 ? ($3 & 255) >>> 1 : HEAP32[$this + 16 >> 2] | 0) | 0, 25585, 1) | 0;
 $17 = $this + 24 | 0;
 $18 = HEAP8[$17 >> 0] | 0;
 $20 = ($18 & 1) == 0;
 $31 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($16, $20 ? $17 + 1 | 0 : HEAP32[$this + 32 >> 2] | 0, $20 ? ($18 & 255) >>> 1 : HEAP32[$this + 28 >> 2] | 0) | 0, 25585, 1) | 0;
 $32 = $this + 36 | 0;
 $33 = HEAP8[$32 >> 0] | 0;
 $35 = ($33 & 1) == 0;
 $46 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($31, $35 ? $32 + 1 | 0 : HEAP32[$this + 44 >> 2] | 0, $35 ? ($33 & 255) >>> 1 : HEAP32[$this + 40 >> 2] | 0) | 0, 25585, 1) | 0;
 $47 = HEAP8[$this >> 0] | 0;
 $49 = ($47 & 1) == 0;
 $59 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($46, $49 ? $this + 1 | 0 : HEAP32[$this + 8 >> 2] | 0, $49 ? ($47 & 255) >>> 1 : HEAP32[$this + 4 >> 2] | 0) | 0;
 HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($59 + (HEAP32[(HEAP32[$59 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
 $65 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
 $69 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$65 >> 2] | 0) + 28 >> 2] & 31]($65, 10) | 0;
 __ZNSt3__16localeD2Ev($0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($59, $69) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($59) | 0;
 if (HEAP32[$stream + ((HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0) + 16) >> 2] | 0) {
  $76 = HEAP32[_stderr >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
  _fprintf($76 | 0, 16641, $vararg_buffer | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($symbol_data | 0) != 2) {
  __ZN15google_breakpad6Module15AssignSourceIdsEv($this);
  $81 = HEAP32[$this + 56 >> 2] | 0;
  $82 = $this + 60 | 0;
  L7 : do if (($81 | 0) != ($82 | 0)) {
   $85 = $81;
   while (1) {
    $86 = HEAP32[$85 + 20 >> 2] | 0;
    $87 = $86 + 12 | 0;
    if ((HEAP32[$87 >> 2] | 0) > -1) {
     $90 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, 16683, 5) | 0;
     $93 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($90, HEAP32[$87 >> 2] | 0) | 0, 25585, 1) | 0;
     $94 = HEAP8[$86 >> 0] | 0;
     $96 = ($94 & 1) == 0;
     $106 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($93, $96 ? $86 + 1 | 0 : HEAP32[$86 + 8 >> 2] | 0, $96 ? ($94 & 255) >>> 1 : HEAP32[$86 + 4 >> 2] | 0) | 0;
     HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($106 + (HEAP32[(HEAP32[$106 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
     $112 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
     $116 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$112 >> 2] | 0) + 28 >> 2] & 31]($112, 10) | 0;
     __ZNSt3__16localeD2Ev($0);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($106, $116) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($106) | 0;
     if (HEAP32[$stream + ((HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0) + 16) >> 2] | 0) break;
    }
    $128 = HEAP32[$85 + 4 >> 2] | 0;
    if (!$128) {
     $$01$i$i$i = $85;
     while (1) {
      $133 = HEAP32[$$01$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$133 >> 2] | 0) == ($$01$i$i$i | 0)) {
       $$0$i$i$i = $133;
       break;
      } else $$01$i$i$i = $133;
     }
    } else {
     $$0$i$i$i$i = $128;
     while (1) {
      $130 = HEAP32[$$0$i$i$i$i >> 2] | 0;
      if (!$130) {
       $$0$i$i$i = $$0$i$i$i$i;
       break;
      } else $$0$i$i$i$i = $130;
     }
    }
    if (($$0$i$i$i | 0) == ($82 | 0)) break L7; else $85 = $$0$i$i$i;
   }
   $123 = HEAP32[_stderr >> 2] | 0;
   HEAP32[$vararg_buffer1 >> 2] = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
   _fprintf($123 | 0, 16641, $vararg_buffer1 | 0) | 0;
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } while (0);
  $138 = HEAP32[$this + 68 >> 2] | 0;
  $139 = $this + 72 | 0;
  L24 : do if (($138 | 0) != ($139 | 0)) {
   $141 = $this + 48 | 0;
   $143 = $138;
   L26 : while (1) {
    $144 = HEAP32[$143 + 16 >> 2] | 0;
    $145 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, 16689, 5) | 0;
    $149 = $145 + ((HEAP32[(HEAP32[$145 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
    HEAP32[$149 >> 2] = HEAP32[$149 >> 2] & -75 | 8;
    $154 = $144 + 16 | 0;
    $160 = $141;
    $166 = _i64Subtract(HEAP32[$154 >> 2] | 0, HEAP32[$154 + 4 >> 2] | 0, HEAP32[$160 >> 2] | 0, HEAP32[$160 + 4 >> 2] | 0) | 0;
    $169 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($145, $166, tempRet0) | 0, 25585, 1) | 0;
    $171 = $144 + 24 | 0;
    $178 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($169, HEAP32[$171 >> 2] | 0, HEAP32[$171 + 4 >> 2] | 0) | 0, 25585, 1) | 0;
    $180 = $144 + 32 | 0;
    $187 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($178, HEAP32[$180 >> 2] | 0, HEAP32[$180 + 4 >> 2] | 0) | 0, 25585, 1) | 0;
    $188 = HEAP8[$144 >> 0] | 0;
    $190 = ($188 & 1) == 0;
    $200 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($187, $190 ? $144 + 1 | 0 : HEAP32[$144 + 8 >> 2] | 0, $190 ? ($188 & 255) >>> 1 : HEAP32[$144 + 4 >> 2] | 0) | 0;
    $204 = $200 + ((HEAP32[(HEAP32[$200 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
    HEAP32[$204 >> 2] = HEAP32[$204 >> 2] & -75 | 2;
    HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($200 + (HEAP32[(HEAP32[$200 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    $213 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
    $217 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$213 >> 2] | 0) + 28 >> 2] & 31]($213, 10) | 0;
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($200, $217) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($200) | 0;
    $220 = HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0;
    if (HEAP32[$stream + ($220 + 16) >> 2] | 0) {
     label = 17;
     break;
    }
    $229 = HEAP32[$144 + 40 >> 2] | 0;
    $230 = $144 + 44 | 0;
    if (($229 | 0) != (HEAP32[$230 >> 2] | 0)) {
     $236 = $220;
     $242 = $229;
     do {
      $237 = $stream + ($236 + 4) | 0;
      HEAP32[$237 >> 2] = HEAP32[$237 >> 2] & -75 | 8;
      $241 = $242;
      $248 = $141;
      $254 = _i64Subtract(HEAP32[$241 >> 2] | 0, HEAP32[$241 + 4 >> 2] | 0, HEAP32[$248 >> 2] | 0, HEAP32[$248 + 4 >> 2] | 0) | 0;
      $257 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($stream, $254, tempRet0) | 0, 25585, 1) | 0;
      $259 = $242 + 8 | 0;
      $266 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($257, HEAP32[$259 >> 2] | 0, HEAP32[$259 + 4 >> 2] | 0) | 0, 25585, 1) | 0;
      $270 = $266 + ((HEAP32[(HEAP32[$266 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
      HEAP32[$270 >> 2] = HEAP32[$270 >> 2] & -75 | 2;
      $277 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($266, HEAP32[$242 + 20 >> 2] | 0) | 0, 25585, 1) | 0;
      $282 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($277, HEAP32[(HEAP32[$242 + 16 >> 2] | 0) + 12 >> 2] | 0) | 0;
      HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($282 + (HEAP32[(HEAP32[$282 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
      $288 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
      $292 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$288 >> 2] | 0) + 28 >> 2] & 31]($288, 10) | 0;
      __ZNSt3__16localeD2Ev($0);
      __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($282, $292) | 0;
      __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($282) | 0;
      $236 = HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0;
      $242 = $242 + 24 | 0;
      if (HEAP32[$stream + ($236 + 16) >> 2] | 0) {
       label = 21;
       break L26;
      }
     } while (($242 | 0) != (HEAP32[$230 >> 2] | 0));
    }
    $304 = HEAP32[$143 + 4 >> 2] | 0;
    if (!$304) {
     $$01$i$i = $143;
     while (1) {
      $309 = HEAP32[$$01$i$i + 8 >> 2] | 0;
      if ((HEAP32[$309 >> 2] | 0) == ($$01$i$i | 0)) {
       $$0$i$i = $309;
       break;
      } else $$01$i$i = $309;
     }
    } else {
     $$0$i$i$i3 = $304;
     while (1) {
      $306 = HEAP32[$$0$i$i$i3 >> 2] | 0;
      if (!$306) {
       $$0$i$i = $$0$i$i$i3;
       break;
      } else $$0$i$i$i3 = $306;
     }
    }
    if (($$0$i$i | 0) == ($139 | 0)) break L24; else $143 = $$0$i$i;
   }
   if ((label | 0) == 17) {
    $224 = HEAP32[_stderr >> 2] | 0;
    HEAP32[$vararg_buffer4 >> 2] = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    _fprintf($224 | 0, 16641, $vararg_buffer4 | 0) | 0;
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 21) {
    $299 = HEAP32[_stderr >> 2] | 0;
    HEAP32[$vararg_buffer7 >> 2] = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    _fprintf($299 | 0, 16641, $vararg_buffer7 | 0) | 0;
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  $314 = HEAP32[$this + 92 >> 2] | 0;
  $315 = $this + 96 | 0;
  if (($314 | 0) != ($315 | 0)) {
   $317 = $this + 48 | 0;
   $319 = $314;
   while (1) {
    $320 = HEAP32[$319 + 16 >> 2] | 0;
    $321 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, 16695, 7) | 0;
    $325 = $321 + ((HEAP32[(HEAP32[$321 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
    HEAP32[$325 >> 2] = HEAP32[$325 >> 2] & -75 | 8;
    $329 = $320;
    $335 = $317;
    $341 = _i64Subtract(HEAP32[$329 >> 2] | 0, HEAP32[$329 + 4 >> 2] | 0, HEAP32[$335 >> 2] | 0, HEAP32[$335 + 4 >> 2] | 0) | 0;
    $344 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($321, $341, tempRet0) | 0, 16703, 3) | 0;
    $345 = $320 + 8 | 0;
    $346 = HEAP8[$345 >> 0] | 0;
    $348 = ($346 & 1) == 0;
    $358 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($344, $348 ? $345 + 1 | 0 : HEAP32[$320 + 16 >> 2] | 0, $348 ? ($346 & 255) >>> 1 : HEAP32[$320 + 12 >> 2] | 0) | 0;
    $362 = $358 + ((HEAP32[(HEAP32[$358 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
    HEAP32[$362 >> 2] = HEAP32[$362 >> 2] & -75 | 2;
    HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($358 + (HEAP32[(HEAP32[$358 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    $371 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
    $375 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$371 >> 2] | 0) + 28 >> 2] & 31]($371, 10) | 0;
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($358, $375) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($358) | 0;
    $377 = HEAP32[$319 + 4 >> 2] | 0;
    if (!$377) {
     $$01$i$i7 = $319;
     while (1) {
      $382 = HEAP32[$$01$i$i7 + 8 >> 2] | 0;
      if ((HEAP32[$382 >> 2] | 0) == ($$01$i$i7 | 0)) {
       $$0$i$i10 = $382;
       break;
      } else $$01$i$i7 = $382;
     }
    } else {
     $$0$i$i$i5 = $377;
     while (1) {
      $379 = HEAP32[$$0$i$i$i5 >> 2] | 0;
      if (!$379) {
       $$0$i$i10 = $$0$i$i$i5;
       break;
      } else $$0$i$i$i5 = $379;
     }
    }
    if (($$0$i$i10 | 0) == ($315 | 0)) break; else $319 = $$0$i$i10;
   }
  }
  if (($symbol_data | 0) == 1) {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $388 = HEAP32[$this + 80 >> 2] | 0;
 $389 = $this + 84 | 0;
 if (($388 | 0) == (HEAP32[$389 >> 2] | 0)) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $392 = $this + 48 | 0;
 $$sink50 = $388;
 L64 : while (1) {
  $393 = HEAP32[$$sink50 >> 2] | 0;
  $394 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, 16707, 15) | 0;
  $398 = $394 + ((HEAP32[(HEAP32[$394 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
  HEAP32[$398 >> 2] = HEAP32[$398 >> 2] & -75 | 8;
  $402 = $393;
  $408 = $392;
  $414 = _i64Subtract(HEAP32[$402 >> 2] | 0, HEAP32[$402 + 4 >> 2] | 0, HEAP32[$408 >> 2] | 0, HEAP32[$408 + 4 >> 2] | 0) | 0;
  $417 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($394, $414, tempRet0) | 0, 25585, 1) | 0;
  $419 = $393 + 8 | 0;
  $426 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($417, HEAP32[$419 >> 2] | 0, HEAP32[$419 + 4 >> 2] | 0) | 0, 25585, 1) | 0;
  $430 = $426 + ((HEAP32[(HEAP32[$426 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
  HEAP32[$430 >> 2] = HEAP32[$430 >> 2] & -75 | 2;
  if (HEAP32[$stream + ((HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0) + 16) >> 2] | 0) {
   label = 39;
   break;
  }
  if (!(__ZN15google_breakpad6Module12WriteRuleMapERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S8_EEEEEERNS1_13basic_ostreamIcS5_EE($393 + 16 | 0, $stream) | 0)) {
   label = 39;
   break;
  }
  HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($stream + (HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $451 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
  $455 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$451 >> 2] | 0) + 28 >> 2] & 31]($451, 10) | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($stream, $455) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($stream) | 0;
  $457 = HEAP32[$393 + 28 >> 2] | 0;
  $458 = $393 + 32 | 0;
  if (($457 | 0) != ($458 | 0)) {
   $470 = $457;
   $517 = $457;
   while (1) {
    $461 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, 16723, 10) | 0;
    $465 = $461 + ((HEAP32[(HEAP32[$461 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
    HEAP32[$465 >> 2] = HEAP32[$465 >> 2] & -75 | 8;
    $471 = $470 + 16 | 0;
    $477 = $392;
    $483 = _i64Subtract(HEAP32[$471 >> 2] | 0, HEAP32[$471 + 4 >> 2] | 0, HEAP32[$477 >> 2] | 0, HEAP32[$477 + 4 >> 2] | 0) | 0;
    $486 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($461, $483, tempRet0) | 0, 25585, 1) | 0;
    $490 = $486 + ((HEAP32[(HEAP32[$486 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
    HEAP32[$490 >> 2] = HEAP32[$490 >> 2] & -75 | 2;
    if (HEAP32[$stream + ((HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0) + 16) >> 2] | 0) {
     label = 44;
     break L64;
    }
    if (!(__ZN15google_breakpad6Module12WriteRuleMapERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S8_EEEEEERNS1_13basic_ostreamIcS5_EE($470 + 24 | 0, $stream) | 0)) {
     label = 44;
     break L64;
    }
    HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($stream + (HEAP32[(HEAP32[$stream >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    $511 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
    $515 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$511 >> 2] | 0) + 28 >> 2] & 31]($511, 10) | 0;
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($stream, $515) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($stream) | 0;
    $516 = $517;
    $519 = HEAP32[$516 + 4 >> 2] | 0;
    if (!$519) {
     $$01$i$i$i15 = $516;
     while (1) {
      $524 = HEAP32[$$01$i$i$i15 + 8 >> 2] | 0;
      if ((HEAP32[$524 >> 2] | 0) == ($$01$i$i$i15 | 0)) {
       $$0$i$i$i18 = $524;
       break;
      } else $$01$i$i$i15 = $524;
     }
    } else {
     $$0$i$i$i$i13 = $519;
     while (1) {
      $521 = HEAP32[$$0$i$i$i$i13 >> 2] | 0;
      if (!$521) {
       $$0$i$i$i18 = $$0$i$i$i$i13;
       break;
      } else $$0$i$i$i$i13 = $521;
     }
    }
    if (($$0$i$i$i18 | 0) == ($458 | 0)) break; else {
     $470 = $$0$i$i$i18;
     $517 = $$0$i$i$i18;
    }
   }
  }
  $$sink50 = $$sink50 + 4 | 0;
  if (($$sink50 | 0) == (HEAP32[$389 >> 2] | 0)) {
   $$0 = 1;
   label = 50;
   break;
  }
 }
 if ((label | 0) == 39) {
  $442 = HEAP32[_stderr >> 2] | 0;
  HEAP32[$vararg_buffer10 >> 2] = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
  _fprintf($442 | 0, 16641, $vararg_buffer10 | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 44) {
  $502 = HEAP32[_stderr >> 2] | 0;
  HEAP32[$vararg_buffer13 >> 2] = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
  _fprintf($502 | 0, 16641, $vararg_buffer13 | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 50) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNK15google_breakpad6mach_o6Reader16WalkLoadCommandsEPNS1_18LoadCommandHandlerE($this, $handler) {
 $this = $this | 0;
 $handler = $handler | 0;
 var $$04 = 0, $$5 = 0, $$lcssa384 = 0, $$lcssa385 = 0, $$pre244 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $110 = 0, $113 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $142 = 0, $146 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $153 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $172 = 0, $176 = 0, $178 = 0, $18 = 0, $181 = 0, $182 = 0, $183 = 0, $19 = 0, $190 = 0, $196 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $208 = 0, $21 = 0, $214 = 0, $218 = 0, $219 = 0, $22 = 0, $223 = 0, $225 = 0, $227 = 0, $23 = 0, $24 = 0, $25 = 0, $252 = 0, $253 = 0, $257 = 0, $259 = 0, $26 = 0, $261 = 0, $27 = 0, $28 = 0, $286 = 0, $287 = 0, $29 = 0, $291 = 0, $293 = 0, $295 = 0, $3 = 0, $30 = 0, $320 = 0, $321 = 0, $325 = 0, $327 = 0, $329 = 0, $33 = 0, $35 = 0, $354 = 0, $355 = 0, $359 = 0, $360 = 0, $364 = 0, $368 = 0, $37 = 0, $376 = 0, $380 = 0, $385 = 0, $387 = 0, $389 = 0, $39 = 0, $414 = 0, $415 = 0, $419 = 0, $421 = 0, $423 = 0, $448 = 0, $449 = 0, $453 = 0, $455 = 0, $457 = 0, $482 = 0, $483 = 0, $487 = 0, $489 = 0, $491 = 0, $515 = 0, $516 = 0, $523 = 0, $524 = 0, $525 = 0, $529 = 0, $536 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $8 = 0, $9 = 0, $98 = 0, $command = 0, $entries = 0, $i$07$i = 0, $i$07$i32 = 0, $i$07$i47 = 0, $i$07$i90 = 0, $i1$06$i = 0, $i1$06$i35 = 0, $i1$06$i50 = 0, $i1$06$i93 = 0, $index$0202 = 0, $index$0202$lcssa = 0, $index$0202$lcssa396 = 0, $index$0202$lcssa398 = 0, $names = 0, $segment = 0, $storemerge$i$i105 = 0, $storemerge$i$i112 = 0, $storemerge$i$i121 = 0, $storemerge$i$i68 = 0, $storemerge$i$i75 = 0, $storemerge$i$i82 = 0, $storemerge$i55 = 0, $storemerge$i98 = 0, $v$08$i46 = 0, $v$08$i89 = 0, $v$15$i51 = 0, $v$15$i94 = 0, $v$2$i$i = 0, $v$2$i$i$lcssa = 0, $v$2$i$i103 = 0, $v$2$i$i110 = 0, $v$2$i$i119 = 0, $v$2$i$i128 = 0, $v$2$i$i15 = 0, $v$2$i$i59 = 0, $v$2$i$i66 = 0, $v$2$i$i73 = 0, $v$2$i$i80 = 0, $v$2$i53 = 0, $v$2$i96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $command = sp + 88 | 0;
 $segment = sp;
 $entries = sp + 80 | 0;
 $names = sp + 72 | 0;
 $0 = $this + 28 | 0;
 $1 = $this + 12 | 0;
 $2 = $this + 36 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) {
  $$5 = 1;
  STACKTOP = sp;
  return $$5 | 0;
 }
 $6 = $this + 32 | 0;
 $7 = $command + 4 | 0;
 $8 = $segment + 64 | 0;
 $9 = $segment + 16 | 0;
 $10 = $9 + 1 | 0;
 $11 = $segment + 32 | 0;
 $12 = $segment + 40 | 0;
 $13 = $segment + 48 | 0;
 $14 = $segment + 52 | 0;
 $15 = $segment + 56 | 0;
 $16 = $segment + 60 | 0;
 $17 = $this + 4 | 0;
 $18 = $this + 8 | 0;
 $19 = $segment + 12 | 0;
 $20 = $segment + 8 | 0;
 $21 = $segment + 4 | 0;
 $22 = $this + 13 | 0;
 $23 = $entries + 4 | 0;
 $24 = $names + 4 | 0;
 $26 = HEAP32[$0 >> 2] | 0;
 $28 = HEAP32[$6 >> 2] | 0;
 $561 = $3;
 $index$0202 = 0;
 L4 : while (1) {
  $25 = $26;
  $27 = $28;
  HEAP32[$command >> 2] = $25;
  HEAP32[$7 >> 2] = $28;
  $29 = $26;
  $30 = $27 - $26 | 0;
  if ($30 >>> 0 < 4) {
   $$lcssa384 = $561;
   $index$0202$lcssa = $index$0202;
   label = 7;
   break;
  }
  $33 = (HEAP8[$1 >> 0] | 0) == 0;
  $35 = HEAP8[$29 + 3 >> 0] | 0;
  $37 = HEAP8[$29 + 2 >> 0] | 0;
  $39 = HEAP8[$29 + 1 >> 0] | 0;
  if ($33) $v$2$i$i = (($37 & 255 | ($35 & 255) << 8) << 8 | $39 & 255) << 8 | HEAPU8[$29 >> 0]; else $v$2$i$i = (($39 & 255 | HEAPU8[$29 >> 0] << 8) << 8 | $37 & 255) << 8 | $35 & 255;
  $66 = $29 + 4 | 0;
  if (($27 - $66 | 0) >>> 0 < 4) {
   $$lcssa385 = $561;
   $index$0202$lcssa396 = $index$0202;
   $v$2$i$i$lcssa = $v$2$i$i;
   label = 15;
   break;
  }
  $71 = HEAP8[$29 + 7 >> 0] | 0;
  $73 = HEAP8[$29 + 6 >> 0] | 0;
  $75 = HEAP8[$29 + 5 >> 0] | 0;
  if ($33) $v$2$i$i15 = (($73 & 255 | ($71 & 255) << 8) << 8 | $75 & 255) << 8 | HEAPU8[$66 >> 0]; else $v$2$i$i15 = (($75 & 255 | HEAPU8[$66 >> 0] << 8) << 8 | $73 & 255) << 8 | $71 & 255;
  $98 = $29 + 8 | 0;
  if ($25 >>> 0 > $28 >>> 0) {
   label = 13;
   break;
  }
  if ($v$2$i$i15 >>> 0 > $30 >>> 0) {
   $$lcssa385 = $561;
   $index$0202$lcssa396 = $index$0202;
   $v$2$i$i$lcssa = $v$2$i$i;
   label = 15;
   break;
  }
  $105 = $25 + $v$2$i$i15 | 0;
  HEAP32[$7 >> 2] = $105;
  $106 = $105;
  switch ($v$2$i$i | 0) {
  case 25:
  case 1:
   {
    HEAP32[$segment >> 2] = 0;
    HEAP32[$segment + 4 >> 2] = 0;
    HEAP32[$segment + 8 >> 2] = 0;
    HEAP32[$segment + 12 >> 2] = 0;
    HEAP32[$segment + 16 >> 2] = 0;
    HEAP32[$segment + 20 >> 2] = 0;
    HEAP32[$segment + 24 >> 2] = 0;
    $107 = ($v$2$i$i | 0) == 25;
    HEAP8[$8 >> 0] = $107 & 1;
    $109 = $107 ? 8 : 4;
    $110 = $98;
    if (($106 - $110 | 0) >>> 0 < 16) {
     HEAP8[$10 >> 0] = 0;
     HEAP8[$9 >> 0] = 0;
     $121 = $106;
     $123 = $105;
     $376 = $106;
     $562 = 0;
    } else {
     $113 = _memchr($98, 0, 16) | 0;
     if (!$113) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($9, $98, 16) | 0; else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($9, $98, $113 - $110 | 0) | 0;
     $$pre244 = HEAP32[$7 >> 2] | 0;
     $121 = $29 + 24 | 0;
     $123 = $$pre244;
     $376 = $$pre244;
     $562 = 1;
    }
    $120 = $121;
    $122 = $123;
    if (($122 - $121 | 0) >>> 0 < $109 >>> 0) {
     $148 = -559038737;
     $151 = 0;
     $153 = $122;
     $563 = 0;
    } else {
     if ($33) {
      $135 = 0;
      $136 = 0;
      $i1$06$i = $109 + -1 | 0;
      while (1) {
       $137 = _bitshift64Shl($135 | 0, $136 | 0, 8) | 0;
       $138 = tempRet0;
       $142 = HEAPU8[$120 + $i1$06$i >> 0] | $137;
       $i1$06$i = $i1$06$i + -1 | 0;
       if ($i1$06$i >>> 0 >= $109 >>> 0) {
        $564 = $142;
        $565 = $138;
        break;
       } else {
        $135 = $142;
        $136 = $138;
       }
      }
     } else {
      $126 = 0;
      $127 = 0;
      $i$07$i = 0;
      while (1) {
       $128 = _bitshift64Shl($126 | 0, $127 | 0, 8) | 0;
       $129 = tempRet0;
       $133 = HEAPU8[$120 + $i$07$i >> 0] | $128;
       $i$07$i = $i$07$i + 1 | 0;
       if (($i$07$i | 0) == ($109 | 0)) {
        $564 = $133;
        $565 = $129;
        break;
       } else {
        $126 = $133;
        $127 = $129;
       }
      }
     }
     $148 = $564;
     $151 = $565;
     $153 = $120 + $109 | 0;
     $563 = $562;
    }
    $146 = $11;
    HEAP32[$146 >> 2] = $148;
    HEAP32[$146 + 4 >> 2] = $151;
    $152 = $153;
    if (($122 - $153 | 0) >>> 0 < $109 >>> 0) {
     $178 = -559038737;
     $181 = 0;
     $183 = $122;
     $566 = 0;
    } else {
     if ($33) {
      $165 = 0;
      $166 = 0;
      $i1$06$i35 = $109 + -1 | 0;
      while (1) {
       $167 = _bitshift64Shl($165 | 0, $166 | 0, 8) | 0;
       $168 = tempRet0;
       $172 = HEAPU8[$152 + $i1$06$i35 >> 0] | $167;
       $i1$06$i35 = $i1$06$i35 + -1 | 0;
       if ($i1$06$i35 >>> 0 >= $109 >>> 0) {
        $567 = $172;
        $568 = $168;
        break;
       } else {
        $165 = $172;
        $166 = $168;
       }
      }
     } else {
      $156 = 0;
      $157 = 0;
      $i$07$i32 = 0;
      while (1) {
       $158 = _bitshift64Shl($156 | 0, $157 | 0, 8) | 0;
       $159 = tempRet0;
       $163 = HEAPU8[$152 + $i$07$i32 >> 0] | $158;
       $i$07$i32 = $i$07$i32 + 1 | 0;
       if (($i$07$i32 | 0) == ($109 | 0)) {
        $567 = $163;
        $568 = $159;
        break;
       } else {
        $156 = $163;
        $157 = $159;
       }
      }
     }
     $178 = $567;
     $181 = $568;
     $183 = $152 + $109 | 0;
     $566 = $563;
    }
    $176 = $12;
    HEAP32[$176 >> 2] = $178;
    HEAP32[$176 + 4 >> 2] = $181;
    $182 = $183;
    if (($122 - $183 | 0) >>> 0 < $109 >>> 0) {
     $201 = $122;
     $569 = 0;
     $storemerge$i55 = -559038737;
    } else {
     if ($33) {
      $i1$06$i50 = $109 + -1 | 0;
      $v$15$i51 = 0;
      while (1) {
       $196 = HEAPU8[$182 + $i1$06$i50 >> 0] | $v$15$i51 << 8;
       $i1$06$i50 = $i1$06$i50 + -1 | 0;
       if ($i1$06$i50 >>> 0 >= $109 >>> 0) {
        $v$2$i53 = $196;
        break;
       } else $v$15$i51 = $196;
      }
     } else {
      $i$07$i47 = 0;
      $v$08$i46 = 0;
      while (1) {
       $190 = HEAPU8[$182 + $i$07$i47 >> 0] | $v$08$i46 << 8;
       $i$07$i47 = $i$07$i47 + 1 | 0;
       if (($i$07$i47 | 0) == ($109 | 0)) {
        $v$2$i53 = $190;
        break;
       } else $v$08$i46 = $190;
      }
     }
     $201 = $182 + $109 | 0;
     $569 = $566;
     $storemerge$i55 = $v$2$i53;
    }
    $200 = $201;
    if (($122 - $201 | 0) >>> 0 < $109 >>> 0) {
     $219 = $122;
     $570 = 0;
     $storemerge$i98 = -559038737;
    } else {
     if ($33) {
      $i1$06$i93 = $109 + -1 | 0;
      $v$15$i94 = 0;
      while (1) {
       $214 = HEAPU8[$200 + $i1$06$i93 >> 0] | $v$15$i94 << 8;
       $i1$06$i93 = $i1$06$i93 + -1 | 0;
       if ($i1$06$i93 >>> 0 >= $109 >>> 0) {
        $v$2$i96 = $214;
        break;
       } else $v$15$i94 = $214;
      }
     } else {
      $i$07$i90 = 0;
      $v$08$i89 = 0;
      while (1) {
       $208 = HEAPU8[$200 + $i$07$i90 >> 0] | $v$08$i89 << 8;
       $i$07$i90 = $i$07$i90 + 1 | 0;
       if (($i$07$i90 | 0) == ($109 | 0)) {
        $v$2$i96 = $208;
        break;
       } else $v$08$i89 = $208;
      }
     }
     $219 = $200 + $109 | 0;
     $570 = $569;
     $storemerge$i98 = $v$2$i96;
    }
    $218 = $219;
    if (($122 - $219 | 0) >>> 0 < 4) {
     $253 = $122;
     $571 = 0;
     $storemerge$i$i105 = -559038737;
    } else {
     $223 = HEAP8[$218 + 3 >> 0] | 0;
     $225 = HEAP8[$218 + 2 >> 0] | 0;
     $227 = HEAP8[$218 + 1 >> 0] | 0;
     if ($33) $v$2$i$i103 = (($225 & 255 | ($223 & 255) << 8) << 8 | $227 & 255) << 8 | HEAPU8[$218 >> 0]; else $v$2$i$i103 = (($227 & 255 | HEAPU8[$218 >> 0] << 8) << 8 | $225 & 255) << 8 | $223 & 255;
     $253 = $218 + 4 | 0;
     $571 = $570;
     $storemerge$i$i105 = $v$2$i$i103;
    }
    HEAP32[$13 >> 2] = $storemerge$i$i105;
    $252 = $253;
    if (($122 - $253 | 0) >>> 0 < 4) {
     $287 = $122;
     $572 = 0;
     $storemerge$i$i112 = -559038737;
    } else {
     $257 = HEAP8[$252 + 3 >> 0] | 0;
     $259 = HEAP8[$252 + 2 >> 0] | 0;
     $261 = HEAP8[$252 + 1 >> 0] | 0;
     if ($33) $v$2$i$i110 = (($259 & 255 | ($257 & 255) << 8) << 8 | $261 & 255) << 8 | HEAPU8[$252 >> 0]; else $v$2$i$i110 = (($261 & 255 | HEAPU8[$252 >> 0] << 8) << 8 | $259 & 255) << 8 | $257 & 255;
     $287 = $252 + 4 | 0;
     $572 = $571;
     $storemerge$i$i112 = $v$2$i$i110;
    }
    HEAP32[$14 >> 2] = $storemerge$i$i112;
    $286 = $287;
    if (($122 - $287 | 0) >>> 0 < 4) {
     $321 = $122;
     $354 = 0;
     $storemerge$i$i121 = -559038737;
    } else {
     $291 = HEAP8[$286 + 3 >> 0] | 0;
     $293 = HEAP8[$286 + 2 >> 0] | 0;
     $295 = HEAP8[$286 + 1 >> 0] | 0;
     if ($33) $v$2$i$i119 = (($293 & 255 | ($291 & 255) << 8) << 8 | $295 & 255) << 8 | HEAPU8[$286 >> 0]; else $v$2$i$i119 = (($295 & 255 | HEAPU8[$286 >> 0] << 8) << 8 | $293 & 255) << 8 | $291 & 255;
     $321 = $286 + 4 | 0;
     $354 = $572;
     $storemerge$i$i121 = $v$2$i$i119;
    }
    HEAP32[$15 >> 2] = $storemerge$i$i121;
    $320 = $321;
    do if (($122 - $321 | 0) >>> 0 < 4) {
     HEAP32[$16 >> 2] = -559038737;
     label = 68;
    } else {
     $325 = HEAP8[$320 + 3 >> 0] | 0;
     $327 = HEAP8[$320 + 2 >> 0] | 0;
     $329 = HEAP8[$320 + 1 >> 0] | 0;
     if ($33) $v$2$i$i128 = (($327 & 255 | ($325 & 255) << 8) << 8 | $329 & 255) << 8 | HEAPU8[$320 >> 0]; else $v$2$i$i128 = (($329 & 255 | HEAPU8[$320 >> 0] << 8) << 8 | $327 & 255) << 8 | $325 & 255;
     HEAP32[$16 >> 2] = $v$2$i$i128;
     if (!($354 << 24 >> 24)) {
      label = 68;
      break;
     }
     $359 = HEAP32[$17 >> 2] | 0;
     $360 = HEAP32[$18 >> 2] | 0;
     if ($359 >>> 0 > $360 >>> 0) {
      label = 70;
      break L4;
     }
     $364 = $360 - $359 | 0;
     if ($364 >>> 0 < $storemerge$i55 >>> 0 | $storemerge$i98 >>> 0 > ($364 - $storemerge$i55 | 0) >>> 0) {
      $368 = HEAP32[$this >> 2] | 0;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$368 >> 2] | 0) + 36 >> 2] & 63]($368, $9);
      $$04 = 1;
      break;
     }
     if (!($storemerge$i98 | $storemerge$i55)) {
      HEAP32[$19 >> 2] = 0;
      HEAP32[$20 >> 2] = 0;
     } else {
      HEAP32[$20 >> 2] = $359 + $storemerge$i55;
      HEAP32[$19 >> 2] = $359 + ($storemerge$i98 + $storemerge$i55);
     }
     HEAP32[$segment >> 2] = $320 + 4;
     HEAP32[$21 >> 2] = $376;
     $380 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$handler >> 2] | 0) + 12 >> 2] & 31]($handler, $segment) | 0;
     $$04 = $380 ? 5 : 1;
    } while (0);
    if ((label | 0) == 68) {
     label = 0;
     $355 = HEAP32[$this >> 2] | 0;
     FUNCTION_TABLE_viii[HEAP32[(HEAP32[$355 >> 2] | 0) + 28 >> 2] & 15]($355, $index$0202, $v$2$i$i);
     $$04 = 1;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    if (($$04 | 0) != 5) {
     $$5 = 0;
     label = 109;
     break L4;
    }
    break;
   }
  case 2:
   {
    if (($106 - $98 | 0) >>> 0 < 4) {
     $415 = $106;
     $573 = 0;
     $storemerge$i$i82 = -559038737;
    } else {
     $385 = HEAP8[$29 + 11 >> 0] | 0;
     $387 = HEAP8[$29 + 10 >> 0] | 0;
     $389 = HEAP8[$29 + 9 >> 0] | 0;
     if ($33) $v$2$i$i80 = (($387 & 255 | ($385 & 255) << 8) << 8 | $389 & 255) << 8 | HEAPU8[$98 >> 0]; else $v$2$i$i80 = (($389 & 255 | HEAPU8[$98 >> 0] << 8) << 8 | $387 & 255) << 8 | $385 & 255;
     $415 = $29 + 12 | 0;
     $573 = 1;
     $storemerge$i$i82 = $v$2$i$i80;
    }
    $414 = $415;
    if (($106 - $415 | 0) >>> 0 < 4) {
     $449 = $106;
     $574 = 0;
     $storemerge$i$i75 = -559038737;
    } else {
     $419 = HEAP8[$414 + 3 >> 0] | 0;
     $421 = HEAP8[$414 + 2 >> 0] | 0;
     $423 = HEAP8[$414 + 1 >> 0] | 0;
     if ($33) $v$2$i$i73 = (($421 & 255 | ($419 & 255) << 8) << 8 | $423 & 255) << 8 | HEAPU8[$414 >> 0]; else $v$2$i$i73 = (($423 & 255 | HEAPU8[$414 >> 0] << 8) << 8 | $421 & 255) << 8 | $419 & 255;
     $449 = $414 + 4 | 0;
     $574 = $573;
     $storemerge$i$i75 = $v$2$i$i73;
    }
    $448 = $449;
    if (($106 - $449 | 0) >>> 0 < 4) {
     $483 = $106;
     $515 = 0;
     $storemerge$i$i68 = -559038737;
    } else {
     $453 = HEAP8[$448 + 3 >> 0] | 0;
     $455 = HEAP8[$448 + 2 >> 0] | 0;
     $457 = HEAP8[$448 + 1 >> 0] | 0;
     if ($33) $v$2$i$i66 = (($455 & 255 | ($453 & 255) << 8) << 8 | $457 & 255) << 8 | HEAPU8[$448 >> 0]; else $v$2$i$i66 = (($457 & 255 | HEAPU8[$448 >> 0] << 8) << 8 | $455 & 255) << 8 | $453 & 255;
     $483 = $448 + 4 | 0;
     $515 = $574;
     $storemerge$i$i68 = $v$2$i$i66;
    }
    $482 = $483;
    if (($106 - $483 | 0) >>> 0 < 4) {
     $index$0202$lcssa398 = $index$0202;
     label = 98;
     break L4;
    }
    $487 = HEAP8[$482 + 3 >> 0] | 0;
    $489 = HEAP8[$482 + 2 >> 0] | 0;
    $491 = HEAP8[$482 + 1 >> 0] | 0;
    if ($33) $v$2$i$i59 = (($489 & 255 | ($487 & 255) << 8) << 8 | $491 & 255) << 8 | HEAPU8[$482 >> 0]; else $v$2$i$i59 = (($491 & 255 | HEAPU8[$482 >> 0] << 8) << 8 | $489 & 255) << 8 | $487 & 255;
    if (!($515 << 24 >> 24)) {
     $index$0202$lcssa398 = $index$0202;
     label = 98;
     break L4;
    }
    $523 = Math_imul((HEAP8[$22 >> 0] | 0) != 0 ? 16 : 12, $storemerge$i$i75) | 0;
    $524 = HEAP32[$17 >> 2] | 0;
    $525 = HEAP32[$18 >> 2] | 0;
    if ($524 >>> 0 > $525 >>> 0) {
     label = 100;
     break L4;
    }
    $529 = $525 - $524 | 0;
    if ($v$2$i$i59 >>> 0 > ($529 - $storemerge$i$i68 | 0) >>> 0 | ($529 >>> 0 < $storemerge$i$i68 >>> 0 | ($529 >>> 0 < $storemerge$i$i82 >>> 0 | $523 >>> 0 > ($529 - $storemerge$i$i82 | 0) >>> 0))) {
     label = 102;
     break L4;
    }
    HEAP32[$entries >> 2] = $524 + $storemerge$i$i82;
    HEAP32[$23 >> 2] = $524 + ($523 + $storemerge$i$i82);
    HEAP32[$names >> 2] = $524 + $storemerge$i$i68;
    HEAP32[$24 >> 2] = $524 + ($v$2$i$i59 + $storemerge$i$i68);
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 16 >> 2] & 31]($handler, $entries, $names) | 0)) {
     $$5 = 0;
     label = 109;
     break L4;
    }
    break;
   }
  default:
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 8 >> 2] & 31]($handler, $v$2$i$i, $command) | 0)) {
    $$5 = 0;
    label = 109;
    break L4;
   }
  }
  $26 = HEAP32[$7 >> 2] | 0;
  if ((HEAP32[$0 >> 2] | 0) >>> 0 > $26 >>> 0) {
   label = 107;
   break;
  }
  $28 = HEAP32[$6 >> 2] | 0;
  if ($28 >>> 0 < $26 >>> 0) {
   label = 107;
   break;
  }
  $index$0202 = $index$0202 + 1 | 0;
  $561 = HEAP32[$2 >> 2] | 0;
  if ($index$0202 >>> 0 >= $561 >>> 0) {
   $$5 = 1;
   label = 109;
   break;
  }
 }
 if ((label | 0) == 7) {
  $62 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$62 >> 2] | 0) + 24 >> 2] & 31]($62, $$lcssa384, $index$0202$lcssa, 0);
  $$5 = 0;
  STACKTOP = sp;
  return $$5 | 0;
 } else if ((label | 0) == 13) ___assert_fail(22901, 22914, 70, 22941); else if ((label | 0) == 15) {
  $101 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$101 >> 2] | 0) + 24 >> 2] & 31]($101, $$lcssa385, $index$0202$lcssa396, $v$2$i$i$lcssa);
  $$5 = 0;
  STACKTOP = sp;
  return $$5 | 0;
 } else if ((label | 0) == 70) ___assert_fail(22901, 22914, 70, 22941); else if ((label | 0) == 98) {
  $516 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$516 >> 2] | 0) + 28 >> 2] & 15]($516, $index$0202$lcssa398, 2);
  $$5 = 0;
  STACKTOP = sp;
  return $$5 | 0;
 } else if ((label | 0) == 100) ___assert_fail(22901, 22914, 70, 22941); else if ((label | 0) == 102) {
  $536 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$536 >> 2] | 0) + 44 >> 2] & 255]($536);
  $$5 = 0;
  STACKTOP = sp;
  return $$5 | 0;
 } else if ((label | 0) == 107) ___assert_fail(23892, 22914, 97, 23939); else if ((label | 0) == 109) {
  STACKTOP = sp;
  return $$5 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$19 = 0, $$pre = 0, $$pre$phi80Z2D = 0, $$pre$phi82Z2D = 0, $$pre$phi84Z2D = 0, $0 = 0, $1 = 0, $107 = 0, $108 = 0, $111 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $130 = 0, $134 = 0, $136 = 0, $146 = 0, $148 = 0, $15 = 0, $150 = 0, $151 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $165 = 0, $167 = 0, $177 = 0, $180 = 0, $181 = 0, $183 = 0, $184 = 0, $185 = 0, $187 = 0, $188 = 0, $19 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $201 = 0, $205 = 0, $207 = 0, $217 = 0, $221 = 0, $222 = 0, $225 = 0, $226 = 0, $227 = 0, $230 = 0, $233 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $246 = 0, $250 = 0, $252 = 0, $261 = 0, $262 = 0, $265 = 0, $267 = 0, $268 = 0, $269 = 0, $271 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $284 = 0, $288 = 0, $290 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $79 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $92 = 0, $96 = 0, $98 = 0, $args = 0, $args3 = 0, $global$0$off0 = 0, $s = 0, $s1 = 0, $s4 = 0, $s5 = 0, $s6 = 0, $t$0 = 0, $t$1$lcssa = 0, $t$1$ph = 0, $t$1107 = 0, $t$2 = 0, $t$3$lcssa = 0, $t$3110 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $args = sp + 132 | 0;
 $s = sp + 120 | 0;
 $0 = sp + 108 | 0;
 $s1 = sp + 96 | 0;
 $1 = sp + 84 | 0;
 $args3 = sp + 72 | 0;
 $s4 = sp + 60 | 0;
 $2 = sp + 48 | 0;
 $s5 = sp + 36 | 0;
 $3 = sp + 24 | 0;
 $s6 = sp + 12 | 0;
 $4 = sp;
 $5 = $last;
 L1 : do if (($5 - $first | 0) > 2) {
  if ((HEAP8[$first >> 0] | 0) == 103) {
   $13 = (HEAP8[$first + 1 >> 0] | 0) == 115;
   $global$0$off0 = $13;
   $t$0 = $13 ? $first + 2 | 0 : $first;
  } else {
   $global$0$off0 = 0;
   $t$0 = $first;
  }
  $15 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$0, $last, $db) | 0;
  if (($15 | 0) != ($t$0 | 0)) {
   if (!$global$0$off0) {
    $$19 = $15;
    break;
   }
   $19 = HEAP32[$db + 4 >> 2] | 0;
   if ((HEAP32[$db >> 2] | 0) == ($19 | 0)) {
    $$19 = $first;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($19 + -24 | 0, 0, 25761) | 0;
   $$19 = $15;
   break;
  }
  if (($5 - $t$0 | 0) > 2) if ((HEAP8[$t$0 >> 0] | 0) == 115) if ((HEAP8[$t$0 + 1 >> 0] | 0) == 114) {
   $30 = $t$0 + 2 | 0;
   if ((HEAP8[$30 >> 0] | 0) == 78) {
    $33 = $t$0 + 3 | 0;
    $34 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($33, $last, $db) | 0;
    if (($34 | 0) == ($33 | 0) | ($34 | 0) == ($last | 0)) {
     $$19 = $first;
     break;
    }
    $37 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($34, $last, $db) | 0;
    $$pre = $db + 4 | 0;
    do if (($37 | 0) == ($34 | 0)) {
     $$pre$phi80Z2D = $db;
     $t$1$ph = $34;
    } else {
     $39 = HEAP32[$$pre >> 2] | 0;
     if ((($39 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$19 = $first;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args, $39 + -24 | 0);
     $47 = HEAP32[$$pre >> 2] | 0;
     $48 = $47 + -24 | 0;
     $50 = $47;
     do {
      $49 = $50 + -24 | 0;
      HEAP32[$$pre >> 2] = $49;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($49);
      $50 = HEAP32[$$pre >> 2] | 0;
     } while (($50 | 0) != ($48 | 0));
     $53 = HEAP8[$args >> 0] | 0;
     $55 = ($53 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($47 + -48 | 0, $55 ? $args + 1 | 0 : HEAP32[$args + 8 >> 2] | 0, $55 ? ($53 & 255) >>> 1 : HEAP32[$args + 4 >> 2] | 0) | 0;
     if (($37 | 0) != ($last | 0)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
      $$pre$phi80Z2D = $db;
      $t$1$ph = $37;
      break;
     }
     $66 = HEAP32[$$pre >> 2] | 0;
     $67 = $66 + -24 | 0;
     $69 = $66;
     do {
      $68 = $69 + -24 | 0;
      HEAP32[$$pre >> 2] = $68;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($68);
      $69 = HEAP32[$$pre >> 2] | 0;
     } while (($69 | 0) != ($67 | 0));
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
     $$19 = $first;
     break L1;
    } while (0);
    $71 = $0 + 8 | 0;
    $72 = $0 + 1 | 0;
    $73 = $0 + 4 | 0;
    if ((HEAP8[$t$1$ph >> 0] | 0) == 69) $t$1$lcssa = $t$1$ph; else {
     $t$1107 = $t$1$ph;
     while (1) {
      $76 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($t$1107, $last, $db) | 0;
      if (($76 | 0) == ($t$1107 | 0) | ($76 | 0) == ($last | 0)) {
       $$19 = $first;
       break L1;
      }
      $79 = HEAP32[$$pre >> 2] | 0;
      if ((($79 - (HEAP32[$$pre$phi80Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       $$19 = $first;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s, $79 + -24 | 0);
      $87 = HEAP32[$$pre >> 2] | 0;
      $88 = $87 + -24 | 0;
      $90 = $87;
      do {
       $89 = $90 + -24 | 0;
       HEAP32[$$pre >> 2] = $89;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($89);
       $90 = HEAP32[$$pre >> 2] | 0;
      } while (($90 | 0) != ($88 | 0));
      $92 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($s, 0, 25761) | 0;
      HEAP32[$0 >> 2] = HEAP32[$92 >> 2];
      HEAP32[$0 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
      HEAP32[$0 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
      HEAP32[$92 >> 2] = 0;
      HEAP32[$92 + 4 >> 2] = 0;
      HEAP32[$92 + 8 >> 2] = 0;
      $96 = HEAP8[$0 >> 0] | 0;
      $98 = ($96 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($87 + -48 | 0, $98 ? $72 : HEAP32[$71 >> 2] | 0, $98 ? ($96 & 255) >>> 1 : HEAP32[$73 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s);
      if ((HEAP8[$76 >> 0] | 0) == 69) {
       $t$1$lcssa = $76;
       break;
      } else $t$1107 = $76;
     }
    }
    $107 = $t$1$lcssa + 1 | 0;
    $108 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($107, $last, $db) | 0;
    if (($108 | 0) == ($107 | 0)) {
     $111 = HEAP32[$$pre >> 2] | 0;
     if ((HEAP32[$$pre$phi80Z2D >> 2] | 0) == ($111 | 0)) {
      $$19 = $first;
      break;
     }
     $113 = $111 + -24 | 0;
     $115 = $111;
     while (1) {
      $114 = $115 + -24 | 0;
      HEAP32[$$pre >> 2] = $114;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($114);
      $115 = HEAP32[$$pre >> 2] | 0;
      if (($115 | 0) == ($113 | 0)) {
       $$19 = $first;
       break L1;
      }
     }
    }
    $117 = HEAP32[$$pre >> 2] | 0;
    if ((($117 - (HEAP32[$$pre$phi80Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$19 = $first;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s1, $117 + -24 | 0);
    $125 = HEAP32[$$pre >> 2] | 0;
    $126 = $125 + -24 | 0;
    $128 = $125;
    do {
     $127 = $128 + -24 | 0;
     HEAP32[$$pre >> 2] = $127;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($127);
     $128 = HEAP32[$$pre >> 2] | 0;
    } while (($128 | 0) != ($126 | 0));
    $130 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($s1, 0, 25761) | 0;
    HEAP32[$1 >> 2] = HEAP32[$130 >> 2];
    HEAP32[$1 + 4 >> 2] = HEAP32[$130 + 4 >> 2];
    HEAP32[$1 + 8 >> 2] = HEAP32[$130 + 8 >> 2];
    HEAP32[$130 >> 2] = 0;
    HEAP32[$130 + 4 >> 2] = 0;
    HEAP32[$130 + 8 >> 2] = 0;
    $134 = HEAP8[$1 >> 0] | 0;
    $136 = ($134 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($125 + -48 | 0, $136 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0, $136 ? ($134 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s1);
    $$19 = $108;
    break;
   }
   $146 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($30, $last, $db) | 0;
   if (($146 | 0) != ($30 | 0)) {
    $148 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($146, $last, $db) | 0;
    if (($148 | 0) == ($146 | 0)) $t$2 = $146; else {
     $150 = $db + 4 | 0;
     $151 = HEAP32[$150 >> 2] | 0;
     if ((($151 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$19 = $first;
      break;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args3, $151 + -24 | 0);
     $159 = HEAP32[$150 >> 2] | 0;
     $160 = $159 + -24 | 0;
     $162 = $159;
     do {
      $161 = $162 + -24 | 0;
      HEAP32[$150 >> 2] = $161;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($161);
      $162 = HEAP32[$150 >> 2] | 0;
     } while (($162 | 0) != ($160 | 0));
     $165 = HEAP8[$args3 >> 0] | 0;
     $167 = ($165 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($159 + -48 | 0, $167 ? $args3 + 1 | 0 : HEAP32[$args3 + 8 >> 2] | 0, $167 ? ($165 & 255) >>> 1 : HEAP32[$args3 + 4 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args3);
     $t$2 = $148;
    }
    $177 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$2, $last, $db) | 0;
    if (($177 | 0) == ($t$2 | 0)) {
     $180 = $db + 4 | 0;
     $181 = HEAP32[$180 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($181 | 0)) {
      $$19 = $first;
      break;
     }
     $183 = $181 + -24 | 0;
     $185 = $181;
     while (1) {
      $184 = $185 + -24 | 0;
      HEAP32[$180 >> 2] = $184;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($184);
      $185 = HEAP32[$180 >> 2] | 0;
      if (($185 | 0) == ($183 | 0)) {
       $$19 = $first;
       break L1;
      }
     }
    }
    $187 = $db + 4 | 0;
    $188 = HEAP32[$187 >> 2] | 0;
    if ((($188 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$19 = $first;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s4, $188 + -24 | 0);
    $196 = HEAP32[$187 >> 2] | 0;
    $197 = $196 + -24 | 0;
    $199 = $196;
    do {
     $198 = $199 + -24 | 0;
     HEAP32[$187 >> 2] = $198;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($198);
     $199 = HEAP32[$187 >> 2] | 0;
    } while (($199 | 0) != ($197 | 0));
    $201 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($s4, 0, 25761) | 0;
    HEAP32[$2 >> 2] = HEAP32[$201 >> 2];
    HEAP32[$2 + 4 >> 2] = HEAP32[$201 + 4 >> 2];
    HEAP32[$2 + 8 >> 2] = HEAP32[$201 + 8 >> 2];
    HEAP32[$201 >> 2] = 0;
    HEAP32[$201 + 4 >> 2] = 0;
    HEAP32[$201 + 8 >> 2] = 0;
    $205 = HEAP8[$2 >> 0] | 0;
    $207 = ($205 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($196 + -48 | 0, $207 ? $2 + 1 | 0 : HEAP32[$2 + 8 >> 2] | 0, $207 ? ($205 & 255) >>> 1 : HEAP32[$2 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s4);
    $$19 = $177;
    break;
   }
   $217 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($30, $last, $db) | 0;
   if (($217 | 0) == ($30 | 0) | ($217 | 0) == ($last | 0)) $$19 = $first; else {
    if ($global$0$off0) {
     $221 = $db + 4 | 0;
     $222 = HEAP32[$221 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($222 | 0)) {
      $$19 = $first;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($222 + -24 | 0, 0, 25761) | 0;
     $$pre$phi82Z2D = $221;
     $$pre$phi84Z2D = $db;
    } else {
     $$pre$phi82Z2D = $db + 4 | 0;
     $$pre$phi84Z2D = $db;
    }
    $225 = $3 + 8 | 0;
    $226 = $3 + 1 | 0;
    $227 = $3 + 4 | 0;
    if ((HEAP8[$217 >> 0] | 0) == 69) $t$3$lcssa = $217; else {
     $t$3110 = $217;
     while (1) {
      $230 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($t$3110, $last, $db) | 0;
      if (($230 | 0) == ($t$3110 | 0) | ($230 | 0) == ($last | 0)) {
       $$19 = $first;
       break L1;
      }
      $233 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
      if ((($233 - (HEAP32[$$pre$phi84Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       $$19 = $first;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s5, $233 + -24 | 0);
      $241 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
      $242 = $241 + -24 | 0;
      $244 = $241;
      do {
       $243 = $244 + -24 | 0;
       HEAP32[$$pre$phi82Z2D >> 2] = $243;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($243);
       $244 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
      } while (($244 | 0) != ($242 | 0));
      $246 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($s5, 0, 25761) | 0;
      HEAP32[$3 >> 2] = HEAP32[$246 >> 2];
      HEAP32[$3 + 4 >> 2] = HEAP32[$246 + 4 >> 2];
      HEAP32[$3 + 8 >> 2] = HEAP32[$246 + 8 >> 2];
      HEAP32[$246 >> 2] = 0;
      HEAP32[$246 + 4 >> 2] = 0;
      HEAP32[$246 + 8 >> 2] = 0;
      $250 = HEAP8[$3 >> 0] | 0;
      $252 = ($250 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($241 + -48 | 0, $252 ? $226 : HEAP32[$225 >> 2] | 0, $252 ? ($250 & 255) >>> 1 : HEAP32[$227 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s5);
      if ((HEAP8[$230 >> 0] | 0) == 69) {
       $t$3$lcssa = $230;
       break;
      } else $t$3110 = $230;
     }
    }
    $261 = $t$3$lcssa + 1 | 0;
    $262 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($261, $last, $db) | 0;
    if (($262 | 0) == ($261 | 0)) {
     $265 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
     if ((HEAP32[$$pre$phi84Z2D >> 2] | 0) == ($265 | 0)) {
      $$19 = $first;
      break;
     }
     $267 = $265 + -24 | 0;
     $269 = $265;
     while (1) {
      $268 = $269 + -24 | 0;
      HEAP32[$$pre$phi82Z2D >> 2] = $268;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($268);
      $269 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
      if (($269 | 0) == ($267 | 0)) {
       $$19 = $first;
       break L1;
      }
     }
    }
    $271 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
    if ((($271 - (HEAP32[$$pre$phi84Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$19 = $first; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s6, $271 + -24 | 0);
     $279 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
     $280 = $279 + -24 | 0;
     $282 = $279;
     do {
      $281 = $282 + -24 | 0;
      HEAP32[$$pre$phi82Z2D >> 2] = $281;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($281);
      $282 = HEAP32[$$pre$phi82Z2D >> 2] | 0;
     } while (($282 | 0) != ($280 | 0));
     $284 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($s6, 0, 25761) | 0;
     HEAP32[$4 >> 2] = HEAP32[$284 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$284 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$284 + 8 >> 2];
     HEAP32[$284 >> 2] = 0;
     HEAP32[$284 + 4 >> 2] = 0;
     HEAP32[$284 + 8 >> 2] = 0;
     $288 = HEAP8[$4 >> 0] | 0;
     $290 = ($288 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($279 + -48 | 0, $290 ? $4 + 1 | 0 : HEAP32[$4 + 8 >> 2] | 0, $290 ? ($288 & 255) >>> 1 : HEAP32[$4 + 4 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($s6);
     $$19 = $262;
    }
   }
  } else $$19 = $first; else $$19 = $first; else $$19 = $first;
 } else $$19 = $first; while (0);
 STACKTOP = sp;
 return $$19 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i12 = 0, $$0$i$i$i17 = 0, $$0$i$i$i22 = 0, $$0$i$i$i27 = 0, $$0$i$i$i32 = 0, $$0$i$i$i37 = 0, $$0$i$i$i40 = 0, $$lcssa98 = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $136 = 0, $138 = 0, $14 = 0, $141 = 0, $142 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $162 = 0, $164 = 0, $167 = 0, $168 = 0, $172 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $184 = 0, $187 = 0, $195 = 0, $196 = 0, $197 = 0, $2 = 0, $200 = 0, $203 = 0, $212 = 0, $213 = 0, $214 = 0, $217 = 0, $218 = 0, $220 = 0, $221 = 0, $223 = 0, $224 = 0, $229 = 0, $233 = 0, $240 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $248 = 0, $25 = 0, $251 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $264 = 0, $267 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $58 = 0, $60 = 0, $63 = 0, $64 = 0, $67 = 0, $68 = 0, $70 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $84 = 0, $86 = 0, $89 = 0, $90 = 0, $93 = 0, $94 = 0, $96 = 0, $__v$i$i38 = 0, $isdigittmp5 = 0, $isdigittmp9 = 0, $sub$179 = 0, $sub$179$lcssa = 0, $t$080 = 0, $t$080$lcssa = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $__v$i$i38 = sp + 144 | 0;
 $0 = sp + 120 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 72 | 0;
 $3 = sp + 48 | 0;
 $4 = sp + 24 | 0;
 $5 = sp;
 L1 : do if (($last - $first | 0) > 1) if ((HEAP8[$first >> 0] | 0) == 83) {
  $12 = $first + 1 | 0;
  $13 = HEAP8[$12 >> 0] | 0;
  $14 = $13 << 24 >> 24;
  switch ($14 | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($0, 25672);
    $15 = $db + 4 | 0;
    $16 = HEAP32[$15 >> 2] | 0;
    $18 = HEAP32[$db + 8 >> 2] | 0;
    if ($16 >>> 0 < $18 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($16, $0);
     HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 24;
    } else {
     $25 = HEAP32[$db >> 2] | 0;
     $26 = $16 - $25 | 0;
     $27 = ($26 | 0) / 24 | 0;
     $28 = $27 + 1 | 0;
     if (($26 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $32 = ($18 - $25 | 0) / 24 | 0;
     if ($32 >>> 0 < 1073741823) {
      $34 = $32 << 1;
      $$0$i$i$i = $34 >>> 0 < $28 >>> 0 ? $28 : $34;
     } else $$0$i$i$i = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i, $27, $db + 12 | 0);
     $37 = $__v$i$i38 + 8 | 0;
     $38 = HEAP32[$37 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38, $0);
     HEAP32[$37 >> 2] = $38 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
    $$0 = $first + 2 | 0;
    break L1;
    break;
   }
  case 98:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($1, 25687);
    $41 = $db + 4 | 0;
    $42 = HEAP32[$41 >> 2] | 0;
    $44 = HEAP32[$db + 8 >> 2] | 0;
    if ($42 >>> 0 < $44 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($42, $1);
     HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 24;
    } else {
     $51 = HEAP32[$db >> 2] | 0;
     $52 = $42 - $51 | 0;
     $53 = ($52 | 0) / 24 | 0;
     $54 = $53 + 1 | 0;
     if (($52 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $58 = ($44 - $51 | 0) / 24 | 0;
     if ($58 >>> 0 < 1073741823) {
      $60 = $58 << 1;
      $$0$i$i$i12 = $60 >>> 0 < $54 >>> 0 ? $54 : $60;
     } else $$0$i$i$i12 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i12, $53, $db + 12 | 0);
     $63 = $__v$i$i38 + 8 | 0;
     $64 = HEAP32[$63 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($64, $1);
     HEAP32[$63 >> 2] = $64 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
    $$0 = $first + 2 | 0;
    break L1;
    break;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($2, 25705);
    $67 = $db + 4 | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    $70 = HEAP32[$db + 8 >> 2] | 0;
    if ($68 >>> 0 < $70 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($68, $2);
     HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 24;
    } else {
     $77 = HEAP32[$db >> 2] | 0;
     $78 = $68 - $77 | 0;
     $79 = ($78 | 0) / 24 | 0;
     $80 = $79 + 1 | 0;
     if (($78 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $84 = ($70 - $77 | 0) / 24 | 0;
     if ($84 >>> 0 < 1073741823) {
      $86 = $84 << 1;
      $$0$i$i$i17 = $86 >>> 0 < $80 >>> 0 ? $80 : $86;
     } else $$0$i$i$i17 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i17, $79, $db + 12 | 0);
     $89 = $__v$i$i38 + 8 | 0;
     $90 = HEAP32[$89 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($90, $2);
     HEAP32[$89 >> 2] = $90 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
    $$0 = $first + 2 | 0;
    break L1;
    break;
   }
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($3, 25717);
    $93 = $db + 4 | 0;
    $94 = HEAP32[$93 >> 2] | 0;
    $96 = HEAP32[$db + 8 >> 2] | 0;
    if ($94 >>> 0 < $96 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($94, $3);
     HEAP32[$93 >> 2] = (HEAP32[$93 >> 2] | 0) + 24;
    } else {
     $103 = HEAP32[$db >> 2] | 0;
     $104 = $94 - $103 | 0;
     $105 = ($104 | 0) / 24 | 0;
     $106 = $105 + 1 | 0;
     if (($104 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $110 = ($96 - $103 | 0) / 24 | 0;
     if ($110 >>> 0 < 1073741823) {
      $112 = $110 << 1;
      $$0$i$i$i22 = $112 >>> 0 < $106 >>> 0 ? $106 : $112;
     } else $$0$i$i$i22 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i22, $105, $db + 12 | 0);
     $115 = $__v$i$i38 + 8 | 0;
     $116 = HEAP32[$115 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($116, $3);
     HEAP32[$115 >> 2] = $116 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$0 = $first + 2 | 0;
    break L1;
    break;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($4, 25730);
    $119 = $db + 4 | 0;
    $120 = HEAP32[$119 >> 2] | 0;
    $122 = HEAP32[$db + 8 >> 2] | 0;
    if ($120 >>> 0 < $122 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($120, $4);
     HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + 24;
    } else {
     $129 = HEAP32[$db >> 2] | 0;
     $130 = $120 - $129 | 0;
     $131 = ($130 | 0) / 24 | 0;
     $132 = $131 + 1 | 0;
     if (($130 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $136 = ($122 - $129 | 0) / 24 | 0;
     if ($136 >>> 0 < 1073741823) {
      $138 = $136 << 1;
      $$0$i$i$i27 = $138 >>> 0 < $132 >>> 0 ? $132 : $138;
     } else $$0$i$i$i27 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i27, $131, $db + 12 | 0);
     $141 = $__v$i$i38 + 8 | 0;
     $142 = HEAP32[$141 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($142, $4);
     HEAP32[$141 >> 2] = $142 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    $$0 = $first + 2 | 0;
    break L1;
    break;
   }
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($5, 25743);
    $145 = $db + 4 | 0;
    $146 = HEAP32[$145 >> 2] | 0;
    $148 = HEAP32[$db + 8 >> 2] | 0;
    if ($146 >>> 0 < $148 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($146, $5);
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + 24;
    } else {
     $155 = HEAP32[$db >> 2] | 0;
     $156 = $146 - $155 | 0;
     $157 = ($156 | 0) / 24 | 0;
     $158 = $157 + 1 | 0;
     if (($156 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $162 = ($148 - $155 | 0) / 24 | 0;
     if ($162 >>> 0 < 1073741823) {
      $164 = $162 << 1;
      $$0$i$i$i32 = $164 >>> 0 < $158 >>> 0 ? $158 : $164;
     } else $$0$i$i$i32 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i32, $157, $db + 12 | 0);
     $167 = $__v$i$i38 + 8 | 0;
     $168 = HEAP32[$167 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($168, $5);
     HEAP32[$167 >> 2] = $168 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
    $$0 = $first + 2 | 0;
    break L1;
    break;
   }
  case 95:
   {
    $172 = HEAP32[$db + 16 >> 2] | 0;
    if (($172 | 0) == (HEAP32[$db + 20 >> 2] | 0)) {
     $$0 = $first;
     break L1;
    }
    $176 = HEAP32[$172 >> 2] | 0;
    $178 = HEAP32[$172 + 4 >> 2] | 0;
    $179 = $db + 4 | 0;
    $180 = $db + 8 | 0;
    $181 = $db + 12 | 0;
    $182 = $__v$i$i38 + 8 | 0;
    L100 : do if (($176 | 0) != ($178 | 0)) {
     $187 = $176;
     while (1) {
      $184 = HEAP32[$179 >> 2] | 0;
      if (($184 | 0) == (HEAP32[$180 >> 2] | 0)) {
       $195 = $184 - (HEAP32[$db >> 2] | 0) | 0;
       $196 = ($195 | 0) / 24 | 0;
       $197 = $196 + 1 | 0;
       if (($195 | 0) < -24) break;
       if ($196 >>> 0 < 1073741823) {
        $200 = $196 << 1;
        $$0$i$i$i37 = $200 >>> 0 < $197 >>> 0 ? $197 : $200;
       } else $$0$i$i$i37 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i37, $196, $181);
       $203 = HEAP32[$182 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($203, $187);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($203 + 12 | 0, $187 + 12 | 0);
       HEAP32[$182 >> 2] = $203 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($184, $187);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($184 + 12 | 0, $187 + 12 | 0);
       HEAP32[$179 >> 2] = (HEAP32[$179 >> 2] | 0) + 24;
      }
      $187 = $187 + 24 | 0;
      if (($187 | 0) == ($178 | 0)) break L100;
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    } while (0);
    $$0 = $first + 2 | 0;
    break L1;
    break;
   }
  default:
   {
    if (($14 + -48 | 0) >>> 0 < 10) $213 = $13; else {
     if (!(_isupper($14) | 0)) {
      $$0 = $first;
      break L1;
     }
     $213 = HEAP8[$12 >> 0] | 0;
    }
    $212 = $213 << 24 >> 24;
    $isdigittmp5 = $212 + -48 | 0;
    $214 = $first + 2 | 0;
    if (($214 | 0) == ($last | 0)) {
     $$0 = $first;
     break L1;
    }
    $sub$179 = $isdigittmp5 >>> 0 < 10 ? $isdigittmp5 : $212 + -55 | 0;
    $t$080 = $214;
    while (1) {
     $217 = HEAP8[$t$080 >> 0] | 0;
     $218 = $217 << 24 >> 24;
     if (($218 + -48 | 0) >>> 0 < 10) $224 = $217; else {
      $220 = (_isupper($218) | 0) == 0;
      $221 = HEAP8[$t$080 >> 0] | 0;
      if ($220) {
       $$lcssa98 = $221;
       $sub$179$lcssa = $sub$179;
       $t$080$lcssa = $t$080;
       break;
      } else $224 = $221;
     }
     $223 = $224 << 24 >> 24;
     $isdigittmp9 = $223 + -48 | 0;
     $t$080 = $t$080 + 1 | 0;
     if (($t$080 | 0) == ($last | 0)) {
      $$0 = $first;
      break L1;
     } else $sub$179 = ($isdigittmp9 >>> 0 < 10 ? $isdigittmp9 : $223 + -55 | 0) + ($sub$179 * 36 | 0) | 0;
    }
    if ($$lcssa98 << 24 >> 24 != 95) {
     $$0 = $first;
     break L1;
    }
    $229 = $sub$179$lcssa + 1 | 0;
    $233 = HEAP32[$db + 16 >> 2] | 0;
    if ($229 >>> 0 >= (HEAP32[$db + 20 >> 2] | 0) - $233 >> 4 >>> 0) {
     $$0 = $first;
     break L1;
    }
    $240 = HEAP32[$233 + ($229 << 4) >> 2] | 0;
    $242 = HEAP32[$233 + ($229 << 4) + 4 >> 2] | 0;
    $243 = $db + 4 | 0;
    $244 = $db + 8 | 0;
    $245 = $db + 12 | 0;
    $246 = $__v$i$i38 + 8 | 0;
    L19 : do if (($240 | 0) != ($242 | 0)) {
     $251 = $240;
     while (1) {
      $248 = HEAP32[$243 >> 2] | 0;
      if (($248 | 0) == (HEAP32[$244 >> 2] | 0)) {
       $259 = $248 - (HEAP32[$db >> 2] | 0) | 0;
       $260 = ($259 | 0) / 24 | 0;
       $261 = $260 + 1 | 0;
       if (($259 | 0) < -24) break;
       if ($260 >>> 0 < 1073741823) {
        $264 = $260 << 1;
        $$0$i$i$i40 = $264 >>> 0 < $261 >>> 0 ? $261 : $264;
       } else $$0$i$i$i40 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i38, $$0$i$i$i40, $260, $245);
       $267 = HEAP32[$246 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($267, $251);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($267 + 12 | 0, $251 + 12 | 0);
       HEAP32[$246 >> 2] = $267 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i38);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i38);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($248, $251);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($248 + 12 | 0, $251 + 12 | 0);
       HEAP32[$243 >> 2] = (HEAP32[$243 >> 2] | 0) + 24;
      }
      $251 = $251 + 24 | 0;
      if (($251 | 0) == ($242 | 0)) break L19;
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    } while (0);
    $$0 = $t$080$lcssa + 1 | 0;
    break L1;
   }
  }
 } else $$0 = $first; else $$0 = $first; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112__next_primeEj($n) {
 $n = $n | 0;
 var $$ = 0, $$0 = 0, $$k0$0 = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $108 = 0, $109 = 0, $113 = 0, $114 = 0, $118 = 0, $119 = 0, $12 = 0, $123 = 0, $124 = 0, $128 = 0, $129 = 0, $133 = 0, $134 = 0, $138 = 0, $139 = 0, $143 = 0, $144 = 0, $148 = 0, $149 = 0, $153 = 0, $154 = 0, $158 = 0, $159 = 0, $163 = 0, $164 = 0, $168 = 0, $169 = 0, $173 = 0, $174 = 0, $178 = 0, $179 = 0, $18 = 0, $183 = 0, $184 = 0, $188 = 0, $189 = 0, $19 = 0, $193 = 0, $194 = 0, $198 = 0, $199 = 0, $2 = 0, $203 = 0, $204 = 0, $208 = 0, $209 = 0, $213 = 0, $214 = 0, $218 = 0, $219 = 0, $223 = 0, $224 = 0, $228 = 0, $229 = 0, $233 = 0, $234 = 0, $238 = 0, $239 = 0, $24 = 0, $243 = 0, $244 = 0, $248 = 0, $249 = 0, $253 = 0, $254 = 0, $258 = 0, $259 = 0, $264 = 0, $265 = 0, $28 = 0, $29 = 0, $33 = 0, $34 = 0, $38 = 0, $39 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $53 = 0, $54 = 0, $58 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $68 = 0, $69 = 0, $7 = 0, $73 = 0, $74 = 0, $78 = 0, $79 = 0, $83 = 0, $84 = 0, $88 = 0, $89 = 0, $93 = 0, $94 = 0, $98 = 0, $99 = 0, $i$0 = 0, $in$0 = 0, $j$0 = 0, $k0$0 = 0, $storemerge = 0, $storemerge$lcssa = 0, $storemerge$lcssa15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 HEAP32[$1 >> 2] = $n;
 do if ($n >>> 0 < 212) $$0 = HEAP32[(__ZNSt3__113__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_(7660, 7852, $1, $0) | 0) >> 2] | 0; else {
  $6 = ($n >>> 0) / 210 | 0;
  $7 = $6 * 210 | 0;
  HEAP32[$2 >> 2] = $n - $7;
  $12 = (__ZNSt3__113__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_(7852, 8044, $2, $0) | 0) - 7852 >> 2;
  $in$0 = $12;
  $k0$0 = $6;
  $storemerge = (HEAP32[7852 + ($12 << 2) >> 2] | 0) + $7 | 0;
  L4 : while (1) {
   $j$0 = 5;
   while (1) {
    if ($j$0 >>> 0 >= 47) {
     $i$0 = 211;
     label = 8;
     break;
    }
    $18 = HEAP32[7660 + ($j$0 << 2) >> 2] | 0;
    $19 = ($storemerge >>> 0) / ($18 >>> 0) | 0;
    if ($19 >>> 0 < $18 >>> 0) {
     $storemerge$lcssa15 = $storemerge;
     label = 106;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($19, $18) | 0)) break; else $j$0 = $j$0 + 1 | 0;
   }
   L10 : do if ((label | 0) == 8) while (1) {
    label = 0;
    $24 = ($storemerge >>> 0) / ($i$0 >>> 0) | 0;
    if ($24 >>> 0 < $i$0 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($24, $i$0) | 0)) break L10;
    $28 = $i$0 + 10 | 0;
    $29 = ($storemerge >>> 0) / ($28 >>> 0) | 0;
    if ($29 >>> 0 < $28 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($29, $28) | 0)) break L10;
    $33 = $i$0 + 12 | 0;
    $34 = ($storemerge >>> 0) / ($33 >>> 0) | 0;
    if ($34 >>> 0 < $33 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($34, $33) | 0)) break L10;
    $38 = $i$0 + 16 | 0;
    $39 = ($storemerge >>> 0) / ($38 >>> 0) | 0;
    if ($39 >>> 0 < $38 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($39, $38) | 0)) break L10;
    $43 = $i$0 + 18 | 0;
    $44 = ($storemerge >>> 0) / ($43 >>> 0) | 0;
    if ($44 >>> 0 < $43 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($44, $43) | 0)) break L10;
    $48 = $i$0 + 22 | 0;
    $49 = ($storemerge >>> 0) / ($48 >>> 0) | 0;
    if ($49 >>> 0 < $48 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($49, $48) | 0)) break L10;
    $53 = $i$0 + 28 | 0;
    $54 = ($storemerge >>> 0) / ($53 >>> 0) | 0;
    if ($54 >>> 0 < $53 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($54, $53) | 0)) break L10;
    $58 = $i$0 + 30 | 0;
    $59 = ($storemerge >>> 0) / ($58 >>> 0) | 0;
    if ($59 >>> 0 < $58 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($59, $58) | 0)) break L10;
    $63 = $i$0 + 36 | 0;
    $64 = ($storemerge >>> 0) / ($63 >>> 0) | 0;
    if ($64 >>> 0 < $63 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($64, $63) | 0)) break L10;
    $68 = $i$0 + 40 | 0;
    $69 = ($storemerge >>> 0) / ($68 >>> 0) | 0;
    if ($69 >>> 0 < $68 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($69, $68) | 0)) break L10;
    $73 = $i$0 + 42 | 0;
    $74 = ($storemerge >>> 0) / ($73 >>> 0) | 0;
    if ($74 >>> 0 < $73 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($74, $73) | 0)) break L10;
    $78 = $i$0 + 46 | 0;
    $79 = ($storemerge >>> 0) / ($78 >>> 0) | 0;
    if ($79 >>> 0 < $78 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($79, $78) | 0)) break L10;
    $83 = $i$0 + 52 | 0;
    $84 = ($storemerge >>> 0) / ($83 >>> 0) | 0;
    if ($84 >>> 0 < $83 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($84, $83) | 0)) break L10;
    $88 = $i$0 + 58 | 0;
    $89 = ($storemerge >>> 0) / ($88 >>> 0) | 0;
    if ($89 >>> 0 < $88 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($89, $88) | 0)) break L10;
    $93 = $i$0 + 60 | 0;
    $94 = ($storemerge >>> 0) / ($93 >>> 0) | 0;
    if ($94 >>> 0 < $93 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($94, $93) | 0)) break L10;
    $98 = $i$0 + 66 | 0;
    $99 = ($storemerge >>> 0) / ($98 >>> 0) | 0;
    if ($99 >>> 0 < $98 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($99, $98) | 0)) break L10;
    $103 = $i$0 + 70 | 0;
    $104 = ($storemerge >>> 0) / ($103 >>> 0) | 0;
    if ($104 >>> 0 < $103 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($104, $103) | 0)) break L10;
    $108 = $i$0 + 72 | 0;
    $109 = ($storemerge >>> 0) / ($108 >>> 0) | 0;
    if ($109 >>> 0 < $108 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($109, $108) | 0)) break L10;
    $113 = $i$0 + 78 | 0;
    $114 = ($storemerge >>> 0) / ($113 >>> 0) | 0;
    if ($114 >>> 0 < $113 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($114, $113) | 0)) break L10;
    $118 = $i$0 + 82 | 0;
    $119 = ($storemerge >>> 0) / ($118 >>> 0) | 0;
    if ($119 >>> 0 < $118 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($119, $118) | 0)) break L10;
    $123 = $i$0 + 88 | 0;
    $124 = ($storemerge >>> 0) / ($123 >>> 0) | 0;
    if ($124 >>> 0 < $123 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($124, $123) | 0)) break L10;
    $128 = $i$0 + 96 | 0;
    $129 = ($storemerge >>> 0) / ($128 >>> 0) | 0;
    if ($129 >>> 0 < $128 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($129, $128) | 0)) break L10;
    $133 = $i$0 + 100 | 0;
    $134 = ($storemerge >>> 0) / ($133 >>> 0) | 0;
    if ($134 >>> 0 < $133 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($134, $133) | 0)) break L10;
    $138 = $i$0 + 102 | 0;
    $139 = ($storemerge >>> 0) / ($138 >>> 0) | 0;
    if ($139 >>> 0 < $138 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($139, $138) | 0)) break L10;
    $143 = $i$0 + 106 | 0;
    $144 = ($storemerge >>> 0) / ($143 >>> 0) | 0;
    if ($144 >>> 0 < $143 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($144, $143) | 0)) break L10;
    $148 = $i$0 + 108 | 0;
    $149 = ($storemerge >>> 0) / ($148 >>> 0) | 0;
    if ($149 >>> 0 < $148 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($149, $148) | 0)) break L10;
    $153 = $i$0 + 112 | 0;
    $154 = ($storemerge >>> 0) / ($153 >>> 0) | 0;
    if ($154 >>> 0 < $153 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($154, $153) | 0)) break L10;
    $158 = $i$0 + 120 | 0;
    $159 = ($storemerge >>> 0) / ($158 >>> 0) | 0;
    if ($159 >>> 0 < $158 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($159, $158) | 0)) break L10;
    $163 = $i$0 + 126 | 0;
    $164 = ($storemerge >>> 0) / ($163 >>> 0) | 0;
    if ($164 >>> 0 < $163 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($164, $163) | 0)) break L10;
    $168 = $i$0 + 130 | 0;
    $169 = ($storemerge >>> 0) / ($168 >>> 0) | 0;
    if ($169 >>> 0 < $168 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($169, $168) | 0)) break L10;
    $173 = $i$0 + 136 | 0;
    $174 = ($storemerge >>> 0) / ($173 >>> 0) | 0;
    if ($174 >>> 0 < $173 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($174, $173) | 0)) break L10;
    $178 = $i$0 + 138 | 0;
    $179 = ($storemerge >>> 0) / ($178 >>> 0) | 0;
    if ($179 >>> 0 < $178 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($179, $178) | 0)) break L10;
    $183 = $i$0 + 142 | 0;
    $184 = ($storemerge >>> 0) / ($183 >>> 0) | 0;
    if ($184 >>> 0 < $183 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($184, $183) | 0)) break L10;
    $188 = $i$0 + 148 | 0;
    $189 = ($storemerge >>> 0) / ($188 >>> 0) | 0;
    if ($189 >>> 0 < $188 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($189, $188) | 0)) break L10;
    $193 = $i$0 + 150 | 0;
    $194 = ($storemerge >>> 0) / ($193 >>> 0) | 0;
    if ($194 >>> 0 < $193 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($194, $193) | 0)) break L10;
    $198 = $i$0 + 156 | 0;
    $199 = ($storemerge >>> 0) / ($198 >>> 0) | 0;
    if ($199 >>> 0 < $198 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($199, $198) | 0)) break L10;
    $203 = $i$0 + 162 | 0;
    $204 = ($storemerge >>> 0) / ($203 >>> 0) | 0;
    if ($204 >>> 0 < $203 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($204, $203) | 0)) break L10;
    $208 = $i$0 + 166 | 0;
    $209 = ($storemerge >>> 0) / ($208 >>> 0) | 0;
    if ($209 >>> 0 < $208 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($209, $208) | 0)) break L10;
    $213 = $i$0 + 168 | 0;
    $214 = ($storemerge >>> 0) / ($213 >>> 0) | 0;
    if ($214 >>> 0 < $213 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($214, $213) | 0)) break L10;
    $218 = $i$0 + 172 | 0;
    $219 = ($storemerge >>> 0) / ($218 >>> 0) | 0;
    if ($219 >>> 0 < $218 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($219, $218) | 0)) break L10;
    $223 = $i$0 + 178 | 0;
    $224 = ($storemerge >>> 0) / ($223 >>> 0) | 0;
    if ($224 >>> 0 < $223 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($224, $223) | 0)) break L10;
    $228 = $i$0 + 180 | 0;
    $229 = ($storemerge >>> 0) / ($228 >>> 0) | 0;
    if ($229 >>> 0 < $228 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($229, $228) | 0)) break L10;
    $233 = $i$0 + 186 | 0;
    $234 = ($storemerge >>> 0) / ($233 >>> 0) | 0;
    if ($234 >>> 0 < $233 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($234, $233) | 0)) break L10;
    $238 = $i$0 + 190 | 0;
    $239 = ($storemerge >>> 0) / ($238 >>> 0) | 0;
    if ($239 >>> 0 < $238 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($239, $238) | 0)) break L10;
    $243 = $i$0 + 192 | 0;
    $244 = ($storemerge >>> 0) / ($243 >>> 0) | 0;
    if ($244 >>> 0 < $243 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($244, $243) | 0)) break L10;
    $248 = $i$0 + 196 | 0;
    $249 = ($storemerge >>> 0) / ($248 >>> 0) | 0;
    if ($249 >>> 0 < $248 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($249, $248) | 0)) break L10;
    $253 = $i$0 + 198 | 0;
    $254 = ($storemerge >>> 0) / ($253 >>> 0) | 0;
    if ($254 >>> 0 < $253 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($254, $253) | 0)) break L10;
    $258 = $i$0 + 208 | 0;
    $259 = ($storemerge >>> 0) / ($258 >>> 0) | 0;
    if ($259 >>> 0 < $258 >>> 0) {
     $storemerge$lcssa = $storemerge;
     label = 105;
     break L4;
    }
    if (($storemerge | 0) == (Math_imul($259, $258) | 0)) break; else {
     $i$0 = $i$0 + 210 | 0;
     label = 8;
    }
   } while (0);
   $264 = $in$0 + 1 | 0;
   $265 = ($264 | 0) == 48;
   $$ = $265 ? 0 : $264;
   $$k0$0 = ($265 & 1) + $k0$0 | 0;
   $in$0 = $$;
   $k0$0 = $$k0$0;
   $storemerge = (HEAP32[7852 + ($$ << 2) >> 2] | 0) + ($$k0$0 * 210 | 0) | 0;
  }
  if ((label | 0) == 105) {
   HEAP32[$1 >> 2] = $storemerge$lcssa;
   $$0 = $storemerge$lcssa;
   break;
  } else if ((label | 0) == 106) {
   HEAP32[$1 >> 2] = $storemerge$lcssa15;
   $$0 = $storemerge$lcssa15;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule22AssignLinesToFunctionsEv($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$lcssa39 = 0, $$lcssa40 = 0, $$lcssa73 = 0, $$pre = 0, $0 = 0, $10 = 0, $101 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $112 = 0, $113 = 0, $115 = 0, $118 = 0, $12 = 0, $124 = 0, $126 = 0, $129 = 0, $13 = 0, $136 = 0, $138 = 0, $14 = 0, $141 = 0, $142 = 0, $144 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $152 = 0, $153 = 0, $155 = 0, $156 = 0, $16 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $170 = 0, $174 = 0, $175 = 0, $18 = 0, $186 = 0, $192 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $203 = 0, $204 = 0, $206 = 0, $209 = 0, $210 = 0, $212 = 0, $215 = 0, $216 = 0, $217 = 0, $22 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $229 = 0, $231 = 0, $234 = 0, $24 = 0, $243 = 0, $249 = 0, $252 = 0, $264 = 0, $27 = 0, $270 = 0, $277 = 0, $279 = 0, $28 = 0, $282 = 0, $283 = 0, $285 = 0, $288 = 0, $289 = 0, $291 = 0, $294 = 0, $295 = 0, $296 = 0, $30 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $309 = 0, $311 = 0, $314 = 0, $319 = 0, $323 = 0, $329 = 0, $33 = 0, $336 = 0, $338 = 0, $340 = 0, $342 = 0, $343 = 0, $344 = 0, $346 = 0, $348 = 0, $351 = 0, $357 = 0, $359 = 0, $362 = 0, $363 = 0, $364 = 0, $374 = 0, $375 = 0, $376 = 0, $378 = 0, $379 = 0, $38 = 0, $381 = 0, $384 = 0, $390 = 0, $392 = 0, $395 = 0, $396 = 0, $397 = 0, $404 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $42 = 0, $43 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $64 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $9 = 0, $90 = 0, $93 = 0, $99 = 0, $func$0 = 0, $func$0$ph = 0, $l = 0, $last_function_cited$0 = 0, $last_function_cited$2 = 0, $last_line_cited$0 = 0, $last_line_cited$1 = 0, $last_line_cited$2 = 0, $last_line_used$0 = 0, $last_line_used$1 = 0, $line$0 = 0, $line$0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 24 | 0;
 $l = sp;
 $2 = HEAP32[$this + 8 >> 2] | 0;
 if (!$2) ___assert_fail(15030, 21517, 119, 26244);
 $5 = HEAP32[$2 + 4 >> 2] | 0;
 $6 = $2 + 12 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $2 + 16 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 HEAP32[$0 >> 2] = 26;
 __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEvT0_SB_T_($7, $9, $0);
 $10 = $this + 32 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $this + 36 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 HEAP32[$0 >> 2] = 27;
 __ZNSt3__16__sortIRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEvT0_SA_T_($11, $13, $0);
 $14 = HEAP32[$6 >> 2] | 0;
 $15 = HEAP32[$10 >> 2] | 0;
 $16 = $15;
 $18 = ($14 | 0) == (HEAP32[$8 >> 2] | 0);
 $$pre = HEAP32[$12 >> 2] | 0;
 if ($18) {
  $42 = $$pre;
  label = 6;
 } else if (($15 | 0) == ($$pre | 0)) {
  $42 = $15;
  label = 6;
 } else {
  $20 = HEAP32[$14 >> 2] | 0;
  $22 = $15;
  $24 = HEAP32[$22 >> 2] | 0;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $20 + 16 | 0;
  $30 = HEAP32[$28 >> 2] | 0;
  $33 = HEAP32[$28 + 4 >> 2] | 0;
  $38 = $27 >>> 0 < $33 >>> 0 | ($27 | 0) == ($33 | 0) & $24 >>> 0 < $30 >>> 0;
  $412 = $38 ? $24 : $30;
  $413 = $38 ? $27 : $33;
  $func$0$ph = $20;
  $line$0$ph = $15;
 }
 do if ((label | 0) == 6) {
  if (($15 | 0) != ($42 | 0)) {
   $43 = $15;
   $412 = HEAP32[$43 >> 2] | 0;
   $413 = HEAP32[$43 + 4 >> 2] | 0;
   $func$0$ph = 0;
   $line$0$ph = $15;
   break;
  }
  if ($18) {
   STACKTOP = sp;
   return;
  } else {
   $49 = HEAP32[$14 >> 2] | 0;
   $51 = $49 + 16 | 0;
   $412 = HEAP32[$51 >> 2] | 0;
   $413 = HEAP32[$51 + 4 >> 2] | 0;
   $func$0$ph = $49;
   $line$0$ph = 0;
   break;
  }
 } while (0);
 $57 = $l + 8 | 0;
 $342 = $14;
 $376 = $16;
 $69 = $413;
 $71 = $412;
 $func$0 = $func$0$ph;
 $last_function_cited$0 = 0;
 $last_line_cited$0 = 0;
 $last_line_used$0 = 0;
 $line$0 = $line$0$ph;
 while (1) {
  $58 = ($func$0 | 0) != 0;
  $59 = ($line$0 | 0) != 0;
  if (!($58 | $59)) {
   label = 61;
   break;
  }
  if ($58) {
   $62 = $func$0 + 16 | 0;
   $64 = HEAP32[$62 >> 2] | 0;
   $67 = HEAP32[$62 + 4 >> 2] | 0;
   if (!($69 >>> 0 < $67 >>> 0 | ($69 | 0) == ($67 | 0) & $71 >>> 0 < $64 >>> 0)) {
    $75 = $func$0 + 24 | 0;
    $77 = HEAP32[$75 >> 2] | 0;
    $80 = HEAP32[$75 + 4 >> 2] | 0;
    $81 = _i64Subtract($71 | 0, $69 | 0, $64 | 0, $67 | 0) | 0;
    $82 = tempRet0;
    if (!($82 >>> 0 < $80 >>> 0 | ($82 | 0) == ($80 | 0) & $81 >>> 0 < $77 >>> 0)) {
     label = 15;
     break;
    }
   }
  }
  if ($59) {
   $88 = $line$0;
   $90 = HEAP32[$88 >> 2] | 0;
   $93 = HEAP32[$88 + 4 >> 2] | 0;
   if (!($69 >>> 0 < $93 >>> 0 | ($69 | 0) == ($93 | 0) & $71 >>> 0 < $90 >>> 0)) {
    $99 = $line$0 + 8 | 0;
    $101 = HEAP32[$99 >> 2] | 0;
    $104 = HEAP32[$99 + 4 >> 2] | 0;
    $105 = _i64Subtract($71 | 0, $69 | 0, $90 | 0, $93 | 0) | 0;
    $106 = tempRet0;
    if (!($106 >>> 0 < $104 >>> 0 | ($106 | 0) == ($104 | 0) & $105 >>> 0 < $101 >>> 0)) {
     label = 19;
     break;
    }
   }
  }
  do if ($58) {
   $112 = $func$0 + 16 | 0;
   $113 = $112;
   $115 = HEAP32[$113 >> 2] | 0;
   $118 = HEAP32[$113 + 4 >> 2] | 0;
   if ($118 >>> 0 > $69 >>> 0 | ($118 | 0) == ($69 | 0) & $115 >>> 0 > $71 >>> 0) label = 33; else {
    if ($59) {
     $124 = $line$0;
     $126 = HEAP32[$124 >> 2] | 0;
     $129 = HEAP32[$124 + 4 >> 2] | 0;
     if (!($129 >>> 0 > $69 >>> 0 | ($129 | 0) == ($69 | 0) & $126 >>> 0 > $71 >>> 0)) {
      $136 = $func$0 + 24 | 0;
      $138 = HEAP32[$136 >> 2] | 0;
      $141 = HEAP32[$136 + 4 >> 2] | 0;
      $142 = _i64Subtract($115 | 0, $118 | 0, $71 | 0, $69 | 0) | 0;
      $144 = _i64Add($138 | 0, $141 | 0, $142 | 0, tempRet0 | 0) | 0;
      $145 = tempRet0;
      $147 = $line$0 + 8 | 0;
      $149 = HEAP32[$147 >> 2] | 0;
      $152 = HEAP32[$147 + 4 >> 2] | 0;
      $153 = _i64Subtract($126 | 0, $129 | 0, $71 | 0, $69 | 0) | 0;
      $155 = _i64Add($149 | 0, $152 | 0, $153 | 0, tempRet0 | 0) | 0;
      $156 = tempRet0;
      $161 = $156 >>> 0 < $145 >>> 0 | ($156 | 0) == ($145 | 0) & $155 >>> 0 < $144 >>> 0;
      $162 = $161 ? $155 : $144;
      $163 = $161 ? $156 : $145;
      $164 = _i64Add($162 | 0, $163 | 0, $71 | 0, $69 | 0) | 0;
      $165 = tempRet0;
      HEAP32[$l >> 2] = HEAP32[$line$0 >> 2];
      HEAP32[$l + 4 >> 2] = HEAP32[$line$0 + 4 >> 2];
      HEAP32[$l + 8 >> 2] = HEAP32[$line$0 + 8 >> 2];
      HEAP32[$l + 12 >> 2] = HEAP32[$line$0 + 12 >> 2];
      HEAP32[$l + 16 >> 2] = HEAP32[$line$0 + 16 >> 2];
      HEAP32[$l + 20 >> 2] = HEAP32[$line$0 + 20 >> 2];
      $166 = $l;
      HEAP32[$166 >> 2] = $71;
      HEAP32[$166 + 4 >> 2] = $69;
      $170 = $57;
      HEAP32[$170 >> 2] = $162;
      HEAP32[$170 + 4 >> 2] = $163;
      $174 = $func$0 + 44 | 0;
      $175 = HEAP32[$174 >> 2] | 0;
      if (($175 | 0) == (HEAP32[$func$0 + 48 >> 2] | 0)) {
       __ZNSt3__16vectorIN15google_breakpad6Module4LineENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($func$0 + 40 | 0, $l);
       $336 = $164;
       $338 = $165;
       $last_function_cited$2 = $last_function_cited$0;
       $last_line_cited$2 = $last_line_cited$0;
       $last_line_used$1 = $line$0;
       break;
      } else {
       HEAP32[$175 >> 2] = HEAP32[$l >> 2];
       HEAP32[$175 + 4 >> 2] = HEAP32[$l + 4 >> 2];
       HEAP32[$175 + 8 >> 2] = HEAP32[$l + 8 >> 2];
       HEAP32[$175 + 12 >> 2] = HEAP32[$l + 12 >> 2];
       HEAP32[$175 + 16 >> 2] = HEAP32[$l + 16 >> 2];
       HEAP32[$175 + 20 >> 2] = HEAP32[$l + 20 >> 2];
       HEAP32[$174 >> 2] = (HEAP32[$174 >> 2] | 0) + 24;
       $336 = $164;
       $338 = $165;
       $last_function_cited$2 = $last_function_cited$0;
       $last_line_cited$2 = $last_line_cited$0;
       $last_line_used$1 = $line$0;
       break;
      }
     }
    }
    if (($func$0 | 0) != ($last_function_cited$0 | 0)) FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 63]($5, $func$0);
    if ($59) {
     $198 = $line$0;
     $200 = HEAP32[$198 >> 2] | 0;
     $203 = HEAP32[$198 + 4 >> 2] | 0;
     $204 = $112;
     $206 = HEAP32[$204 >> 2] | 0;
     $209 = HEAP32[$204 + 4 >> 2] | 0;
     $210 = $func$0 + 24 | 0;
     $212 = HEAP32[$210 >> 2] | 0;
     $215 = HEAP32[$210 + 4 >> 2] | 0;
     $216 = _i64Subtract($200 | 0, $203 | 0, $206 | 0, $209 | 0) | 0;
     $217 = tempRet0;
     if ($217 >>> 0 < $215 >>> 0 | ($217 | 0) == ($215 | 0) & $216 >>> 0 < $212 >>> 0) {
      $336 = $200;
      $338 = $203;
      $last_function_cited$2 = $func$0;
      $last_line_cited$2 = $last_line_cited$0;
      $last_line_used$1 = $last_line_used$0;
      break;
     } else {
      $223 = $212;
      $224 = $215;
      $225 = $206;
      $226 = $209;
     }
    } else {
     $186 = $112;
     $192 = $func$0 + 24 | 0;
     $223 = HEAP32[$192 >> 2] | 0;
     $224 = HEAP32[$192 + 4 >> 2] | 0;
     $225 = HEAP32[$186 >> 2] | 0;
     $226 = HEAP32[$186 + 4 >> 2] | 0;
    }
    $227 = _i64Add($223 | 0, $224 | 0, $225 | 0, $226 | 0) | 0;
    $336 = $227;
    $338 = tempRet0;
    $last_function_cited$2 = $func$0;
    $last_line_cited$2 = $last_line_cited$0;
    $last_line_used$1 = $last_line_used$0;
   }
  } else label = 33; while (0);
  L44 : do if ((label | 0) == 33) {
   label = 0;
   do if ($59) {
    $229 = $line$0;
    $231 = HEAP32[$229 >> 2] | 0;
    $234 = HEAP32[$229 + 4 >> 2] | 0;
    if ($69 >>> 0 < $234 >>> 0 | ($69 | 0) == ($234 | 0) & $71 >>> 0 < $231 >>> 0) {
     if (!$58) break;
     $309 = $func$0 + 16 | 0;
     $311 = HEAP32[$309 >> 2] | 0;
     $314 = HEAP32[$309 + 4 >> 2] | 0;
     $319 = $234 >>> 0 < $314 >>> 0 | ($234 | 0) == ($314 | 0) & $231 >>> 0 < $311 >>> 0;
     $336 = $319 ? $231 : $311;
     $338 = $319 ? $234 : $314;
     $last_function_cited$2 = $last_function_cited$0;
     $last_line_cited$2 = $last_line_cited$0;
     $last_line_used$1 = $last_line_used$0;
     break L44;
    }
    do if (($line$0 | 0) == ($last_line_cited$0 | 0)) $last_line_cited$1 = $last_line_cited$0; else {
     if ($58 & ($line$0 | 0) == ($last_line_used$0 | 0)) {
      $243 = $func$0 + 16 | 0;
      $249 = _i64Subtract(HEAP32[$243 >> 2] | 0, HEAP32[$243 + 4 >> 2] | 0, $231 | 0, $234 | 0) | 0;
      $252 = $line$0 + 8 | 0;
      if (($249 | 0) == (HEAP32[$252 >> 2] | 0) ? (tempRet0 | 0) == (HEAP32[$252 + 4 >> 2] | 0) : 0) {
       $last_line_cited$1 = $last_line_cited$0;
       break;
      }
     }
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 40 >> 2] & 63]($5, $line$0);
     $last_line_cited$1 = $line$0;
    } while (0);
    if ($58) {
     $277 = $func$0 + 16 | 0;
     $279 = HEAP32[$277 >> 2] | 0;
     $282 = HEAP32[$277 + 4 >> 2] | 0;
     $283 = $line$0;
     $285 = HEAP32[$283 >> 2] | 0;
     $288 = HEAP32[$283 + 4 >> 2] | 0;
     $289 = $line$0 + 8 | 0;
     $291 = HEAP32[$289 >> 2] | 0;
     $294 = HEAP32[$289 + 4 >> 2] | 0;
     $295 = _i64Subtract($279 | 0, $282 | 0, $285 | 0, $288 | 0) | 0;
     $296 = tempRet0;
     if ($296 >>> 0 < $294 >>> 0 | ($296 | 0) == ($294 | 0) & $295 >>> 0 < $291 >>> 0) {
      $336 = $279;
      $338 = $282;
      $last_function_cited$2 = $last_function_cited$0;
      $last_line_cited$2 = $last_line_cited$1;
      $last_line_used$1 = $last_line_used$0;
      break L44;
     } else {
      $302 = $291;
      $303 = $294;
      $304 = $285;
      $305 = $288;
     }
    } else {
     $264 = $line$0;
     $270 = $line$0 + 8 | 0;
     $302 = HEAP32[$270 >> 2] | 0;
     $303 = HEAP32[$270 + 4 >> 2] | 0;
     $304 = HEAP32[$264 >> 2] | 0;
     $305 = HEAP32[$264 + 4 >> 2] | 0;
    }
    $306 = _i64Add($302 | 0, $303 | 0, $304 | 0, $305 | 0) | 0;
    $336 = $306;
    $338 = tempRet0;
    $last_function_cited$2 = $last_function_cited$0;
    $last_line_cited$2 = $last_line_cited$1;
    $last_line_used$1 = $last_line_used$0;
    break L44;
   } else if ($58) {
    $323 = $func$0 + 16 | 0;
    $336 = HEAP32[$323 >> 2] | 0;
    $338 = HEAP32[$323 + 4 >> 2] | 0;
    $last_function_cited$2 = $last_function_cited$0;
    $last_line_cited$2 = $last_line_cited$0;
    $last_line_used$1 = $last_line_used$0;
    break L44;
   } while (0);
   $329 = $line$0;
   $336 = HEAP32[$329 >> 2] | 0;
   $338 = HEAP32[$329 + 4 >> 2] | 0;
   $last_function_cited$2 = $last_function_cited$0;
   $last_line_cited$2 = $last_line_cited$0;
   $last_line_used$1 = $last_line_used$0;
  } while (0);
  if (($336 | 0) == 0 & ($338 | 0) == 0) {
   label = 61;
   break;
  }
  $340 = HEAP32[$8 >> 2] | 0;
  L67 : do if (($342 | 0) == ($340 | 0)) {
   $$lcssa = $342;
   label = 53;
  } else {
   $344 = $342;
   while (1) {
    $343 = HEAP32[$344 >> 2] | 0;
    $346 = $343 + 16 | 0;
    $348 = HEAP32[$346 >> 2] | 0;
    $351 = HEAP32[$346 + 4 >> 2] | 0;
    if ($338 >>> 0 < $351 >>> 0 | ($338 | 0) == ($351 | 0) & $336 >>> 0 < $348 >>> 0) {
     $$lcssa = $344;
     label = 53;
     break L67;
    }
    $357 = $343 + 24 | 0;
    $359 = HEAP32[$357 >> 2] | 0;
    $362 = HEAP32[$357 + 4 >> 2] | 0;
    $363 = _i64Subtract($336 | 0, $338 | 0, $348 | 0, $351 | 0) | 0;
    $364 = tempRet0;
    if ($364 >>> 0 < $362 >>> 0 | ($364 | 0) == ($362 | 0) & $363 >>> 0 < $359 >>> 0) {
     $$lcssa = $344;
     label = 53;
     break L67;
    }
    $344 = $344 + 4 | 0;
    if (($344 | 0) == ($340 | 0)) {
     $$lcssa73 = $340;
     $414 = 0;
     break;
    }
   }
  } while (0);
  if ((label | 0) == 53) {
   label = 0;
   if (($$lcssa | 0) == ($340 | 0)) {
    $$lcssa73 = $$lcssa;
    $414 = 0;
   } else {
    $$lcssa73 = $$lcssa;
    $414 = HEAP32[$$lcssa >> 2] | 0;
   }
  }
  $374 = HEAP32[$12 >> 2] | 0;
  $375 = $376;
  L76 : do if (($375 | 0) == ($374 | 0)) {
   $$lcssa39 = $376;
   $$lcssa40 = $374;
  } else {
   $379 = $375;
   $415 = $376;
   while (1) {
    $378 = $379;
    $381 = HEAP32[$378 >> 2] | 0;
    $384 = HEAP32[$378 + 4 >> 2] | 0;
    if ($338 >>> 0 < $384 >>> 0 | ($338 | 0) == ($384 | 0) & $336 >>> 0 < $381 >>> 0) {
     $$lcssa39 = $415;
     $$lcssa40 = $379;
     break L76;
    }
    $390 = $379 + 8 | 0;
    $392 = HEAP32[$390 >> 2] | 0;
    $395 = HEAP32[$390 + 4 >> 2] | 0;
    $396 = _i64Subtract($336 | 0, $338 | 0, $381 | 0, $384 | 0) | 0;
    $397 = tempRet0;
    if ($397 >>> 0 < $395 >>> 0 | ($397 | 0) == ($395 | 0) & $396 >>> 0 < $392 >>> 0) {
     $$lcssa39 = $415;
     $$lcssa40 = $379;
     break L76;
    }
    $379 = $379 + 24 | 0;
    $404 = $379;
    if (($379 | 0) == ($374 | 0)) {
     $$lcssa39 = $404;
     $$lcssa40 = $374;
     break;
    } else $415 = $404;
   }
  } while (0);
  if ($338 >>> 0 > $69 >>> 0 | ($338 | 0) == ($69 | 0) & $336 >>> 0 > $71 >>> 0) {
   $342 = $$lcssa73;
   $376 = $$lcssa39;
   $69 = $338;
   $71 = $336;
   $func$0 = $414;
   $last_function_cited$0 = $last_function_cited$2;
   $last_line_cited$0 = $last_line_cited$2;
   $last_line_used$0 = $last_line_used$1;
   $line$0 = ($$lcssa40 | 0) != ($374 | 0) ? $$lcssa40 : 0;
  } else {
   label = 60;
   break;
  }
 }
 if ((label | 0) == 15) ___assert_fail(15977, 16036, 933, 16069); else if ((label | 0) == 19) ___assert_fail(16092, 16036, 934, 16069); else if ((label | 0) == 60) ___assert_fail(16151, 16036, 1028, 16069); else if ((label | 0) == 61) {
  STACKTOP = sp;
  return;
 }
}

function __ZN12dwarf2reader8LineInfo16ProcessOneOpcodeEPNS_10ByteReaderEPNS_15LineInfoHandlerERKNS_14LineInfoHeaderEPKcPNS_16LineStateMachineEPjjPb($reader, $handler, $header, $start, $lsm, $len, $pc, $lsm_passes_pc) {
 $reader = $reader | 0;
 $handler = $handler | 0;
 $header = $header | 0;
 $start = $start | 0;
 $lsm = $lsm | 0;
 $len = $len | 0;
 $pc = $pc | 0;
 $lsm_passes_pc = $lsm_passes_pc | 0;
 var $$0 = 0, $$0$i = 0, $$0$i10 = 0, $$0$i15 = 0, $$0$i19 = 0, $$0$i24 = 0, $$0$i29 = 0, $$0$i34 = 0, $$0$i39 = 0, $$0$i45 = 0, $$0$in$i = 0, $$0170 = 0, $$field = 0, $$field2 = 0, $$lcssa = 0, $$lcssa144 = 0, $$lcssa146 = 0, $$lcssa149 = 0, $$lcssa151 = 0, $$lcssa153 = 0, $$lcssa155 = 0, $$phi$trans$insert = 0, $$phi$trans$insert88 = 0, $$phi$trans$insert90 = 0, $$phi$trans$insert92 = 0, $0 = 0, $1 = 0, $101 = 0, $108 = 0, $110 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $122 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $133 = 0, $145 = 0, $147 = 0, $149 = 0, $150 = 0, $152 = 0, $157 = 0, $161 = 0, $163 = 0, $165 = 0, $166 = 0, $168 = 0, $17 = 0, $174 = 0, $175 = 0, $179 = 0, $181 = 0, $194 = 0, $196 = 0, $199 = 0, $2 = 0, $205 = 0, $206 = 0, $212 = 0, $214 = 0, $22 = 0, $226 = 0, $228 = 0, $230 = 0, $233 = 0, $239 = 0, $24 = 0, $240 = 0, $246 = 0, $248 = 0, $254 = 0, $255 = 0, $257 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $267 = 0, $269 = 0, $270 = 0, $271 = 0, $275 = 0, $277 = 0, $278 = 0, $283 = 0, $288 = 0, $29 = 0, $292 = 0, $298 = 0, $3 = 0, $301 = 0, $302 = 0, $304 = 0, $306 = 0, $307 = 0, $309 = 0, $315 = 0, $316 = 0, $318 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $327 = 0, $330 = 0, $331 = 0, $333 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $343 = 0, $347 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $355 = 0, $359 = 0, $36 = 0, $361 = 0, $364 = 0, $367 = 0, $42 = 0, $44 = 0, $48 = 0, $5 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $71 = 0, $74 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $97 = 0, $99 = 0, $i$071 = 0, $num_read$0$i = 0, $num_read$0$i$lcssa = 0, $num_read$0$i14 = 0, $num_read$0$i14$lcssa = 0, $num_read$0$i17 = 0, $num_read$0$i17$lcssa = 0, $num_read$0$i22 = 0, $num_read$0$i22$lcssa = 0, $num_read$0$i27 = 0, $num_read$0$i32 = 0, $num_read$0$i37 = 0, $num_read$0$i43 = 0, $num_read$0$i43$lcssa = 0, $num_read$0$i8 = 0, $oplen$069 = 0, $oplen$1 = 0, $result$1$i$off0 = 0, $shift$0$i = 0, $shift$0$i13 = 0, $shift$0$i18 = 0, $shift$0$i23 = 0, $shift$0$i28 = 0, $shift$0$i33 = 0, $shift$0$i38 = 0, $shift$0$i44 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP8[$start >> 0] | 0;
 $2 = $start + 1 | 0;
 $3 = $1 & 255;
 $5 = HEAP8[$header + 28 >> 0] | 0;
 $6 = $5 & 255;
 if (($1 & 255) >= ($5 & 255)) {
  $9 = $3 - $6 & 255;
  $12 = HEAPU8[$header + 27 >> 0] | 0;
  $17 = Math_imul(HEAPU8[$header + 24 >> 0] | 0, ($9 >>> 0) / ($12 >>> 0) | 0) | 0;
  $22 = (HEAP8[$header + 26 >> 0] | 0) + (($9 >>> 0) % ($12 >>> 0) | 0) | 0;
  $$phi$trans$insert = $lsm + 8 | 0;
  $24 = $$phi$trans$insert;
  $26 = HEAP32[$24 >> 2] | 0;
  $29 = HEAP32[$24 + 4 >> 2] | 0;
  if ($lsm_passes_pc) {
   $35 = _i64Add($26 | 0, $29 | 0, $17 | 0, 0) | 0;
   $36 = tempRet0;
   if (($29 >>> 0 < 0 | ($29 | 0) == 0 & $26 >>> 0 <= $pc >>> 0) & (0 < $36 >>> 0 | 0 == ($36 | 0) & $pc >>> 0 < $35 >>> 0)) HEAP8[$lsm_passes_pc >> 0] = 1;
  }
  $42 = _i64Add($26 | 0, $29 | 0, $17 | 0, 0) | 0;
  $44 = $$phi$trans$insert;
  HEAP32[$44 >> 2] = $42;
  HEAP32[$44 + 4 >> 2] = tempRet0;
  $48 = $lsm + 16 | 0;
  HEAP32[$48 >> 2] = $22 + (HEAP32[$48 >> 2] | 0);
  HEAP8[$lsm + 25 >> 0] = 1;
  HEAP32[$len >> 2] = 1;
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 L9 : do switch ($3 | 0) {
 case 1:
  {
   HEAP8[$lsm + 25 >> 0] = 0;
   HEAP32[$len >> 2] = 1;
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 2:
  {
   $$0$i = $2;
   $61 = 0;
   $63 = 0;
   $num_read$0$i = 0;
   $shift$0$i = 0;
   while (1) {
    $56 = HEAPU8[$$0$i >> 0] | 0;
    $58 = _bitshift64Shl($56 & 127 | 0, 0, $shift$0$i | 0) | 0;
    $60 = $58 | $61;
    $62 = tempRet0 | $63;
    if (!($56 & 128)) {
     $83 = $60;
     $84 = $62;
     $num_read$0$i$lcssa = $num_read$0$i;
     break;
    } else {
     $$0$i = $$0$i + 1 | 0;
     $61 = $60;
     $63 = $62;
     $num_read$0$i = $num_read$0$i + 1 | 0;
     $shift$0$i = $shift$0$i + 7 | 0;
    }
   }
   $67 = $num_read$0$i$lcssa + 2 | 0;
   $$phi$trans$insert92 = $lsm + 8 | 0;
   $69 = $$phi$trans$insert92;
   $71 = HEAP32[$69 >> 2] | 0;
   $74 = HEAP32[$69 + 4 >> 2] | 0;
   if ($lsm_passes_pc) if (!($74 >>> 0 > 0 | ($74 | 0) == 0 & $71 >>> 0 > $pc >>> 0)) {
    $85 = ___muldi3(HEAPU8[$header + 24 >> 0] | 0, 0, $83 | 0, $84 | 0) | 0;
    $87 = _i64Add($85 | 0, tempRet0 | 0, $71 | 0, $74 | 0) | 0;
    $88 = tempRet0;
    if (0 < $88 >>> 0 | 0 == ($88 | 0) & $pc >>> 0 < $87 >>> 0) HEAP8[$lsm_passes_pc >> 0] = 1;
   }
   $97 = ___muldi3(HEAPU8[$header + 24 >> 0] | 0, 0, $83 | 0, $84 | 0) | 0;
   $99 = _i64Add($97 | 0, tempRet0 | 0, $71 | 0, $74 | 0) | 0;
   $101 = $$phi$trans$insert92;
   HEAP32[$101 >> 2] = $99;
   HEAP32[$101 + 4 >> 2] = tempRet0;
   $oplen$1 = $67;
   break;
  }
 case 3:
  {
   $$0$i15 = $2;
   $113 = 0;
   $115 = 0;
   $num_read$0$i14 = 0;
   $shift$0$i13 = 0;
   while (1) {
    $108 = HEAPU8[$$0$i15 >> 0] | 0;
    $110 = _bitshift64Shl($108 & 127 | 0, 0, $shift$0$i13 | 0) | 0;
    $112 = $110 | $113;
    $114 = tempRet0 | $115;
    $116 = $shift$0$i13 + 7 | 0;
    if (!($108 & 128)) {
     $$lcssa144 = $108;
     $$lcssa146 = $116;
     $125 = $112;
     $126 = $114;
     $num_read$0$i14$lcssa = $num_read$0$i14;
     break;
    } else {
     $$0$i15 = $$0$i15 + 1 | 0;
     $113 = $112;
     $115 = $114;
     $num_read$0$i14 = $num_read$0$i14 + 1 | 0;
     $shift$0$i13 = $116;
    }
   }
   if ($$lcssa146 >>> 0 > 63 | ($$lcssa144 & 64 | 0) == 0) $result$1$i$off0 = $125; else {
    $122 = _bitshift64Shl(-1, -1, $$lcssa146 | 0) | 0;
    $126 | tempRet0;
    $result$1$i$off0 = $125 | $122;
   }
   $127 = $num_read$0$i14$lcssa + 2 | 0;
   $128 = $lsm + 16 | 0;
   HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + $result$1$i$off0;
   if (!$lsm_passes_pc) $oplen$1 = $127; else {
    $133 = $lsm + 8 | 0;
    if ((HEAP32[$133 + 4 >> 2] | 0) == 0 ? (HEAP32[$133 >> 2] | 0) == ($pc | 0) : 0) {
     HEAP8[$lsm_passes_pc >> 0] = 1;
     $oplen$1 = $127;
    } else $oplen$1 = $127;
   }
   break;
  }
 case 4:
  {
   $$0$i19 = $2;
   $150 = 0;
   $152 = 0;
   $num_read$0$i17 = 0;
   $shift$0$i18 = 0;
   while (1) {
    $145 = HEAPU8[$$0$i19 >> 0] | 0;
    $147 = _bitshift64Shl($145 & 127 | 0, 0, $shift$0$i18 | 0) | 0;
    $149 = $147 | $150;
    if (!($145 & 128)) {
     $157 = $149;
     $num_read$0$i17$lcssa = $num_read$0$i17;
     break;
    } else {
     $$0$i19 = $$0$i19 + 1 | 0;
     $150 = $149;
     $152 = tempRet0 | $152;
     $num_read$0$i17 = $num_read$0$i17 + 1 | 0;
     $shift$0$i18 = $shift$0$i18 + 7 | 0;
    }
   }
   HEAP32[$lsm >> 2] = $157;
   $oplen$1 = $num_read$0$i17$lcssa + 2 | 0;
   break;
  }
 case 5:
  {
   $$0$i24 = $2;
   $166 = 0;
   $168 = 0;
   $num_read$0$i22 = 0;
   $shift$0$i23 = 0;
   while (1) {
    $161 = HEAPU8[$$0$i24 >> 0] | 0;
    $163 = _bitshift64Shl($161 & 127 | 0, 0, $shift$0$i23 | 0) | 0;
    $165 = $163 | $166;
    if (!($161 & 128)) {
     $174 = $165;
     $num_read$0$i22$lcssa = $num_read$0$i22;
     break;
    } else {
     $$0$i24 = $$0$i24 + 1 | 0;
     $166 = $165;
     $168 = tempRet0 | $168;
     $num_read$0$i22 = $num_read$0$i22 + 1 | 0;
     $shift$0$i23 = $shift$0$i23 + 7 | 0;
    }
   }
   HEAP32[$lsm + 20 >> 2] = $174;
   $oplen$1 = $num_read$0$i22$lcssa + 2 | 0;
   break;
  }
 case 6:
  {
   $175 = $lsm + 24 | 0;
   HEAP8[$175 >> 0] = HEAP8[$175 >> 0] ^ 1;
   $oplen$1 = 1;
   break;
  }
 case 7:
  {
   HEAP8[$lsm + 25 >> 0] = 1;
   $oplen$1 = 1;
   break;
  }
 case 9:
  {
   $179 = HEAP8[$2 >> 0] | 0;
   $181 = HEAP8[$start + 2 >> 0] | 0;
   if ((HEAP32[$reader + 20 >> 2] | 0) == 1) $$0$in$i = ($181 & 255) << 8 | $179 & 255; else $$0$in$i = $181 & 255 | ($179 & 255) << 8;
   $$phi$trans$insert90 = $lsm + 8 | 0;
   $194 = $$phi$trans$insert90;
   $196 = HEAP32[$194 >> 2] | 0;
   $199 = HEAP32[$194 + 4 >> 2] | 0;
   if ($lsm_passes_pc) if (!($199 >>> 0 > 0 | ($199 | 0) == 0 & $196 >>> 0 > $pc >>> 0)) {
    $205 = _i64Add($196 | 0, $199 | 0, $$0$in$i & 65535 | 0, 0) | 0;
    $206 = tempRet0;
    if (0 < $206 >>> 0 | 0 == ($206 | 0) & $pc >>> 0 < $205 >>> 0) HEAP8[$lsm_passes_pc >> 0] = 1;
   }
   $212 = _i64Add($196 | 0, $199 | 0, $$0$in$i & 65535 | 0, 0) | 0;
   $214 = $$phi$trans$insert90;
   HEAP32[$214 >> 2] = $212;
   HEAP32[$214 + 4 >> 2] = tempRet0;
   $oplen$1 = 3;
   break;
  }
 case 8:
  {
   $226 = Math_imul((($6 ^ 255) >>> 0) / ((HEAPU8[$header + 27 >> 0] | 0) >>> 0) | 0, HEAPU8[$header + 24 >> 0] | 0) | 0;
   $$phi$trans$insert88 = $lsm + 8 | 0;
   $228 = $$phi$trans$insert88;
   $230 = HEAP32[$228 >> 2] | 0;
   $233 = HEAP32[$228 + 4 >> 2] | 0;
   if ($lsm_passes_pc) {
    $239 = _i64Add($230 | 0, $233 | 0, $226 | 0, 0) | 0;
    $240 = tempRet0;
    if (($233 >>> 0 < 0 | ($233 | 0) == 0 & $230 >>> 0 <= $pc >>> 0) & (0 < $240 >>> 0 | 0 == ($240 | 0) & $pc >>> 0 < $239 >>> 0)) HEAP8[$lsm_passes_pc >> 0] = 1;
   }
   $246 = _i64Add($230 | 0, $233 | 0, $226 | 0, 0) | 0;
   $248 = $$phi$trans$insert88;
   HEAP32[$248 >> 2] = $246;
   HEAP32[$248 + 4 >> 2] = tempRet0;
   $oplen$1 = 1;
   break;
  }
 case 0:
  {
   $$0$i45 = $2;
   $260 = 0;
   $262 = 0;
   $num_read$0$i43 = 0;
   $shift$0$i44 = 0;
   while (1) {
    $254 = $num_read$0$i43 + 1 | 0;
    $255 = HEAPU8[$$0$i45 >> 0] | 0;
    $257 = _bitshift64Shl($255 & 127 | 0, 0, $shift$0$i44 | 0) | 0;
    $259 = $257 | $260;
    $261 = tempRet0 | $262;
    if (!($255 & 128)) {
     $$lcssa155 = $254;
     $269 = $259;
     $270 = $261;
     $num_read$0$i43$lcssa = $num_read$0$i43;
     break;
    } else {
     $$0$i45 = $$0$i45 + 1 | 0;
     $260 = $259;
     $262 = $261;
     $num_read$0$i43 = $254;
     $shift$0$i44 = $shift$0$i44 + 7 | 0;
    }
   }
   $267 = _i64Add($$lcssa155 | 0, 0, 1, 0) | 0;
   $271 = _i64Add($267 | 0, tempRet0 | 0, $269 | 0, $270 | 0) | 0;
   $275 = $start + ($num_read$0$i43$lcssa + 3) | 0;
   switch (HEAPU8[$start + ($num_read$0$i43$lcssa + 2) >> 0] | 0) {
   case 1:
    {
     HEAP8[$lsm + 26 >> 0] = 1;
     HEAP32[$len >> 2] = $271;
     $$0 = 1;
     STACKTOP = sp;
     return $$0 | 0;
    }
   case 2:
    {
     $277 = $reader + 12 | 0;
     $$field = HEAP32[$277 >> 2] | 0;
     $$field2 = HEAP32[$277 + 4 >> 2] | 0;
     $278 = $$field2 & 1;
     if (!($278 | $$field)) ___assert_fail(18598, 18394, 143, 18620);
     $283 = $reader + ($$field2 >> 1) | 0;
     if (!$278) $288 = $$field; else $288 = HEAP32[(HEAP32[$283 >> 2] | 0) + $$field >> 2] | 0;
     $292 = $lsm + 8 | 0;
     HEAP32[$292 >> 2] = FUNCTION_TABLE_iii[$288 & 31]($283, $275) | 0;
     HEAP32[$292 + 4 >> 2] = tempRet0;
     $oplen$1 = $271;
     break L9;
     break;
    }
   case 3:
    {
     $298 = $start + ($num_read$0$i43$lcssa + 4 + (_strlen($275 | 0) | 0)) | 0;
     $$0$i39 = $298;
     $307 = 0;
     $309 = 0;
     $num_read$0$i37 = 0;
     $shift$0$i38 = 0;
     while (1) {
      $301 = $num_read$0$i37 + 1 | 0;
      $302 = HEAPU8[$$0$i39 >> 0] | 0;
      $304 = _bitshift64Shl($302 & 127 | 0, 0, $shift$0$i38 | 0) | 0;
      $306 = $304 | $307;
      if (!($302 & 128)) {
       $$lcssa153 = $301;
       $349 = $306;
       break;
      } else {
       $$0$i39 = $$0$i39 + 1 | 0;
       $307 = $306;
       $309 = tempRet0 | $309;
       $num_read$0$i37 = $301;
       $shift$0$i38 = $shift$0$i38 + 7 | 0;
      }
     }
     $$0$i34 = $298;
     $321 = 0;
     $323 = 0;
     $num_read$0$i32 = 0;
     $shift$0$i33 = 0;
     while (1) {
      $315 = $num_read$0$i32 + 1 | 0;
      $316 = HEAPU8[$$0$i34 >> 0] | 0;
      $318 = _bitshift64Shl($316 & 127 | 0, 0, $shift$0$i33 | 0) | 0;
      $320 = $318 | $321;
      $322 = tempRet0 | $323;
      if (!($316 & 128)) {
       $$lcssa151 = $315;
       $350 = $320;
       $351 = $322;
       break;
      } else {
       $$0$i34 = $$0$i34 + 1 | 0;
       $321 = $320;
       $323 = $322;
       $num_read$0$i32 = $315;
       $shift$0$i33 = $shift$0$i33 + 7 | 0;
      }
     }
     $327 = $$lcssa153 + $271 | 0;
     $$0$i29 = $298;
     $336 = 0;
     $338 = 0;
     $num_read$0$i27 = 0;
     $shift$0$i28 = 0;
     while (1) {
      $330 = $num_read$0$i27 + 1 | 0;
      $331 = HEAPU8[$$0$i29 >> 0] | 0;
      $333 = _bitshift64Shl($331 & 127 | 0, 0, $shift$0$i28 | 0) | 0;
      $335 = $333 | $336;
      $337 = tempRet0 | $338;
      if (!($331 & 128)) {
       $$lcssa149 = $330;
       $352 = $335;
       $353 = $337;
       break;
      } else {
       $$0$i29 = $$0$i29 + 1 | 0;
       $336 = $335;
       $338 = $337;
       $num_read$0$i27 = $330;
       $shift$0$i28 = $shift$0$i28 + 7 | 0;
      }
     }
     $343 = $327 + $$lcssa151 + $$lcssa149 | 0;
     if (!$handler) {
      $oplen$1 = $343;
      break L9;
     }
     $347 = HEAP32[(HEAP32[$handler >> 2] | 0) + 12 >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $275, _strlen($275 | 0) | 0);
     FUNCTION_TABLE_viiiiiiii[$347 & 3]($handler, $0, -1, $349, $350, $351, $352, $353);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $oplen$1 = $343;
     break L9;
     break;
    }
   default:
    {
     $oplen$1 = $271;
     break L9;
    }
   }
   break;
  }
 default:
  {
   $355 = HEAP32[$header + 32 >> 2] | 0;
   if (!$355) $oplen$1 = 1; else {
    $359 = HEAP8[(HEAP32[$355 >> 2] | 0) + $3 >> 0] | 0;
    if (!($359 << 24 >> 24)) $oplen$1 = 1; else {
     $361 = $359 & 255;
     $$0170 = $2;
     $i$071 = 0;
     $oplen$069 = 1;
     while (1) {
      $$0$i10 = $$0170;
      $num_read$0$i8 = 0;
      while (1) {
       $364 = $num_read$0$i8 + 1 | 0;
       if ((HEAP8[$$0$i10 >> 0] | 0) > -1) {
        $$lcssa = $364;
        break;
       } else {
        $$0$i10 = $$0$i10 + 1 | 0;
        $num_read$0$i8 = $364;
       }
      }
      $367 = $$lcssa + $oplen$069 | 0;
      $i$071 = $i$071 + 1 | 0;
      if (($i$071 | 0) >= ($361 | 0)) {
       $oplen$1 = $367;
       break;
      } else {
       $$0170 = $$0170 + $$lcssa | 0;
       $oplen$069 = $367;
      }
     }
    }
   }
  }
 } while (0);
 HEAP32[$len >> 2] = $oplen$1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo13ReadCIEFieldsEPNS0_3CIEE($this, $cie) {
 $this = $this | 0;
 $cie = $cie | 0;
 var $$0 = 0, $$0$i = 0, $$0$i10 = 0, $$0$i14 = 0, $$0$i19 = 0, $$lcssa = 0, $$lcssa75 = 0, $$lcssa77 = 0, $$lcssa78 = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$sum = 0, $$sum1 = 0, $$sum5$pn = 0, $0 = 0, $100 = 0, $101 = 0, $102 = 0, $107 = 0, $113 = 0, $116 = 0, $117 = 0, $119 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $131 = 0, $134 = 0, $135 = 0, $140 = 0, $146 = 0, $15 = 0, $151 = 0, $16 = 0, $161 = 0, $162 = 0, $164 = 0, $166 = 0, $167 = 0, $169 = 0, $17 = 0, $173 = 0, $178 = 0, $18 = 0, $188 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $21 = 0, $212 = 0, $219 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $231 = 0, $232 = 0, $237 = 0, $240 = 0, $245 = 0, $253 = 0, $257 = 0, $266 = 0, $272 = 0, $274 = 0, $278 = 0, $28 = 0, $289 = 0, $3 = 0, $300 = 0, $304 = 0, $309 = 0, $318 = 0, $325 = 0, $329 = 0, $34 = 0, $341 = 0, $349 = 0, $35 = 0, $36 = 0, $40 = 0, $46 = 0, $48 = 0, $51 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $68 = 0, $7 = 0, $73 = 0, $76 = 0, $83 = 0, $84 = 0, $86 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $95 = 0, $97 = 0, $cursor$0 = 0, $cursor$0$sum6 = 0, $cursor$1 = 0, $data$0 = 0, $data$1 = 0, $i$0 = 0, $len = 0, $num_read$0$i = 0, $num_read$0$i$lcssa = 0, $num_read$0$i12 = 0, $num_read$0$i17 = 0, $num_read$0$i9 = 0, $result$1$i$off0 = 0, $shift$0$i = 0, $shift$0$i13 = 0, $shift$0$i18 = 0, $shift$0$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $len = sp + 12 | 0;
 $0 = sp;
 $2 = HEAP32[$cie + 12 >> 2] | 0;
 $3 = $cie + 8 | 0;
 if ((HEAP32[$3 >> 2] | 0) != 1) ___assert_fail(19123, 18044, 1848, 19141);
 $6 = $cie + 40 | 0;
 HEAP8[$6 >> 0] = 0;
 $7 = $cie + 44 | 0;
 if (!(HEAP8[$7 >> 0] & 1)) {
  HEAP8[$7 + 1 >> 0] = 0;
  HEAP8[$7 >> 0] = 0;
 } else {
  HEAP8[HEAP32[$cie + 52 >> 2] >> 0] = 0;
  HEAP32[$cie + 48 >> 2] = 0;
 }
 $15 = $cie + 56 | 0;
 $16 = $cie + 64 | 0;
 $17 = $cie + 68 | 0;
 $18 = $cie + 72 | 0;
 $19 = $cie + 96 | 0;
 HEAP32[$19 >> 2] = 0;
 $20 = $cie + 16 | 0;
 HEAP32[$20 >> 2] = 0;
 $21 = $cie + 20 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP8[$15 + 16 >> 0] = 0;
 $23 = HEAP32[$21 >> 2] | 0;
 if (($23 - $2 | 0) < 1) {
  $28 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$28 >> 2] | 0) + 8 >> 2] & 31]($28, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $34 = $this + 8 | 0;
 $35 = HEAP8[$2 >> 0] | 0;
 HEAP8[$6 >> 0] = $35;
 $36 = $2 + 1 | 0;
 if (($35 + -1 & 255) > 2) {
  $40 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$40 >> 2] | 0) + 24 >> 2] & 31]($40, HEAP32[$cie >> 2] | 0, 0, $35 & 255);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $46 = $36;
 $48 = _memchr($36, 0, $23 - $46 | 0) | 0;
 if (!$48) {
  $51 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$51 >> 2] | 0) + 8 >> 2] & 31]($51, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $36, $48 - $46 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($7, $0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $59 = $48 + 1 | 0;
 $60 = HEAP8[$7 >> 0] | 0;
 $62 = ($60 & 1) == 0;
 if ($62) $68 = ($60 & 255) >>> 1; else $68 = HEAP32[$cie + 48 >> 2] | 0;
 do if (!$68) {
  $$0$i = $59;
  $89 = 0;
  $91 = 0;
  $num_read$0$i = 0;
  $shift$0$i = 0;
 } else {
  if ($62) $73 = $7 + 1 | 0; else $73 = HEAP32[$cie + 52 >> 2] | 0;
  if ((HEAP8[$73 >> 0] | 0) == 122) {
   HEAP8[$18 >> 0] = 1;
   $$0$i = $59;
   $89 = 0;
   $91 = 0;
   $num_read$0$i = 0;
   $shift$0$i = 0;
   break;
  }
  $76 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$76 >> 2] | 0) + 28 >> 2] & 31]($76, HEAP32[$cie >> 2] | 0, 0, $7);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 while (1) {
  $83 = $num_read$0$i + 1 | 0;
  $84 = HEAPU8[$$0$i >> 0] | 0;
  $86 = _bitshift64Shl($84 & 127 | 0, 0, $shift$0$i | 0) | 0;
  $88 = $86 | $89;
  $90 = tempRet0 | $91;
  if (!($84 & 128)) {
   $$lcssa81 = $83;
   $100 = $90;
   $97 = $88;
   $num_read$0$i$lcssa = $num_read$0$i;
   break;
  } else {
   $$0$i = $$0$i + 1 | 0;
   $89 = $88;
   $91 = $90;
   $num_read$0$i = $83;
   $shift$0$i = $shift$0$i + 7 | 0;
  }
 }
 HEAP32[$len >> 2] = $$lcssa81;
 $95 = $15;
 HEAP32[$95 >> 2] = $97;
 HEAP32[$95 + 4 >> 2] = $100;
 $101 = HEAP32[$21 >> 2] | 0;
 $102 = $101;
 if (($102 - $59 | 0) >>> 0 < $$lcssa81 >>> 0) {
  $107 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$107 >> 2] | 0) + 8 >> 2] & 31]($107, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$sum = $num_read$0$i$lcssa + 2 | 0;
 $113 = $48 + $$sum | 0;
 $$0$i10 = $113;
 $122 = 0;
 $124 = 0;
 $num_read$0$i9 = 0;
 $shift$0$i8 = 0;
 while (1) {
  $116 = $num_read$0$i9 + 1 | 0;
  $117 = HEAPU8[$$0$i10 >> 0] | 0;
  $119 = _bitshift64Shl($117 & 127 | 0, 0, $shift$0$i8 | 0) | 0;
  $121 = $119 | $122;
  $123 = tempRet0 | $124;
  $125 = $shift$0$i8 + 7 | 0;
  if (!($117 & 128)) {
   $$lcssa77 = $116;
   $$lcssa78 = $117;
   $$lcssa80 = $125;
   $134 = $121;
   $135 = $123;
   break;
  } else {
   $$0$i10 = $$0$i10 + 1 | 0;
   $122 = $121;
   $124 = $123;
   $num_read$0$i9 = $116;
   $shift$0$i8 = $125;
  }
 }
 if ($$lcssa80 >>> 0 > 63 | ($$lcssa78 & 64 | 0) == 0) $result$1$i$off0 = $134; else {
  $131 = _bitshift64Shl(-1, -1, $$lcssa80 | 0) | 0;
  $135 | tempRet0;
  $result$1$i$off0 = $134 | $131;
 }
 HEAP32[$len >> 2] = $$lcssa77;
 HEAP32[$16 >> 2] = $result$1$i$off0;
 if (($102 - $113 | 0) >>> 0 < $$lcssa77 >>> 0) {
  $140 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$140 >> 2] | 0) + 8 >> 2] & 31]($140, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$sum1 = $$lcssa77 + $$sum | 0;
 $146 = $48 + $$sum1 | 0;
 do if ((HEAP8[$6 >> 0] | 0) == 1) {
  if ($146 >>> 0 < $101 >>> 0) {
   HEAP32[$17 >> 2] = HEAPU8[$146 >> 0];
   $$sum5$pn = $$sum1 + 1 | 0;
   break;
  }
  $151 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$151 >> 2] | 0) + 8 >> 2] & 31]($151, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$0$i14 = $146;
  $167 = 0;
  $169 = 0;
  $num_read$0$i12 = 0;
  $shift$0$i13 = 0;
  while (1) {
   $161 = $num_read$0$i12 + 1 | 0;
   $162 = HEAPU8[$$0$i14 >> 0] | 0;
   $164 = _bitshift64Shl($162 & 127 | 0, 0, $shift$0$i13 | 0) | 0;
   $166 = $164 | $167;
   if (!($162 & 128)) {
    $$lcssa75 = $161;
    $173 = $166;
    break;
   } else {
    $$0$i14 = $$0$i14 + 1 | 0;
    $167 = $166;
    $169 = tempRet0 | $169;
    $num_read$0$i12 = $161;
    $shift$0$i13 = $shift$0$i13 + 7 | 0;
   }
  }
  HEAP32[$len >> 2] = $$lcssa75;
  HEAP32[$17 >> 2] = $173;
  if (($102 - $146 | 0) >>> 0 >= $$lcssa75 >>> 0) {
   $$sum5$pn = $$lcssa75 + $$sum1 | 0;
   break;
  }
  $178 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$178 >> 2] | 0) + 8 >> 2] & 31]($178, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $cursor$0 = $48 + $$sum5$pn | 0;
 L65 : do if (!(HEAP8[$18 >> 0] | 0)) $cursor$1 = $cursor$0; else {
  $$0$i19 = $cursor$0;
  $194 = 0;
  $196 = 0;
  $num_read$0$i17 = 0;
  $shift$0$i18 = 0;
  while (1) {
   $188 = $num_read$0$i17 + 1 | 0;
   $189 = HEAPU8[$$0$i19 >> 0] | 0;
   $191 = _bitshift64Shl($189 & 127 | 0, 0, $shift$0$i18 | 0) | 0;
   $193 = $191 | $194;
   $195 = tempRet0 | $196;
   if (!($189 & 128)) {
    $$lcssa = $188;
    $202 = $193;
    $203 = $195;
    break;
   } else {
    $$0$i19 = $$0$i19 + 1 | 0;
    $194 = $193;
    $196 = $195;
    $num_read$0$i17 = $188;
    $shift$0$i18 = $shift$0$i18 + 7 | 0;
   }
  }
  HEAP32[$len >> 2] = $$lcssa;
  $204 = _i64Add($202 | 0, $203 | 0, $$lcssa | 0, 0) | 0;
  $205 = tempRet0;
  if (0 < $205 >>> 0 | 0 == ($205 | 0) & ($102 - $cursor$0 | 0) >>> 0 < $204 >>> 0) {
   $212 = HEAP32[$this + 16 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$212 >> 2] | 0) + 8 >> 2] & 31]($212, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $cursor$0$sum6 = $$lcssa + $$sum5$pn | 0;
  $219 = $48 + ($cursor$0$sum6 + $202) | 0;
  $220 = $cie + 73 | 0;
  HEAP8[$220 >> 0] = 0;
  $221 = $cie + 74 | 0;
  HEAP8[$221 >> 0] = 0;
  $222 = $cie + 75 | 0;
  HEAP8[$222 >> 0] = 0;
  $223 = $7 + 1 | 0;
  $224 = $cie + 76 | 0;
  $225 = $cie + 80 | 0;
  $226 = $cie + 88 | 0;
  $227 = $219;
  $228 = $cie + 52 | 0;
  $229 = $cie + 48 | 0;
  $231 = $60;
  $data$0 = $48 + $cursor$0$sum6 | 0;
  $i$0 = 1;
  L73 : while (1) {
   $232 = ($231 & 1) == 0;
   if ($232) $237 = ($231 & 255) >>> 1; else $237 = HEAP32[$229 >> 2] | 0;
   if ($i$0 >>> 0 >= $237 >>> 0) {
    $cursor$1 = $219;
    break L65;
   }
   if ($232) $240 = $223; else $240 = HEAP32[$228 >> 2] | 0;
   switch (HEAP8[$240 + $i$0 >> 0] | 0) {
   case 76:
    {
     HEAP8[$220 >> 0] = 1;
     if ($data$0 >>> 0 >= $219 >>> 0) {
      label = 52;
      break L73;
     }
     $253 = HEAP8[$data$0 >> 0] | 0;
     HEAP32[$224 >> 2] = $253;
     if (__ZNK12dwarf2reader10ByteReader13ValidEncodingENS_20DwarfPointerEncodingE(HEAP32[$34 >> 2] | 0, $253) | 0) $data$1 = $data$0 + 1 | 0; else {
      label = 54;
      break L73;
     }
     break;
    }
   case 80:
    {
     HEAP8[$221 >> 0] = 1;
     if ($data$0 >>> 0 >= $219 >>> 0) {
      label = 56;
      break L73;
     }
     $272 = $data$0 + 1 | 0;
     $274 = HEAP8[$data$0 >> 0] | 0;
     HEAP32[$225 >> 2] = $274;
     if (!(__ZNK12dwarf2reader10ByteReader13ValidEncodingENS_20DwarfPointerEncodingE(HEAP32[$34 >> 2] | 0, $274) | 0)) {
      label = 58;
      break L73;
     }
     if (!(__ZNK12dwarf2reader10ByteReader14UsableEncodingENS_20DwarfPointerEncodingE(HEAP32[$34 >> 2] | 0, HEAP32[$225 >> 2] | 0) | 0)) {
      label = 60;
      break L73;
     }
     $300 = $226;
     HEAP32[$300 >> 2] = __ZNK12dwarf2reader10ByteReader18ReadEncodedPointerEPKcNS_20DwarfPointerEncodingEPj(HEAP32[$34 >> 2] | 0, $272, HEAP32[$225 >> 2] | 0, $len) | 0;
     HEAP32[$300 + 4 >> 2] = tempRet0;
     $304 = HEAP32[$len >> 2] | 0;
     if ($304 >>> 0 > ($227 - $272 | 0) >>> 0) {
      label = 62;
      break L73;
     }
     $data$1 = $data$0 + ($304 + 1) | 0;
     break;
    }
   case 82:
    {
     if ($data$0 >>> 0 >= $219 >>> 0) {
      label = 65;
      break L73;
     }
     $325 = HEAP8[$data$0 >> 0] | 0;
     HEAP32[$19 >> 2] = $325;
     if (!(__ZNK12dwarf2reader10ByteReader13ValidEncodingENS_20DwarfPointerEncodingE(HEAP32[$34 >> 2] | 0, $325) | 0)) {
      label = 67;
      break L73;
     }
     if (__ZNK12dwarf2reader10ByteReader14UsableEncodingENS_20DwarfPointerEncodingE(HEAP32[$34 >> 2] | 0, HEAP32[$19 >> 2] | 0) | 0) $data$1 = $data$0 + 1 | 0; else {
      label = 69;
      break L73;
     }
     break;
    }
   case 83:
    {
     HEAP8[$222 >> 0] = 1;
     $data$1 = $data$0;
     break;
    }
   default:
    {
     label = 71;
     break L73;
    }
   }
   $231 = HEAP8[$7 >> 0] | 0;
   $data$0 = $data$1;
   $i$0 = $i$0 + 1 | 0;
  }
  switch (label | 0) {
  case 52:
   {
    $245 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$245 >> 2] | 0) + 8 >> 2] & 31]($245, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 54:
   {
    $257 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$257 >> 2] | 0) + 32 >> 2] & 31]($257, HEAP32[$cie >> 2] | 0, 0, HEAP32[$224 >> 2] & 255);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 56:
   {
    $266 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$266 >> 2] | 0) + 8 >> 2] & 31]($266, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 58:
   {
    $278 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$278 >> 2] | 0) + 32 >> 2] & 31]($278, HEAP32[$cie >> 2] | 0, 0, HEAP32[$225 >> 2] & 255);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 60:
   {
    $289 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$289 >> 2] | 0) + 36 >> 2] & 31]($289, HEAP32[$cie >> 2] | 0, 0, HEAP32[$225 >> 2] & 255);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 62:
   {
    $309 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$309 >> 2] | 0) + 8 >> 2] & 31]($309, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 65:
   {
    $318 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$318 >> 2] | 0) + 8 >> 2] & 31]($318, HEAP32[$cie >> 2] | 0, 0, HEAP32[$3 >> 2] | 0);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 67:
   {
    $329 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$329 >> 2] | 0) + 32 >> 2] & 31]($329, HEAP32[$cie >> 2] | 0, 0, HEAP32[$19 >> 2] & 255);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 69:
   {
    $341 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$341 >> 2] | 0) + 36 >> 2] & 31]($341, HEAP32[$cie >> 2] | 0, 0, HEAP32[$19 >> 2] & 255);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  case 71:
   {
    $349 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$349 >> 2] | 0) + 28 >> 2] & 31]($349, HEAP32[$cie >> 2] | 0, 0, $7);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 HEAP32[$20 >> 2] = $cursor$1;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__115__inplace_mergeIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEi($__first, $__middle, $__last, $__comp, $__len1, $__len2, $__buff, $__buff_size) {
 $__first = $__first | 0;
 $__middle = $__middle | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 $__len1 = $__len1 | 0;
 $__len2 = $__len2 | 0;
 $__buff = $__buff | 0;
 $__buff_size = $__buff_size | 0;
 var $$0$be = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$phi = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i$lcssa = 0, $$04$be = 0, $$043 = 0, $$0442 = 0, $$0442$lcssa154 = 0, $$1 = 0, $$1$lcssa = 0, $$1$lcssa$lcssa = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$in$i$i$i = 0, $$in84 = 0, $$in84$lcssa$lcssa135 = 0, $$in84$lcssa157 = 0, $$lcssa$lcssa = 0, $$lcssa145 = 0, $$lcssa147 = 0, $$lcssa152 = 0, $$pre = 0, $$sink$i$i$i = 0, $$sroa$0$0$i = 0, $$sroa$02$0$i$i$i = 0, $$sum$i$i$i = 0, $0 = 0, $1 = 0, $100 = 0, $105 = 0, $109 = 0, $110 = 0, $112 = 0, $123 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $17 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $36 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $93 = 0, $95 = 0, $96 = 0, $__len$0$be$i = 0, $__len$0$be$i11 = 0, $__len$03$i = 0, $__len$03$i8 = 0, $__len11$0 = 0, $__len21$0 = 0, $storemerge = 0, label = 0, sp = 0, $105$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy8 = sp + 24 | 0;
 $$byval_copy7 = sp;
 $$byval_copy6 = sp + 84 | 0;
 $0 = sp + 80 | 0;
 $1 = sp + 76 | 0;
 $2 = sp + 72 | 0;
 $3 = sp + 68 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 60 | 0;
 $6 = sp + 56 | 0;
 $7 = sp + 52 | 0;
 $8 = sp + 48 | 0;
 if (($__len2 | 0) == 0 | ($__len1 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $$pre = HEAP32[$__middle >> 2] | 0;
 $$043 = $__len1;
 $$0442 = $__len2;
 $13 = $$pre;
 $130 = $$pre;
 $24 = $$pre;
 L4 : while (1) {
  $$1 = $$043;
  $$in84 = HEAP32[$__first >> 2] | 0;
  while (1) {
   if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($13, $$in84) | 0) {
    $$1$lcssa = $$1;
    $$in84$lcssa157 = $$in84;
    break;
   }
   $$in84 = $$in84 + 24 | 0;
   HEAP32[$__first >> 2] = $$in84;
   $$1 = $$1 + -1 | 0;
   if (!$$1) {
    label = 43;
    break L4;
   }
  }
  $17 = $$in84$lcssa157;
  if (!(($$0442 | 0) > ($__buff_size | 0) & ($$1$lcssa | 0) > ($__buff_size | 0))) {
   $$0442$lcssa154 = $$0442;
   $$1$lcssa$lcssa = $$1$lcssa;
   $$lcssa$lcssa = $17;
   $$lcssa147 = $24;
   label = 7;
   break;
  }
  if (($$1$lcssa | 0) < ($$0442 | 0)) {
   $22 = ($$0442 | 0) / 2 | 0;
   $25 = $24 + ($22 * 24 | 0) | 0;
   $26 = $25;
   if (($24 | 0) == ($17 | 0)) $41 = $$in84$lcssa157; else {
    $131 = $$in84$lcssa157;
    $32 = $17;
    $__len$03$i8 = ($24 - $17 | 0) / 24 | 0;
    while (1) {
     $30 = ($__len$03$i8 | 0) / 2 | 0;
     $31 = $32;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($25, $31 + ($30 * 24 | 0) | 0) | 0) {
      $132 = $131;
      $133 = $32;
      $__len$0$be$i11 = $30;
     } else {
      $36 = $31 + (($30 + 1 | 0) * 24 | 0) | 0;
      $132 = $36;
      $133 = $36;
      $__len$0$be$i11 = $__len$03$i8 + -1 - $30 | 0;
     }
     if (!$__len$0$be$i11) {
      $41 = $132;
      break;
     } else {
      $131 = $132;
      $32 = $133;
      $__len$03$i8 = $__len$0$be$i11;
     }
    }
   }
   $40 = $41;
   $70 = $40;
   $74 = $26;
   $__len11$0 = ($40 - $17 | 0) / 24 | 0;
   $__len21$0 = $22;
  } else {
   if (($$1$lcssa | 0) == 1) {
    $$in84$lcssa$lcssa135 = $$in84$lcssa157;
    $$lcssa152 = $130;
    label = 16;
    break;
   }
   $45 = ($$1$lcssa | 0) / 2 | 0;
   $46 = $$in84$lcssa157 + ($45 * 24 | 0) | 0;
   $47 = $46;
   $48 = HEAP32[$__last >> 2] | 0;
   $50 = $24;
   if (($48 | 0) == ($24 | 0)) $64 = $50; else {
    $134 = $50;
    $55 = $24;
    $__len$03$i = ($48 - $24 | 0) / 24 | 0;
    while (1) {
     $53 = ($__len$03$i | 0) / 2 | 0;
     $54 = $55;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($54 + ($53 * 24 | 0) | 0, $46) | 0) {
      $59 = $54 + (($53 + 1 | 0) * 24 | 0) | 0;
      $135 = $59;
      $136 = $59;
      $__len$0$be$i = $__len$03$i + -1 - $53 | 0;
     } else {
      $135 = $134;
      $136 = $55;
      $__len$0$be$i = $53;
     }
     if (!$__len$0$be$i) {
      $64 = $135;
      break;
     } else {
      $134 = $135;
      $55 = $136;
      $__len$03$i = $__len$0$be$i;
     }
    }
   }
   $63 = $64;
   $70 = $47;
   $74 = $63;
   $__len11$0 = $45;
   $__len21$0 = ($63 - $24 | 0) / 24 | 0;
  }
  $67 = $$1$lcssa - $__len11$0 | 0;
  $68 = $$0442 - $__len21$0 | 0;
  $69 = $70;
  $71 = $24;
  $73 = $74;
  do if (($69 | 0) == ($71 | 0)) $$sroa$0$0$i = $73; else if (($71 | 0) == ($73 | 0)) $$sroa$0$0$i = $69; else {
   if (($69 + 24 | 0) == ($71 | 0)) {
    $78 = $70;
    HEAP32[$$byval_copy8 >> 2] = HEAP32[$78 >> 2];
    HEAP32[$$byval_copy8 + 4 >> 2] = HEAP32[$78 + 4 >> 2];
    HEAP32[$$byval_copy8 + 8 >> 2] = HEAP32[$78 + 8 >> 2];
    HEAP32[$$byval_copy8 + 12 >> 2] = HEAP32[$78 + 12 >> 2];
    HEAP32[$$byval_copy8 + 16 >> 2] = HEAP32[$78 + 16 >> 2];
    HEAP32[$$byval_copy8 + 20 >> 2] = HEAP32[$78 + 20 >> 2];
    $80 = $74 - $24 | 0;
    _memmove($78 | 0, $24 | 0, $80 | 0) | 0;
    $82 = $69 + ((($80 | 0) / 24 | 0) * 24 | 0) | 0;
    HEAP32[$82 >> 2] = HEAP32[$$byval_copy8 >> 2];
    HEAP32[$82 + 4 >> 2] = HEAP32[$$byval_copy8 + 4 >> 2];
    HEAP32[$82 + 8 >> 2] = HEAP32[$$byval_copy8 + 8 >> 2];
    HEAP32[$82 + 12 >> 2] = HEAP32[$$byval_copy8 + 12 >> 2];
    HEAP32[$82 + 16 >> 2] = HEAP32[$$byval_copy8 + 16 >> 2];
    HEAP32[$82 + 20 >> 2] = HEAP32[$$byval_copy8 + 20 >> 2];
    $$sroa$0$0$i = $82;
    break;
   }
   if (($71 + 24 | 0) == ($73 | 0)) {
    $85 = $24;
    HEAP32[$$byval_copy8 >> 2] = HEAP32[$85 >> 2];
    HEAP32[$$byval_copy8 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
    HEAP32[$$byval_copy8 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
    HEAP32[$$byval_copy8 + 12 >> 2] = HEAP32[$85 + 12 >> 2];
    HEAP32[$$byval_copy8 + 16 >> 2] = HEAP32[$85 + 16 >> 2];
    HEAP32[$$byval_copy8 + 20 >> 2] = HEAP32[$85 + 20 >> 2];
    $86 = $24 - $70 | 0;
    $88 = $71 + (((($86 | 0) / -24 | 0) + 1 | 0) * 24 | 0) | 0;
    $89 = $70;
    _memmove($88 | 0, $89 | 0, $86 | 0) | 0;
    HEAP32[$89 >> 2] = HEAP32[$$byval_copy8 >> 2];
    HEAP32[$89 + 4 >> 2] = HEAP32[$$byval_copy8 + 4 >> 2];
    HEAP32[$89 + 8 >> 2] = HEAP32[$$byval_copy8 + 8 >> 2];
    HEAP32[$89 + 12 >> 2] = HEAP32[$$byval_copy8 + 12 >> 2];
    HEAP32[$89 + 16 >> 2] = HEAP32[$$byval_copy8 + 16 >> 2];
    HEAP32[$89 + 20 >> 2] = HEAP32[$$byval_copy8 + 20 >> 2];
    $$sroa$0$0$i = $88;
    break;
   }
   $91 = ($24 - $70 | 0) / 24 | 0;
   $93 = ($74 - $24 | 0) / 24 | 0;
   if (($91 | 0) == ($93 | 0)) {
    $95 = $69;
    $96 = $71;
    while (1) {
     HEAP32[$$byval_copy8 >> 2] = HEAP32[$95 >> 2];
     HEAP32[$$byval_copy8 + 4 >> 2] = HEAP32[$95 + 4 >> 2];
     HEAP32[$$byval_copy8 + 8 >> 2] = HEAP32[$95 + 8 >> 2];
     HEAP32[$$byval_copy8 + 12 >> 2] = HEAP32[$95 + 12 >> 2];
     HEAP32[$$byval_copy8 + 16 >> 2] = HEAP32[$95 + 16 >> 2];
     HEAP32[$$byval_copy8 + 20 >> 2] = HEAP32[$95 + 20 >> 2];
     HEAP32[$95 >> 2] = HEAP32[$96 >> 2];
     HEAP32[$95 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
     HEAP32[$95 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
     HEAP32[$95 + 12 >> 2] = HEAP32[$96 + 12 >> 2];
     HEAP32[$95 + 16 >> 2] = HEAP32[$96 + 16 >> 2];
     HEAP32[$95 + 20 >> 2] = HEAP32[$96 + 20 >> 2];
     HEAP32[$96 >> 2] = HEAP32[$$byval_copy8 >> 2];
     HEAP32[$96 + 4 >> 2] = HEAP32[$$byval_copy8 + 4 >> 2];
     HEAP32[$96 + 8 >> 2] = HEAP32[$$byval_copy8 + 8 >> 2];
     HEAP32[$96 + 12 >> 2] = HEAP32[$$byval_copy8 + 12 >> 2];
     HEAP32[$96 + 16 >> 2] = HEAP32[$$byval_copy8 + 16 >> 2];
     HEAP32[$96 + 20 >> 2] = HEAP32[$$byval_copy8 + 20 >> 2];
     $95 = $95 + 24 | 0;
     if (($95 | 0) == ($71 | 0)) {
      $$sroa$02$0$i$i$i = $71;
      break;
     } else $96 = $96 + 24 | 0;
    }
   } else {
    $$0$i$i$i$i = $91;
    $$01$i$i$i$i = $93;
    while (1) {
     $100 = ($$0$i$i$i$i | 0) % ($$01$i$i$i$i | 0) | 0;
     if (!$100) {
      $$01$i$i$i$i$lcssa = $$01$i$i$i$i;
      break;
     } else {
      $$0$i$i$i$i$phi = $$01$i$i$i$i;
      $$01$i$i$i$i = $100;
      $$0$i$i$i$i = $$0$i$i$i$i$phi;
     }
    }
    if ($$01$i$i$i$i$lcssa) {
     $$sum$i$i$i = $91 + -1 | 0;
     $105 = $69 + ($$01$i$i$i$i$lcssa * 24 | 0) | 0;
     do {
      $105$looptemp = $105;
      $105 = $105 + -24 | 0;
      HEAP32[$$byval_copy7 >> 2] = HEAP32[$105 >> 2];
      HEAP32[$$byval_copy7 + 4 >> 2] = HEAP32[$105 + 4 >> 2];
      HEAP32[$$byval_copy7 + 8 >> 2] = HEAP32[$105 + 8 >> 2];
      HEAP32[$$byval_copy7 + 12 >> 2] = HEAP32[$105 + 12 >> 2];
      HEAP32[$$byval_copy7 + 16 >> 2] = HEAP32[$105 + 16 >> 2];
      HEAP32[$$byval_copy7 + 20 >> 2] = HEAP32[$105 + 20 >> 2];
      $$in$i$i$i = $105$looptemp + ($$sum$i$i$i * 24 | 0) | 0;
      $110 = $105;
      while (1) {
       $109 = $110;
       $110 = $$in$i$i$i;
       HEAP32[$109 >> 2] = HEAP32[$$in$i$i$i >> 2];
       HEAP32[$109 + 4 >> 2] = HEAP32[$$in$i$i$i + 4 >> 2];
       HEAP32[$109 + 8 >> 2] = HEAP32[$$in$i$i$i + 8 >> 2];
       HEAP32[$109 + 12 >> 2] = HEAP32[$$in$i$i$i + 12 >> 2];
       HEAP32[$109 + 16 >> 2] = HEAP32[$$in$i$i$i + 16 >> 2];
       HEAP32[$109 + 20 >> 2] = HEAP32[$$in$i$i$i + 20 >> 2];
       $112 = ($74 - $110 | 0) / 24 | 0;
       $$sink$i$i$i = ($91 | 0) < ($112 | 0) ? $$in$i$i$i + ($91 * 24 | 0) | 0 : $69 + (($91 - $112 | 0) * 24 | 0) | 0;
       if (($$sink$i$i$i | 0) == ($105 | 0)) {
        $$lcssa145 = $$in$i$i$i;
        break;
       } else $$in$i$i$i = $$sink$i$i$i;
      }
      HEAP32[$$lcssa145 >> 2] = HEAP32[$$byval_copy7 >> 2];
      HEAP32[$$lcssa145 + 4 >> 2] = HEAP32[$$byval_copy7 + 4 >> 2];
      HEAP32[$$lcssa145 + 8 >> 2] = HEAP32[$$byval_copy7 + 8 >> 2];
      HEAP32[$$lcssa145 + 12 >> 2] = HEAP32[$$byval_copy7 + 12 >> 2];
      HEAP32[$$lcssa145 + 16 >> 2] = HEAP32[$$byval_copy7 + 16 >> 2];
      HEAP32[$$lcssa145 + 20 >> 2] = HEAP32[$$byval_copy7 + 20 >> 2];
     } while (($105 | 0) != ($69 | 0));
    }
    $$sroa$02$0$i$i$i = $69 + ($93 * 24 | 0) | 0;
   }
   $$sroa$0$0$i = $$sroa$02$0$i$i$i;
  } while (0);
  HEAP32[$__middle >> 2] = $$sroa$0$0$i;
  $123 = $$sroa$0$0$i;
  if (($__len11$0 + $__len21$0 | 0) < ($67 + $68 | 0)) {
   HEAP32[$3 >> 2] = HEAP32[$__first >> 2];
   HEAP32[$4 >> 2] = $70;
   HEAP32[$5 >> 2] = $123;
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy7 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy8 >> 2] = HEAP32[$5 >> 2];
   __ZNSt3__115__inplace_mergeIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEi($$byval_copy6, $$byval_copy7, $$byval_copy8, $__comp, $__len11$0, $__len21$0, $__buff, $__buff_size);
   HEAP32[$__first >> 2] = $123;
   $$0$be = $67;
   $$04$be = $68;
   $storemerge = $74;
  } else {
   HEAP32[$6 >> 2] = $123;
   HEAP32[$7 >> 2] = $74;
   HEAP32[$8 >> 2] = HEAP32[$__last >> 2];
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$$byval_copy7 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy8 >> 2] = HEAP32[$8 >> 2];
   __ZNSt3__115__inplace_mergeIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEi($$byval_copy6, $$byval_copy7, $$byval_copy8, $__comp, $67, $68, $__buff, $__buff_size);
   HEAP32[$__last >> 2] = $123;
   $$0$be = $__len11$0;
   $$04$be = $__len21$0;
   $storemerge = $70;
  }
  HEAP32[$__middle >> 2] = $storemerge;
  if (($$04$be | 0) == 0 | ($$0$be | 0) == 0) {
   label = 43;
   break;
  } else {
   $$043 = $$0$be;
   $$0442 = $$04$be;
   $13 = $storemerge;
   $130 = $storemerge;
   $24 = $storemerge;
  }
 }
 if ((label | 0) == 7) {
  HEAP32[$0 >> 2] = $$lcssa$lcssa;
  HEAP32[$1 >> 2] = $$lcssa147;
  HEAP32[$2 >> 2] = HEAP32[$__last >> 2];
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$$byval_copy7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy8 >> 2] = HEAP32[$2 >> 2];
  __ZNSt3__124__buffered_inplace_mergeIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeE($$byval_copy6, $$byval_copy7, $$byval_copy8, $__comp, $$1$lcssa$lcssa, $$0442$lcssa154, $__buff);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 16) {
  HEAP32[$$byval_copy8 >> 2] = HEAP32[$$in84$lcssa$lcssa135 >> 2];
  HEAP32[$$byval_copy8 + 4 >> 2] = HEAP32[$$in84$lcssa$lcssa135 + 4 >> 2];
  HEAP32[$$byval_copy8 + 8 >> 2] = HEAP32[$$in84$lcssa$lcssa135 + 8 >> 2];
  HEAP32[$$byval_copy8 + 12 >> 2] = HEAP32[$$in84$lcssa$lcssa135 + 12 >> 2];
  HEAP32[$$byval_copy8 + 16 >> 2] = HEAP32[$$in84$lcssa$lcssa135 + 16 >> 2];
  HEAP32[$$byval_copy8 + 20 >> 2] = HEAP32[$$in84$lcssa$lcssa135 + 20 >> 2];
  HEAP32[$$in84$lcssa$lcssa135 >> 2] = HEAP32[$$lcssa152 >> 2];
  HEAP32[$$in84$lcssa$lcssa135 + 4 >> 2] = HEAP32[$$lcssa152 + 4 >> 2];
  HEAP32[$$in84$lcssa$lcssa135 + 8 >> 2] = HEAP32[$$lcssa152 + 8 >> 2];
  HEAP32[$$in84$lcssa$lcssa135 + 12 >> 2] = HEAP32[$$lcssa152 + 12 >> 2];
  HEAP32[$$in84$lcssa$lcssa135 + 16 >> 2] = HEAP32[$$lcssa152 + 16 >> 2];
  HEAP32[$$in84$lcssa$lcssa135 + 20 >> 2] = HEAP32[$$lcssa152 + 20 >> 2];
  HEAP32[$$lcssa152 >> 2] = HEAP32[$$byval_copy8 >> 2];
  HEAP32[$$lcssa152 + 4 >> 2] = HEAP32[$$byval_copy8 + 4 >> 2];
  HEAP32[$$lcssa152 + 8 >> 2] = HEAP32[$$byval_copy8 + 8 >> 2];
  HEAP32[$$lcssa152 + 12 >> 2] = HEAP32[$$byval_copy8 + 12 >> 2];
  HEAP32[$$lcssa152 + 16 >> 2] = HEAP32[$$byval_copy8 + 16 >> 2];
  HEAP32[$$lcssa152 + 20 >> 2] = HEAP32[$$byval_copy8 + 20 >> 2];
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 43) {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEvT0_SB_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $$0$lcssa206 = 0, $$0$lcssa207 = 0, $$0$lcssa208 = 0, $$0$lcssa209 = 0, $$0$lcssa210 = 0, $$0$lcssa213 = 0, $$0$ph = 0, $$01$ph = 0, $$01$ph$lcssa222 = 0, $$lcssa = 0, $$lcssa199 = 0, $$lcssa202 = 0, $$lcssa203 = 0, $$lcssa204 = 0, $$lcssa205 = 0, $$lcssa226 = 0, $$lcssa227 = 0, $$lcssa228 = 0, $$lcssa229 = 0, $$lcssa234 = 0, $$lcssa235 = 0, $$lcssa237 = 0, $0 = 0, $1 = 0, $104 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $117 = 0, $123 = 0, $129 = 0, $131 = 0, $141 = 0, $144 = 0, $15 = 0, $151 = 0, $154 = 0, $158 = 0, $164 = 0, $167 = 0, $173 = 0, $175 = 0, $180 = 0, $189 = 0, $19 = 0, $193 = 0, $194 = 0, $196 = 0, $2 = 0, $20 = 0, $202 = 0, $202$phi = 0, $26 = 0, $28 = 0, $3 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $45 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $63 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $77 = 0, $79 = 0, $84 = 0, $86 = 0, $9 = 0, $91 = 0, $98 = 0, $__i$040 = 0, $__i$040$lcssa = 0, $__i$1 = 0, $__i$2 = 0, $__i$2$lcssa = 0, $__i$2$ph = 0, $__i$3 = 0, $__i$3$lcssa = 0, $__i$3$ph = 0, $__i$4 = 0, $__i$4$lcssa215 = 0, $__j$0 = 0, $__j$1$ph = 0, $__j$2 = 0, $__j$3 = 0, $__j$4$ph = 0, $__j$5 = 0, $__m$0$ph = 0, $__m$2 = 0, $__n_swaps$0 = 0, $__n_swaps$3 = 0, $__n_swaps$4$ph = 0, $__n_swaps$5 = 0, $__n_swaps$6 = 0, label = 0;
 $$0$ph = $__first;
 $$01$ph = $__last;
 L1 : while (1) {
  $0 = $$01$ph;
  $1 = $$01$ph + -4 | 0;
  $$0 = $$0$ph;
  L3 : while (1) {
   $2 = $$0;
   $3 = $0 - $2 | 0;
   $4 = $3 >> 2;
   switch ($4 | 0) {
   case 2:
    {
     $$0$lcssa206 = $$0;
     $$lcssa226 = $1;
     $$lcssa234 = $1;
     label = 4;
     break L1;
     break;
    }
   case 3:
    {
     $$0$lcssa207 = $$0;
     $$lcssa227 = $1;
     $$lcssa235 = $1;
     label = 6;
     break L1;
     break;
    }
   case 4:
    {
     $$0$lcssa208 = $$0;
     $$lcssa228 = $1;
     label = 14;
     break L1;
     break;
    }
   case 5:
    {
     $$0$lcssa209 = $$0;
     $$lcssa229 = $1;
     $$lcssa237 = $1;
     label = 15;
     break L1;
     break;
    }
   case 1:
   case 0:
    {
     label = 69;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($3 | 0) < 124) {
    $$0$lcssa210 = $$0;
    $$01$ph$lcssa222 = $$01$ph;
    label = 21;
    break L1;
   }
   $67 = ($4 | 0) / 2 | 0;
   $68 = $$0 + ($67 << 2) | 0;
   do if (($3 | 0) > 3996) {
    $69 = ($4 | 0) / 4 | 0;
    $70 = $$0 + ($69 << 2) | 0;
    $71 = $$0 + ($69 + $67 << 2) | 0;
    $72 = __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEjT0_SB_SB_SB_T_($$0, $70, $68, $71, $__comp) | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, HEAP32[$71 >> 2] | 0) | 0) {
     $77 = HEAP32[$71 >> 2] | 0;
     HEAP32[$71 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $77;
     $79 = $72 + 1 | 0;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$71 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0) {
      $84 = HEAP32[$68 >> 2] | 0;
      HEAP32[$68 >> 2] = HEAP32[$71 >> 2];
      HEAP32[$71 >> 2] = $84;
      $86 = $72 + 2 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$70 >> 2] | 0) | 0) {
       $91 = HEAP32[$70 >> 2] | 0;
       HEAP32[$70 >> 2] = HEAP32[$68 >> 2];
       HEAP32[$68 >> 2] = $91;
       if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$70 >> 2] | 0, HEAP32[$$0 >> 2] | 0) | 0) {
        $98 = HEAP32[$$0 >> 2] | 0;
        HEAP32[$$0 >> 2] = HEAP32[$70 >> 2];
        HEAP32[$70 >> 2] = $98;
        $__n_swaps$0 = $72 + 4 | 0;
       } else $__n_swaps$0 = $72 + 3 | 0;
      } else $__n_swaps$0 = $86;
     } else $__n_swaps$0 = $79;
    } else $__n_swaps$0 = $72;
   } else {
    $104 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$$0 >> 2] | 0) | 0;
    $108 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0;
    if (!$104) {
     if (!$108) {
      $__n_swaps$0 = 0;
      break;
     }
     $109 = HEAP32[$68 >> 2] | 0;
     HEAP32[$68 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $109;
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$$0 >> 2] | 0) | 0)) {
      $__n_swaps$0 = 1;
      break;
     }
     $115 = HEAP32[$$0 >> 2] | 0;
     HEAP32[$$0 >> 2] = HEAP32[$68 >> 2];
     HEAP32[$68 >> 2] = $115;
     $__n_swaps$0 = 2;
     break;
    }
    $117 = HEAP32[$$0 >> 2] | 0;
    if ($108) {
     HEAP32[$$0 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $117;
     $__n_swaps$0 = 1;
     break;
    }
    HEAP32[$$0 >> 2] = HEAP32[$68 >> 2];
    HEAP32[$68 >> 2] = $117;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, $117) | 0) {
     $123 = HEAP32[$68 >> 2] | 0;
     HEAP32[$68 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $123;
     $__n_swaps$0 = 2;
    } else $__n_swaps$0 = 1;
   } while (0);
   do if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0) {
    $__j$3 = $1;
    $__n_swaps$3 = $__n_swaps$0;
   } else {
    $__j$0 = $1;
    while (1) {
     $129 = $__j$0 + -4 | 0;
     if (($$0 | 0) == ($129 | 0)) break;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$129 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0) {
      $$lcssa199 = $129;
      label = 51;
      break;
     } else $__j$0 = $129;
    }
    if ((label | 0) == 51) {
     label = 0;
     $164 = HEAP32[$$0 >> 2] | 0;
     HEAP32[$$0 >> 2] = HEAP32[$$lcssa199 >> 2];
     HEAP32[$$lcssa199 >> 2] = $164;
     $__j$3 = $$lcssa199;
     $__n_swaps$3 = $__n_swaps$0 + 1 | 0;
     break;
    }
    $131 = $$0 + 4 | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0) $__i$1 = $131; else {
     if (($131 | 0) == ($1 | 0)) {
      label = 69;
      break L1;
     } else {
      $202 = $$0;
      $__i$040 = $131;
     }
     while (1) {
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$__i$040 >> 2] | 0) | 0) {
       $$lcssa = $202;
       $__i$040$lcssa = $__i$040;
       break;
      }
      $144 = $__i$040 + 4 | 0;
      if (($144 | 0) == ($1 | 0)) {
       label = 69;
       break L1;
      } else {
       $202$phi = $__i$040;
       $__i$040 = $144;
       $202 = $202$phi;
      }
     }
     $141 = HEAP32[$__i$040$lcssa >> 2] | 0;
     HEAP32[$__i$040$lcssa >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $141;
     $__i$1 = $$lcssa + 8 | 0;
    }
    if (($__i$1 | 0) == ($1 | 0)) {
     label = 69;
     break L1;
    } else {
     $__i$2$ph = $__i$1;
     $__j$1$ph = $1;
    }
    while (1) {
     $__i$2 = $__i$2$ph;
     while (1) {
      $151 = $__i$2 + 4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$__i$2 >> 2] | 0) | 0) {
       $$lcssa202 = $151;
       $__i$2$lcssa = $__i$2;
       break;
      } else $__i$2 = $151;
     }
     $__j$2 = $__j$1$ph;
     while (1) {
      $154 = $__j$2 + -4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$154 >> 2] | 0) | 0) $__j$2 = $154; else {
       $$lcssa203 = $154;
       break;
      }
     }
     if ($__i$2$lcssa >>> 0 >= $$lcssa203 >>> 0) {
      $$0 = $__i$2$lcssa;
      continue L3;
     }
     $158 = HEAP32[$__i$2$lcssa >> 2] | 0;
     HEAP32[$__i$2$lcssa >> 2] = HEAP32[$$lcssa203 >> 2];
     HEAP32[$$lcssa203 >> 2] = $158;
     $__i$2$ph = $$lcssa202;
     $__j$1$ph = $$lcssa203;
    }
   } while (0);
   $167 = $$0 + 4 | 0;
   L48 : do if ($167 >>> 0 < $__j$3 >>> 0) {
    $__i$3$ph = $167;
    $__j$4$ph = $__j$3;
    $__m$0$ph = $68;
    $__n_swaps$4$ph = $__n_swaps$3;
    while (1) {
     $__i$3 = $__i$3$ph;
     while (1) {
      $173 = $__i$3 + 4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__i$3 >> 2] | 0, HEAP32[$__m$0$ph >> 2] | 0) | 0) $__i$3 = $173; else {
       $$lcssa204 = $173;
       $__i$3$lcssa = $__i$3;
       break;
      }
     }
     $__j$5 = $__j$4$ph;
     while (1) {
      $175 = $__j$5 + -4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$175 >> 2] | 0, HEAP32[$__m$0$ph >> 2] | 0) | 0) {
       $$lcssa205 = $175;
       break;
      } else $__j$5 = $175;
     }
     if ($__i$3$lcssa >>> 0 > $$lcssa205 >>> 0) {
      $__i$4 = $__i$3$lcssa;
      $__m$2 = $__m$0$ph;
      $__n_swaps$5 = $__n_swaps$4$ph;
      break L48;
     }
     $180 = HEAP32[$__i$3$lcssa >> 2] | 0;
     HEAP32[$__i$3$lcssa >> 2] = HEAP32[$$lcssa205 >> 2];
     HEAP32[$$lcssa205 >> 2] = $180;
     $__i$3$ph = $$lcssa204;
     $__j$4$ph = $$lcssa205;
     $__m$0$ph = ($__m$0$ph | 0) == ($__i$3$lcssa | 0) ? $$lcssa205 : $__m$0$ph;
     $__n_swaps$4$ph = $__n_swaps$4$ph + 1 | 0;
    }
   } else {
    $__i$4 = $167;
    $__m$2 = $68;
    $__n_swaps$5 = $__n_swaps$3;
   } while (0);
   if (($__i$4 | 0) == ($__m$2 | 0)) $__n_swaps$6 = $__n_swaps$5; else if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__m$2 >> 2] | 0, HEAP32[$__i$4 >> 2] | 0) | 0) {
    $189 = HEAP32[$__i$4 >> 2] | 0;
    HEAP32[$__i$4 >> 2] = HEAP32[$__m$2 >> 2];
    HEAP32[$__m$2 >> 2] = $189;
    $__n_swaps$6 = $__n_swaps$5 + 1 | 0;
   } else $__n_swaps$6 = $__n_swaps$5;
   if (!$__n_swaps$6) {
    $193 = __ZNSt3__127__insertion_sort_incompleteIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEbT0_SB_T_($$0, $__i$4, $__comp) | 0;
    $194 = $__i$4 + 4 | 0;
    if (__ZNSt3__127__insertion_sort_incompleteIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEbT0_SB_T_($194, $$01$ph, $__comp) | 0) {
     label = 64;
     break;
    }
    if ($193) {
     $$0 = $194;
     continue;
    }
   }
   $196 = $__i$4;
   if (($196 - $2 | 0) >= ($0 - $196 | 0)) {
    $$0$lcssa213 = $$0;
    $__i$4$lcssa215 = $__i$4;
    label = 68;
    break;
   }
   __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEvT0_SB_T_($$0, $__i$4, $__comp);
   $$0 = $__i$4 + 4 | 0;
  }
  if ((label | 0) == 64) {
   label = 0;
   if ($193) {
    label = 69;
    break;
   } else {
    $$0$ph = $$0;
    $$01$ph = $__i$4;
    continue;
   }
  } else if ((label | 0) == 68) {
   label = 0;
   __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEvT0_SB_T_($__i$4$lcssa215 + 4 | 0, $$01$ph, $__comp);
   $$0$ph = $$0$lcssa213;
   $$01$ph = $__i$4$lcssa215;
   continue;
  }
 }
 if ((label | 0) == 4) {
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa226 >> 2] | 0, HEAP32[$$0$lcssa206 >> 2] | 0) | 0)) return;
  $9 = HEAP32[$$0$lcssa206 >> 2] | 0;
  HEAP32[$$0$lcssa206 >> 2] = HEAP32[$$lcssa234 >> 2];
  HEAP32[$$lcssa234 >> 2] = $9;
  return;
 } else if ((label | 0) == 6) {
  $11 = $$0$lcssa207 + 4 | 0;
  $15 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$$0$lcssa207 >> 2] | 0) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa227 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
  if (!$15) {
   if (!$19) return;
   $20 = HEAP32[$11 >> 2] | 0;
   HEAP32[$11 >> 2] = HEAP32[$$lcssa235 >> 2];
   HEAP32[$$lcssa235 >> 2] = $20;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$$0$lcssa207 >> 2] | 0) | 0)) return;
   $26 = HEAP32[$$0$lcssa207 >> 2] | 0;
   HEAP32[$$0$lcssa207 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = $26;
   return;
  }
  $28 = HEAP32[$$0$lcssa207 >> 2] | 0;
  if ($19) {
   HEAP32[$$0$lcssa207 >> 2] = HEAP32[$$lcssa235 >> 2];
   HEAP32[$$lcssa235 >> 2] = $28;
   return;
  }
  HEAP32[$$0$lcssa207 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$11 >> 2] = $28;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa227 >> 2] | 0, $28) | 0)) return;
  $34 = HEAP32[$11 >> 2] | 0;
  HEAP32[$11 >> 2] = HEAP32[$$lcssa235 >> 2];
  HEAP32[$$lcssa235 >> 2] = $34;
  return;
 } else if ((label | 0) == 14) {
  __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEjT0_SB_SB_SB_T_($$0$lcssa208, $$0$lcssa208 + 4 | 0, $$0$lcssa208 + 8 | 0, $$lcssa228, $__comp) | 0;
  return;
 } else if ((label | 0) == 15) {
  $38 = $$0$lcssa209 + 4 | 0;
  $39 = $$0$lcssa209 + 8 | 0;
  $40 = $$0$lcssa209 + 12 | 0;
  __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEjT0_SB_SB_SB_T_($$0$lcssa209, $38, $39, $40, $__comp) | 0;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa229 >> 2] | 0, HEAP32[$40 >> 2] | 0) | 0)) return;
  $45 = HEAP32[$40 >> 2] | 0;
  HEAP32[$40 >> 2] = HEAP32[$$lcssa237 >> 2];
  HEAP32[$$lcssa237 >> 2] = $45;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$40 >> 2] | 0, HEAP32[$39 >> 2] | 0) | 0)) return;
  $51 = HEAP32[$39 >> 2] | 0;
  $52 = HEAP32[$40 >> 2] | 0;
  HEAP32[$39 >> 2] = $52;
  HEAP32[$40 >> 2] = $51;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($52, HEAP32[$38 >> 2] | 0) | 0)) return;
  $57 = HEAP32[$38 >> 2] | 0;
  $58 = HEAP32[$39 >> 2] | 0;
  HEAP32[$38 >> 2] = $58;
  HEAP32[$39 >> 2] = $57;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($58, HEAP32[$$0$lcssa209 >> 2] | 0) | 0)) return;
  $63 = HEAP32[$$0$lcssa209 >> 2] | 0;
  HEAP32[$$0$lcssa209 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$38 >> 2] = $63;
  return;
 } else if ((label | 0) == 21) {
  __ZNSt3__118__insertion_sort_3IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEvT0_SB_T_($$0$lcssa210, $$01$ph$lcssa222, $__comp);
  return;
 } else if ((label | 0) == 69) return;
}

function __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEvT0_SB_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $$0$lcssa206 = 0, $$0$lcssa207 = 0, $$0$lcssa208 = 0, $$0$lcssa209 = 0, $$0$lcssa210 = 0, $$0$lcssa213 = 0, $$0$ph = 0, $$01$ph = 0, $$01$ph$lcssa222 = 0, $$lcssa = 0, $$lcssa199 = 0, $$lcssa202 = 0, $$lcssa203 = 0, $$lcssa204 = 0, $$lcssa205 = 0, $$lcssa226 = 0, $$lcssa227 = 0, $$lcssa228 = 0, $$lcssa229 = 0, $$lcssa234 = 0, $$lcssa235 = 0, $$lcssa237 = 0, $0 = 0, $1 = 0, $104 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $117 = 0, $123 = 0, $129 = 0, $131 = 0, $141 = 0, $144 = 0, $15 = 0, $151 = 0, $154 = 0, $158 = 0, $164 = 0, $167 = 0, $173 = 0, $175 = 0, $180 = 0, $189 = 0, $19 = 0, $193 = 0, $194 = 0, $196 = 0, $2 = 0, $20 = 0, $202 = 0, $202$phi = 0, $26 = 0, $28 = 0, $3 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $45 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $63 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $77 = 0, $79 = 0, $84 = 0, $86 = 0, $9 = 0, $91 = 0, $98 = 0, $__i$040 = 0, $__i$040$lcssa = 0, $__i$1 = 0, $__i$2 = 0, $__i$2$lcssa = 0, $__i$2$ph = 0, $__i$3 = 0, $__i$3$lcssa = 0, $__i$3$ph = 0, $__i$4 = 0, $__i$4$lcssa215 = 0, $__j$0 = 0, $__j$1$ph = 0, $__j$2 = 0, $__j$3 = 0, $__j$4$ph = 0, $__j$5 = 0, $__m$0$ph = 0, $__m$2 = 0, $__n_swaps$0 = 0, $__n_swaps$3 = 0, $__n_swaps$4$ph = 0, $__n_swaps$5 = 0, $__n_swaps$6 = 0, label = 0;
 $$0$ph = $__first;
 $$01$ph = $__last;
 L1 : while (1) {
  $0 = $$01$ph;
  $1 = $$01$ph + -4 | 0;
  $$0 = $$0$ph;
  L3 : while (1) {
   $2 = $$0;
   $3 = $0 - $2 | 0;
   $4 = $3 >> 2;
   switch ($4 | 0) {
   case 2:
    {
     $$0$lcssa206 = $$0;
     $$lcssa226 = $1;
     $$lcssa234 = $1;
     label = 4;
     break L1;
     break;
    }
   case 3:
    {
     $$0$lcssa207 = $$0;
     $$lcssa227 = $1;
     $$lcssa235 = $1;
     label = 6;
     break L1;
     break;
    }
   case 4:
    {
     $$0$lcssa208 = $$0;
     $$lcssa228 = $1;
     label = 14;
     break L1;
     break;
    }
   case 5:
    {
     $$0$lcssa209 = $$0;
     $$lcssa229 = $1;
     $$lcssa237 = $1;
     label = 15;
     break L1;
     break;
    }
   case 1:
   case 0:
    {
     label = 69;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($3 | 0) < 124) {
    $$0$lcssa210 = $$0;
    $$01$ph$lcssa222 = $$01$ph;
    label = 21;
    break L1;
   }
   $67 = ($4 | 0) / 2 | 0;
   $68 = $$0 + ($67 << 2) | 0;
   do if (($3 | 0) > 3996) {
    $69 = ($4 | 0) / 4 | 0;
    $70 = $$0 + ($69 << 2) | 0;
    $71 = $$0 + ($69 + $67 << 2) | 0;
    $72 = __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEjT0_SB_SB_SB_T_($$0, $70, $68, $71, $__comp) | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, HEAP32[$71 >> 2] | 0) | 0) {
     $77 = HEAP32[$71 >> 2] | 0;
     HEAP32[$71 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $77;
     $79 = $72 + 1 | 0;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$71 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0) {
      $84 = HEAP32[$68 >> 2] | 0;
      HEAP32[$68 >> 2] = HEAP32[$71 >> 2];
      HEAP32[$71 >> 2] = $84;
      $86 = $72 + 2 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$70 >> 2] | 0) | 0) {
       $91 = HEAP32[$70 >> 2] | 0;
       HEAP32[$70 >> 2] = HEAP32[$68 >> 2];
       HEAP32[$68 >> 2] = $91;
       if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$70 >> 2] | 0, HEAP32[$$0 >> 2] | 0) | 0) {
        $98 = HEAP32[$$0 >> 2] | 0;
        HEAP32[$$0 >> 2] = HEAP32[$70 >> 2];
        HEAP32[$70 >> 2] = $98;
        $__n_swaps$0 = $72 + 4 | 0;
       } else $__n_swaps$0 = $72 + 3 | 0;
      } else $__n_swaps$0 = $86;
     } else $__n_swaps$0 = $79;
    } else $__n_swaps$0 = $72;
   } else {
    $104 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$$0 >> 2] | 0) | 0;
    $108 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0;
    if (!$104) {
     if (!$108) {
      $__n_swaps$0 = 0;
      break;
     }
     $109 = HEAP32[$68 >> 2] | 0;
     HEAP32[$68 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $109;
     if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$$0 >> 2] | 0) | 0)) {
      $__n_swaps$0 = 1;
      break;
     }
     $115 = HEAP32[$$0 >> 2] | 0;
     HEAP32[$$0 >> 2] = HEAP32[$68 >> 2];
     HEAP32[$68 >> 2] = $115;
     $__n_swaps$0 = 2;
     break;
    }
    $117 = HEAP32[$$0 >> 2] | 0;
    if ($108) {
     HEAP32[$$0 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $117;
     $__n_swaps$0 = 1;
     break;
    }
    HEAP32[$$0 >> 2] = HEAP32[$68 >> 2];
    HEAP32[$68 >> 2] = $117;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, $117) | 0) {
     $123 = HEAP32[$68 >> 2] | 0;
     HEAP32[$68 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $123;
     $__n_swaps$0 = 2;
    } else $__n_swaps$0 = 1;
   } while (0);
   do if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0) {
    $__j$3 = $1;
    $__n_swaps$3 = $__n_swaps$0;
   } else {
    $__j$0 = $1;
    while (1) {
     $129 = $__j$0 + -4 | 0;
     if (($$0 | 0) == ($129 | 0)) break;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$129 >> 2] | 0, HEAP32[$68 >> 2] | 0) | 0) {
      $$lcssa199 = $129;
      label = 51;
      break;
     } else $__j$0 = $129;
    }
    if ((label | 0) == 51) {
     label = 0;
     $164 = HEAP32[$$0 >> 2] | 0;
     HEAP32[$$0 >> 2] = HEAP32[$$lcssa199 >> 2];
     HEAP32[$$lcssa199 >> 2] = $164;
     $__j$3 = $$lcssa199;
     $__n_swaps$3 = $__n_swaps$0 + 1 | 0;
     break;
    }
    $131 = $$0 + 4 | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0) $__i$1 = $131; else {
     if (($131 | 0) == ($1 | 0)) {
      label = 69;
      break L1;
     } else {
      $202 = $$0;
      $__i$040 = $131;
     }
     while (1) {
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$__i$040 >> 2] | 0) | 0) {
       $$lcssa = $202;
       $__i$040$lcssa = $__i$040;
       break;
      }
      $144 = $__i$040 + 4 | 0;
      if (($144 | 0) == ($1 | 0)) {
       label = 69;
       break L1;
      } else {
       $202$phi = $__i$040;
       $__i$040 = $144;
       $202 = $202$phi;
      }
     }
     $141 = HEAP32[$__i$040$lcssa >> 2] | 0;
     HEAP32[$__i$040$lcssa >> 2] = HEAP32[$1 >> 2];
     HEAP32[$1 >> 2] = $141;
     $__i$1 = $$lcssa + 8 | 0;
    }
    if (($__i$1 | 0) == ($1 | 0)) {
     label = 69;
     break L1;
    } else {
     $__i$2$ph = $__i$1;
     $__j$1$ph = $1;
    }
    while (1) {
     $__i$2 = $__i$2$ph;
     while (1) {
      $151 = $__i$2 + 4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$__i$2 >> 2] | 0) | 0) {
       $$lcssa202 = $151;
       $__i$2$lcssa = $__i$2;
       break;
      } else $__i$2 = $151;
     }
     $__j$2 = $__j$1$ph;
     while (1) {
      $154 = $__j$2 + -4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$0 >> 2] | 0, HEAP32[$154 >> 2] | 0) | 0) $__j$2 = $154; else {
       $$lcssa203 = $154;
       break;
      }
     }
     if ($__i$2$lcssa >>> 0 >= $$lcssa203 >>> 0) {
      $$0 = $__i$2$lcssa;
      continue L3;
     }
     $158 = HEAP32[$__i$2$lcssa >> 2] | 0;
     HEAP32[$__i$2$lcssa >> 2] = HEAP32[$$lcssa203 >> 2];
     HEAP32[$$lcssa203 >> 2] = $158;
     $__i$2$ph = $$lcssa202;
     $__j$1$ph = $$lcssa203;
    }
   } while (0);
   $167 = $$0 + 4 | 0;
   L48 : do if ($167 >>> 0 < $__j$3 >>> 0) {
    $__i$3$ph = $167;
    $__j$4$ph = $__j$3;
    $__m$0$ph = $68;
    $__n_swaps$4$ph = $__n_swaps$3;
    while (1) {
     $__i$3 = $__i$3$ph;
     while (1) {
      $173 = $__i$3 + 4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__i$3 >> 2] | 0, HEAP32[$__m$0$ph >> 2] | 0) | 0) $__i$3 = $173; else {
       $$lcssa204 = $173;
       $__i$3$lcssa = $__i$3;
       break;
      }
     }
     $__j$5 = $__j$4$ph;
     while (1) {
      $175 = $__j$5 + -4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$175 >> 2] | 0, HEAP32[$__m$0$ph >> 2] | 0) | 0) {
       $$lcssa205 = $175;
       break;
      } else $__j$5 = $175;
     }
     if ($__i$3$lcssa >>> 0 > $$lcssa205 >>> 0) {
      $__i$4 = $__i$3$lcssa;
      $__m$2 = $__m$0$ph;
      $__n_swaps$5 = $__n_swaps$4$ph;
      break L48;
     }
     $180 = HEAP32[$__i$3$lcssa >> 2] | 0;
     HEAP32[$__i$3$lcssa >> 2] = HEAP32[$$lcssa205 >> 2];
     HEAP32[$$lcssa205 >> 2] = $180;
     $__i$3$ph = $$lcssa204;
     $__j$4$ph = $$lcssa205;
     $__m$0$ph = ($__m$0$ph | 0) == ($__i$3$lcssa | 0) ? $$lcssa205 : $__m$0$ph;
     $__n_swaps$4$ph = $__n_swaps$4$ph + 1 | 0;
    }
   } else {
    $__i$4 = $167;
    $__m$2 = $68;
    $__n_swaps$5 = $__n_swaps$3;
   } while (0);
   if (($__i$4 | 0) == ($__m$2 | 0)) $__n_swaps$6 = $__n_swaps$5; else if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__m$2 >> 2] | 0, HEAP32[$__i$4 >> 2] | 0) | 0) {
    $189 = HEAP32[$__i$4 >> 2] | 0;
    HEAP32[$__i$4 >> 2] = HEAP32[$__m$2 >> 2];
    HEAP32[$__m$2 >> 2] = $189;
    $__n_swaps$6 = $__n_swaps$5 + 1 | 0;
   } else $__n_swaps$6 = $__n_swaps$5;
   if (!$__n_swaps$6) {
    $193 = __ZNSt3__127__insertion_sort_incompleteIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEbT0_SB_T_($$0, $__i$4, $__comp) | 0;
    $194 = $__i$4 + 4 | 0;
    if (__ZNSt3__127__insertion_sort_incompleteIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEbT0_SB_T_($194, $$01$ph, $__comp) | 0) {
     label = 64;
     break;
    }
    if ($193) {
     $$0 = $194;
     continue;
    }
   }
   $196 = $__i$4;
   if (($196 - $2 | 0) >= ($0 - $196 | 0)) {
    $$0$lcssa213 = $$0;
    $__i$4$lcssa215 = $__i$4;
    label = 68;
    break;
   }
   __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEvT0_SB_T_($$0, $__i$4, $__comp);
   $$0 = $__i$4 + 4 | 0;
  }
  if ((label | 0) == 64) {
   label = 0;
   if ($193) {
    label = 69;
    break;
   } else {
    $$0$ph = $$0;
    $$01$ph = $__i$4;
    continue;
   }
  } else if ((label | 0) == 68) {
   label = 0;
   __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEvT0_SB_T_($__i$4$lcssa215 + 4 | 0, $$01$ph, $__comp);
   $$0$ph = $$0$lcssa213;
   $$01$ph = $__i$4$lcssa215;
   continue;
  }
 }
 if ((label | 0) == 4) {
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa226 >> 2] | 0, HEAP32[$$0$lcssa206 >> 2] | 0) | 0)) return;
  $9 = HEAP32[$$0$lcssa206 >> 2] | 0;
  HEAP32[$$0$lcssa206 >> 2] = HEAP32[$$lcssa234 >> 2];
  HEAP32[$$lcssa234 >> 2] = $9;
  return;
 } else if ((label | 0) == 6) {
  $11 = $$0$lcssa207 + 4 | 0;
  $15 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$$0$lcssa207 >> 2] | 0) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa227 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
  if (!$15) {
   if (!$19) return;
   $20 = HEAP32[$11 >> 2] | 0;
   HEAP32[$11 >> 2] = HEAP32[$$lcssa235 >> 2];
   HEAP32[$$lcssa235 >> 2] = $20;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$$0$lcssa207 >> 2] | 0) | 0)) return;
   $26 = HEAP32[$$0$lcssa207 >> 2] | 0;
   HEAP32[$$0$lcssa207 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = $26;
   return;
  }
  $28 = HEAP32[$$0$lcssa207 >> 2] | 0;
  if ($19) {
   HEAP32[$$0$lcssa207 >> 2] = HEAP32[$$lcssa235 >> 2];
   HEAP32[$$lcssa235 >> 2] = $28;
   return;
  }
  HEAP32[$$0$lcssa207 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$11 >> 2] = $28;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa227 >> 2] | 0, $28) | 0)) return;
  $34 = HEAP32[$11 >> 2] | 0;
  HEAP32[$11 >> 2] = HEAP32[$$lcssa235 >> 2];
  HEAP32[$$lcssa235 >> 2] = $34;
  return;
 } else if ((label | 0) == 14) {
  __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEjT0_SB_SB_SB_T_($$0$lcssa208, $$0$lcssa208 + 4 | 0, $$0$lcssa208 + 8 | 0, $$lcssa228, $__comp) | 0;
  return;
 } else if ((label | 0) == 15) {
  $38 = $$0$lcssa209 + 4 | 0;
  $39 = $$0$lcssa209 + 8 | 0;
  $40 = $$0$lcssa209 + 12 | 0;
  __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEjT0_SB_SB_SB_T_($$0$lcssa209, $38, $39, $40, $__comp) | 0;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$$lcssa229 >> 2] | 0, HEAP32[$40 >> 2] | 0) | 0)) return;
  $45 = HEAP32[$40 >> 2] | 0;
  HEAP32[$40 >> 2] = HEAP32[$$lcssa237 >> 2];
  HEAP32[$$lcssa237 >> 2] = $45;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$40 >> 2] | 0, HEAP32[$39 >> 2] | 0) | 0)) return;
  $51 = HEAP32[$39 >> 2] | 0;
  $52 = HEAP32[$40 >> 2] | 0;
  HEAP32[$39 >> 2] = $52;
  HEAP32[$40 >> 2] = $51;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($52, HEAP32[$38 >> 2] | 0) | 0)) return;
  $57 = HEAP32[$38 >> 2] | 0;
  $58 = HEAP32[$39 >> 2] | 0;
  HEAP32[$38 >> 2] = $58;
  HEAP32[$39 >> 2] = $57;
  if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($58, HEAP32[$$0$lcssa209 >> 2] | 0) | 0)) return;
  $63 = HEAP32[$$0$lcssa209 >> 2] | 0;
  HEAP32[$$0$lcssa209 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$38 >> 2] = $63;
  return;
 } else if ((label | 0) == 21) {
  __ZNSt3__118__insertion_sort_3IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEvT0_SB_T_($$0$lcssa210, $$01$ph$lcssa222, $__comp);
  return;
 } else if ((label | 0) == 69) return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0$i$i$i = 0, $$0$i$i$i10 = 0, $$0$i$i$i21 = 0, $$0$i$i$i7 = 0, $$1 = 0, $$lcssa = 0, $$lcssa152 = 0, $$pre = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $118 = 0, $12 = 0, $121 = 0, $124 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $154 = 0, $157 = 0, $16 = 0, $164 = 0, $174 = 0, $176 = 0, $18 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $19 = 0, $192 = 0, $193 = 0, $195 = 0, $2 = 0, $209 = 0, $211 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $225 = 0, $227 = 0, $23 = 0, $230 = 0, $231 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $38 = 0, $43 = 0, $44 = 0, $45 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $66 = 0, $76 = 0, $82 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $96 = 0, $98 = 0, $99 = 0, $__v$i$i20 = 0, $args = 0, $k$0121 = 0, $k1$0124 = 0, $k2$0123 = 0, $t$0$lcssa = 0, $t$0126 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $__v$i$i20 = sp + 64 | 0;
 $args = sp + 52 | 0;
 $0 = sp + 40 | 0;
 $1 = sp + 16 | 0;
 $2 = sp;
 L1 : do if (($last - $first | 0) > 1) if ((HEAP8[$first >> 0] | 0) == 73) {
  $9 = $db + 61 | 0;
  $$pre = $db + 36 | 0;
  if (HEAP8[$9 >> 0] | 0) {
   $12 = HEAP32[$$pre >> 2] | 0;
   $14 = HEAP32[$12 + -16 >> 2] | 0;
   $15 = $12 + -12 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   if (($16 | 0) != ($14 | 0)) {
    $19 = $16;
    do {
     $18 = $19 + -16 | 0;
     HEAP32[$15 >> 2] = $18;
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($18);
     $19 = HEAP32[$15 >> 2] | 0;
    } while (($19 | 0) != ($14 | 0));
   }
  }
  $22 = $first + 1 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($args, 25635, 1);
  $23 = $db + 4 | 0;
  $24 = $db + 12 | 0;
  $25 = $__v$i$i20 + 8 | 0;
  $26 = $__v$i$i20 + 8 | 0;
  $27 = $args + 4 | 0;
  $28 = $0 + 8 | 0;
  $29 = $0 + 1 | 0;
  $30 = $0 + 4 | 0;
  $31 = $db + 32 | 0;
  $32 = $db + 40 | 0;
  $33 = $db + 44 | 0;
  $34 = $__v$i$i20 + 8 | 0;
  L9 : do if ((HEAP8[$22 >> 0] | 0) == 69) $t$0$lcssa = $22; else {
   $t$0126 = $22;
   L10 : while (1) {
    do if (HEAP8[$9 >> 0] | 0) {
     $43 = HEAP32[$24 >> 2] | 0;
     $44 = HEAP32[$$pre >> 2] | 0;
     $45 = HEAP32[$32 >> 2] | 0;
     if ($44 >>> 0 < $45 >>> 0) {
      HEAP32[$44 >> 2] = 0;
      HEAP32[$44 + 4 >> 2] = 0;
      HEAP32[$44 + 8 >> 2] = 0;
      HEAP32[$44 + 12 >> 2] = $43;
      HEAP32[$$pre >> 2] = (HEAP32[$$pre >> 2] | 0) + 16;
      break;
     }
     $54 = HEAP32[$31 >> 2] | 0;
     $55 = $44 - $54 | 0;
     $56 = $55 >> 4;
     $57 = $56 + 1 | 0;
     if (($55 | 0) < -16) {
      label = 12;
      break L10;
     }
     $60 = $45 - $54 | 0;
     if ($60 >> 4 >>> 0 < 1073741823) {
      $63 = $60 >> 3;
      $$0$i$i$i = $63 >>> 0 < $57 >>> 0 ? $57 : $63;
     } else $$0$i$i$i = 2147483647;
     __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($__v$i$i20, $$0$i$i$i, $56, $33);
     $66 = HEAP32[$34 >> 2] | 0;
     HEAP32[$66 >> 2] = 0;
     HEAP32[$66 + 4 >> 2] = 0;
     HEAP32[$66 + 8 >> 2] = 0;
     HEAP32[$66 + 12 >> 2] = $43;
     HEAP32[$34 >> 2] = $66 + 16;
     __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($31, $__v$i$i20);
     __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v$i$i20);
    } while (0);
    $76 = ((HEAP32[$23 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
    $38 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($t$0126, $last, $db) | 0;
    $82 = ((HEAP32[$23 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
    if (HEAP8[$9 >> 0] | 0) {
     $85 = HEAP32[$$pre >> 2] | 0;
     $86 = $85 + -16 | 0;
     $88 = $85;
     do {
      $87 = $88 + -16 | 0;
      HEAP32[$$pre >> 2] = $87;
      __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($87);
      $88 = HEAP32[$$pre >> 2] | 0;
     } while (($88 | 0) != ($86 | 0));
    }
    if (($38 | 0) == ($t$0126 | 0) | ($38 | 0) == ($last | 0)) {
     label = 56;
     break;
    }
    if (HEAP8[$9 >> 0] | 0) {
     $95 = HEAP32[$$pre >> 2] | 0;
     $96 = $95 + -16 | 0;
     $98 = HEAP32[$24 >> 2] | 0;
     $99 = $95 + -12 | 0;
     $100 = HEAP32[$99 >> 2] | 0;
     $102 = HEAP32[$95 + -8 >> 2] | 0;
     if ($100 >>> 0 < $102 >>> 0) {
      HEAP32[$100 >> 2] = 0;
      HEAP32[$100 + 4 >> 2] = 0;
      HEAP32[$100 + 8 >> 2] = 0;
      HEAP32[$100 + 12 >> 2] = $98;
      HEAP32[$99 >> 2] = (HEAP32[$99 >> 2] | 0) + 16;
     } else {
      $112 = HEAP32[$96 >> 2] | 0;
      $113 = $100 - $112 | 0;
      $114 = $113 >> 4;
      $115 = $114 + 1 | 0;
      if (($113 | 0) < -16) {
       $$lcssa = $96;
       label = 25;
       break;
      }
      $118 = $102 - $112 | 0;
      if ($118 >> 4 >>> 0 < 1073741823) {
       $121 = $118 >> 3;
       $$0$i$i$i7 = $121 >>> 0 < $115 >>> 0 ? $115 : $121;
      } else $$0$i$i$i7 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i20, $$0$i$i$i7, $114, $95 + -4 | 0);
      $124 = HEAP32[$25 >> 2] | 0;
      HEAP32[$124 >> 2] = 0;
      HEAP32[$124 + 4 >> 2] = 0;
      HEAP32[$124 + 8 >> 2] = 0;
      HEAP32[$124 + 12 >> 2] = $98;
      HEAP32[$25 >> 2] = $124 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($96, $__v$i$i20);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i20);
     }
     if ($76 >>> 0 < $82 >>> 0) {
      $k$0121 = $76;
      do {
       $132 = HEAP32[(HEAP32[$$pre >> 2] | 0) + -12 >> 2] | 0;
       $133 = $132 + -16 | 0;
       $134 = HEAP32[$db >> 2] | 0;
       $135 = $134 + ($k$0121 * 24 | 0) | 0;
       $136 = $132 + -12 | 0;
       $137 = HEAP32[$136 >> 2] | 0;
       if (($137 | 0) == (HEAP32[$132 + -8 >> 2] | 0)) {
        $149 = $137 - (HEAP32[$133 >> 2] | 0) | 0;
        $150 = ($149 | 0) / 24 | 0;
        $151 = $150 + 1 | 0;
        if (($149 | 0) < -24) {
         $$lcssa152 = $133;
         label = 33;
         break L10;
        }
        if ($150 >>> 0 < 1073741823) {
         $154 = $150 << 1;
         $$0$i$i$i10 = $154 >>> 0 < $151 >>> 0 ? $151 : $154;
        } else $$0$i$i$i10 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i20, $$0$i$i$i10, $150, $132 + -4 | 0);
        $157 = HEAP32[$26 >> 2] | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($157, $135);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($157 + 12 | 0, $134 + ($k$0121 * 24 | 0) + 12 | 0);
        HEAP32[$26 >> 2] = $157 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($133, $__v$i$i20);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i20);
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($137, $135);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($137 + 12 | 0, $134 + ($k$0121 * 24 | 0) + 12 | 0);
        HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + 24;
       }
       $k$0121 = $k$0121 + 1 | 0;
      } while ($k$0121 >>> 0 < $82 >>> 0);
     }
    }
    if ($76 >>> 0 < $82 >>> 0) {
     $k2$0123 = $76;
     do {
      $164 = HEAP8[$args >> 0] | 0;
      if ((($164 & 1) == 0 ? ($164 & 255) >>> 1 : HEAP32[$27 >> 2] | 0) >>> 0 > 1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($args, 25575) | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, (HEAP32[$db >> 2] | 0) + ($k2$0123 * 24 | 0) | 0);
      $174 = HEAP8[$0 >> 0] | 0;
      $176 = ($174 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($args, $176 ? $29 : HEAP32[$28 >> 2] | 0, $176 ? ($174 & 255) >>> 1 : HEAP32[$30 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
      $k2$0123 = $k2$0123 + 1 | 0;
     } while ($k2$0123 >>> 0 < $82 >>> 0);
    }
    if (($82 | 0) != ($76 | 0)) {
     $k1$0124 = $82;
     do {
      $185 = HEAP32[$23 >> 2] | 0;
      $186 = $185 + -24 | 0;
      $188 = $185;
      do {
       $187 = $188 + -24 | 0;
       HEAP32[$23 >> 2] = $187;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($187);
       $188 = HEAP32[$23 >> 2] | 0;
      } while (($188 | 0) != ($186 | 0));
      $k1$0124 = $k1$0124 + -1 | 0;
     } while (($k1$0124 | 0) != ($76 | 0));
    }
    if ((HEAP8[$38 >> 0] | 0) == 69) {
     $t$0$lcssa = $38;
     break L9;
    } else $t$0126 = $38;
   }
   if ((label | 0) == 12) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($31); else if ((label | 0) == 25) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa); else if ((label | 0) == 33) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($$lcssa152); else if ((label | 0) == 56) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
    $$1 = $first;
    break L1;
   }
  } while (0);
  $192 = $t$0$lcssa + 1 | 0;
  $193 = HEAP8[$args >> 0] | 0;
  $195 = ($193 & 1) == 0;
  if ((HEAP8[($195 ? $args + 1 | 0 : HEAP32[$args + 8 >> 2] | 0) + (($195 ? ($193 & 255) >>> 1 : HEAP32[$27 >> 2] | 0) + -1) >> 0] | 0) == 62) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($args, 26620) | 0; else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($args, 25637) | 0;
  HEAP32[$2 >> 2] = HEAP32[$args >> 2];
  HEAP32[$2 + 4 >> 2] = HEAP32[$args + 4 >> 2];
  HEAP32[$2 + 8 >> 2] = HEAP32[$args + 8 >> 2];
  HEAP32[$args >> 2] = 0;
  HEAP32[$args + 4 >> 2] = 0;
  HEAP32[$args + 8 >> 2] = 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
  $209 = HEAP32[$23 >> 2] | 0;
  $211 = HEAP32[$db + 8 >> 2] | 0;
  if ($209 >>> 0 < $211 >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($209, $1);
   HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 24;
  } else {
   $218 = HEAP32[$db >> 2] | 0;
   $219 = $209 - $218 | 0;
   $220 = ($219 | 0) / 24 | 0;
   $221 = $220 + 1 | 0;
   if (($219 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
   $225 = ($211 - $218 | 0) / 24 | 0;
   if ($225 >>> 0 < 1073741823) {
    $227 = $225 << 1;
    $$0$i$i$i21 = $227 >>> 0 < $221 >>> 0 ? $221 : $227;
   } else $$0$i$i$i21 = 2147483647;
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i20, $$0$i$i$i21, $220, $db + 12 | 0);
   $230 = $__v$i$i20 + 8 | 0;
   $231 = HEAP32[$230 >> 2] | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($231, $1);
   HEAP32[$230 >> 2] = $231 + 24;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i20);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i20);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
  $$1 = $192;
 } else $$1 = $first; else $$1 = $first; while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo5State13ParseOperandsEPKcPNS1_8OperandsE($this, $format, $operands) {
 $this = $this | 0;
 $format = $format | 0;
 $operands = $operands | 0;
 var $$0 = 0, $$0$i = 0, $$0$i10 = 0, $$0$i15 = 0, $$0$i5 = 0, $$0$in$i = 0, $$0$in$i18 = 0, $$lcssa = 0, $$lcssa141 = 0, $$lcssa142 = 0, $$lcssa144 = 0, $$lcssa145 = 0, $$lcssa147 = 0, $$lcssa150 = 0, $$lcssa152 = 0, $$lcssa153 = 0, $$lcssa154 = 0, $$lcssa155 = 0, $$lcssa157 = 0, $$lcssa158 = 0, $$lcssa159 = 0, $0 = 0, $1 = 0, $10 = 0, $103 = 0, $109 = 0, $111 = 0, $115 = 0, $118 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0, $137 = 0, $14 = 0, $140 = 0, $146 = 0, $154 = 0, $156 = 0, $16 = 0, $168 = 0, $172 = 0, $175 = 0, $184 = 0, $187 = 0, $19 = 0, $190 = 0, $193 = 0, $20 = 0, $209 = 0, $213 = 0, $216 = 0, $22 = 0, $225 = 0, $228 = 0, $231 = 0, $234 = 0, $237 = 0, $24 = 0, $240 = 0, $243 = 0, $246 = 0, $25 = 0, $250 = 0, $251 = 0, $253 = 0, $256 = 0, $257 = 0, $261 = 0, $262 = 0, $265 = 0, $266 = 0, $269 = 0, $27 = 0, $270 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $298 = 0, $3 = 0, $300 = 0, $303 = 0, $304 = 0, $307 = 0, $308 = 0, $31 = 0, $310 = 0, $312 = 0, $313 = 0, $315 = 0, $322 = 0, $324 = 0, $331 = 0, $333 = 0, $338 = 0, $34 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $56 = 0, $58 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $71 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $89 = 0, $92 = 0, $93 = 0, $96 = 0, $len = 0, $num_read$0$i = 0, $num_read$0$i13 = 0, $num_read$0$i3 = 0, $num_read$0$i9 = 0, $operand$055 = 0, $result$1$i$off0 = 0, $shift$0$i = 0, $shift$0$i14 = 0, $shift$0$i4 = 0, $shift$0$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $len = sp + 12 | 0;
 $0 = sp;
 $1 = HEAP8[$format >> 0] | 0;
 if (!($1 << 24 >> 24)) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 24 | 0;
 $4 = $this + 28 | 0;
 $5 = $operands + 8 | 0;
 $6 = $operands + 16 | 0;
 $7 = $operands + 20 | 0;
 $13 = HEAP32[$4 >> 2] | 0;
 $16 = $1;
 $operand$055 = $format;
 L4 : while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $10 = HEAP32[$8 + 20 >> 2] | 0;
  $14 = $10 - $13 | 0;
  switch ($16 << 24 >> 24 | 0) {
  case 114:
   {
    $$0$i = $13;
    $25 = 0;
    $27 = 0;
    $num_read$0$i = 0;
    $shift$0$i = 0;
    while (1) {
     $19 = $num_read$0$i + 1 | 0;
     $20 = HEAPU8[$$0$i >> 0] | 0;
     $22 = _bitshift64Shl($20 & 127 | 0, 0, $shift$0$i | 0) | 0;
     $24 = $22 | $25;
     if (!($20 & 128)) {
      $$lcssa147 = $19;
      $31 = $24;
      break;
     } else {
      $$0$i = $$0$i + 1 | 0;
      $25 = $24;
      $27 = tempRet0 | $27;
      $num_read$0$i = $19;
      $shift$0$i = $shift$0$i + 7 | 0;
     }
    }
    HEAP32[$len >> 2] = $$lcssa147;
    HEAP32[$operands >> 2] = $31;
    if ($$lcssa147 >>> 0 > $14 >>> 0) {
     $$lcssa159 = $8;
     label = 6;
     break L4;
    }
    $41 = $13 + $$lcssa147 | 0;
    HEAP32[$4 >> 2] = $41;
    $338 = $41;
    break;
   }
  case 111:
   {
    $$0$i5 = $13;
    $50 = 0;
    $52 = 0;
    $num_read$0$i3 = 0;
    $shift$0$i4 = 0;
    while (1) {
     $44 = $num_read$0$i3 + 1 | 0;
     $45 = HEAPU8[$$0$i5 >> 0] | 0;
     $47 = _bitshift64Shl($45 & 127 | 0, 0, $shift$0$i4 | 0) | 0;
     $49 = $47 | $50;
     $51 = tempRet0 | $52;
     if (!($45 & 128)) {
      $$lcssa145 = $44;
      $58 = $49;
      $61 = $51;
      break;
     } else {
      $$0$i5 = $$0$i5 + 1 | 0;
      $50 = $49;
      $52 = $51;
      $num_read$0$i3 = $44;
      $shift$0$i4 = $shift$0$i4 + 7 | 0;
     }
    }
    HEAP32[$len >> 2] = $$lcssa145;
    $56 = $5;
    HEAP32[$56 >> 2] = $58;
    HEAP32[$56 + 4 >> 2] = $61;
    if ($$lcssa145 >>> 0 > $14 >>> 0) {
     $$lcssa158 = $8;
     label = 10;
     break L4;
    }
    $71 = $13 + $$lcssa145 | 0;
    HEAP32[$4 >> 2] = $71;
    $338 = $71;
    break;
   }
  case 115:
   {
    $$0$i10 = $13;
    $80 = 0;
    $82 = 0;
    $num_read$0$i9 = 0;
    $shift$0$i8 = 0;
    while (1) {
     $74 = $num_read$0$i9 + 1 | 0;
     $75 = HEAPU8[$$0$i10 >> 0] | 0;
     $77 = _bitshift64Shl($75 & 127 | 0, 0, $shift$0$i8 | 0) | 0;
     $79 = $77 | $80;
     $81 = tempRet0 | $82;
     $83 = $shift$0$i8 + 7 | 0;
     if (!($75 & 128)) {
      $$lcssa141 = $74;
      $$lcssa142 = $75;
      $$lcssa144 = $83;
      $92 = $79;
      $93 = $81;
      break;
     } else {
      $$0$i10 = $$0$i10 + 1 | 0;
      $80 = $79;
      $82 = $81;
      $num_read$0$i9 = $74;
      $shift$0$i8 = $83;
     }
    }
    if ($$lcssa144 >>> 0 > 63 | ($$lcssa142 & 64 | 0) == 0) $result$1$i$off0 = $92; else {
     $89 = _bitshift64Shl(-1, -1, $$lcssa144 | 0) | 0;
     $93 | tempRet0;
     $result$1$i$off0 = $92 | $89;
    }
    HEAP32[$len >> 2] = $$lcssa141;
    HEAP32[$6 >> 2] = $result$1$i$off0;
    if ($$lcssa141 >>> 0 > $14 >>> 0) {
     $$lcssa157 = $8;
     label = 16;
     break L4;
    }
    $103 = $13 + $$lcssa141 | 0;
    HEAP32[$4 >> 2] = $103;
    $338 = $103;
    break;
   }
  case 97:
   {
    $109 = __ZNK12dwarf2reader10ByteReader18ReadEncodedPointerEPKcNS_20DwarfPointerEncodingEPj(HEAP32[$this >> 2] | 0, $13, HEAP32[(HEAP32[$8 + 32 >> 2] | 0) + 96 >> 2] | 0, $len) | 0;
    $111 = $5;
    HEAP32[$111 >> 2] = $109;
    HEAP32[$111 + 4 >> 2] = tempRet0;
    $115 = HEAP32[$len >> 2] | 0;
    if ($115 >>> 0 > $14 >>> 0) {
     label = 19;
     break L4;
    }
    $127 = (HEAP32[$4 >> 2] | 0) + $115 | 0;
    HEAP32[$4 >> 2] = $127;
    $338 = $127;
    break;
   }
  case 49:
   {
    if (($10 | 0) == ($13 | 0)) {
     $$lcssa155 = $8;
     label = 22;
     break L4;
    }
    $137 = $13 + 1 | 0;
    HEAP32[$4 >> 2] = $137;
    $140 = $5;
    HEAP32[$140 >> 2] = HEAPU8[$13 >> 0];
    HEAP32[$140 + 4 >> 2] = 0;
    $338 = $137;
    break;
   }
  case 50:
   {
    if ($14 >>> 0 < 2) {
     $$lcssa154 = $8;
     label = 25;
     break L4;
    }
    $154 = HEAP8[$13 >> 0] | 0;
    $156 = HEAP8[$13 + 1 >> 0] | 0;
    if ((HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i = ($156 & 255) << 8 | $154 & 255; else $$0$in$i = $156 & 255 | ($154 & 255) << 8;
    $168 = $5;
    HEAP32[$168 >> 2] = $$0$in$i & 65535;
    HEAP32[$168 + 4 >> 2] = 0;
    $172 = $13 + 2 | 0;
    HEAP32[$4 >> 2] = $172;
    $338 = $172;
    break;
   }
  case 52:
   {
    if ($14 >>> 0 < 4) {
     $$lcssa153 = $8;
     label = 31;
     break L4;
    }
    $184 = HEAPU8[$13 >> 0] | 0;
    $187 = HEAPU8[$13 + 1 >> 0] | 0;
    $190 = HEAPU8[$13 + 2 >> 0] | 0;
    $193 = HEAPU8[$13 + 3 >> 0] | 0;
    if ((HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i18 = $187 << 8 | $184 | $190 << 16 | $193 << 24; else $$0$in$i18 = $187 << 16 | $184 << 24 | $190 << 8 | $193;
    $209 = $5;
    HEAP32[$209 >> 2] = $$0$in$i18;
    HEAP32[$209 + 4 >> 2] = 0;
    $213 = $13 + 4 | 0;
    HEAP32[$4 >> 2] = $213;
    $338 = $213;
    break;
   }
  case 56:
   {
    if ($14 >>> 0 < 8) {
     $$lcssa152 = $8;
     label = 37;
     break L4;
    }
    $225 = HEAPU8[$13 >> 0] | 0;
    $228 = HEAPU8[$13 + 1 >> 0] | 0;
    $231 = HEAPU8[$13 + 2 >> 0] | 0;
    $234 = HEAPU8[$13 + 3 >> 0] | 0;
    $237 = HEAPU8[$13 + 4 >> 0] | 0;
    $240 = HEAPU8[$13 + 5 >> 0] | 0;
    $243 = HEAPU8[$13 + 6 >> 0] | 0;
    $246 = HEAPU8[$13 + 7 >> 0] | 0;
    if ((HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0) == 1) {
     $250 = _bitshift64Shl($228 | 0, 0, 8) | 0;
     $251 = tempRet0;
     $253 = _bitshift64Shl($231 | 0, 0, 16) | 0;
     $256 = $251 | tempRet0;
     $257 = _bitshift64Shl($234 | 0, 0, 24) | 0;
     $261 = $256 | tempRet0 | $237;
     $262 = _bitshift64Shl($240 | 0, 0, 40) | 0;
     $265 = $261 | tempRet0;
     $266 = _bitshift64Shl($243 | 0, 0, 48) | 0;
     $269 = $265 | tempRet0;
     $270 = _bitshift64Shl($246 | 0, 0, 56) | 0;
     $300 = $250 | $225 | $253 | $257 | $262 | $266 | $270;
     $303 = $269 | tempRet0;
    } else {
     $274 = _bitshift64Shl($243 | 0, 0, 8) | 0;
     $275 = tempRet0;
     $276 = _bitshift64Shl($240 | 0, 0, 16) | 0;
     $277 = tempRet0;
     $278 = _bitshift64Shl($237 | 0, 0, 24) | 0;
     $279 = tempRet0;
     $280 = _bitshift64Shl($231 | 0, 0, 40) | 0;
     $281 = tempRet0;
     $282 = _bitshift64Shl($228 | 0, 0, 48) | 0;
     $283 = tempRet0;
     $284 = _bitshift64Shl($225 | 0, 0, 56) | 0;
     $300 = $282 | $284 | $280 | $278 | $276 | $274 | $246;
     $303 = $283 | tempRet0 | $281 | $234 | $279 | $277 | $275;
    }
    $298 = $5;
    HEAP32[$298 >> 2] = $300;
    HEAP32[$298 + 4 >> 2] = $303;
    $304 = $13 + 8 | 0;
    HEAP32[$4 >> 2] = $304;
    $338 = $304;
    break;
   }
  case 101:
   {
    $$0$i15 = $13;
    $313 = 0;
    $315 = 0;
    $num_read$0$i13 = 0;
    $shift$0$i14 = 0;
    while (1) {
     $307 = $num_read$0$i13 + 1 | 0;
     $308 = HEAPU8[$$0$i15 >> 0] | 0;
     $310 = _bitshift64Shl($308 & 127 | 0, 0, $shift$0$i14 | 0) | 0;
     $312 = $310 | $313;
     if (!($308 & 128)) {
      $$lcssa = $307;
      $322 = $312;
      break;
     } else {
      $$0$i15 = $$0$i15 + 1 | 0;
      $313 = $312;
      $315 = tempRet0 | $315;
      $num_read$0$i13 = $307;
      $shift$0$i14 = $shift$0$i14 + 7 | 0;
     }
    }
    HEAP32[$len >> 2] = $$lcssa;
    if ($14 >>> 0 < $$lcssa >>> 0 | $322 >>> 0 > ($14 - $$lcssa | 0) >>> 0) {
     $$lcssa150 = $8;
     label = 44;
     break L4;
    }
    $331 = $13 + $$lcssa | 0;
    HEAP32[$4 >> 2] = $331;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $331, $322);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($7, $0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $333 = (HEAP32[$4 >> 2] | 0) + $322 | 0;
    HEAP32[$4 >> 2] = $333;
    $338 = $333;
    break;
   }
  default:
   {
    label = 46;
    break L4;
   }
  }
  $operand$055 = $operand$055 + 1 | 0;
  $16 = HEAP8[$operand$055 >> 0] | 0;
  if (!($16 << 24 >> 24)) {
   $$0 = 1;
   label = 48;
   break;
  } else $13 = $338;
 }
 switch (label | 0) {
 case 6:
  {
   $34 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$34 >> 2] | 0) + 8 >> 2] & 31]($34, HEAP32[$$lcssa159 >> 2] | 0, 0, HEAP32[$$lcssa159 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 10:
  {
   $64 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$64 >> 2] | 0) + 8 >> 2] & 31]($64, HEAP32[$$lcssa158 >> 2] | 0, 0, HEAP32[$$lcssa158 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 16:
  {
   $96 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$96 >> 2] | 0) + 8 >> 2] & 31]($96, HEAP32[$$lcssa157 >> 2] | 0, 0, HEAP32[$$lcssa157 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 19:
  {
   $118 = HEAP32[$this + 8 >> 2] | 0;
   $122 = HEAP32[$3 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$118 >> 2] | 0) + 8 >> 2] & 31]($118, HEAP32[$122 >> 2] | 0, 0, HEAP32[$122 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 22:
  {
   $130 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$130 >> 2] | 0) + 8 >> 2] & 31]($130, HEAP32[$$lcssa155 >> 2] | 0, 0, HEAP32[$$lcssa155 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 25:
  {
   $146 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$146 >> 2] | 0) + 8 >> 2] & 31]($146, HEAP32[$$lcssa154 >> 2] | 0, 0, HEAP32[$$lcssa154 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 31:
  {
   $175 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$175 >> 2] | 0) + 8 >> 2] & 31]($175, HEAP32[$$lcssa153 >> 2] | 0, 0, HEAP32[$$lcssa153 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 37:
  {
   $216 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$216 >> 2] | 0) + 8 >> 2] & 31]($216, HEAP32[$$lcssa152 >> 2] | 0, 0, HEAP32[$$lcssa152 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 44:
  {
   $324 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$324 >> 2] | 0) + 8 >> 2] & 31]($324, HEAP32[$$lcssa150 >> 2] | 0, 0, HEAP32[$$lcssa150 + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 46:
  {
   ___assert_fail(22458, 18044, 1419, 19074);
   break;
  }
 case 48:
  {
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 return 0;
}

function _free($mem) {
 $mem = $mem | 0;
 var $$lcssa = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$sum2 = 0, $1 = 0, $103 = 0, $104 = 0, $111 = 0, $112 = 0, $12 = 0, $120 = 0, $128 = 0, $133 = 0, $134 = 0, $137 = 0, $139 = 0, $14 = 0, $141 = 0, $15 = 0, $156 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $172 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $181 = 0, $182 = 0, $184 = 0, $185 = 0, $19 = 0, $191 = 0, $192 = 0, $2 = 0, $201 = 0, $206 = 0, $210 = 0, $216 = 0, $22 = 0, $231 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $240 = 0, $241 = 0, $247 = 0, $252 = 0, $253 = 0, $256 = 0, $258 = 0, $26 = 0, $261 = 0, $266 = 0, $272 = 0, $276 = 0, $277 = 0, $284 = 0, $296 = 0, $301 = 0, $308 = 0, $309 = 0, $310 = 0, $318 = 0, $39 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $97 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0;
 if (!$mem) return;
 $1 = $mem + -8 | 0;
 $2 = HEAP32[1473] | 0;
 if ($1 >>> 0 < $2 >>> 0) _abort();
 $5 = HEAP32[$mem + -4 >> 2] | 0;
 $6 = $5 & 3;
 if (($6 | 0) == 1) _abort();
 $8 = $5 & -8;
 $9 = $mem + ($8 + -8) | 0;
 do if (!($5 & 1)) {
  $12 = HEAP32[$1 >> 2] | 0;
  if (!$6) return;
  $$sum2 = -8 - $12 | 0;
  $14 = $mem + $$sum2 | 0;
  $15 = $12 + $8 | 0;
  if ($14 >>> 0 < $2 >>> 0) _abort();
  if (($14 | 0) == (HEAP32[1474] | 0)) {
   $103 = $mem + ($8 + -4) | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if (($104 & 3 | 0) != 3) {
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   HEAP32[1471] = $15;
   HEAP32[$103 >> 2] = $104 & -2;
   HEAP32[$mem + ($$sum2 + 4) >> 2] = $15 | 1;
   HEAP32[$9 >> 2] = $15;
   return;
  }
  $19 = $12 >>> 3;
  if ($12 >>> 0 < 256) {
   $22 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   $24 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
   $26 = 5916 + ($19 << 1 << 2) | 0;
   if (($22 | 0) != ($26 | 0)) {
    if ($22 >>> 0 < $2 >>> 0) _abort();
    if ((HEAP32[$22 + 12 >> 2] | 0) != ($14 | 0)) _abort();
   }
   if (($24 | 0) == ($22 | 0)) {
    HEAP32[1469] = HEAP32[1469] & ~(1 << $19);
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   if (($24 | 0) == ($26 | 0)) $$pre$phi61Z2D = $24 + 8 | 0; else {
    if ($24 >>> 0 < $2 >>> 0) _abort();
    $39 = $24 + 8 | 0;
    if ((HEAP32[$39 >> 2] | 0) == ($14 | 0)) $$pre$phi61Z2D = $39; else _abort();
   }
   HEAP32[$22 + 12 >> 2] = $24;
   HEAP32[$$pre$phi61Z2D >> 2] = $22;
   $p$0 = $14;
   $psize$0 = $15;
   break;
  }
  $44 = HEAP32[$mem + ($$sum2 + 24) >> 2] | 0;
  $46 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
  do if (($46 | 0) == ($14 | 0)) {
   $57 = $mem + ($$sum2 + 20) | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (!$58) {
    $60 = $mem + ($$sum2 + 16) | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    if (!$61) {
     $R$1 = 0;
     break;
    } else {
     $R$0 = $61;
     $RP$0 = $60;
    }
   } else {
    $R$0 = $58;
    $RP$0 = $57;
   }
   while (1) {
    $63 = $R$0 + 20 | 0;
    $64 = HEAP32[$63 >> 2] | 0;
    if ($64) {
     $R$0 = $64;
     $RP$0 = $63;
     continue;
    }
    $66 = $R$0 + 16 | 0;
    $67 = HEAP32[$66 >> 2] | 0;
    if (!$67) {
     $R$0$lcssa = $R$0;
     $RP$0$lcssa = $RP$0;
     break;
    } else {
     $R$0 = $67;
     $RP$0 = $66;
    }
   }
   if ($RP$0$lcssa >>> 0 < $2 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $49 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   if ($49 >>> 0 < $2 >>> 0) _abort();
   $51 = $49 + 12 | 0;
   if ((HEAP32[$51 >> 2] | 0) != ($14 | 0)) _abort();
   $54 = $46 + 8 | 0;
   if ((HEAP32[$54 >> 2] | 0) == ($14 | 0)) {
    HEAP32[$51 >> 2] = $46;
    HEAP32[$54 >> 2] = $49;
    $R$1 = $46;
    break;
   } else _abort();
  } while (0);
  if (!$44) {
   $p$0 = $14;
   $psize$0 = $15;
  } else {
   $72 = HEAP32[$mem + ($$sum2 + 28) >> 2] | 0;
   $73 = 6180 + ($72 << 2) | 0;
   if (($14 | 0) == (HEAP32[$73 >> 2] | 0)) {
    HEAP32[$73 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[1470] = HEAP32[1470] & ~(1 << $72);
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   } else {
    if ($44 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
    $82 = $44 + 16 | 0;
    if ((HEAP32[$82 >> 2] | 0) == ($14 | 0)) HEAP32[$82 >> 2] = $R$1; else HEAP32[$44 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   }
   $87 = HEAP32[1473] | 0;
   if ($R$1 >>> 0 < $87 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $44;
   $91 = HEAP32[$mem + ($$sum2 + 16) >> 2] | 0;
   do if ($91) if ($91 >>> 0 < $87 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $91;
    HEAP32[$91 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $97 = HEAP32[$mem + ($$sum2 + 20) >> 2] | 0;
   if (!$97) {
    $p$0 = $14;
    $psize$0 = $15;
   } else if ($97 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $97;
    HEAP32[$97 + 24 >> 2] = $R$1;
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
  }
 } else {
  $p$0 = $1;
  $psize$0 = $8;
 } while (0);
 if ($p$0 >>> 0 >= $9 >>> 0) _abort();
 $111 = $mem + ($8 + -4) | 0;
 $112 = HEAP32[$111 >> 2] | 0;
 if (!($112 & 1)) _abort();
 if (!($112 & 2)) {
  if (($9 | 0) == (HEAP32[1475] | 0)) {
   $120 = (HEAP32[1472] | 0) + $psize$0 | 0;
   HEAP32[1472] = $120;
   HEAP32[1475] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $120 | 1;
   if (($p$0 | 0) != (HEAP32[1474] | 0)) return;
   HEAP32[1474] = 0;
   HEAP32[1471] = 0;
   return;
  }
  if (($9 | 0) == (HEAP32[1474] | 0)) {
   $128 = (HEAP32[1471] | 0) + $psize$0 | 0;
   HEAP32[1471] = $128;
   HEAP32[1474] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $128 | 1;
   HEAP32[$p$0 + $128 >> 2] = $128;
   return;
  }
  $133 = ($112 & -8) + $psize$0 | 0;
  $134 = $112 >>> 3;
  do if ($112 >>> 0 < 256) {
   $137 = HEAP32[$mem + $8 >> 2] | 0;
   $139 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   $141 = 5916 + ($134 << 1 << 2) | 0;
   if (($137 | 0) != ($141 | 0)) {
    if ($137 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
    if ((HEAP32[$137 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($139 | 0) == ($137 | 0)) {
    HEAP32[1469] = HEAP32[1469] & ~(1 << $134);
    break;
   }
   if (($139 | 0) == ($141 | 0)) $$pre$phi59Z2D = $139 + 8 | 0; else {
    if ($139 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
    $156 = $139 + 8 | 0;
    if ((HEAP32[$156 >> 2] | 0) == ($9 | 0)) $$pre$phi59Z2D = $156; else _abort();
   }
   HEAP32[$137 + 12 >> 2] = $139;
   HEAP32[$$pre$phi59Z2D >> 2] = $137;
  } else {
   $161 = HEAP32[$mem + ($8 + 16) >> 2] | 0;
   $163 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   do if (($163 | 0) == ($9 | 0)) {
    $175 = $mem + ($8 + 12) | 0;
    $176 = HEAP32[$175 >> 2] | 0;
    if (!$176) {
     $178 = $mem + ($8 + 8) | 0;
     $179 = HEAP32[$178 >> 2] | 0;
     if (!$179) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0 = $179;
      $RP9$0 = $178;
     }
    } else {
     $R7$0 = $176;
     $RP9$0 = $175;
    }
    while (1) {
     $181 = $R7$0 + 20 | 0;
     $182 = HEAP32[$181 >> 2] | 0;
     if ($182) {
      $R7$0 = $182;
      $RP9$0 = $181;
      continue;
     }
     $184 = $R7$0 + 16 | 0;
     $185 = HEAP32[$184 >> 2] | 0;
     if (!$185) {
      $R7$0$lcssa = $R7$0;
      $RP9$0$lcssa = $RP9$0;
      break;
     } else {
      $R7$0 = $185;
      $RP9$0 = $184;
     }
    }
    if ($RP9$0$lcssa >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
     HEAP32[$RP9$0$lcssa >> 2] = 0;
     $R7$1 = $R7$0$lcssa;
     break;
    }
   } else {
    $166 = HEAP32[$mem + $8 >> 2] | 0;
    if ($166 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
    $169 = $166 + 12 | 0;
    if ((HEAP32[$169 >> 2] | 0) != ($9 | 0)) _abort();
    $172 = $163 + 8 | 0;
    if ((HEAP32[$172 >> 2] | 0) == ($9 | 0)) {
     HEAP32[$169 >> 2] = $163;
     HEAP32[$172 >> 2] = $166;
     $R7$1 = $163;
     break;
    } else _abort();
   } while (0);
   if ($161) {
    $191 = HEAP32[$mem + ($8 + 20) >> 2] | 0;
    $192 = 6180 + ($191 << 2) | 0;
    if (($9 | 0) == (HEAP32[$192 >> 2] | 0)) {
     HEAP32[$192 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[1470] = HEAP32[1470] & ~(1 << $191);
      break;
     }
    } else {
     if ($161 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
     $201 = $161 + 16 | 0;
     if ((HEAP32[$201 >> 2] | 0) == ($9 | 0)) HEAP32[$201 >> 2] = $R7$1; else HEAP32[$161 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $206 = HEAP32[1473] | 0;
    if ($R7$1 >>> 0 < $206 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $161;
    $210 = HEAP32[$mem + ($8 + 8) >> 2] | 0;
    do if ($210) if ($210 >>> 0 < $206 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $210;
     HEAP32[$210 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $216 = HEAP32[$mem + ($8 + 12) >> 2] | 0;
    if ($216) if ($216 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $216;
     HEAP32[$216 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$p$0 + 4 >> 2] = $133 | 1;
  HEAP32[$p$0 + $133 >> 2] = $133;
  if (($p$0 | 0) == (HEAP32[1474] | 0)) {
   HEAP32[1471] = $133;
   return;
  } else $psize$1 = $133;
 } else {
  HEAP32[$111 >> 2] = $112 & -2;
  HEAP32[$p$0 + 4 >> 2] = $psize$0 | 1;
  HEAP32[$p$0 + $psize$0 >> 2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 if ($psize$1 >>> 0 < 256) {
  $233 = $231 << 1;
  $234 = 5916 + ($233 << 2) | 0;
  $235 = HEAP32[1469] | 0;
  $236 = 1 << $231;
  if (!($235 & $236)) {
   HEAP32[1469] = $235 | $236;
   $$pre$phiZ2D = 5916 + ($233 + 2 << 2) | 0;
   $F16$0 = $234;
  } else {
   $240 = 5916 + ($233 + 2 << 2) | 0;
   $241 = HEAP32[$240 >> 2] | 0;
   if ($241 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $240;
    $F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $p$0;
  HEAP32[$F16$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $F16$0;
  HEAP32[$p$0 + 12 >> 2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 if (!$247) $I18$0 = 0; else if ($psize$1 >>> 0 > 16777215) $I18$0 = 31; else {
  $252 = ($247 + 1048320 | 0) >>> 16 & 8;
  $253 = $247 << $252;
  $256 = ($253 + 520192 | 0) >>> 16 & 4;
  $258 = $253 << $256;
  $261 = ($258 + 245760 | 0) >>> 16 & 2;
  $266 = 14 - ($256 | $252 | $261) + ($258 << $261 >>> 15) | 0;
  $I18$0 = $psize$1 >>> ($266 + 7 | 0) & 1 | $266 << 1;
 }
 $272 = 6180 + ($I18$0 << 2) | 0;
 HEAP32[$p$0 + 28 >> 2] = $I18$0;
 HEAP32[$p$0 + 20 >> 2] = 0;
 HEAP32[$p$0 + 16 >> 2] = 0;
 $276 = HEAP32[1470] | 0;
 $277 = 1 << $I18$0;
 L199 : do if (!($276 & $277)) {
  HEAP32[1470] = $276 | $277;
  HEAP32[$272 >> 2] = $p$0;
  HEAP32[$p$0 + 24 >> 2] = $272;
  HEAP32[$p$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $p$0;
 } else {
  $284 = HEAP32[$272 >> 2] | 0;
  L202 : do if ((HEAP32[$284 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) $T$0$lcssa = $284; else {
   $K19$052 = $psize$1 << (($I18$0 | 0) == 31 ? 0 : 25 - ($I18$0 >>> 1) | 0);
   $T$051 = $284;
   while (1) {
    $301 = $T$051 + 16 + ($K19$052 >>> 31 << 2) | 0;
    $296 = HEAP32[$301 >> 2] | 0;
    if (!$296) {
     $$lcssa = $301;
     $T$051$lcssa = $T$051;
     break;
    }
    if ((HEAP32[$296 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) {
     $T$0$lcssa = $296;
     break L202;
    } else {
     $K19$052 = $K19$052 << 1;
     $T$051 = $296;
    }
   }
   if ($$lcssa >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
    HEAP32[$$lcssa >> 2] = $p$0;
    HEAP32[$p$0 + 24 >> 2] = $T$051$lcssa;
    HEAP32[$p$0 + 12 >> 2] = $p$0;
    HEAP32[$p$0 + 8 >> 2] = $p$0;
    break L199;
   }
  } while (0);
  $308 = $T$0$lcssa + 8 | 0;
  $309 = HEAP32[$308 >> 2] | 0;
  $310 = HEAP32[1473] | 0;
  if ($309 >>> 0 >= $310 >>> 0 & $T$0$lcssa >>> 0 >= $310 >>> 0) {
   HEAP32[$309 + 12 >> 2] = $p$0;
   HEAP32[$308 >> 2] = $p$0;
   HEAP32[$p$0 + 8 >> 2] = $309;
   HEAP32[$p$0 + 12 >> 2] = $T$0$lcssa;
   HEAP32[$p$0 + 24 >> 2] = 0;
   break;
  } else _abort();
 } while (0);
 $318 = (HEAP32[1477] | 0) + -1 | 0;
 HEAP32[1477] = $318;
 if (!$318) $sp$0$in$i = 6332; else return;
 while (1) {
  $sp$0$i = HEAP32[$sp$0$in$i >> 2] | 0;
  if (!$sp$0$i) break; else $sp$0$in$i = $sp$0$i + 8 | 0;
 }
 HEAP32[1477] = -1;
 return;
}

function __ZNK12dwarf2reader10ByteReader18ReadEncodedPointerEPKcNS_20DwarfPointerEncodingEPj($this, $buffer, $encoding, $len) {
 $this = $this | 0;
 $buffer = $buffer | 0;
 $encoding = $encoding | 0;
 $len = $len | 0;
 var $$0$i16 = 0, $$0$i4 = 0, $$0$in$i = 0, $$0$in$i10 = 0, $$0$in$i2 = 0, $$0$in$i7 = 0, $$field = 0, $$field2 = 0, $$field5 = 0, $$field8 = 0, $$lcssa = 0, $$lcssa45 = 0, $$lcssa46 = 0, $$lcssa48 = 0, $102 = 0, $105 = 0, $108 = 0, $11 = 0, $12 = 0, $125 = 0, $128 = 0, $13 = 0, $131 = 0, $134 = 0, $137 = 0, $140 = 0, $143 = 0, $146 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $157 = 0, $16 = 0, $161 = 0, $162 = 0, $165 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $20 = 0, $200 = 0, $201 = 0, $203 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $215 = 0, $218 = 0, $220 = 0, $221 = 0, $223 = 0, $235 = 0, $239 = 0, $242 = 0, $245 = 0, $248 = 0, $267 = 0, $270 = 0, $273 = 0, $276 = 0, $279 = 0, $282 = 0, $285 = 0, $288 = 0, $292 = 0, $293 = 0, $295 = 0, $298 = 0, $299 = 0, $303 = 0, $304 = 0, $307 = 0, $308 = 0, $311 = 0, $312 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $34 = 0, $345 = 0, $355 = 0, $358 = 0, $364 = 0, $374 = 0, $38 = 0, $384 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $398 = 0, $399 = 0, $4 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $44 = 0, $49 = 0, $50 = 0, $53 = 0, $54 = 0, $59 = 0, $64 = 0, $65 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $84 = 0, $86 = 0, $99 = 0, $num_read$0$i = 0, $num_read$0$i14 = 0, $shift$0$i = 0, $shift$0$i15 = 0;
 switch ($encoding | 0) {
 case 255:
  {
   ___assert_fail(17474, 17428, 108, 17500);
   break;
  }
 case 80:
  {
   if (!(HEAP8[$this + 26 >> 0] | 0)) ___assert_fail(17519, 17428, 115, 17500);
   $4 = $this + 32 | 0;
   $11 = HEAP8[$this + 24 >> 0] | 0;
   $12 = $11 & 255;
   $13 = $12 + -1 | 0;
   $16 = $13 & HEAP32[$4 >> 2];
   $17 = (($13 | 0) < 0) << 31 >> 31 & HEAP32[$4 + 4 >> 2];
   $19 = HEAP32[$this + 64 >> 2] | 0;
   $20 = $buffer;
   $34 = $19 + (_i64Subtract((_i64Add(_i64Add(_i64Add($11 & 255 | 0, 0, -1, 0) | 0, tempRet0 | 0, $20 - $19 | 0, 0) | 0, tempRet0 | 0, $16 | 0, $17 | 0) | 0) & 0 - $12 | 0, 0, $16 | 0, $17 | 0) | 0) | 0;
   HEAP32[$len >> 2] = $12 - $20 + $34;
   $38 = $this + 12 | 0;
   $$field = HEAP32[$38 >> 2] | 0;
   $$field2 = HEAP32[$38 + 4 >> 2] | 0;
   $39 = $$field2 & 1;
   if (!($39 | $$field)) ___assert_fail(18598, 18394, 143, 18620);
   $44 = $this + ($$field2 >> 1) | 0;
   if (!$39) $49 = $$field; else $49 = HEAP32[(HEAP32[$44 >> 2] | 0) + $$field >> 2] | 0;
   $50 = FUNCTION_TABLE_iii[$49 & 31]($44, $34) | 0;
   $398 = tempRet0;
   $399 = $50;
   tempRet0 = $398;
   return $399 | 0;
  }
 default:
  {
   do switch ($encoding & 15 | 0) {
   case 0:
    {
     $53 = $this + 12 | 0;
     $$field5 = HEAP32[$53 >> 2] | 0;
     $$field8 = HEAP32[$53 + 4 >> 2] | 0;
     $54 = $$field8 & 1;
     if (!($54 | $$field5)) ___assert_fail(18598, 18394, 143, 18620);
     $59 = $this + ($$field8 >> 1) | 0;
     if (!$54) $64 = $$field5; else $64 = HEAP32[(HEAP32[$59 >> 2] | 0) + $$field5 >> 2] | 0;
     $65 = FUNCTION_TABLE_iii[$64 & 31]($59, $buffer) | 0;
     HEAP32[$len >> 2] = HEAPU8[$this + 24 >> 0];
     $392 = $65;
     $393 = tempRet0;
     break;
    }
   case 1:
    {
     $$0$i16 = $buffer;
     $78 = 0;
     $80 = 0;
     $num_read$0$i14 = 0;
     $shift$0$i15 = 0;
     while (1) {
      $72 = $num_read$0$i14 + 1 | 0;
      $73 = HEAPU8[$$0$i16 >> 0] | 0;
      $75 = _bitshift64Shl($73 & 127 | 0, 0, $shift$0$i15 | 0) | 0;
      $77 = $75 | $78;
      $79 = tempRet0 | $80;
      if (!($73 & 128)) {
       $$lcssa = $72;
       $400 = $77;
       $401 = $79;
       break;
      } else {
       $$0$i16 = $$0$i16 + 1 | 0;
       $78 = $77;
       $80 = $79;
       $num_read$0$i14 = $72;
       $shift$0$i15 = $shift$0$i15 + 7 | 0;
      }
     }
     HEAP32[$len >> 2] = $$lcssa;
     $392 = $400;
     $393 = $401;
     break;
    }
   case 2:
    {
     $84 = HEAP8[$buffer >> 0] | 0;
     $86 = HEAP8[$buffer + 1 >> 0] | 0;
     if ((HEAP32[$this + 20 >> 2] | 0) == 1) $$0$in$i10 = ($86 & 255) << 8 | $84 & 255; else $$0$in$i10 = $86 & 255 | ($84 & 255) << 8;
     HEAP32[$len >> 2] = 2;
     $392 = $$0$in$i10 & 65535;
     $393 = 0;
     break;
    }
   case 3:
    {
     $99 = HEAPU8[$buffer >> 0] | 0;
     $102 = HEAPU8[$buffer + 1 >> 0] | 0;
     $105 = HEAPU8[$buffer + 2 >> 0] | 0;
     $108 = HEAPU8[$buffer + 3 >> 0] | 0;
     if ((HEAP32[$this + 20 >> 2] | 0) == 1) $$0$in$i7 = $102 << 8 | $99 | $105 << 16 | $108 << 24; else $$0$in$i7 = $102 << 16 | $99 << 24 | $105 << 8 | $108;
     HEAP32[$len >> 2] = 4;
     $392 = $$0$in$i7;
     $393 = 0;
     break;
    }
   case 4:
    {
     $125 = HEAPU8[$buffer >> 0] | 0;
     $128 = HEAPU8[$buffer + 1 >> 0] | 0;
     $131 = HEAPU8[$buffer + 2 >> 0] | 0;
     $134 = HEAPU8[$buffer + 3 >> 0] | 0;
     $137 = HEAPU8[$buffer + 4 >> 0] | 0;
     $140 = HEAPU8[$buffer + 5 >> 0] | 0;
     $143 = HEAPU8[$buffer + 6 >> 0] | 0;
     $146 = HEAPU8[$buffer + 7 >> 0] | 0;
     if ((HEAP32[$this + 20 >> 2] | 0) == 1) {
      $150 = _bitshift64Shl($128 | 0, 0, 8) | 0;
      $151 = tempRet0;
      $153 = _bitshift64Shl($131 | 0, 0, 16) | 0;
      $156 = $151 | tempRet0;
      $157 = _bitshift64Shl($134 | 0, 0, 24) | 0;
      $161 = $156 | tempRet0 | $137;
      $162 = _bitshift64Shl($140 | 0, 0, 40) | 0;
      $165 = $161 | tempRet0;
      $166 = _bitshift64Shl($143 | 0, 0, 48) | 0;
      $169 = $165 | tempRet0;
      $170 = _bitshift64Shl($146 | 0, 0, 56) | 0;
      $402 = $150 | $125 | $153 | $157 | $162 | $166 | $170;
      $403 = $169 | tempRet0;
     } else {
      $174 = _bitshift64Shl($143 | 0, 0, 8) | 0;
      $175 = tempRet0;
      $176 = _bitshift64Shl($140 | 0, 0, 16) | 0;
      $177 = tempRet0;
      $178 = _bitshift64Shl($137 | 0, 0, 24) | 0;
      $179 = tempRet0;
      $180 = _bitshift64Shl($131 | 0, 0, 40) | 0;
      $181 = tempRet0;
      $182 = _bitshift64Shl($128 | 0, 0, 48) | 0;
      $183 = tempRet0;
      $184 = _bitshift64Shl($125 | 0, 0, 56) | 0;
      $402 = $182 | $184 | $180 | $178 | $176 | $174 | $146;
      $403 = $183 | tempRet0 | $181 | $134 | $179 | $177 | $175;
     }
     HEAP32[$len >> 2] = 8;
     $392 = $402;
     $393 = $403;
     break;
    }
   case 9:
    {
     $$0$i4 = $buffer;
     $206 = 0;
     $208 = 0;
     $num_read$0$i = 0;
     $shift$0$i = 0;
     while (1) {
      $200 = $num_read$0$i + 1 | 0;
      $201 = HEAPU8[$$0$i4 >> 0] | 0;
      $203 = _bitshift64Shl($201 & 127 | 0, 0, $shift$0$i | 0) | 0;
      $205 = $203 | $206;
      $207 = tempRet0 | $208;
      $209 = $shift$0$i + 7 | 0;
      if (!($201 & 128)) {
       $$lcssa45 = $200;
       $$lcssa46 = $201;
       $$lcssa48 = $209;
       $218 = $205;
       $220 = $207;
       break;
      } else {
       $$0$i4 = $$0$i4 + 1 | 0;
       $206 = $205;
       $208 = $207;
       $num_read$0$i = $200;
       $shift$0$i = $209;
      }
     }
     if ($$lcssa48 >>> 0 > 63 | ($$lcssa46 & 64 | 0) == 0) {
      $404 = $218;
      $405 = $220;
     } else {
      $215 = _bitshift64Shl(-1, -1, $$lcssa48 | 0) | 0;
      $404 = $218 | $215;
      $405 = $220 | tempRet0;
     }
     HEAP32[$len >> 2] = $$lcssa45;
     $392 = $404;
     $393 = $405;
     break;
    }
   case 10:
    {
     $221 = HEAP8[$buffer >> 0] | 0;
     $223 = HEAP8[$buffer + 1 >> 0] | 0;
     if ((HEAP32[$this + 20 >> 2] | 0) == 1) $$0$in$i2 = ($223 & 255) << 8 | $221 & 255; else $$0$in$i2 = $223 & 255 | ($221 & 255) << 8;
     $235 = ($$0$in$i2 & 65535) << 16 >> 16;
     HEAP32[$len >> 2] = 2;
     $392 = $235;
     $393 = (($235 | 0) < 0) << 31 >> 31;
     break;
    }
   case 11:
    {
     $239 = HEAPU8[$buffer >> 0] | 0;
     $242 = HEAPU8[$buffer + 1 >> 0] | 0;
     $245 = HEAPU8[$buffer + 2 >> 0] | 0;
     $248 = HEAPU8[$buffer + 3 >> 0] | 0;
     if ((HEAP32[$this + 20 >> 2] | 0) == 1) $$0$in$i = $242 << 8 | $239 | $245 << 16 | $248 << 24; else $$0$in$i = $242 << 16 | $239 << 24 | $245 << 8 | $248;
     HEAP32[$len >> 2] = 4;
     $392 = $$0$in$i;
     $393 = (($$0$in$i | 0) < 0) << 31 >> 31;
     break;
    }
   case 12:
    {
     $267 = HEAPU8[$buffer >> 0] | 0;
     $270 = HEAPU8[$buffer + 1 >> 0] | 0;
     $273 = HEAPU8[$buffer + 2 >> 0] | 0;
     $276 = HEAPU8[$buffer + 3 >> 0] | 0;
     $279 = HEAPU8[$buffer + 4 >> 0] | 0;
     $282 = HEAPU8[$buffer + 5 >> 0] | 0;
     $285 = HEAPU8[$buffer + 6 >> 0] | 0;
     $288 = HEAPU8[$buffer + 7 >> 0] | 0;
     if ((HEAP32[$this + 20 >> 2] | 0) == 1) {
      $292 = _bitshift64Shl($270 | 0, 0, 8) | 0;
      $293 = tempRet0;
      $295 = _bitshift64Shl($273 | 0, 0, 16) | 0;
      $298 = $293 | tempRet0;
      $299 = _bitshift64Shl($276 | 0, 0, 24) | 0;
      $303 = $298 | tempRet0 | $279;
      $304 = _bitshift64Shl($282 | 0, 0, 40) | 0;
      $307 = $303 | tempRet0;
      $308 = _bitshift64Shl($285 | 0, 0, 48) | 0;
      $311 = $307 | tempRet0;
      $312 = _bitshift64Shl($288 | 0, 0, 56) | 0;
      $406 = $292 | $267 | $295 | $299 | $304 | $308 | $312;
      $407 = $311 | tempRet0;
     } else {
      $316 = _bitshift64Shl($285 | 0, 0, 8) | 0;
      $317 = tempRet0;
      $318 = _bitshift64Shl($282 | 0, 0, 16) | 0;
      $319 = tempRet0;
      $320 = _bitshift64Shl($279 | 0, 0, 24) | 0;
      $321 = tempRet0;
      $322 = _bitshift64Shl($273 | 0, 0, 40) | 0;
      $323 = tempRet0;
      $324 = _bitshift64Shl($270 | 0, 0, 48) | 0;
      $325 = tempRet0;
      $326 = _bitshift64Shl($267 | 0, 0, 56) | 0;
      $406 = $324 | $326 | $322 | $320 | $318 | $316 | $288;
      $407 = $325 | tempRet0 | $323 | $276 | $321 | $319 | $317;
     }
     HEAP32[$len >> 2] = 8;
     $392 = $406;
     $393 = $407;
     break;
    }
   default:
    _abort();
   } while (0);
   L53 : do switch ($encoding & 112 | 0) {
   case 0:
    {
     $390 = 0;
     $391 = 0;
     break;
    }
   case 16:
    {
     if (!(HEAP8[$this + 26 >> 0] | 0)) ___assert_fail(17519, 17428, 211, 17500); else {
      $345 = $this + 32 | 0;
      $355 = $buffer - (HEAP32[$this + 64 >> 2] | 0) | 0;
      $358 = _i64Add($355 | 0, (($355 | 0) < 0) << 31 >> 31 | 0, HEAP32[$345 >> 2] | 0, HEAP32[$345 + 4 >> 2] | 0) | 0;
      $390 = $358;
      $391 = tempRet0;
      break L53;
     }
     break;
    }
   case 32:
    {
     if (!(HEAP8[$this + 27 >> 0] | 0)) ___assert_fail(17538, 17428, 216, 17500); else {
      $364 = $this + 40 | 0;
      $390 = HEAP32[$364 >> 2] | 0;
      $391 = HEAP32[$364 + 4 >> 2] | 0;
      break L53;
     }
     break;
    }
   case 48:
    {
     if (!(HEAP8[$this + 28 >> 0] | 0)) ___assert_fail(17554, 17428, 221, 17500); else {
      $374 = $this + 48 | 0;
      $390 = HEAP32[$374 >> 2] | 0;
      $391 = HEAP32[$374 + 4 >> 2] | 0;
      break L53;
     }
     break;
    }
   case 64:
    {
     if (!(HEAP8[$this + 29 >> 0] | 0)) ___assert_fail(17570, 17428, 226, 17500); else {
      $384 = $this + 56 | 0;
      $390 = HEAP32[$384 >> 2] | 0;
      $391 = HEAP32[$384 + 4 >> 2] | 0;
      break L53;
     }
     break;
    }
   default:
    _abort();
   } while (0);
   $394 = _i64Add($390 | 0, $391 | 0, $392 | 0, $393 | 0) | 0;
   $395 = tempRet0;
   switch (HEAP8[$this + 24 >> 0] | 0) {
   case 4:
    {
     $398 = 0;
     $399 = $394;
     tempRet0 = $398;
     return $399 | 0;
    }
   case 8:
    {
     $398 = $395;
     $399 = $394;
     tempRet0 = $398;
     return $399 | 0;
    }
   default:
    ___assert_fail(17590, 17428, 240, 17500);
   }
  }
 }
 return 0;
}

function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$sum18 = 0, $$sum21 = 0, $0 = 0, $10 = 0, $100 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $123 = 0, $128 = 0, $129 = 0, $132 = 0, $134 = 0, $136 = 0, $149 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $207 = 0, $22 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $231 = 0, $232 = 0, $238 = 0, $243 = 0, $244 = 0, $247 = 0, $249 = 0, $252 = 0, $257 = 0, $263 = 0, $267 = 0, $268 = 0, $275 = 0, $287 = 0, $292 = 0, $299 = 0, $300 = 0, $301 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $78 = 0, $83 = 0, $87 = 0, $9 = 0, $93 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0;
 $0 = $p + $psize | 0;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 do if (!($2 & 1)) {
  $5 = HEAP32[$p >> 2] | 0;
  if (!($2 & 3)) return;
  $9 = $p + (0 - $5) | 0;
  $10 = $5 + $psize | 0;
  $11 = HEAP32[1473] | 0;
  if ($9 >>> 0 < $11 >>> 0) _abort();
  if (($9 | 0) == (HEAP32[1474] | 0)) {
   $99 = $p + ($psize + 4) | 0;
   $100 = HEAP32[$99 >> 2] | 0;
   if (($100 & 3 | 0) != 3) {
    $$0 = $9;
    $$02 = $10;
    break;
   }
   HEAP32[1471] = $10;
   HEAP32[$99 >> 2] = $100 & -2;
   HEAP32[$p + (4 - $5) >> 2] = $10 | 1;
   HEAP32[$0 >> 2] = $10;
   return;
  }
  $15 = $5 >>> 3;
  if ($5 >>> 0 < 256) {
   $18 = HEAP32[$p + (8 - $5) >> 2] | 0;
   $20 = HEAP32[$p + (12 - $5) >> 2] | 0;
   $22 = 5916 + ($15 << 1 << 2) | 0;
   if (($18 | 0) != ($22 | 0)) {
    if ($18 >>> 0 < $11 >>> 0) _abort();
    if ((HEAP32[$18 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($20 | 0) == ($18 | 0)) {
    HEAP32[1469] = HEAP32[1469] & ~(1 << $15);
    $$0 = $9;
    $$02 = $10;
    break;
   }
   if (($20 | 0) == ($22 | 0)) $$pre$phi52Z2D = $20 + 8 | 0; else {
    if ($20 >>> 0 < $11 >>> 0) _abort();
    $35 = $20 + 8 | 0;
    if ((HEAP32[$35 >> 2] | 0) == ($9 | 0)) $$pre$phi52Z2D = $35; else _abort();
   }
   HEAP32[$18 + 12 >> 2] = $20;
   HEAP32[$$pre$phi52Z2D >> 2] = $18;
   $$0 = $9;
   $$02 = $10;
   break;
  }
  $40 = HEAP32[$p + (24 - $5) >> 2] | 0;
  $42 = HEAP32[$p + (12 - $5) >> 2] | 0;
  do if (($42 | 0) == ($9 | 0)) {
   $$sum18 = 16 - $5 | 0;
   $53 = $p + ($$sum18 + 4) | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if (!$54) {
    $56 = $p + $$sum18 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (!$57) {
     $R$1 = 0;
     break;
    } else {
     $R$0 = $57;
     $RP$0 = $56;
    }
   } else {
    $R$0 = $54;
    $RP$0 = $53;
   }
   while (1) {
    $59 = $R$0 + 20 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    if ($60) {
     $R$0 = $60;
     $RP$0 = $59;
     continue;
    }
    $62 = $R$0 + 16 | 0;
    $63 = HEAP32[$62 >> 2] | 0;
    if (!$63) {
     $R$0$lcssa = $R$0;
     $RP$0$lcssa = $RP$0;
     break;
    } else {
     $R$0 = $63;
     $RP$0 = $62;
    }
   }
   if ($RP$0$lcssa >>> 0 < $11 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $45 = HEAP32[$p + (8 - $5) >> 2] | 0;
   if ($45 >>> 0 < $11 >>> 0) _abort();
   $47 = $45 + 12 | 0;
   if ((HEAP32[$47 >> 2] | 0) != ($9 | 0)) _abort();
   $50 = $42 + 8 | 0;
   if ((HEAP32[$50 >> 2] | 0) == ($9 | 0)) {
    HEAP32[$47 >> 2] = $42;
    HEAP32[$50 >> 2] = $45;
    $R$1 = $42;
    break;
   } else _abort();
  } while (0);
  if (!$40) {
   $$0 = $9;
   $$02 = $10;
  } else {
   $68 = HEAP32[$p + (28 - $5) >> 2] | 0;
   $69 = 6180 + ($68 << 2) | 0;
   if (($9 | 0) == (HEAP32[$69 >> 2] | 0)) {
    HEAP32[$69 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[1470] = HEAP32[1470] & ~(1 << $68);
     $$0 = $9;
     $$02 = $10;
     break;
    }
   } else {
    if ($40 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
    $78 = $40 + 16 | 0;
    if ((HEAP32[$78 >> 2] | 0) == ($9 | 0)) HEAP32[$78 >> 2] = $R$1; else HEAP32[$40 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $$0 = $9;
     $$02 = $10;
     break;
    }
   }
   $83 = HEAP32[1473] | 0;
   if ($R$1 >>> 0 < $83 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $40;
   $$sum21 = 16 - $5 | 0;
   $87 = HEAP32[$p + $$sum21 >> 2] | 0;
   do if ($87) if ($87 >>> 0 < $83 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $87;
    HEAP32[$87 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $93 = HEAP32[$p + ($$sum21 + 4) >> 2] | 0;
   if (!$93) {
    $$0 = $9;
    $$02 = $10;
   } else if ($93 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $R$1;
    $$0 = $9;
    $$02 = $10;
    break;
   }
  }
 } else {
  $$0 = $p;
  $$02 = $psize;
 } while (0);
 $106 = HEAP32[1473] | 0;
 if ($0 >>> 0 < $106 >>> 0) _abort();
 $108 = $p + ($psize + 4) | 0;
 $109 = HEAP32[$108 >> 2] | 0;
 if (!($109 & 2)) {
  if (($0 | 0) == (HEAP32[1475] | 0)) {
   $115 = (HEAP32[1472] | 0) + $$02 | 0;
   HEAP32[1472] = $115;
   HEAP32[1475] = $$0;
   HEAP32[$$0 + 4 >> 2] = $115 | 1;
   if (($$0 | 0) != (HEAP32[1474] | 0)) return;
   HEAP32[1474] = 0;
   HEAP32[1471] = 0;
   return;
  }
  if (($0 | 0) == (HEAP32[1474] | 0)) {
   $123 = (HEAP32[1471] | 0) + $$02 | 0;
   HEAP32[1471] = $123;
   HEAP32[1474] = $$0;
   HEAP32[$$0 + 4 >> 2] = $123 | 1;
   HEAP32[$$0 + $123 >> 2] = $123;
   return;
  }
  $128 = ($109 & -8) + $$02 | 0;
  $129 = $109 >>> 3;
  do if ($109 >>> 0 < 256) {
   $132 = HEAP32[$p + ($psize + 8) >> 2] | 0;
   $134 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   $136 = 5916 + ($129 << 1 << 2) | 0;
   if (($132 | 0) != ($136 | 0)) {
    if ($132 >>> 0 < $106 >>> 0) _abort();
    if ((HEAP32[$132 + 12 >> 2] | 0) != ($0 | 0)) _abort();
   }
   if (($134 | 0) == ($132 | 0)) {
    HEAP32[1469] = HEAP32[1469] & ~(1 << $129);
    break;
   }
   if (($134 | 0) == ($136 | 0)) $$pre$phi50Z2D = $134 + 8 | 0; else {
    if ($134 >>> 0 < $106 >>> 0) _abort();
    $149 = $134 + 8 | 0;
    if ((HEAP32[$149 >> 2] | 0) == ($0 | 0)) $$pre$phi50Z2D = $149; else _abort();
   }
   HEAP32[$132 + 12 >> 2] = $134;
   HEAP32[$$pre$phi50Z2D >> 2] = $132;
  } else {
   $154 = HEAP32[$p + ($psize + 24) >> 2] | 0;
   $156 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   do if (($156 | 0) == ($0 | 0)) {
    $167 = $p + ($psize + 20) | 0;
    $168 = HEAP32[$167 >> 2] | 0;
    if (!$168) {
     $170 = $p + ($psize + 16) | 0;
     $171 = HEAP32[$170 >> 2] | 0;
     if (!$171) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0 = $171;
      $RP9$0 = $170;
     }
    } else {
     $R7$0 = $168;
     $RP9$0 = $167;
    }
    while (1) {
     $173 = $R7$0 + 20 | 0;
     $174 = HEAP32[$173 >> 2] | 0;
     if ($174) {
      $R7$0 = $174;
      $RP9$0 = $173;
      continue;
     }
     $176 = $R7$0 + 16 | 0;
     $177 = HEAP32[$176 >> 2] | 0;
     if (!$177) {
      $R7$0$lcssa = $R7$0;
      $RP9$0$lcssa = $RP9$0;
      break;
     } else {
      $R7$0 = $177;
      $RP9$0 = $176;
     }
    }
    if ($RP9$0$lcssa >>> 0 < $106 >>> 0) _abort(); else {
     HEAP32[$RP9$0$lcssa >> 2] = 0;
     $R7$1 = $R7$0$lcssa;
     break;
    }
   } else {
    $159 = HEAP32[$p + ($psize + 8) >> 2] | 0;
    if ($159 >>> 0 < $106 >>> 0) _abort();
    $161 = $159 + 12 | 0;
    if ((HEAP32[$161 >> 2] | 0) != ($0 | 0)) _abort();
    $164 = $156 + 8 | 0;
    if ((HEAP32[$164 >> 2] | 0) == ($0 | 0)) {
     HEAP32[$161 >> 2] = $156;
     HEAP32[$164 >> 2] = $159;
     $R7$1 = $156;
     break;
    } else _abort();
   } while (0);
   if ($154) {
    $182 = HEAP32[$p + ($psize + 28) >> 2] | 0;
    $183 = 6180 + ($182 << 2) | 0;
    if (($0 | 0) == (HEAP32[$183 >> 2] | 0)) {
     HEAP32[$183 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[1470] = HEAP32[1470] & ~(1 << $182);
      break;
     }
    } else {
     if ($154 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
     $192 = $154 + 16 | 0;
     if ((HEAP32[$192 >> 2] | 0) == ($0 | 0)) HEAP32[$192 >> 2] = $R7$1; else HEAP32[$154 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $197 = HEAP32[1473] | 0;
    if ($R7$1 >>> 0 < $197 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $154;
    $201 = HEAP32[$p + ($psize + 16) >> 2] | 0;
    do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $201;
     HEAP32[$201 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $207 = HEAP32[$p + ($psize + 20) >> 2] | 0;
    if ($207) if ($207 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $207;
     HEAP32[$207 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$$0 + 4 >> 2] = $128 | 1;
  HEAP32[$$0 + $128 >> 2] = $128;
  if (($$0 | 0) == (HEAP32[1474] | 0)) {
   HEAP32[1471] = $128;
   return;
  } else $$1 = $128;
 } else {
  HEAP32[$108 >> 2] = $109 & -2;
  HEAP32[$$0 + 4 >> 2] = $$02 | 1;
  HEAP32[$$0 + $$02 >> 2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 if ($$1 >>> 0 < 256) {
  $224 = $222 << 1;
  $225 = 5916 + ($224 << 2) | 0;
  $226 = HEAP32[1469] | 0;
  $227 = 1 << $222;
  if (!($226 & $227)) {
   HEAP32[1469] = $226 | $227;
   $$pre$phiZ2D = 5916 + ($224 + 2 << 2) | 0;
   $F16$0 = $225;
  } else {
   $231 = 5916 + ($224 + 2 << 2) | 0;
   $232 = HEAP32[$231 >> 2] | 0;
   if ($232 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $231;
    $F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$0;
  HEAP32[$F16$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $F16$0;
  HEAP32[$$0 + 12 >> 2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 if (!$238) $I19$0 = 0; else if ($$1 >>> 0 > 16777215) $I19$0 = 31; else {
  $243 = ($238 + 1048320 | 0) >>> 16 & 8;
  $244 = $238 << $243;
  $247 = ($244 + 520192 | 0) >>> 16 & 4;
  $249 = $244 << $247;
  $252 = ($249 + 245760 | 0) >>> 16 & 2;
  $257 = 14 - ($247 | $243 | $252) + ($249 << $252 >>> 15) | 0;
  $I19$0 = $$1 >>> ($257 + 7 | 0) & 1 | $257 << 1;
 }
 $263 = 6180 + ($I19$0 << 2) | 0;
 HEAP32[$$0 + 28 >> 2] = $I19$0;
 HEAP32[$$0 + 20 >> 2] = 0;
 HEAP32[$$0 + 16 >> 2] = 0;
 $267 = HEAP32[1470] | 0;
 $268 = 1 << $I19$0;
 if (!($267 & $268)) {
  HEAP32[1470] = $267 | $268;
  HEAP32[$263 >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $263;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  return;
 }
 $275 = HEAP32[$263 >> 2] | 0;
 L191 : do if ((HEAP32[$275 + 4 >> 2] & -8 | 0) == ($$1 | 0)) $T$0$lcssa = $275; else {
  $K20$043 = $$1 << (($I19$0 | 0) == 31 ? 0 : 25 - ($I19$0 >>> 1) | 0);
  $T$042 = $275;
  while (1) {
   $292 = $T$042 + 16 + ($K20$043 >>> 31 << 2) | 0;
   $287 = HEAP32[$292 >> 2] | 0;
   if (!$287) {
    $$lcssa = $292;
    $T$042$lcssa = $T$042;
    break;
   }
   if ((HEAP32[$287 + 4 >> 2] & -8 | 0) == ($$1 | 0)) {
    $T$0$lcssa = $287;
    break L191;
   } else {
    $K20$043 = $K20$043 << 1;
    $T$042 = $287;
   }
  }
  if ($$lcssa >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
  HEAP32[$$lcssa >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $T$042$lcssa;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  return;
 } while (0);
 $299 = $T$0$lcssa + 8 | 0;
 $300 = HEAP32[$299 >> 2] | 0;
 $301 = HEAP32[1473] | 0;
 if (!($300 >>> 0 >= $301 >>> 0 & $T$0$lcssa >>> 0 >= $301 >>> 0)) _abort();
 HEAP32[$300 + 12 >> 2] = $$0;
 HEAP32[$299 >> 2] = $$0;
 HEAP32[$$0 + 8 >> 2] = $300;
 HEAP32[$$0 + 12 >> 2] = $T$0$lcssa;
 HEAP32[$$0 + 24 >> 2] = 0;
 return;
}

function ___intscan($f, $base, $pok, $0, $1) {
 $f = $f | 0;
 $base = $base | 0;
 $pok = $pok | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $100 = 0, $101 = 0, $108 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $135 = 0, $136 = 0, $144 = 0, $149 = 0, $150 = 0, $152 = 0, $155 = 0, $157 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $185 = 0, $186 = 0, $187 = 0, $195 = 0, $201 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $222 = 0, $223 = 0, $224 = 0, $239 = 0, $25 = 0, $256 = 0, $258 = 0, $268 = 0, $277 = 0, $280 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $51 = 0, $6 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $91 = 0, $93 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0, label = 0;
 if ($base >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $282 = 0;
  $283 = 0;
  tempRet0 = $282;
  return $283 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 do {
  $6 = HEAP32[$3 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $6 + 1;
   $13 = HEAPU8[$6 >> 0] | 0;
  } else $13 = ___shgetc($f) | 0;
 } while ((_isspace($13) | 0) != 0);
 $$lcssa135 = $13;
 L12 : do switch ($$lcssa135 | 0) {
 case 43:
 case 45:
  {
   $17 = (($$lcssa135 | 0) == 45) << 31 >> 31;
   $18 = HEAP32[$3 >> 2] | 0;
   if ($18 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $18 + 1;
    $c$0 = HEAPU8[$18 >> 0] | 0;
    $neg$0 = $17;
    break L12;
   } else {
    $c$0 = ___shgetc($f) | 0;
    $neg$0 = $17;
    break L12;
   }
   break;
  }
 default:
  {
   $c$0 = $$lcssa135;
   $neg$0 = 0;
  }
 } while (0);
 $25 = ($base | 0) == 0;
 do if (($base & -17 | 0) == 0 & ($c$0 | 0) == 48) {
  $29 = HEAP32[$3 >> 2] | 0;
  if ($29 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $29 + 1;
   $37 = HEAPU8[$29 >> 0] | 0;
  } else $37 = ___shgetc($f) | 0;
  if (($37 | 32 | 0) != 120) if ($25) {
   $$123 = 8;
   $c$124 = $37;
   label = 46;
   break;
  } else {
   $$1 = $base;
   $c$1 = $37;
   label = 32;
   break;
  }
  $39 = HEAP32[$3 >> 2] | 0;
  if ($39 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $39 + 1;
   $46 = HEAPU8[$39 >> 0] | 0;
  } else $46 = ___shgetc($f) | 0;
  if ((HEAPU8[27558 + ($46 + 1) >> 0] | 0) > 15) {
   $51 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$51) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (!$pok) {
    ___shlim($f, 0);
    $282 = 0;
    $283 = 0;
    tempRet0 = $282;
    return $283 | 0;
   }
   if ($51) {
    $282 = 0;
    $283 = 0;
    tempRet0 = $282;
    return $283 | 0;
   }
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   $282 = 0;
   $283 = 0;
   tempRet0 = $282;
   return $283 | 0;
  } else {
   $$123 = 16;
   $c$124 = $46;
   label = 46;
  }
 } else {
  $$base21 = $25 ? 10 : $base;
  if ((HEAPU8[27558 + ($c$0 + 1) >> 0] | 0) >>> 0 < $$base21 >>> 0) {
   $$1 = $$base21;
   $c$1 = $c$0;
   label = 32;
  } else {
   if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   ___shlim($f, 0);
   HEAP32[(___errno_location() | 0) >> 2] = 22;
   $282 = 0;
   $283 = 0;
   tempRet0 = $282;
   return $283 | 0;
  }
 } while (0);
 if ((label | 0) == 32) if (($$1 | 0) == 10) {
  $67 = $c$1 + -48 | 0;
  if ($67 >>> 0 < 10) {
   $71 = $67;
   $x$082 = 0;
   while (1) {
    $70 = ($x$082 * 10 | 0) + $71 | 0;
    $72 = HEAP32[$3 >> 2] | 0;
    if ($72 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $72 + 1;
     $c$2$be = HEAPU8[$72 >> 0] | 0;
    } else $c$2$be = ___shgetc($f) | 0;
    $71 = $c$2$be + -48 | 0;
    if (!($71 >>> 0 < 10 & $70 >>> 0 < 429496729)) {
     $$lcssa134 = $70;
     $c$2$be$lcssa = $c$2$be;
     break;
    } else $x$082 = $70;
   }
   $284 = $$lcssa134;
   $285 = 0;
   $c$2$lcssa = $c$2$be$lcssa;
  } else {
   $284 = 0;
   $285 = 0;
   $c$2$lcssa = $c$1;
  }
  $83 = $c$2$lcssa + -48 | 0;
  if ($83 >>> 0 < 10) {
   $85 = $284;
   $86 = $285;
   $90 = $83;
   $c$371 = $c$2$lcssa;
   while (1) {
    $87 = ___muldi3($85 | 0, $86 | 0, 10, 0) | 0;
    $88 = tempRet0;
    $91 = (($90 | 0) < 0) << 31 >> 31;
    $93 = ~$91;
    if ($88 >>> 0 > $93 >>> 0 | ($88 | 0) == ($93 | 0) & $87 >>> 0 > ~$90 >>> 0) {
     $$lcssa = $90;
     $286 = $85;
     $287 = $86;
     $c$3$lcssa = $c$371;
     break;
    }
    $99 = _i64Add($87 | 0, $88 | 0, $90 | 0, $91 | 0) | 0;
    $100 = tempRet0;
    $101 = HEAP32[$3 >> 2] | 0;
    if ($101 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $101 + 1;
     $c$3$be = HEAPU8[$101 >> 0] | 0;
    } else $c$3$be = ___shgetc($f) | 0;
    $108 = $c$3$be + -48 | 0;
    if ($108 >>> 0 < 10 & ($100 >>> 0 < 429496729 | ($100 | 0) == 429496729 & $99 >>> 0 < 2576980378)) {
     $85 = $99;
     $86 = $100;
     $90 = $108;
     $c$371 = $c$3$be;
    } else {
     $$lcssa = $108;
     $286 = $99;
     $287 = $100;
     $c$3$lcssa = $c$3$be;
     break;
    }
   }
   if ($$lcssa >>> 0 > 9) {
    $256 = $287;
    $258 = $286;
   } else {
    $$122 = 10;
    $288 = $286;
    $289 = $287;
    $c$8 = $c$3$lcssa;
    label = 72;
   }
  } else {
   $256 = $285;
   $258 = $284;
  }
 } else {
  $$123 = $$1;
  $c$124 = $c$1;
  label = 46;
 }
 L69 : do if ((label | 0) == 46) {
  if (!($$123 + -1 & $$123)) {
   $128 = HEAP8[27815 + (($$123 * 23 | 0) >>> 5 & 7) >> 0] | 0;
   $130 = HEAP8[27558 + ($c$124 + 1) >> 0] | 0;
   $131 = $130 & 255;
   if ($131 >>> 0 < $$123 >>> 0) {
    $135 = $131;
    $x$146 = 0;
    while (1) {
     $134 = $135 | $x$146 << $128;
     $136 = HEAP32[$3 >> 2] | 0;
     if ($136 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $136 + 1;
      $c$4$be = HEAPU8[$136 >> 0] | 0;
     } else $c$4$be = ___shgetc($f) | 0;
     $144 = HEAP8[27558 + ($c$4$be + 1) >> 0] | 0;
     $135 = $144 & 255;
     if (!($134 >>> 0 < 134217728 & $135 >>> 0 < $$123 >>> 0)) {
      $$lcssa130 = $134;
      $$lcssa131 = $144;
      $c$4$be$lcssa = $c$4$be;
      break;
     } else $x$146 = $134;
    }
    $152 = $$lcssa131;
    $155 = 0;
    $157 = $$lcssa130;
    $c$4$lcssa = $c$4$be$lcssa;
   } else {
    $152 = $130;
    $155 = 0;
    $157 = 0;
    $c$4$lcssa = $c$124;
   }
   $149 = _bitshift64Lshr(-1, -1, $128 | 0) | 0;
   $150 = tempRet0;
   if (($152 & 255) >>> 0 >= $$123 >>> 0 | ($155 >>> 0 > $150 >>> 0 | ($155 | 0) == ($150 | 0) & $157 >>> 0 > $149 >>> 0)) {
    $$122 = $$123;
    $288 = $157;
    $289 = $155;
    $c$8 = $c$4$lcssa;
    label = 72;
    break;
   } else {
    $161 = $157;
    $162 = $155;
    $166 = $152;
   }
   while (1) {
    $163 = _bitshift64Shl($161 | 0, $162 | 0, $128 | 0) | 0;
    $164 = tempRet0;
    $167 = $166 & 255 | $163;
    $168 = HEAP32[$3 >> 2] | 0;
    if ($168 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $168 + 1;
     $c$5$be = HEAPU8[$168 >> 0] | 0;
    } else $c$5$be = ___shgetc($f) | 0;
    $166 = HEAP8[27558 + ($c$5$be + 1) >> 0] | 0;
    if (($166 & 255) >>> 0 >= $$123 >>> 0 | ($164 >>> 0 > $150 >>> 0 | ($164 | 0) == ($150 | 0) & $167 >>> 0 > $149 >>> 0)) {
     $$122 = $$123;
     $288 = $167;
     $289 = $164;
     $c$8 = $c$5$be;
     label = 72;
     break L69;
    } else {
     $161 = $167;
     $162 = $164;
    }
   }
  }
  $120 = HEAP8[27558 + ($c$124 + 1) >> 0] | 0;
  $121 = $120 & 255;
  if ($121 >>> 0 < $$123 >>> 0) {
   $186 = $121;
   $x$266 = 0;
   while (1) {
    $185 = $186 + (Math_imul($x$266, $$123) | 0) | 0;
    $187 = HEAP32[$3 >> 2] | 0;
    if ($187 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $187 + 1;
     $c$6$be = HEAPU8[$187 >> 0] | 0;
    } else $c$6$be = ___shgetc($f) | 0;
    $195 = HEAP8[27558 + ($c$6$be + 1) >> 0] | 0;
    $186 = $195 & 255;
    if (!($185 >>> 0 < 119304647 & $186 >>> 0 < $$123 >>> 0)) {
     $$lcssa132 = $185;
     $$lcssa133 = $195;
     $c$6$be$lcssa = $c$6$be;
     break;
    } else $x$266 = $185;
   }
   $201 = $$lcssa133;
   $290 = $$lcssa132;
   $291 = 0;
   $c$6$lcssa = $c$6$be$lcssa;
  } else {
   $201 = $120;
   $290 = 0;
   $291 = 0;
   $c$6$lcssa = $c$124;
  }
  if (($201 & 255) >>> 0 < $$123 >>> 0) {
   $203 = ___udivdi3(-1, -1, $$123 | 0, 0) | 0;
   $204 = tempRet0;
   $206 = $291;
   $208 = $290;
   $215 = $201;
   $c$753 = $c$6$lcssa;
   while (1) {
    if ($206 >>> 0 > $204 >>> 0 | ($206 | 0) == ($204 | 0) & $208 >>> 0 > $203 >>> 0) {
     $$122 = $$123;
     $288 = $208;
     $289 = $206;
     $c$8 = $c$753;
     label = 72;
     break L69;
    }
    $212 = ___muldi3($208 | 0, $206 | 0, $$123 | 0, 0) | 0;
    $213 = tempRet0;
    $214 = $215 & 255;
    if ($213 >>> 0 > 4294967295 | ($213 | 0) == -1 & $212 >>> 0 > ~$214 >>> 0) {
     $$122 = $$123;
     $288 = $208;
     $289 = $206;
     $c$8 = $c$753;
     label = 72;
     break L69;
    }
    $222 = _i64Add($214 | 0, 0, $212 | 0, $213 | 0) | 0;
    $223 = tempRet0;
    $224 = HEAP32[$3 >> 2] | 0;
    if ($224 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $224 + 1;
     $c$7$be = HEAPU8[$224 >> 0] | 0;
    } else $c$7$be = ___shgetc($f) | 0;
    $215 = HEAP8[27558 + ($c$7$be + 1) >> 0] | 0;
    if (($215 & 255) >>> 0 >= $$123 >>> 0) {
     $$122 = $$123;
     $288 = $222;
     $289 = $223;
     $c$8 = $c$7$be;
     label = 72;
     break;
    } else {
     $206 = $223;
     $208 = $222;
     $c$753 = $c$7$be;
    }
   }
  } else {
   $$122 = $$123;
   $288 = $290;
   $289 = $291;
   $c$8 = $c$6$lcssa;
   label = 72;
  }
 } while (0);
 if ((label | 0) == 72) if ((HEAPU8[27558 + ($c$8 + 1) >> 0] | 0) >>> 0 < $$122 >>> 0) {
  do {
   $239 = HEAP32[$3 >> 2] | 0;
   if ($239 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $239 + 1;
    $c$9$be = HEAPU8[$239 >> 0] | 0;
   } else $c$9$be = ___shgetc($f) | 0;
  } while ((HEAPU8[27558 + ($c$9$be + 1) >> 0] | 0) >>> 0 < $$122 >>> 0);
  HEAP32[(___errno_location() | 0) >> 2] = 34;
  $256 = $1;
  $258 = $0;
 } else {
  $256 = $289;
  $258 = $288;
 }
 if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
 if (!($256 >>> 0 < $1 >>> 0 | ($256 | 0) == ($1 | 0) & $258 >>> 0 < $0 >>> 0)) {
  if (!(($0 & 1 | 0) != 0 | 0 != 0 | ($neg$0 | 0) != 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $268 = _i64Add($0 | 0, $1 | 0, -1, -1) | 0;
   $282 = tempRet0;
   $283 = $268;
   tempRet0 = $282;
   return $283 | 0;
  }
  if ($256 >>> 0 > $1 >>> 0 | ($256 | 0) == ($1 | 0) & $258 >>> 0 > $0 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $282 = $1;
   $283 = $0;
   tempRet0 = $282;
   return $283 | 0;
  }
 }
 $277 = (($neg$0 | 0) < 0) << 31 >> 31;
 $280 = _i64Subtract($258 ^ $neg$0 | 0, $256 ^ $277 | 0, $neg$0 | 0, $277 | 0) | 0;
 $282 = tempRet0;
 $283 = $280;
 tempRet0 = $282;
 return $283 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i15 = 0, $$0$i$i$i7 = 0, $$0$i$i$i9 = 0, $$0$i$i58 = 0, $$lcssa81 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $107 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $122 = 0, $125 = 0, $133 = 0, $134 = 0, $135 = 0, $138 = 0, $141 = 0, $148 = 0, $15 = 0, $150 = 0, $157 = 0, $158 = 0, $167 = 0, $168 = 0, $170 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $184 = 0, $186 = 0, $189 = 0, $190 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $30 = 0, $33 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $49 = 0, $56 = 0, $58 = 0, $61 = 0, $62 = 0, $64 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $78 = 0, $80 = 0, $83 = 0, $84 = 0, $89 = 0, $91 = 0, $__p$0$i$i57 = 0, $__p$0$ph$i$i = 0, $__v$i$i13 = 0, $isdigittmp = 0, $isdigittmp4 = 0, $sub$061 = 0, $sub$061$lcssa = 0, $t1$060 = 0, $t1$060$lcssa = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $__v$i$i13 = sp + 64 | 0;
 $0 = sp + 40 | 0;
 $1 = sp + 16 | 0;
 $2 = sp;
 $4 = $first;
 L1 : do if (($last - $4 | 0) > 1) if ((HEAP8[$first >> 0] | 0) == 84) {
  $10 = HEAP8[$first + 1 >> 0] | 0;
  if ($10 << 24 >> 24 == 95) {
   $15 = HEAP32[$db + 36 >> 2] | 0;
   if ((HEAP32[$db + 32 >> 2] | 0) == ($15 | 0)) {
    $$0 = $first;
    break;
   }
   $18 = HEAP32[$15 + -16 >> 2] | 0;
   if (($18 | 0) == (HEAP32[$15 + -12 >> 2] | 0)) {
    HEAP8[$0 >> 0] = 4;
    $56 = $0 + 1 | 0;
    HEAP8[$56 >> 0] = 84;
    HEAP8[$56 + 1 >> 0] = 95;
    HEAP8[$0 + 3 >> 0] = 0;
    $58 = $0 + 12 | 0;
    HEAP32[$58 >> 2] = 0;
    HEAP32[$58 + 4 >> 2] = 0;
    HEAP32[$58 + 8 >> 2] = 0;
    $61 = $db + 4 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    $64 = HEAP32[$db + 8 >> 2] | 0;
    if ($62 >>> 0 < $64 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($62, $0);
     HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 24;
    } else {
     $71 = HEAP32[$db >> 2] | 0;
     $72 = $62 - $71 | 0;
     $73 = ($72 | 0) / 24 | 0;
     $74 = $73 + 1 | 0;
     if (($72 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $78 = ($64 - $71 | 0) / 24 | 0;
     if ($78 >>> 0 < 1073741823) {
      $80 = $78 << 1;
      $$0$i$i$i9 = $80 >>> 0 < $74 >>> 0 ? $74 : $80;
     } else $$0$i$i$i9 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i13, $$0$i$i$i9, $73, $db + 12 | 0);
     $83 = $__v$i$i13 + 8 | 0;
     $84 = HEAP32[$83 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($84, $0);
     HEAP32[$83 >> 2] = $84 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i13);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i13);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
    HEAP8[$db + 62 >> 0] = 1;
    $$0 = $first + 2 | 0;
    break;
   }
   $22 = HEAP32[$18 >> 2] | 0;
   $24 = HEAP32[$18 + 4 >> 2] | 0;
   $25 = $db + 4 | 0;
   $26 = $db + 8 | 0;
   $27 = $db + 12 | 0;
   $28 = $__v$i$i13 + 8 | 0;
   L20 : do if (($22 | 0) != ($24 | 0)) {
    $33 = $22;
    while (1) {
     $30 = HEAP32[$25 >> 2] | 0;
     if (($30 | 0) == (HEAP32[$26 >> 2] | 0)) {
      $41 = $30 - (HEAP32[$db >> 2] | 0) | 0;
      $42 = ($41 | 0) / 24 | 0;
      $43 = $42 + 1 | 0;
      if (($41 | 0) < -24) break;
      if ($42 >>> 0 < 1073741823) {
       $46 = $42 << 1;
       $$0$i$i$i7 = $46 >>> 0 < $43 >>> 0 ? $43 : $46;
      } else $$0$i$i$i7 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i13, $$0$i$i$i7, $42, $27);
      $49 = HEAP32[$28 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($49, $33);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($49 + 12 | 0, $33 + 12 | 0);
      HEAP32[$28 >> 2] = $49 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i13);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i13);
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($30, $33);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($30 + 12 | 0, $33 + 12 | 0);
      HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 24;
     }
     $33 = $33 + 24 | 0;
     if (($33 | 0) == ($24 | 0)) break L20;
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
   } while (0);
   $$0 = $first + 2 | 0;
   break;
  }
  $isdigittmp = ($10 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $89 = $first + 2 | 0;
   if (($89 | 0) == ($last | 0)) $$0 = $first; else {
    $sub$061 = $isdigittmp;
    $t1$060 = $89;
    while (1) {
     $91 = HEAP8[$t1$060 >> 0] | 0;
     $isdigittmp4 = ($91 << 24 >> 24) + -48 | 0;
     if ($isdigittmp4 >>> 0 >= 10) {
      $$lcssa81 = $91;
      $sub$061$lcssa = $sub$061;
      $t1$060$lcssa = $t1$060;
      break;
     }
     $t1$060 = $t1$060 + 1 | 0;
     if (($t1$060 | 0) == ($last | 0)) {
      $$0 = $first;
      break L1;
     } else $sub$061 = $isdigittmp4 + ($sub$061 * 10 | 0) | 0;
    }
    if ($$lcssa81 << 24 >> 24 == 95) {
     $101 = HEAP32[$db + 36 >> 2] | 0;
     if ((HEAP32[$db + 32 >> 2] | 0) == ($101 | 0)) $$0 = $first; else {
      $103 = $sub$061$lcssa + 1 | 0;
      $107 = HEAP32[$101 + -16 >> 2] | 0;
      if ($103 >>> 0 < (HEAP32[$101 + -12 >> 2] | 0) - $107 >> 4 >>> 0) {
       $114 = HEAP32[$107 + ($103 << 4) >> 2] | 0;
       $116 = HEAP32[$107 + ($103 << 4) + 4 >> 2] | 0;
       $117 = $db + 4 | 0;
       $118 = $db + 8 | 0;
       $119 = $db + 12 | 0;
       $120 = $__v$i$i13 + 8 | 0;
       L43 : do if (($114 | 0) != ($116 | 0)) {
        $125 = $114;
        while (1) {
         $122 = HEAP32[$117 >> 2] | 0;
         if (($122 | 0) == (HEAP32[$118 >> 2] | 0)) {
          $133 = $122 - (HEAP32[$db >> 2] | 0) | 0;
          $134 = ($133 | 0) / 24 | 0;
          $135 = $134 + 1 | 0;
          if (($133 | 0) < -24) break;
          if ($134 >>> 0 < 1073741823) {
           $138 = $134 << 1;
           $$0$i$i$i15 = $138 >>> 0 < $135 >>> 0 ? $135 : $138;
          } else $$0$i$i$i15 = 2147483647;
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i13, $$0$i$i$i15, $134, $119);
          $141 = HEAP32[$120 >> 2] | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($141, $125);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($141 + 12 | 0, $125 + 12 | 0);
          HEAP32[$120 >> 2] = $141 + 24;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i13);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i13);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($122, $125);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($122 + 12 | 0, $125 + 12 | 0);
          HEAP32[$117 >> 2] = (HEAP32[$117 >> 2] | 0) + 24;
         }
         $125 = $125 + 24 | 0;
         if (($125 | 0) == ($116 | 0)) break L43;
        }
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       } while (0);
       $$0 = $t1$060$lcssa + 1 | 0;
       break;
      }
      $148 = $t1$060$lcssa + 1 | 0;
      $150 = $148 - $4 | 0;
      if ($150 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($2);
      if ($150 >>> 0 < 11) {
       HEAP8[$2 >> 0] = $150 << 1;
       $__p$0$ph$i$i = $2 + 1 | 0;
      } else {
       $157 = $150 + 16 & -16;
       $158 = _malloc($157) | 0;
       HEAP32[$2 + 8 >> 2] = $158;
       HEAP32[$2 >> 2] = $157 | 1;
       HEAP32[$2 + 4 >> 2] = $150;
       $__p$0$ph$i$i = $158;
      }
      if (($148 | 0) != ($first | 0)) {
       $$0$i$i58 = $first;
       $__p$0$i$i57 = $__p$0$ph$i$i;
       while (1) {
        HEAP8[$__p$0$i$i57 >> 0] = HEAP8[$$0$i$i58 >> 0] | 0;
        if (($$0$i$i58 | 0) == ($t1$060$lcssa | 0)) break; else {
         $$0$i$i58 = $$0$i$i58 + 1 | 0;
         $__p$0$i$i57 = $__p$0$i$i57 + 1 | 0;
        }
       }
      }
      HEAP8[$__p$0$ph$i$i + $150 >> 0] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($1, $2);
      $167 = $db + 4 | 0;
      $168 = HEAP32[$167 >> 2] | 0;
      $170 = HEAP32[$db + 8 >> 2] | 0;
      if ($168 >>> 0 < $170 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($168, $1);
       HEAP32[$167 >> 2] = (HEAP32[$167 >> 2] | 0) + 24;
      } else {
       $177 = HEAP32[$db >> 2] | 0;
       $178 = $168 - $177 | 0;
       $179 = ($178 | 0) / 24 | 0;
       $180 = $179 + 1 | 0;
       if (($178 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $184 = ($170 - $177 | 0) / 24 | 0;
       if ($184 >>> 0 < 1073741823) {
        $186 = $184 << 1;
        $$0$i$i$i = $186 >>> 0 < $180 >>> 0 ? $180 : $186;
       } else $$0$i$i$i = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i13, $$0$i$i$i, $179, $db + 12 | 0);
       $189 = $__v$i$i13 + 8 | 0;
       $190 = HEAP32[$189 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($190, $1);
       HEAP32[$189 >> 2] = $190 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i13);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i13);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
      HEAP8[$db + 62 >> 0] = 1;
      $$0 = $148;
     }
    } else $$0 = $first;
   }
  } else $$0 = $first;
 } else $$0 = $first; else $$0 = $first; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $103 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $40 = 0, $44 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $95 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 132 | 0;
 $$byval_copy26 = sp + 116 | 0;
 $1 = sp + 128 | 0;
 $2 = sp + 124 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 112 | 0;
 $5 = sp + 108 | 0;
 $6 = sp + 104 | 0;
 $7 = sp + 100 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 92 | 0;
 $10 = sp + 88 | 0;
 $11 = sp + 84 | 0;
 $12 = sp + 80 | 0;
 $13 = sp + 76 | 0;
 $14 = sp + 72 | 0;
 $15 = sp + 68 | 0;
 $16 = sp + 64 | 0;
 $17 = sp + 60 | 0;
 $18 = sp + 56 | 0;
 $19 = sp + 52 | 0;
 $20 = sp + 48 | 0;
 $21 = sp + 44 | 0;
 $22 = sp + 40 | 0;
 $23 = sp + 36 | 0;
 $24 = sp + 32 | 0;
 $25 = sp + 28 | 0;
 $26 = sp + 24 | 0;
 $27 = sp + 20 | 0;
 $28 = sp + 16 | 0;
 $29 = sp + 12 | 0;
 $30 = sp + 8 | 0;
 $31 = sp + 4 | 0;
 $32 = sp;
 HEAP32[$__err >> 2] = 0;
 $33 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$1 >> 2] = $33;
 $34 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 9444) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($33) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$2 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$3 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 99:
  {
   $40 = $this + 8 | 0;
   $44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 12 >> 2] & 127]($40) | 0;
   HEAP32[$4 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
   $47 = HEAP8[$44 >> 0] | 0;
   $49 = ($47 & 1) == 0;
   $52 = $44 + 4 | 0;
   $53 = $49 ? $52 : HEAP32[$44 + 8 >> 2] | 0;
   $58 = $53 + (($49 ? ($47 & 255) >>> 1 : HEAP32[$52 >> 2] | 0) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $53, $58) | 0;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$6 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$7 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$8 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 10052, 10084) | 0;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 10084, 10116) | 0;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$11 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$12 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$13 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$15 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$18 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 10116, 10160) | 0;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$20 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$21 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 10160, 10180) | 0;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$22 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$23 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$24 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 10180, 10212) | 0;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$25 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 120:
  {
   $95 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$26 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $$sroa$07$0 = FUNCTION_TABLE_iiiiiii[$95 & 63]($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm) | 0;
   break;
  }
 case 88:
  {
   $99 = $this + 8 | 0;
   $103 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$99 >> 2] | 0) + 24 >> 2] & 127]($99) | 0;
   HEAP32[$28 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$29 >> 2] = HEAP32[$__e >> 2];
   $106 = HEAP8[$103 >> 0] | 0;
   $108 = ($106 & 1) == 0;
   $111 = $103 + 4 | 0;
   $112 = $108 ? $111 : HEAP32[$103 + 8 >> 2] | 0;
   $117 = $112 + (($108 ? ($106 & 255) >>> 1 : HEAP32[$111 >> 2] | 0) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $112, $117) | 0;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$32 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$32 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$07$0 = HEAP32[$__b >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$07$0 | 0;
}
function __ZN15google_breakpad11DumpSymbols4ReadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $filename) {
 $this = $this | 0;
 $filename = $filename | 0;
 var $$01 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $103 = 0, $109 = 0, $114 = 0, $116 = 0, $118 = 0, $120 = 0, $122 = 0, $129 = 0, $138 = 0, $139 = 0, $142 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $155 = 0, $159 = 0, $166 = 0, $18 = 0, $182 = 0, $183 = 0, $184 = 0, $187 = 0, $188 = 0, $19 = 0, $191 = 0, $196 = 0, $197 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $219 = 0, $22 = 0, $223 = 0, $230 = 0, $231 = 0, $233 = 0, $234 = 0, $27 = 0, $28 = 0, $30 = 0, $4 = 0, $40 = 0, $42 = 0, $46 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $6 = 0, $64 = 0, $66 = 0, $71 = 0, $72 = 0, $74 = 0, $79 = 0, $81 = 0, $85 = 0, $86 = 0, $90 = 0, $95 = 0, $96 = 0, $98 = 0, $contents_path = 0, $entries = 0, $error = 0, $fat_reader = 0, $fat_reporter = 0, $path$i = 0, $st = 0, $total$036 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $vararg_buffer12 = sp + 32 | 0;
 $vararg_buffer8 = sp + 24 | 0;
 $vararg_buffer5 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $path$i = sp + 204 | 0;
 $0 = sp + 192 | 0;
 $st = sp + 116 | 0;
 $contents_path = sp + 104 | 0;
 $entries = sp + 92 | 0;
 $error = sp + 80 | 0;
 $fat_reporter = sp + 64 | 0;
 $fat_reader = sp + 36 | 0;
 $4 = $filename + 8 | 0;
 $6 = $filename + 1 | 0;
 if ((_stat(((HEAP8[$filename >> 0] & 1) == 0 ? $6 : HEAP32[$4 >> 2] | 0) | 0, $st | 0) | 0) == -1) {
  $10 = HEAP32[_stderr >> 2] | 0;
  $15 = (HEAP8[$filename >> 0] & 1) == 0 ? $6 : HEAP32[$4 >> 2] | 0;
  $18 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
  HEAP32[$vararg_buffer >> 2] = $15;
  HEAP32[$vararg_buffer + 4 >> 2] = $18;
  _fprintf($10 | 0, 21348, $vararg_buffer | 0) | 0;
  $$4 = 0;
  STACKTOP = sp;
  return $$4 | 0;
 }
 $19 = $this + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($19, $filename) | 0;
 HEAP32[$contents_path >> 2] = 0;
 HEAP32[$contents_path + 4 >> 2] = 0;
 HEAP32[$contents_path + 8 >> 2] = 0;
 $20 = HEAP8[$19 >> 0] | 0;
 $22 = ($20 & 1) == 0;
 $27 = $22 ? ($20 & 255) >>> 1 : HEAP32[$this + 12 >> 2] | 0;
 $28 = $this + 16 | 0;
 $30 = $19 + 1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($contents_path, $22 ? $30 : HEAP32[$28 >> 2] | 0, $27, $27 + 25 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($contents_path, 21385, 25) | 0;
 if ((HEAP32[$st + 12 >> 2] & 61440 | 0) == 16384) {
  $40 = $contents_path + 8 | 0;
  $42 = $contents_path + 1 | 0;
  if (!(_access(((HEAP8[$contents_path >> 0] & 1) == 0 ? $42 : HEAP32[$40 >> 2] | 0) | 0, 0) | 0)) {
   HEAP32[$entries >> 2] = 0;
   $46 = $entries + 4 | 0;
   HEAP32[$46 >> 2] = 0;
   HEAP32[$entries + 8 >> 2] = 0;
   $53 = _opendir(((HEAP8[$contents_path >> 0] & 1) == 0 ? $42 : HEAP32[$40 >> 2] | 0) | 0) | 0;
   if ($53) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($path$i, $contents_path);
    $55 = HEAP8[$path$i >> 0] | 0;
    $57 = ($55 & 1) == 0;
    $58 = $path$i + 4 | 0;
    $64 = $path$i + 8 | 0;
    $66 = $path$i + 1 | 0;
    if ((HEAP8[($57 ? $66 : HEAP32[$64 >> 2] | 0) + (($57 ? ($55 & 255) >>> 1 : HEAP32[$58 >> 2] | 0) + -1) >> 0] | 0) != 47) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($path$i, 47);
    $71 = $entries + 8 | 0;
    while (1) {
     $72 = _readdir($53 | 0) | 0;
     if (!$72) break;
     $74 = $72 + 11 | 0;
     if (!(_strcmp($74, 28365) | 0)) continue;
     if (!(_strcmp($74, 21411) | 0)) continue;
     HEAP32[$0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     $79 = HEAP8[$path$i >> 0] | 0;
     $81 = ($79 & 1) == 0;
     $85 = $81 ? ($79 & 255) >>> 1 : HEAP32[$58 >> 2] | 0;
     $86 = _strlen($74 | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($0, $81 ? $66 : HEAP32[$64 >> 2] | 0, $85, $85 + $86 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $74, $86) | 0;
     $90 = HEAP32[$46 >> 2] | 0;
     if (($90 | 0) == (HEAP32[$71 >> 2] | 0)) __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIKS6_EEvRT_($entries, $0); else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($90, $0);
      HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + 12;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    }
    _closedir($53 | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($path$i);
   }
   $95 = HEAP32[$46 >> 2] | 0;
   $96 = HEAP32[$entries >> 2] | 0;
   do if (($95 | 0) == ($96 | 0)) {
    $98 = HEAP32[_stderr >> 2] | 0;
    if (!(HEAP8[$19 >> 0] & 1)) $103 = $30; else $103 = HEAP32[$28 >> 2] | 0;
    HEAP32[$vararg_buffer2 >> 2] = $103;
    _fprintf($98 | 0, 21414, $vararg_buffer2 | 0) | 0;
    $$01 = 1;
   } else {
    if ((($95 - $96 | 0) / 12 | 0) >>> 0 <= 1) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this + 20 | 0, $96) | 0;
     $$01 = 0;
     break;
    }
    $109 = HEAP32[_stderr >> 2] | 0;
    if (!(HEAP8[$19 >> 0] & 1)) $114 = $30; else $114 = HEAP32[$28 >> 2] | 0;
    HEAP32[$vararg_buffer5 >> 2] = $114;
    _fprintf($109 | 0, 21463, $vararg_buffer5 | 0) | 0;
    $$01 = 1;
   } while (0);
   $116 = HEAP32[$entries >> 2] | 0;
   if ($116) {
    while (1) {
     $118 = HEAP32[$46 >> 2] | 0;
     if (($118 | 0) == ($116 | 0)) break;
     $120 = $118 + -12 | 0;
     HEAP32[$46 >> 2] = $120;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($120);
    }
    __ZdlPv(HEAP32[$entries >> 2] | 0);
   }
   if (!$$01) {
    $$pre$phiZ2D = $this + 20 | 0;
    label = 33;
   } else $$3 = 0;
  } else label = 32;
 } else label = 32;
 if ((label | 0) == 32) {
  $122 = $this + 20 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($122, $19) | 0;
  $$pre$phiZ2D = $122;
  label = 33;
 }
 if ((label | 0) == 33) {
  HEAP32[$error >> 2] = 0;
  HEAP32[$error + 4 >> 2] = 0;
  HEAP32[$error + 8 >> 2] = 0;
  if (!(HEAP8[$$pre$phiZ2D >> 0] & 1)) $129 = $$pre$phiZ2D + 1 | 0; else $129 = HEAP32[$this + 28 >> 2] | 0;
  L52 : do if ((_stat($129 | 0, $st | 0) | 0) == -1) label = 58; else {
   if (!(HEAP8[$$pre$phiZ2D >> 0] & 1)) $138 = $$pre$phiZ2D + 1 | 0; else $138 = HEAP32[$this + 28 >> 2] | 0;
   $139 = _fopen($138 | 0, 21499) | 0;
   if (!$139) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($error, _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0) | 0;
    label = 58;
    break;
   }
   $142 = HEAP32[$st + 36 >> 2] | 0;
   $145 = __Znaj(($142 | 0) > -1 ? $142 : -1) | 0;
   $146 = $this + 32 | 0;
   $147 = HEAP32[$146 >> 2] | 0;
   if (($147 | 0) != ($145 | 0)) {
    if ($147) __ZdaPv($147);
    HEAP32[$146 >> 2] = $145;
   }
   L67 : do if (($142 | 0) > 0) {
    $total$036 = 0;
    while (1) {
     if (_feof($139 | 0) | 0) break L67;
     $155 = HEAP32[$146 >> 2] | 0;
     if (!$155) {
      label = 49;
      break;
     }
     $159 = _fread($155 + $total$036 | 0, 1, $142 - $total$036 | 0, $139 | 0) | 0;
     $total$036 = $159 + $total$036 | 0;
     if (!$159) break;
     if (($total$036 | 0) >= ($142 | 0)) break L67;
    }
    if ((label | 0) == 49) ___assert_fail(21502, 21517, 221, 26009);
    if (_ferror($139 | 0) | 0) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($error, _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0) | 0;
     _fclose($139 | 0) | 0;
     $166 = HEAP32[_stderr >> 2] | 0;
     if (!(HEAP8[$$pre$phiZ2D >> 0] & 1)) $183 = $$pre$phiZ2D + 1 | 0; else $183 = HEAP32[$this + 28 >> 2] | 0;
     $182 = (HEAP8[$error >> 0] & 1) == 0 ? $error + 1 | 0 : HEAP32[$error + 8 >> 2] | 0;
     HEAP32[$vararg_buffer8 >> 2] = $183;
     HEAP32[$vararg_buffer8 + 4 >> 2] = $182;
     _fprintf($166 | 0, 21543, $vararg_buffer8 | 0) | 0;
     $$2 = 0;
     break L52;
    }
   } while (0);
   _fclose($139 | 0) | 0;
   label = 58;
  } while (0);
  if ((label | 0) == 58) {
   HEAP32[$fat_reporter >> 2] = 5236;
   $184 = $fat_reporter + 4 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($184, $$pre$phiZ2D);
   HEAP32[$fat_reader >> 2] = $fat_reporter;
   HEAP32[$fat_reader + 4 >> 2] = 0;
   HEAP32[$fat_reader + 8 >> 2] = 0;
   $187 = $fat_reader + 16 | 0;
   HEAP32[$187 >> 2] = 0;
   $188 = $fat_reader + 20 | 0;
   HEAP32[$188 >> 2] = 0;
   HEAP32[$fat_reader + 24 >> 2] = 0;
   $191 = HEAP32[$this + 32 >> 2] | 0;
   if (!$191) ___assert_fail(21502, 21517, 221, 26009);
   do if (__ZN15google_breakpad6mach_o9FatReader4ReadEPKhj($fat_reader, $191, HEAP32[$st + 36 >> 2] | 0) | 0) {
    $196 = HEAP32[$188 >> 2] | 0;
    $197 = HEAP32[$187 >> 2] | 0;
    $200 = $196 - $197 | 0;
    $201 = $200 >> 5;
    $202 = ($196 | 0) == ($197 | 0);
    if (!$201) {
     $204 = HEAP32[_stderr >> 2] | 0;
     if (!(HEAP8[$$pre$phiZ2D >> 0] & 1)) $211 = $$pre$phiZ2D + 1 | 0; else $211 = HEAP32[$this + 28 >> 2] | 0;
     HEAP32[$vararg_buffer12 >> 2] = $211;
     _fprintf($204 | 0, 21578, $vararg_buffer12 | 0) | 0;
     $$1 = 0;
     break;
    }
    $212 = $this + 36 | 0;
    $213 = $this + 40 | 0;
    $214 = HEAP32[$213 >> 2] | 0;
    $215 = HEAP32[$212 >> 2] | 0;
    $219 = $214 - $215 >> 5;
    if ($201 >>> 0 > $219 >>> 0) {
     __ZNSt3__16vectorI12SuperFatArchNS_9allocatorIS1_EEE8__appendEj($212, $201 - $219 | 0);
     $230 = HEAP32[$212 >> 2] | 0;
    } else if ($201 >>> 0 < $219 >>> 0) {
     $223 = $215 + ($201 << 5) | 0;
     if (($214 | 0) == ($223 | 0)) $230 = $215; else {
      HEAP32[$213 >> 2] = $214 + (~(($214 + -32 - $223 | 0) >>> 5) << 5);
      $230 = $215;
     }
    } else $230 = $215;
    _memcpy($230 | 0, ($202 ? 0 : $197) | 0, $200 | 0) | 0;
    $$1 = 1;
   } else $$1 = 0; while (0);
   $231 = HEAP32[$187 >> 2] | 0;
   $233 = $231;
   if ($231) {
    $234 = HEAP32[$188 >> 2] | 0;
    if (($234 | 0) != ($231 | 0)) HEAP32[$188 >> 2] = $234 + (~(($234 + -32 - $233 | 0) >>> 5) << 5);
    __ZdlPv($231);
   }
   HEAP32[$fat_reporter >> 2] = 5236;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184);
   $$2 = $$1;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($error);
  $$3 = $$2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($contents_path);
 $$4 = $$3;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $107 = 0, $109 = 0, $11 = 0, $113 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $40 = 0, $44 = 0, $47 = 0, $49 = 0, $5 = 0, $53 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 132 | 0;
 $$byval_copy26 = sp + 116 | 0;
 $1 = sp + 128 | 0;
 $2 = sp + 124 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 112 | 0;
 $5 = sp + 108 | 0;
 $6 = sp + 104 | 0;
 $7 = sp + 100 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 92 | 0;
 $10 = sp + 88 | 0;
 $11 = sp + 84 | 0;
 $12 = sp + 80 | 0;
 $13 = sp + 76 | 0;
 $14 = sp + 72 | 0;
 $15 = sp + 68 | 0;
 $16 = sp + 64 | 0;
 $17 = sp + 60 | 0;
 $18 = sp + 56 | 0;
 $19 = sp + 52 | 0;
 $20 = sp + 48 | 0;
 $21 = sp + 44 | 0;
 $22 = sp + 40 | 0;
 $23 = sp + 36 | 0;
 $24 = sp + 32 | 0;
 $25 = sp + 28 | 0;
 $26 = sp + 24 | 0;
 $27 = sp + 20 | 0;
 $28 = sp + 16 | 0;
 $29 = sp + 12 | 0;
 $30 = sp + 8 | 0;
 $31 = sp + 4 | 0;
 $32 = sp;
 HEAP32[$__err >> 2] = 0;
 $33 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$1 >> 2] = $33;
 $34 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 9452) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($33) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$2 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$3 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 99:
  {
   $40 = $this + 8 | 0;
   $44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$40 >> 2] | 0) + 12 >> 2] & 127]($40) | 0;
   HEAP32[$4 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
   $47 = HEAP8[$44 >> 0] | 0;
   $49 = ($47 & 1) == 0;
   $53 = $49 ? $44 + 1 | 0 : HEAP32[$44 + 8 >> 2] | 0;
   $59 = $53 + ($49 ? ($47 & 255) >>> 1 : HEAP32[$44 + 4 >> 2] | 0) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $53, $59) | 0;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$6 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$7 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$8 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 30309, 30317) | 0;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 30317, 30325) | 0;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$11 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$12 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$13 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$15 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$18 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 30325, 30336) | 0;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$20 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$21 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 30336, 30341) | 0;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$22 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$23 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$24 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 30341, 30349) | 0;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$25 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 120:
  {
   $96 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$26 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $$sroa$07$0 = FUNCTION_TABLE_iiiiiii[$96 & 63]($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm) | 0;
   break;
  }
 case 88:
  {
   $100 = $this + 8 | 0;
   $104 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$100 >> 2] | 0) + 24 >> 2] & 127]($100) | 0;
   HEAP32[$28 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$29 >> 2] = HEAP32[$__e >> 2];
   $107 = HEAP8[$104 >> 0] | 0;
   $109 = ($107 & 1) == 0;
   $113 = $109 ? $104 + 1 | 0 : HEAP32[$104 + 8 >> 2] | 0;
   $119 = $113 + ($109 ? ($107 & 255) >>> 1 : HEAP32[$104 + 4 >> 2] | 0) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $113, $119) | 0;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$32 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$32 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$07$0 = HEAP32[$__b >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$07$0 | 0;
}

function __ZNSt3__16__sortIRNS_6__lessIyyEEPyEEvT0_S5_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $$0$lcssa211 = 0, $$0$lcssa212 = 0, $$0$lcssa213 = 0, $$0$lcssa214 = 0, $$0$lcssa215 = 0, $$0$lcssa218 = 0, $$0$ph = 0, $$01$ph = 0, $$01$ph$lcssa227 = 0, $$lcssa197 = 0, $$lcssa199 = 0, $$lcssa204 = 0, $$lcssa205 = 0, $$lcssa208 = 0, $$lcssa209 = 0, $$lcssa231 = 0, $$lcssa232 = 0, $$lcssa233 = 0, $$lcssa234 = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $104 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $113 = 0, $119 = 0, $120 = 0, $121 = 0, $123 = 0, $126 = 0, $13 = 0, $133 = 0, $135 = 0, $138 = 0, $139 = 0, $141 = 0, $144 = 0, $145 = 0, $147 = 0, $150 = 0, $156 = 0, $158 = 0, $16 = 0, $161 = 0, $162 = 0, $167 = 0, $169 = 0, $171 = 0, $174 = 0, $175 = 0, $177 = 0, $180 = 0, $186 = 0, $187 = 0, $188 = 0, $190 = 0, $193 = 0, $2 = 0, $200 = 0, $202 = 0, $205 = 0, $206 = 0, $208 = 0, $211 = 0, $215 = 0, $217 = 0, $22 = 0, $220 = 0, $221 = 0, $223 = 0, $226 = 0, $232 = 0, $236 = 0, $242 = 0, $243 = 0, $245 = 0, $251 = 0, $251$phi = 0, $26 = 0, $3 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $56 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $7 = 0, $70 = 0, $77 = 0, $79 = 0, $82 = 0, $88 = 0, $92 = 0, $94 = 0, $97 = 0, $99 = 0, $__i$0153 = 0, $__i$0153$lcssa = 0, $__i$1 = 0, $__i$2 = 0, $__i$2$lcssa = 0, $__i$2$ph = 0, $__i$3 = 0, $__i$3$lcssa = 0, $__i$3$ph = 0, $__i$4 = 0, $__i$4$lcssa220 = 0, $__j$0 = 0, $__j$1$ph = 0, $__j$2 = 0, $__j$3 = 0, $__j$4$ph = 0, $__j$5 = 0, $__m$0$ph = 0, $__m$2 = 0, $__n_swaps$0 = 0, $__n_swaps$3 = 0, $__n_swaps$4$ph = 0, $__n_swaps$5 = 0, $__n_swaps$6 = 0, label = 0;
 $$0$ph = $__first;
 $$01$ph = $__last;
 L1 : while (1) {
  $0 = $$01$ph;
  $1 = $$01$ph + -8 | 0;
  $$0 = $$0$ph;
  L3 : while (1) {
   $2 = $$0;
   $3 = $0 - $2 | 0;
   $4 = $3 >> 3;
   switch ($4 | 0) {
   case 1:
   case 0:
    {
     break L1;
     break;
    }
   case 2:
    {
     $$0$lcssa211 = $$0;
     $$lcssa231 = $1;
     label = 4;
     break L1;
     break;
    }
   case 3:
    {
     $$0$lcssa212 = $$0;
     $$lcssa232 = $1;
     label = 6;
     break L1;
     break;
    }
   case 4:
    {
     $$0$lcssa213 = $$0;
     $$lcssa233 = $1;
     label = 7;
     break L1;
     break;
    }
   case 5:
    {
     $$0$lcssa214 = $$0;
     $$lcssa234 = $1;
     label = 8;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($3 | 0) < 248) {
    $$0$lcssa215 = $$0;
    $$01$ph$lcssa227 = $$01$ph;
    label = 10;
    break L1;
   }
   $38 = ($4 | 0) / 2 | 0;
   $39 = $$0 + ($38 << 3) | 0;
   if (($3 | 0) > 7992) {
    $40 = ($4 | 0) / 4 | 0;
    $__n_swaps$0 = __ZNSt3__17__sort5IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_S5_T_($$0, $$0 + ($40 << 3) | 0, $39, $$0 + ($40 + $38 << 3) | 0, $1, $__comp) | 0;
   } else $__n_swaps$0 = __ZNSt3__17__sort3IRNS_6__lessIyyEEPyEEjT0_S5_S5_T_($$0, $39, $1, $__comp) | 0;
   $45 = $$0;
   $47 = HEAP32[$45 >> 2] | 0;
   $50 = HEAP32[$45 + 4 >> 2] | 0;
   $51 = $39;
   $53 = HEAP32[$51 >> 2] | 0;
   $56 = HEAP32[$51 + 4 >> 2] | 0;
   do if ($50 >>> 0 < $56 >>> 0 | ($50 | 0) == ($56 | 0) & $47 >>> 0 < $53 >>> 0) {
    $__j$3 = $1;
    $__n_swaps$3 = $__n_swaps$0;
   } else {
    $__j$0 = $1;
    while (1) {
     $62 = $__j$0 + -8 | 0;
     if (($$0 | 0) == ($62 | 0)) break;
     $145 = $62;
     $147 = HEAP32[$145 >> 2] | 0;
     $150 = HEAP32[$145 + 4 >> 2] | 0;
     if ($150 >>> 0 < $56 >>> 0 | ($150 | 0) == ($56 | 0) & $147 >>> 0 < $53 >>> 0) {
      $$lcssa197 = $62;
      $158 = $147;
      $161 = $150;
      label = 29;
      break;
     } else $__j$0 = $62;
    }
    if ((label | 0) == 29) {
     label = 0;
     $156 = $$0;
     HEAP32[$156 >> 2] = $158;
     HEAP32[$156 + 4 >> 2] = $161;
     $162 = $$lcssa197;
     HEAP32[$162 >> 2] = $47;
     HEAP32[$162 + 4 >> 2] = $50;
     $__j$3 = $$lcssa197;
     $__n_swaps$3 = $__n_swaps$0 + 1 | 0;
     break;
    }
    $64 = $$0 + 8 | 0;
    $65 = $1;
    $67 = HEAP32[$65 >> 2] | 0;
    $70 = HEAP32[$65 + 4 >> 2] | 0;
    if ($50 >>> 0 < $70 >>> 0 | ($50 | 0) == ($70 | 0) & $47 >>> 0 < $67 >>> 0) $__i$1 = $64; else {
     if (($64 | 0) == ($1 | 0)) break L1; else {
      $251 = $$0;
      $__i$0153 = $64;
     }
     while (1) {
      $77 = $__i$0153;
      $79 = HEAP32[$77 >> 2] | 0;
      $82 = HEAP32[$77 + 4 >> 2] | 0;
      if ($50 >>> 0 < $82 >>> 0 | ($50 | 0) == ($82 | 0) & $47 >>> 0 < $79 >>> 0) {
       $$lcssa199 = $251;
       $94 = $79;
       $97 = $82;
       $__i$0153$lcssa = $__i$0153;
       break;
      }
      $99 = $__i$0153 + 8 | 0;
      if (($99 | 0) == ($1 | 0)) break L1; else {
       $251$phi = $__i$0153;
       $__i$0153 = $99;
       $251 = $251$phi;
      }
     }
     $88 = $__i$0153$lcssa;
     HEAP32[$88 >> 2] = $67;
     HEAP32[$88 + 4 >> 2] = $70;
     $92 = $1;
     HEAP32[$92 >> 2] = $94;
     HEAP32[$92 + 4 >> 2] = $97;
     $__i$1 = $$lcssa199 + 16 | 0;
    }
    if (($__i$1 | 0) == ($1 | 0)) break L1; else {
     $__i$2$ph = $__i$1;
     $__j$1$ph = $1;
    }
    while (1) {
     $102 = $$0;
     $104 = HEAP32[$102 >> 2] | 0;
     $107 = HEAP32[$102 + 4 >> 2] | 0;
     $__i$2 = $__i$2$ph;
     while (1) {
      $108 = $__i$2;
      $110 = HEAP32[$108 >> 2] | 0;
      $113 = HEAP32[$108 + 4 >> 2] | 0;
      $119 = $__i$2 + 8 | 0;
      if ($107 >>> 0 < $113 >>> 0 | ($107 | 0) == ($113 | 0) & $104 >>> 0 < $110 >>> 0) {
       $$lcssa204 = $119;
       $141 = $110;
       $144 = $113;
       $__i$2$lcssa = $__i$2;
       break;
      } else $__i$2 = $119;
     }
     $__j$2 = $__j$1$ph;
     while (1) {
      $120 = $__j$2 + -8 | 0;
      $121 = $120;
      $123 = HEAP32[$121 >> 2] | 0;
      $126 = HEAP32[$121 + 4 >> 2] | 0;
      if ($107 >>> 0 < $126 >>> 0 | ($107 | 0) == ($126 | 0) & $104 >>> 0 < $123 >>> 0) $__j$2 = $120; else {
       $$lcssa205 = $120;
       $135 = $123;
       $138 = $126;
       break;
      }
     }
     if ($__i$2$lcssa >>> 0 >= $$lcssa205 >>> 0) {
      $$0 = $__i$2$lcssa;
      continue L3;
     }
     $133 = $__i$2$lcssa;
     HEAP32[$133 >> 2] = $135;
     HEAP32[$133 + 4 >> 2] = $138;
     $139 = $$lcssa205;
     HEAP32[$139 >> 2] = $141;
     HEAP32[$139 + 4 >> 2] = $144;
     $__i$2$ph = $$lcssa204;
     $__j$1$ph = $$lcssa205;
    }
   } while (0);
   $167 = $$0 + 8 | 0;
   L35 : do if ($167 >>> 0 < $__j$3 >>> 0) {
    $__i$3$ph = $167;
    $__j$4$ph = $__j$3;
    $__m$0$ph = $39;
    $__n_swaps$4$ph = $__n_swaps$3;
    while (1) {
     $169 = $__m$0$ph;
     $171 = HEAP32[$169 >> 2] | 0;
     $174 = HEAP32[$169 + 4 >> 2] | 0;
     $__i$3 = $__i$3$ph;
     while (1) {
      $175 = $__i$3;
      $177 = HEAP32[$175 >> 2] | 0;
      $180 = HEAP32[$175 + 4 >> 2] | 0;
      $186 = $__i$3 + 8 | 0;
      if ($180 >>> 0 < $174 >>> 0 | ($180 | 0) == ($174 | 0) & $177 >>> 0 < $171 >>> 0) $__i$3 = $186; else {
       $$lcssa208 = $186;
       $208 = $177;
       $211 = $180;
       $__i$3$lcssa = $__i$3;
       break;
      }
     }
     $__j$5 = $__j$4$ph;
     while (1) {
      $187 = $__j$5 + -8 | 0;
      $188 = $187;
      $190 = HEAP32[$188 >> 2] | 0;
      $193 = HEAP32[$188 + 4 >> 2] | 0;
      if ($193 >>> 0 < $174 >>> 0 | ($193 | 0) == ($174 | 0) & $190 >>> 0 < $171 >>> 0) {
       $$lcssa209 = $187;
       $202 = $190;
       $205 = $193;
       break;
      } else $__j$5 = $187;
     }
     if ($__i$3$lcssa >>> 0 > $$lcssa209 >>> 0) {
      $__i$4 = $__i$3$lcssa;
      $__m$2 = $__m$0$ph;
      $__n_swaps$5 = $__n_swaps$4$ph;
      break L35;
     }
     $200 = $__i$3$lcssa;
     HEAP32[$200 >> 2] = $202;
     HEAP32[$200 + 4 >> 2] = $205;
     $206 = $$lcssa209;
     HEAP32[$206 >> 2] = $208;
     HEAP32[$206 + 4 >> 2] = $211;
     $__i$3$ph = $$lcssa208;
     $__j$4$ph = $$lcssa209;
     $__m$0$ph = ($__m$0$ph | 0) == ($__i$3$lcssa | 0) ? $$lcssa209 : $__m$0$ph;
     $__n_swaps$4$ph = $__n_swaps$4$ph + 1 | 0;
    }
   } else {
    $__i$4 = $167;
    $__m$2 = $39;
    $__n_swaps$5 = $__n_swaps$3;
   } while (0);
   if (($__i$4 | 0) == ($__m$2 | 0)) $__n_swaps$6 = $__n_swaps$5; else {
    $215 = $__m$2;
    $217 = HEAP32[$215 >> 2] | 0;
    $220 = HEAP32[$215 + 4 >> 2] | 0;
    $221 = $__i$4;
    $223 = HEAP32[$221 >> 2] | 0;
    $226 = HEAP32[$221 + 4 >> 2] | 0;
    if ($220 >>> 0 < $226 >>> 0 | ($220 | 0) == ($226 | 0) & $217 >>> 0 < $223 >>> 0) {
     $232 = $__i$4;
     HEAP32[$232 >> 2] = $217;
     HEAP32[$232 + 4 >> 2] = $220;
     $236 = $__m$2;
     HEAP32[$236 >> 2] = $223;
     HEAP32[$236 + 4 >> 2] = $226;
     $__n_swaps$6 = $__n_swaps$5 + 1 | 0;
    } else $__n_swaps$6 = $__n_swaps$5;
   }
   if (!$__n_swaps$6) {
    $242 = __ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIyyEEPyEEbT0_S5_T_($$0, $__i$4, $__comp) | 0;
    $243 = $__i$4 + 8 | 0;
    if (__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIyyEEPyEEbT0_S5_T_($243, $$01$ph, $__comp) | 0) {
     label = 42;
     break;
    }
    if ($242) {
     $$0 = $243;
     continue;
    }
   }
   $245 = $__i$4;
   if (($245 - $2 | 0) >= ($0 - $245 | 0)) {
    $$0$lcssa218 = $$0;
    $__i$4$lcssa220 = $__i$4;
    label = 46;
    break;
   }
   __ZNSt3__16__sortIRNS_6__lessIyyEEPyEEvT0_S5_T_($$0, $__i$4, $__comp);
   $$0 = $__i$4 + 8 | 0;
  }
  if ((label | 0) == 42) {
   label = 0;
   if ($242) break; else {
    $$0$ph = $$0;
    $$01$ph = $__i$4;
    continue;
   }
  } else if ((label | 0) == 46) {
   label = 0;
   __ZNSt3__16__sortIRNS_6__lessIyyEEPyEEvT0_S5_T_($__i$4$lcssa220 + 8 | 0, $$01$ph, $__comp);
   $$0$ph = $$0$lcssa218;
   $$01$ph = $__i$4$lcssa220;
   continue;
  }
 }
 if ((label | 0) == 4) {
  $5 = $$lcssa231;
  $7 = HEAP32[$5 >> 2] | 0;
  $10 = HEAP32[$5 + 4 >> 2] | 0;
  $11 = $$0$lcssa211;
  $13 = HEAP32[$11 >> 2] | 0;
  $16 = HEAP32[$11 + 4 >> 2] | 0;
  if ($10 >>> 0 < $16 >>> 0 | ($10 | 0) == ($16 | 0) & $7 >>> 0 < $13 >>> 0) {
   $22 = $$0$lcssa211;
   HEAP32[$22 >> 2] = $7;
   HEAP32[$22 + 4 >> 2] = $10;
   $26 = $$lcssa231;
   HEAP32[$26 >> 2] = $13;
   HEAP32[$26 + 4 >> 2] = $16;
  }
 } else if ((label | 0) == 6) __ZNSt3__17__sort3IRNS_6__lessIyyEEPyEEjT0_S5_S5_T_($$0$lcssa212, $$0$lcssa212 + 8 | 0, $$lcssa232, $__comp) | 0; else if ((label | 0) == 7) __ZNSt3__17__sort4IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_T_($$0$lcssa213, $$0$lcssa213 + 8 | 0, $$0$lcssa213 + 16 | 0, $$lcssa233, $__comp) | 0; else if ((label | 0) == 8) __ZNSt3__17__sort5IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_S5_T_($$0$lcssa214, $$0$lcssa214 + 8 | 0, $$0$lcssa214 + 16 | 0, $$0$lcssa214 + 24 | 0, $$lcssa234, $__comp) | 0; else if ((label | 0) == 10) __ZNSt3__118__insertion_sort_3IRNS_6__lessIyyEEPyEEvT0_S5_T_($$0$lcssa215, $$01$ph$lcssa227, $__comp);
 return;
}

function __ZNSt3__118__stable_sort_moveIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE($__first1, $__last1, $__comp, $__len, $__first2) {
 $__first1 = $__first1 | 0;
 $__last1 = $__last1 | 0;
 $__comp = $__comp | 0;
 $__len = $__len | 0;
 $__first2 = $__first2 | 0;
 var $$0$lcssa$i = 0, $$010$i = 0, $$010$i$lcssa = 0, $$16$i = 0, $$27$i = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$in$i = 0, $$in$i2 = 0, $$in$i2$lcssa = 0, $$promoted$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $60 = 0, $7 = 0, $8 = 0, $__first2$pn$i = 0, $__i2$02$i = 0, $__j2$0$lcssa$i = 0, sp = 0, $__i2$02$i$looptemp = 0, $__first2$pn$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy3 = sp + 20 | 0;
 $$byval_copy2 = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 switch ($__len | 0) {
 case 1:
  {
   $4 = HEAP32[$__first1 >> 2] | 0;
   HEAP32[$__first2 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$__first2 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$__first2 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   HEAP32[$__first2 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
   HEAP32[$__first2 + 16 >> 2] = HEAP32[$4 + 16 >> 2];
   HEAP32[$__first2 + 20 >> 2] = HEAP32[$4 + 20 >> 2];
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   $5 = HEAP32[$__comp >> 2] | 0;
   $7 = (HEAP32[$__last1 >> 2] | 0) + -24 | 0;
   HEAP32[$__last1 >> 2] = $7;
   $8 = HEAP32[$__first1 >> 2] | 0;
   if (FUNCTION_TABLE_iii[$5 & 31]($7, $8) | 0) {
    HEAP32[$__first2 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$__first2 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$__first2 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$__first2 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
    HEAP32[$__first2 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
    HEAP32[$__first2 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
    $10 = $__first2 + 24 | 0;
    HEAP32[$10 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$10 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    HEAP32[$10 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
    HEAP32[$10 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
    HEAP32[$10 + 16 >> 2] = HEAP32[$8 + 16 >> 2];
    HEAP32[$10 + 20 >> 2] = HEAP32[$8 + 20 >> 2];
    STACKTOP = sp;
    return;
   } else {
    HEAP32[$__first2 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$__first2 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    HEAP32[$__first2 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
    HEAP32[$__first2 + 12 >> 2] = HEAP32[$8 + 12 >> 2];
    HEAP32[$__first2 + 16 >> 2] = HEAP32[$8 + 16 >> 2];
    HEAP32[$__first2 + 20 >> 2] = HEAP32[$8 + 20 >> 2];
    $11 = $__first2 + 24 | 0;
    HEAP32[$11 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$11 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$11 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$11 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
    HEAP32[$11 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
    HEAP32[$11 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
    STACKTOP = sp;
    return;
   }
   break;
  }
 case 0:
  {
   STACKTOP = sp;
   return;
  }
 default:
  {
   if (($__len | 0) < 9) {
    $13 = HEAP32[$__first1 >> 2] | 0;
    $15 = $13;
    $16 = HEAP32[$__last1 >> 2] | 0;
    if (($15 | 0) == ($16 | 0)) {
     STACKTOP = sp;
     return;
    }
    $18 = $13;
    HEAP32[$__first2 >> 2] = HEAP32[$18 >> 2];
    HEAP32[$__first2 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
    HEAP32[$__first2 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
    HEAP32[$__first2 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
    HEAP32[$__first2 + 16 >> 2] = HEAP32[$18 + 16 >> 2];
    HEAP32[$__first2 + 20 >> 2] = HEAP32[$18 + 20 >> 2];
    $19 = $15 + 24 | 0;
    if (($19 | 0) == ($16 | 0)) {
     STACKTOP = sp;
     return;
    } else {
     $$in$i = $19;
     $__first2$pn$i = $__first2;
    }
    do {
     $__first2$pn$i$looptemp = $__first2$pn$i;
     $__first2$pn$i = $__first2$pn$i + 24 | 0;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$in$i, $__first2$pn$i$looptemp) | 0) {
      HEAP32[$__first2$pn$i >> 2] = HEAP32[$__first2$pn$i$looptemp >> 2];
      HEAP32[$__first2$pn$i + 4 >> 2] = HEAP32[$__first2$pn$i$looptemp + 4 >> 2];
      HEAP32[$__first2$pn$i + 8 >> 2] = HEAP32[$__first2$pn$i$looptemp + 8 >> 2];
      HEAP32[$__first2$pn$i + 12 >> 2] = HEAP32[$__first2$pn$i$looptemp + 12 >> 2];
      HEAP32[$__first2$pn$i + 16 >> 2] = HEAP32[$__first2$pn$i$looptemp + 16 >> 2];
      HEAP32[$__first2$pn$i + 20 >> 2] = HEAP32[$__first2$pn$i$looptemp + 20 >> 2];
      L14 : do if (($__first2$pn$i$looptemp | 0) == ($__first2 | 0)) $__j2$0$lcssa$i = $__first2; else {
       $__i2$02$i = $__first2$pn$i$looptemp;
       while (1) {
        $__i2$02$i$looptemp = $__i2$02$i;
        $__i2$02$i = $__i2$02$i + -24 | 0;
        if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$in$i, $__i2$02$i) | 0)) {
         $__j2$0$lcssa$i = $__i2$02$i$looptemp;
         break L14;
        };
        HEAP32[$__i2$02$i$looptemp >> 2] = HEAP32[$__i2$02$i >> 2];
        HEAP32[$__i2$02$i$looptemp + 4 >> 2] = HEAP32[$__i2$02$i + 4 >> 2];
        HEAP32[$__i2$02$i$looptemp + 8 >> 2] = HEAP32[$__i2$02$i + 8 >> 2];
        HEAP32[$__i2$02$i$looptemp + 12 >> 2] = HEAP32[$__i2$02$i + 12 >> 2];
        HEAP32[$__i2$02$i$looptemp + 16 >> 2] = HEAP32[$__i2$02$i + 16 >> 2];
        HEAP32[$__i2$02$i$looptemp + 20 >> 2] = HEAP32[$__i2$02$i + 20 >> 2];
        if (($__i2$02$i | 0) == ($__first2 | 0)) {
         $__j2$0$lcssa$i = $__first2;
         break;
        }
       }
      } while (0);
      HEAP32[$__j2$0$lcssa$i >> 2] = HEAP32[$$in$i >> 2];
      HEAP32[$__j2$0$lcssa$i + 4 >> 2] = HEAP32[$$in$i + 4 >> 2];
      HEAP32[$__j2$0$lcssa$i + 8 >> 2] = HEAP32[$$in$i + 8 >> 2];
      HEAP32[$__j2$0$lcssa$i + 12 >> 2] = HEAP32[$$in$i + 12 >> 2];
      HEAP32[$__j2$0$lcssa$i + 16 >> 2] = HEAP32[$$in$i + 16 >> 2];
      HEAP32[$__j2$0$lcssa$i + 20 >> 2] = HEAP32[$$in$i + 20 >> 2];
     } else {
      HEAP32[$__first2$pn$i >> 2] = HEAP32[$$in$i >> 2];
      HEAP32[$__first2$pn$i + 4 >> 2] = HEAP32[$$in$i + 4 >> 2];
      HEAP32[$__first2$pn$i + 8 >> 2] = HEAP32[$$in$i + 8 >> 2];
      HEAP32[$__first2$pn$i + 12 >> 2] = HEAP32[$$in$i + 12 >> 2];
      HEAP32[$__first2$pn$i + 16 >> 2] = HEAP32[$$in$i + 16 >> 2];
      HEAP32[$__first2$pn$i + 20 >> 2] = HEAP32[$$in$i + 20 >> 2];
     }
     $$in$i = $$in$i + 24 | 0;
    } while (($$in$i | 0) != ($16 | 0));
    STACKTOP = sp;
    return;
   }
   $30 = ($__len | 0) / 2 | 0;
   $31 = HEAP32[$__first1 >> 2] | 0;
   $32 = $31;
   $33 = $32 + ($30 * 24 | 0) | 0;
   HEAP32[$0 >> 2] = $31;
   HEAP32[$1 >> 2] = $33;
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$$byval_copy3 >> 2] = HEAP32[$1 >> 2];
   __ZNSt3__113__stable_sortIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEi($$byval_copy2, $$byval_copy3, $__comp, $30, $__first2, $30);
   HEAP32[$2 >> 2] = $33;
   $34 = HEAP32[$__last1 >> 2] | 0;
   HEAP32[$3 >> 2] = $34;
   $35 = $__len - $30 | 0;
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy3 >> 2] = HEAP32[$3 >> 2];
   __ZNSt3__113__stable_sortIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEi($$byval_copy2, $$byval_copy3, $__comp, $35, $__first2 + ($30 * 24 | 0) | 0, $35);
   $38 = $34;
   L23 : do if (($__len + 1 | 0) >>> 0 < 3) {
    $$0$lcssa$i = $__first2;
    $$promoted$i = $32;
   } else {
    $$010$i = $__first2;
    $$in$i2 = $32;
    $45 = $33;
    $53 = $33;
    while (1) {
     if (($45 | 0) == ($38 | 0)) {
      $$010$i$lcssa = $$010$i;
      $$in$i2$lcssa = $$in$i2;
      break;
     }
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($45, $$in$i2) | 0) {
      HEAP32[$$010$i >> 2] = HEAP32[$53 >> 2];
      HEAP32[$$010$i + 4 >> 2] = HEAP32[$53 + 4 >> 2];
      HEAP32[$$010$i + 8 >> 2] = HEAP32[$53 + 8 >> 2];
      HEAP32[$$010$i + 12 >> 2] = HEAP32[$53 + 12 >> 2];
      HEAP32[$$010$i + 16 >> 2] = HEAP32[$53 + 16 >> 2];
      HEAP32[$$010$i + 20 >> 2] = HEAP32[$53 + 20 >> 2];
      $54 = $45 + 24 | 0;
      $58 = $$in$i2;
      $59 = $54;
      $60 = $54;
     } else {
      HEAP32[$$010$i >> 2] = HEAP32[$$in$i2 >> 2];
      HEAP32[$$010$i + 4 >> 2] = HEAP32[$$in$i2 + 4 >> 2];
      HEAP32[$$010$i + 8 >> 2] = HEAP32[$$in$i2 + 8 >> 2];
      HEAP32[$$010$i + 12 >> 2] = HEAP32[$$in$i2 + 12 >> 2];
      HEAP32[$$010$i + 16 >> 2] = HEAP32[$$in$i2 + 16 >> 2];
      HEAP32[$$010$i + 20 >> 2] = HEAP32[$$in$i2 + 20 >> 2];
      $58 = $$in$i2 + 24 | 0;
      $59 = $53;
      $60 = $45;
     }
     $56 = $$010$i + 24 | 0;
     if (($58 | 0) == ($33 | 0)) {
      $$0$lcssa$i = $56;
      $$promoted$i = $60;
      break L23;
     } else {
      $$010$i = $56;
      $$in$i2 = $58;
      $45 = $60;
      $53 = $59;
     }
    }
    if (($$in$i2$lcssa | 0) == ($33 | 0)) {
     STACKTOP = sp;
     return;
    } else {
     $$27$i = $$010$i$lcssa;
     $47 = $$in$i2$lcssa;
    }
    while (1) {
     HEAP32[$$27$i >> 2] = HEAP32[$47 >> 2];
     HEAP32[$$27$i + 4 >> 2] = HEAP32[$47 + 4 >> 2];
     HEAP32[$$27$i + 8 >> 2] = HEAP32[$47 + 8 >> 2];
     HEAP32[$$27$i + 12 >> 2] = HEAP32[$47 + 12 >> 2];
     HEAP32[$$27$i + 16 >> 2] = HEAP32[$47 + 16 >> 2];
     HEAP32[$$27$i + 20 >> 2] = HEAP32[$47 + 20 >> 2];
     $47 = $47 + 24 | 0;
     if (($47 | 0) == ($33 | 0)) break; else $$27$i = $$27$i + 24 | 0;
    }
    STACKTOP = sp;
    return;
   } while (0);
   if (($$promoted$i | 0) == ($38 | 0)) {
    STACKTOP = sp;
    return;
   } else {
    $$16$i = $$0$lcssa$i;
    $40 = $$promoted$i;
   }
   while (1) {
    HEAP32[$$16$i >> 2] = HEAP32[$40 >> 2];
    HEAP32[$$16$i + 4 >> 2] = HEAP32[$40 + 4 >> 2];
    HEAP32[$$16$i + 8 >> 2] = HEAP32[$40 + 8 >> 2];
    HEAP32[$$16$i + 12 >> 2] = HEAP32[$40 + 12 >> 2];
    HEAP32[$$16$i + 16 >> 2] = HEAP32[$40 + 16 >> 2];
    HEAP32[$$16$i + 20 >> 2] = HEAP32[$40 + 20 >> 2];
    $40 = $40 + 24 | 0;
    if (($40 | 0) == ($38 | 0)) break; else $$16$i = $$16$i + 24 | 0;
   }
   STACKTOP = sp;
   return;
  }
 }
}

function __ZNK15google_breakpad6mach_o6Reader19WalkSegmentSectionsERKNS0_7SegmentEPNS1_14SectionHandlerE($this, $segment, $handler) {
 $this = $this | 0;
 $segment = $segment | 0;
 $handler = $handler | 0;
 var $$2 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $110 = 0, $114 = 0, $115 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $13 = 0, $14 = 0, $148 = 0, $149 = 0, $15 = 0, $153 = 0, $155 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $183 = 0, $185 = 0, $188 = 0, $19 = 0, $191 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $20 = 0, $202 = 0, $204 = 0, $206 = 0, $21 = 0, $22 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $238 = 0, $24 = 0, $241 = 0, $245 = 0, $246 = 0, $247 = 0, $25 = 0, $256 = 0, $262 = 0, $266 = 0, $268 = 0, $273 = 0, $277 = 0, $279 = 0, $28 = 0, $283 = 0, $29 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $48 = 0, $59 = 0, $60 = 0, $61 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $80 = 0, $84 = 0, $86 = 0, $89 = 0, $90 = 0, $91 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $i$0103 = 0, $i$07$i = 0, $i$07$i15 = 0, $i1$04$i13 = 0, $i1$06$i = 0, $i1$06$i18 = 0, $section = 0, $storemerge$i$i = 0, $storemerge$i$i30 = 0, $v$2$i$i = 0, $v$2$i$i28 = 0, $v$2$i$i49 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $section = sp;
 $0 = $segment + 64 | 0;
 $1 = HEAP8[$0 >> 0] | 0;
 $3 = $1 << 24 >> 24 != 0 ? 8 : 4;
 $4 = $segment + 56 | 0;
 if (!(HEAP32[$4 >> 2] | 0)) {
  $$2 = 1;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $10 = $section + 48 | 0;
 $11 = $section + 8 | 0;
 $12 = $segment + 4 | 0;
 $13 = $11 + 1 | 0;
 $14 = $section + 20 | 0;
 $15 = $14 + 1 | 0;
 $16 = $section + 28 | 0;
 $17 = $section + 24 | 0;
 $18 = $section + 32 | 0;
 $19 = $section + 40 | 0;
 $20 = $section + 44 | 0;
 $21 = $segment + 8 | 0;
 $22 = $segment + 12 | 0;
 $23 = $section + 4 | 0;
 $24 = $this + 4 | 0;
 $25 = (HEAP8[$this + 12 >> 0] | 0) == 0;
 $i1$04$i13 = $3 + -1 | 0;
 $29 = $1;
 $293 = 1;
 $32 = HEAP32[$segment >> 2] | 0;
 $i$0103 = 0;
 L4 : while (1) {
  HEAP32[$section >> 2] = 0;
  HEAP32[$section + 4 >> 2] = 0;
  HEAP32[$section + 8 >> 2] = 0;
  HEAP32[$section + 12 >> 2] = 0;
  HEAP32[$section + 16 >> 2] = 0;
  HEAP32[$section + 20 >> 2] = 0;
  HEAP32[$section + 24 >> 2] = 0;
  HEAP32[$section + 28 >> 2] = 0;
  HEAP8[$10 >> 0] = $29;
  $30 = HEAP32[$12 >> 2] | 0;
  $31 = $32;
  $33 = $30;
  if (($33 - $32 | 0) >>> 0 < 16) {
   HEAP8[$13 >> 0] = 0;
   HEAP8[$11 >> 0] = 0;
   $295 = 0;
   $43 = $33;
   $45 = $30;
  } else {
   $36 = _memchr($31, 0, 16) | 0;
   if (!$36) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($11, $31, 16) | 0; else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($11, $31, $36 - $32 | 0) | 0;
   $295 = $293;
   $43 = $31 + 16 | 0;
   $45 = HEAP32[$12 >> 2] | 0;
  }
  $42 = $43;
  $44 = $45;
  do if (($44 - $43 | 0) >>> 0 < 16) if (!(HEAP8[$14 >> 0] & 1)) {
   HEAP8[$15 >> 0] = 0;
   HEAP8[$14 >> 0] = 0;
   $296 = 0;
   $60 = $44;
   break;
  } else {
   HEAP8[HEAP32[$16 >> 2] >> 0] = 0;
   HEAP32[$17 >> 2] = 0;
   $296 = 0;
   $60 = $44;
   break;
  } else {
   $48 = _memchr($42, 0, 16) | 0;
   if (!$48) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($14, $42, 16) | 0; else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($14, $42, $48 - $43 | 0) | 0;
   $296 = $295;
   $60 = $42 + 16 | 0;
  } while (0);
  $59 = $60;
  $61 = HEAP32[$12 >> 2] | 0;
  if (($61 - $60 | 0) >>> 0 < $3 >>> 0) {
   $297 = 0;
   $86 = -559038737;
   $89 = 0;
   $91 = $61;
  } else {
   if ($25) {
    $73 = 0;
    $74 = 0;
    $i1$06$i = $i1$04$i13;
    while (1) {
     $75 = _bitshift64Shl($73 | 0, $74 | 0, 8) | 0;
     $76 = tempRet0;
     $80 = HEAPU8[$59 + $i1$06$i >> 0] | $75;
     $i1$06$i = $i1$06$i + -1 | 0;
     if ($i1$06$i >>> 0 >= $3 >>> 0) {
      $298 = $80;
      $299 = $76;
      break;
     } else {
      $73 = $80;
      $74 = $76;
     }
    }
   } else {
    $64 = 0;
    $65 = 0;
    $i$07$i = 0;
    while (1) {
     $66 = _bitshift64Shl($64 | 0, $65 | 0, 8) | 0;
     $67 = tempRet0;
     $71 = HEAPU8[$59 + $i$07$i >> 0] | $66;
     $i$07$i = $i$07$i + 1 | 0;
     if (($i$07$i | 0) == ($3 | 0)) {
      $298 = $71;
      $299 = $67;
      break;
     } else {
      $64 = $71;
      $65 = $67;
     }
    }
   }
   $297 = $296;
   $86 = $298;
   $89 = $299;
   $91 = $59 + $3 | 0;
  }
  $84 = $18;
  HEAP32[$84 >> 2] = $86;
  HEAP32[$84 + 4 >> 2] = $89;
  $90 = $91;
  if (($61 - $91 | 0) >>> 0 < $3 >>> 0) {
   $115 = $61;
   $277 = 0;
   $279 = -559038737;
   $300 = 0;
  } else {
   if ($25) {
    $103 = 0;
    $104 = 0;
    $i1$06$i18 = $i1$04$i13;
    while (1) {
     $105 = _bitshift64Shl($103 | 0, $104 | 0, 8) | 0;
     $106 = tempRet0;
     $110 = HEAPU8[$90 + $i1$06$i18 >> 0] | $105;
     $i1$06$i18 = $i1$06$i18 + -1 | 0;
     if ($i1$06$i18 >>> 0 >= $3 >>> 0) {
      $301 = $110;
      $302 = $106;
      break;
     } else {
      $103 = $110;
      $104 = $106;
     }
    }
   } else {
    $94 = 0;
    $95 = 0;
    $i$07$i15 = 0;
    while (1) {
     $96 = _bitshift64Shl($94 | 0, $95 | 0, 8) | 0;
     $97 = tempRet0;
     $101 = HEAPU8[$90 + $i$07$i15 >> 0] | $96;
     $i$07$i15 = $i$07$i15 + 1 | 0;
     if (($i$07$i15 | 0) == ($3 | 0)) {
      $301 = $101;
      $302 = $97;
      break;
     } else {
      $94 = $101;
      $95 = $97;
     }
    }
   }
   $115 = $90 + $3 | 0;
   $277 = $302;
   $279 = $301;
   $300 = $297;
  }
  $114 = $115;
  if (($61 - $115 | 0) >>> 0 < 4) {
   $149 = $61;
   $303 = 0;
   $storemerge$i$i = -559038737;
  } else {
   $119 = HEAP8[$114 + 3 >> 0] | 0;
   $121 = HEAP8[$114 + 2 >> 0] | 0;
   $123 = HEAP8[$114 + 1 >> 0] | 0;
   if ($25) $v$2$i$i = (($121 & 255 | ($119 & 255) << 8) << 8 | $123 & 255) << 8 | HEAPU8[$114 >> 0]; else $v$2$i$i = (($123 & 255 | HEAPU8[$114 >> 0] << 8) << 8 | $121 & 255) << 8 | $119 & 255;
   $149 = $114 + 4 | 0;
   $303 = $300;
   $storemerge$i$i = $v$2$i$i;
  }
  $148 = $149;
  if (($61 - $149 | 0) >>> 0 < 4) {
   $183 = $61;
   $196 = 0;
   $storemerge$i$i30 = -559038737;
  } else {
   $153 = HEAP8[$148 + 3 >> 0] | 0;
   $155 = HEAP8[$148 + 2 >> 0] | 0;
   $157 = HEAP8[$148 + 1 >> 0] | 0;
   if ($25) $v$2$i$i28 = (($155 & 255 | ($153 & 255) << 8) << 8 | $157 & 255) << 8 | HEAPU8[$148 >> 0]; else $v$2$i$i28 = (($157 & 255 | HEAPU8[$148 >> 0] << 8) << 8 | $155 & 255) << 8 | $153 & 255;
   $183 = $148 + 4 | 0;
   $196 = $303;
   $storemerge$i$i30 = $v$2$i$i28;
  }
  HEAP32[$19 >> 2] = $storemerge$i$i30;
  $185 = ($61 - $183 | 0) >>> 0 < 4;
  $188 = $185 ? $61 : $183 + 4 | 0;
  $191 = ($61 - $188 | 0) >>> 0 < 4;
  $195 = $191 | $185 ? 0 : $196;
  $197 = $191 ? $61 : $188 + 4 | 0;
  $198 = $197;
  if (($61 - $197 | 0) >>> 0 < 4) {
   $231 = -559038737;
   $233 = $61;
   $246 = 0;
  } else {
   $202 = HEAP8[$198 + 3 >> 0] | 0;
   $204 = HEAP8[$198 + 2 >> 0] | 0;
   $206 = HEAP8[$198 + 1 >> 0] | 0;
   if ($25) $v$2$i$i49 = (($204 & 255 | ($202 & 255) << 8) << 8 | $206 & 255) << 8 | HEAPU8[$198 >> 0]; else $v$2$i$i49 = (($206 & 255 | HEAPU8[$198 >> 0] << 8) << 8 | $204 & 255) << 8 | $202 & 255;
   $231 = $v$2$i$i49;
   $233 = $198 + 4 | 0;
   $246 = $195;
  }
  HEAP32[$20 >> 2] = $231;
  $235 = ($61 - $233 | 0) >>> 0 < 4;
  $238 = $235 ? $61 : $233 + 4 | 0;
  $241 = ($61 - $238 | 0) >>> 0 < 4;
  $245 = $241 | $235 ? 0 : $246;
  $247 = $241 ? $61 : $238 + 4 | 0;
  if (!(HEAP8[$10 >> 0] | 0)) $294 = $247; else {
   if (($61 - $247 | 0) >>> 0 < 4) {
    label = 48;
    break;
   }
   $294 = $247 + 4 | 0;
  }
  if (!($245 << 24 >> 24)) {
   label = 48;
   break;
  }
  L69 : do switch ($231 & 255 | 0) {
  case 1:
  case 12:
  case 18:
   {
    HEAP32[$23 >> 2] = 0;
    HEAP32[$section >> 2] = 0;
    break;
   }
  default:
   {
    $262 = HEAP32[$21 >> 2] | 0;
    if (($262 | 0) == 0 & (HEAP32[$22 >> 2] | 0) == 0) {
     HEAP32[$23 >> 2] = 0;
     HEAP32[$section >> 2] = 0;
     break L69;
    }
    $266 = HEAP32[$24 >> 2] | 0;
    $268 = $266;
    if ($storemerge$i$i >>> 0 < ($262 - $268 | 0) >>> 0) {
     label = 56;
     break L4;
    }
    $273 = (HEAP32[$22 >> 2] | 0) - $268 | 0;
    if ($273 >>> 0 < $storemerge$i$i >>> 0) {
     label = 56;
     break L4;
    }
    if ($277 >>> 0 > 0 | ($277 | 0) == 0 & $279 >>> 0 > ($273 - $storemerge$i$i | 0) >>> 0) {
     label = 56;
     break L4;
    }
    HEAP32[$section >> 2] = $266 + $storemerge$i$i;
    HEAP32[$23 >> 2] = $266 + ($storemerge$i$i + $279);
   }
  } while (0);
  $292 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$handler >> 2] | 0) + 8 >> 2] & 31]($handler, $section) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $28 = $i$0103 + 1 | 0;
  if (!$292) {
   $$2 = 0;
   label = 59;
   break;
  }
  if ($28 >>> 0 >= (HEAP32[$4 >> 2] | 0) >>> 0) {
   $$2 = 1;
   label = 59;
   break;
  }
  $29 = HEAP8[$0 >> 0] | 0;
  $293 = $245;
  $32 = $294;
  $i$0103 = $28;
 }
 if ((label | 0) == 48) {
  $256 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$256 >> 2] | 0) + 32 >> 2] & 63]($256, $segment + 16 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $$2 = 0;
  STACKTOP = sp;
  return $$2 | 0;
 } else if ((label | 0) == 56) {
  $283 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$283 >> 2] | 0) + 40 >> 2] & 15]($283, $11, $14);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $$2 = 0;
  STACKTOP = sp;
  return $$2 | 0;
 } else if ((label | 0) == 59) {
  STACKTOP = sp;
  return $$2 | 0;
 }
 return 0;
}

function __ZNSt3__113__stable_sortIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEi($__first, $__last, $__comp, $__len, $__buff, $__buff_size) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 $__len = $__len | 0;
 $__buff = $__buff | 0;
 $__buff_size = $__buff_size | 0;
 var $$01$lcssa$i = 0, $$0111$i = 0, $$012$i = 0, $$012$i$lcssa = 0, $$12$i = 0, $$19$i = 0, $$2$i = 0, $$238$i = 0, $$byval_copy10 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$lcssa$i = 0, $$lcssa45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $66 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy10 = sp;
 $$byval_copy9 = sp + 72 | 0;
 $$byval_copy8 = sp + 68 | 0;
 $0 = sp + 64 | 0;
 $1 = sp + 60 | 0;
 $2 = sp + 56 | 0;
 $3 = sp + 52 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 44 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 36 | 0;
 $8 = sp + 32 | 0;
 $9 = sp + 28 | 0;
 $10 = sp + 24 | 0;
 switch ($__len | 0) {
 case 2:
  {
   $11 = HEAP32[$__comp >> 2] | 0;
   $13 = (HEAP32[$__last >> 2] | 0) + -24 | 0;
   HEAP32[$__last >> 2] = $13;
   $14 = HEAP32[$__first >> 2] | 0;
   if (!(FUNCTION_TABLE_iii[$11 & 31]($13, $14) | 0)) {
    STACKTOP = sp;
    return;
   };
   HEAP32[$$byval_copy10 >> 2] = HEAP32[$14 >> 2];
   HEAP32[$$byval_copy10 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
   HEAP32[$$byval_copy10 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
   HEAP32[$$byval_copy10 + 12 >> 2] = HEAP32[$14 + 12 >> 2];
   HEAP32[$$byval_copy10 + 16 >> 2] = HEAP32[$14 + 16 >> 2];
   HEAP32[$$byval_copy10 + 20 >> 2] = HEAP32[$14 + 20 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$14 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
   HEAP32[$14 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
   HEAP32[$14 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
   HEAP32[$14 + 16 >> 2] = HEAP32[$13 + 16 >> 2];
   HEAP32[$14 + 20 >> 2] = HEAP32[$13 + 20 >> 2];
   HEAP32[$13 >> 2] = HEAP32[$$byval_copy10 >> 2];
   HEAP32[$13 + 4 >> 2] = HEAP32[$$byval_copy10 + 4 >> 2];
   HEAP32[$13 + 8 >> 2] = HEAP32[$$byval_copy10 + 8 >> 2];
   HEAP32[$13 + 12 >> 2] = HEAP32[$$byval_copy10 + 12 >> 2];
   HEAP32[$13 + 16 >> 2] = HEAP32[$$byval_copy10 + 16 >> 2];
   HEAP32[$13 + 20 >> 2] = HEAP32[$$byval_copy10 + 20 >> 2];
   STACKTOP = sp;
   return;
  }
 case 1:
 case 0:
  {
   STACKTOP = sp;
   return;
  }
 default:
  {
   if (($__len | 0) < 129) {
    $19 = HEAP32[$__first >> 2] | 0;
    $20 = HEAP32[$__last >> 2] | 0;
    if (($19 | 0) != ($20 | 0)) {
     $22 = $19 + 24 | 0;
     if (($22 | 0) != ($20 | 0)) {
      $25 = $22;
      do {
       $24 = $25;
       HEAP32[$$byval_copy10 >> 2] = HEAP32[$25 >> 2];
       HEAP32[$$byval_copy10 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
       HEAP32[$$byval_copy10 + 8 >> 2] = HEAP32[$25 + 8 >> 2];
       HEAP32[$$byval_copy10 + 12 >> 2] = HEAP32[$25 + 12 >> 2];
       HEAP32[$$byval_copy10 + 16 >> 2] = HEAP32[$25 + 16 >> 2];
       HEAP32[$$byval_copy10 + 20 >> 2] = HEAP32[$25 + 20 >> 2];
       L9 : do if (($25 | 0) == ($19 | 0)) {
        $$lcssa$i = $24;
        label = 8;
       } else {
        $30 = $25;
        $33 = $24;
        while (1) {
         $30 = $30 + -24 | 0;
         $32 = $33;
         if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$byval_copy10, $30) | 0)) {
          $38 = $32;
          break L9;
         }
         $34 = $33;
         HEAP32[$34 >> 2] = HEAP32[$30 >> 2];
         HEAP32[$34 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
         HEAP32[$34 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
         HEAP32[$34 + 12 >> 2] = HEAP32[$30 + 12 >> 2];
         HEAP32[$34 + 16 >> 2] = HEAP32[$30 + 16 >> 2];
         HEAP32[$34 + 20 >> 2] = HEAP32[$30 + 20 >> 2];
         $36 = $32 + -24 | 0;
         if (($30 | 0) == ($19 | 0)) {
          $$lcssa$i = $36;
          label = 8;
          break;
         } else $33 = $36;
        }
       } while (0);
       if ((label | 0) == 8) {
        label = 0;
        $38 = $$lcssa$i;
       };
       HEAP32[$38 >> 2] = HEAP32[$$byval_copy10 >> 2];
       HEAP32[$38 + 4 >> 2] = HEAP32[$$byval_copy10 + 4 >> 2];
       HEAP32[$38 + 8 >> 2] = HEAP32[$$byval_copy10 + 8 >> 2];
       HEAP32[$38 + 12 >> 2] = HEAP32[$$byval_copy10 + 12 >> 2];
       HEAP32[$38 + 16 >> 2] = HEAP32[$$byval_copy10 + 16 >> 2];
       HEAP32[$38 + 20 >> 2] = HEAP32[$$byval_copy10 + 20 >> 2];
       $25 = $25 + 24 | 0;
      } while (($25 | 0) != ($20 | 0));
     }
    }
    STACKTOP = sp;
    return;
   }
   $41 = ($__len | 0) / 2 | 0;
   $42 = HEAP32[$__first >> 2] | 0;
   $44 = $42 + ($41 * 24 | 0) | 0;
   if (($__len | 0) > ($__buff_size | 0)) {
    HEAP32[$4 >> 2] = $42;
    HEAP32[$5 >> 2] = $44;
    HEAP32[$$byval_copy9 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$$byval_copy10 >> 2] = HEAP32[$5 >> 2];
    __ZNSt3__113__stable_sortIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEi($$byval_copy9, $$byval_copy10, $__comp, $41, $__buff, $__buff_size);
    HEAP32[$6 >> 2] = $44;
    $78 = HEAP32[$__last >> 2] | 0;
    HEAP32[$7 >> 2] = $78;
    $79 = $__len - $41 | 0;
    HEAP32[$$byval_copy9 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$$byval_copy10 >> 2] = HEAP32[$7 >> 2];
    __ZNSt3__113__stable_sortIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEi($$byval_copy9, $$byval_copy10, $__comp, $79, $__buff, $__buff_size);
    HEAP32[$8 >> 2] = $42;
    HEAP32[$9 >> 2] = $44;
    HEAP32[$10 >> 2] = $78;
    HEAP32[$$byval_copy8 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$$byval_copy9 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$$byval_copy10 >> 2] = HEAP32[$10 >> 2];
    __ZNSt3__115__inplace_mergeIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEi($$byval_copy8, $$byval_copy9, $$byval_copy10, $__comp, $41, $79, $__buff, $__buff_size);
    STACKTOP = sp;
    return;
   }
   HEAP32[$0 >> 2] = $42;
   HEAP32[$1 >> 2] = $44;
   HEAP32[$$byval_copy9 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$$byval_copy10 >> 2] = HEAP32[$1 >> 2];
   __ZNSt3__118__stable_sort_moveIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE($$byval_copy9, $$byval_copy10, $__comp, $41, $__buff);
   HEAP32[$2 >> 2] = $44;
   HEAP32[$3 >> 2] = HEAP32[$__last >> 2];
   $48 = $__buff + ($41 * 24 | 0) | 0;
   HEAP32[$$byval_copy9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy10 >> 2] = HEAP32[$3 >> 2];
   __ZNSt3__118__stable_sort_moveIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE($$byval_copy9, $$byval_copy10, $__comp, $__len - $41 | 0, $48);
   $49 = $__buff + ($__len * 24 | 0) | 0;
   L23 : do if (($__len + 1 | 0) >>> 0 < 3) {
    $$01$lcssa$i = $48;
    $53 = $42;
   } else {
    $$0111$i = $48;
    $$012$i = $__buff;
    $67 = $42;
    while (1) {
     if (($$0111$i | 0) == ($49 | 0)) {
      $$012$i$lcssa = $$012$i;
      $$lcssa45 = $67;
      break;
     }
     $66 = $67;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($$0111$i, $$012$i) | 0) {
      HEAP32[$66 >> 2] = HEAP32[$$0111$i >> 2];
      HEAP32[$66 + 4 >> 2] = HEAP32[$$0111$i + 4 >> 2];
      HEAP32[$66 + 8 >> 2] = HEAP32[$$0111$i + 8 >> 2];
      HEAP32[$66 + 12 >> 2] = HEAP32[$$0111$i + 12 >> 2];
      HEAP32[$66 + 16 >> 2] = HEAP32[$$0111$i + 16 >> 2];
      HEAP32[$66 + 20 >> 2] = HEAP32[$$0111$i + 20 >> 2];
      $$12$i = $$0111$i + 24 | 0;
      $$2$i = $$012$i;
     } else {
      HEAP32[$66 >> 2] = HEAP32[$$012$i >> 2];
      HEAP32[$66 + 4 >> 2] = HEAP32[$$012$i + 4 >> 2];
      HEAP32[$66 + 8 >> 2] = HEAP32[$$012$i + 8 >> 2];
      HEAP32[$66 + 12 >> 2] = HEAP32[$$012$i + 12 >> 2];
      HEAP32[$66 + 16 >> 2] = HEAP32[$$012$i + 16 >> 2];
      HEAP32[$66 + 20 >> 2] = HEAP32[$$012$i + 20 >> 2];
      $$12$i = $$0111$i;
      $$2$i = $$012$i + 24 | 0;
     }
     $71 = $66 + 24 | 0;
     if (($$2$i | 0) == ($48 | 0)) {
      $$01$lcssa$i = $$12$i;
      $53 = $71;
      break L23;
     } else {
      $$0111$i = $$12$i;
      $$012$i = $$2$i;
      $67 = $71;
     }
    }
    if (($$012$i$lcssa | 0) == ($48 | 0)) {
     STACKTOP = sp;
     return;
    }
    $$19$i = $$012$i$lcssa;
    $59 = $$lcssa45;
    $62 = $$lcssa45;
    while (1) {
     HEAP32[$59 >> 2] = HEAP32[$$19$i >> 2];
     HEAP32[$59 + 4 >> 2] = HEAP32[$$19$i + 4 >> 2];
     HEAP32[$59 + 8 >> 2] = HEAP32[$$19$i + 8 >> 2];
     HEAP32[$59 + 12 >> 2] = HEAP32[$$19$i + 12 >> 2];
     HEAP32[$59 + 16 >> 2] = HEAP32[$$19$i + 16 >> 2];
     HEAP32[$59 + 20 >> 2] = HEAP32[$$19$i + 20 >> 2];
     $60 = $$19$i + 24 | 0;
     $61 = $62 + 24 | 0;
     if (($60 | 0) == ($48 | 0)) break; else {
      $$19$i = $60;
      $59 = $61;
      $62 = $61;
     }
    }
    STACKTOP = sp;
    return;
   } while (0);
   if (($$01$lcssa$i | 0) == ($49 | 0)) {
    STACKTOP = sp;
    return;
   }
   $$238$i = $$01$lcssa$i;
   $73 = $53;
   $76 = $53;
   while (1) {
    HEAP32[$73 >> 2] = HEAP32[$$238$i >> 2];
    HEAP32[$73 + 4 >> 2] = HEAP32[$$238$i + 4 >> 2];
    HEAP32[$73 + 8 >> 2] = HEAP32[$$238$i + 8 >> 2];
    HEAP32[$73 + 12 >> 2] = HEAP32[$$238$i + 12 >> 2];
    HEAP32[$73 + 16 >> 2] = HEAP32[$$238$i + 16 >> 2];
    HEAP32[$73 + 20 >> 2] = HEAP32[$$238$i + 20 >> 2];
    $74 = $$238$i + 24 | 0;
    $75 = $76 + 24 | 0;
    if (($74 | 0) == ($49 | 0)) break; else {
     $$238$i = $74;
     $73 = $75;
     $76 = $75;
    }
   }
   STACKTOP = sp;
   return;
  }
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0$i$i$i = 0, $$0$i$i$i11 = 0, $$0$i$i$i6 = 0, $$02 = 0, $0 = 0, $1 = 0, $103 = 0, $105 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $119 = 0, $122 = 0, $125 = 0, $126 = 0, $132 = 0, $134 = 0, $138 = 0, $147 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $155 = 0, $157 = 0, $16 = 0, $160 = 0, $161 = 0, $163 = 0, $17 = 0, $170 = 0, $172 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $186 = 0, $189 = 0, $192 = 0, $193 = 0, $199 = 0, $2 = 0, $201 = 0, $22 = 0, $27 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $60 = 0, $63 = 0, $64 = 0, $70 = 0, $72 = 0, $77 = 0, $78 = 0, $79 = 0, $83 = 0, $87 = 0, $89 = 0, $9 = 0, $93 = 0, $94 = 0, $96 = 0, $__v$i$i10 = 0, $k1$015 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $__v$i$i10 = sp + 72 | 0;
 $0 = sp + 56 | 0;
 $1 = sp + 48 | 0;
 $2 = sp + 32 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 L1 : do if (($first | 0) == ($last | 0)) $$02 = $first; else switch (HEAP8[$first >> 0] | 0) {
 case 84:
  {
   $9 = $db + 4 | 0;
   $15 = ((HEAP32[$9 >> 2] | 0) - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
   $16 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
   $17 = HEAP32[$9 >> 2] | 0;
   $22 = ($17 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0;
   if (!(($16 | 0) != ($first | 0) & ($22 | 0) == ($15 + 1 | 0))) {
    if (($22 | 0) == ($15 | 0)) {
     $$02 = $first;
     break L1;
    } else {
     $77 = $17;
     $k1$015 = $22;
    }
    while (1) {
     $79 = $77;
     $77 = $77 + -24 | 0;
     do {
      $78 = $79 + -24 | 0;
      HEAP32[$9 >> 2] = $78;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($78);
      $79 = HEAP32[$9 >> 2] | 0;
     } while (($79 | 0) != ($77 | 0));
     $k1$015 = $k1$015 + -1 | 0;
     if (($k1$015 | 0) == ($15 | 0)) {
      $$02 = $first;
      break L1;
     }
    }
   }
   $27 = $db + 16 | 0;
   HEAP32[$1 >> 2] = HEAP32[$db + 12 >> 2];
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($0, $17 + -24 | 0, $1);
   $31 = $db + 20 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   $34 = HEAP32[$db + 24 >> 2] | 0;
   if ($32 >>> 0 < $34 >>> 0) {
    HEAP32[$32 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
    HEAP32[$32 >> 2] = HEAP32[$0 >> 2];
    $41 = $0 + 4 | 0;
    HEAP32[$32 + 4 >> 2] = HEAP32[$41 >> 2];
    $43 = $0 + 8 | 0;
    HEAP32[$32 + 8 >> 2] = HEAP32[$43 >> 2];
    HEAP32[$43 >> 2] = 0;
    HEAP32[$41 >> 2] = 0;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 16;
   } else {
    $51 = HEAP32[$27 >> 2] | 0;
    $52 = $32 - $51 | 0;
    $53 = $52 >> 4;
    $54 = $53 + 1 | 0;
    if (($52 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($27);
    $57 = $34 - $51 | 0;
    if ($57 >> 4 >>> 0 < 1073741823) {
     $60 = $57 >> 3;
     $$0$i$i$i = $60 >>> 0 < $54 >>> 0 ? $54 : $60;
    } else $$0$i$i$i = 2147483647;
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i10, $$0$i$i$i, $53, $db + 28 | 0);
    $63 = $__v$i$i10 + 8 | 0;
    $64 = HEAP32[$63 >> 2] | 0;
    HEAP32[$64 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
    HEAP32[$64 >> 2] = HEAP32[$0 >> 2];
    $70 = $0 + 4 | 0;
    HEAP32[$64 + 4 >> 2] = HEAP32[$70 >> 2];
    $72 = $0 + 8 | 0;
    HEAP32[$64 + 8 >> 2] = HEAP32[$72 >> 2];
    HEAP32[$72 >> 2] = 0;
    HEAP32[$70 >> 2] = 0;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$63 >> 2] = $64 + 16;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($27, $__v$i$i10);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i10);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($0);
   $$02 = $16;
   break L1;
   break;
  }
 case 68:
  {
   $83 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
   if (($83 | 0) == ($first | 0)) {
    $$02 = $first;
    break L1;
   }
   $87 = HEAP32[$db + 4 >> 2] | 0;
   if ((HEAP32[$db >> 2] | 0) == ($87 | 0)) {
    $$02 = $first;
    break L1;
   }
   $89 = $db + 16 | 0;
   HEAP32[$3 >> 2] = HEAP32[$db + 12 >> 2];
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($2, $87 + -24 | 0, $3);
   $93 = $db + 20 | 0;
   $94 = HEAP32[$93 >> 2] | 0;
   $96 = HEAP32[$db + 24 >> 2] | 0;
   if ($94 >>> 0 < $96 >>> 0) {
    HEAP32[$94 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
    HEAP32[$94 >> 2] = HEAP32[$2 >> 2];
    $103 = $2 + 4 | 0;
    HEAP32[$94 + 4 >> 2] = HEAP32[$103 >> 2];
    $105 = $2 + 8 | 0;
    HEAP32[$94 + 8 >> 2] = HEAP32[$105 >> 2];
    HEAP32[$105 >> 2] = 0;
    HEAP32[$103 >> 2] = 0;
    HEAP32[$2 >> 2] = 0;
    HEAP32[$93 >> 2] = (HEAP32[$93 >> 2] | 0) + 16;
   } else {
    $113 = HEAP32[$89 >> 2] | 0;
    $114 = $94 - $113 | 0;
    $115 = $114 >> 4;
    $116 = $115 + 1 | 0;
    if (($114 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($89);
    $119 = $96 - $113 | 0;
    if ($119 >> 4 >>> 0 < 1073741823) {
     $122 = $119 >> 3;
     $$0$i$i$i6 = $122 >>> 0 < $116 >>> 0 ? $116 : $122;
    } else $$0$i$i$i6 = 2147483647;
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i10, $$0$i$i$i6, $115, $db + 28 | 0);
    $125 = $__v$i$i10 + 8 | 0;
    $126 = HEAP32[$125 >> 2] | 0;
    HEAP32[$126 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
    HEAP32[$126 >> 2] = HEAP32[$2 >> 2];
    $132 = $2 + 4 | 0;
    HEAP32[$126 + 4 >> 2] = HEAP32[$132 >> 2];
    $134 = $2 + 8 | 0;
    HEAP32[$126 + 8 >> 2] = HEAP32[$134 >> 2];
    HEAP32[$134 >> 2] = 0;
    HEAP32[$132 >> 2] = 0;
    HEAP32[$2 >> 2] = 0;
    HEAP32[$125 >> 2] = $126 + 16;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($89, $__v$i$i10);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i10);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($2);
   $$02 = $83;
   break L1;
   break;
  }
 case 83:
  {
   $138 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
   if (($138 | 0) != ($first | 0)) {
    $$02 = $138;
    break L1;
   }
   if (($last - $first | 0) <= 2) {
    $$02 = $first;
    break L1;
   }
   if ((HEAP8[$first + 1 >> 0] | 0) != 116) {
    $$02 = $first;
    break L1;
   }
   $147 = $first + 2 | 0;
   $148 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($147, $last, $db) | 0;
   if (($148 | 0) == ($147 | 0)) {
    $$02 = $first;
    break L1;
   }
   $151 = $db + 4 | 0;
   $152 = HEAP32[$151 >> 2] | 0;
   if ((HEAP32[$db >> 2] | 0) == ($152 | 0)) {
    $$02 = $first;
    break L1;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($152 + -24 | 0, 0, 25781) | 0;
   $155 = $db + 16 | 0;
   $157 = (HEAP32[$151 >> 2] | 0) + -24 | 0;
   HEAP32[$5 >> 2] = HEAP32[$db + 12 >> 2];
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4, $157, $5);
   $160 = $db + 20 | 0;
   $161 = HEAP32[$160 >> 2] | 0;
   $163 = HEAP32[$db + 24 >> 2] | 0;
   if ($161 >>> 0 < $163 >>> 0) {
    HEAP32[$161 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
    HEAP32[$161 >> 2] = HEAP32[$4 >> 2];
    $170 = $4 + 4 | 0;
    HEAP32[$161 + 4 >> 2] = HEAP32[$170 >> 2];
    $172 = $4 + 8 | 0;
    HEAP32[$161 + 8 >> 2] = HEAP32[$172 >> 2];
    HEAP32[$172 >> 2] = 0;
    HEAP32[$170 >> 2] = 0;
    HEAP32[$4 >> 2] = 0;
    HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + 16;
   } else {
    $180 = HEAP32[$155 >> 2] | 0;
    $181 = $161 - $180 | 0;
    $182 = $181 >> 4;
    $183 = $182 + 1 | 0;
    if (($181 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($155);
    $186 = $163 - $180 | 0;
    if ($186 >> 4 >>> 0 < 1073741823) {
     $189 = $186 >> 3;
     $$0$i$i$i11 = $189 >>> 0 < $183 >>> 0 ? $183 : $189;
    } else $$0$i$i$i11 = 2147483647;
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i10, $$0$i$i$i11, $182, $db + 28 | 0);
    $192 = $__v$i$i10 + 8 | 0;
    $193 = HEAP32[$192 >> 2] | 0;
    HEAP32[$193 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
    HEAP32[$193 >> 2] = HEAP32[$4 >> 2];
    $199 = $4 + 4 | 0;
    HEAP32[$193 + 4 >> 2] = HEAP32[$199 >> 2];
    $201 = $4 + 8 | 0;
    HEAP32[$193 + 8 >> 2] = HEAP32[$201 >> 2];
    HEAP32[$201 >> 2] = 0;
    HEAP32[$199 >> 2] = 0;
    HEAP32[$4 >> 2] = 0;
    HEAP32[$192 >> 2] = $193 + 16;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($155, $__v$i$i10);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i10);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
   $$02 = $148;
   break L1;
   break;
  }
 default:
  {
   $$02 = $first;
   break L1;
  }
 } while (0);
 STACKTOP = sp;
 return $$02 | 0;
}

function __ZN15google_breakpadL12MD5TransformEPjPKj($buf, $in) {
 $buf = $buf | 0;
 $in = $in | 0;
 var $0 = 0, $1 = 0, $10 = 0, $101 = 0, $106 = 0, $109 = 0, $113 = 0, $118 = 0, $121 = 0, $125 = 0, $13 = 0, $130 = 0, $133 = 0, $137 = 0, $142 = 0, $145 = 0, $149 = 0, $154 = 0, $157 = 0, $161 = 0, $166 = 0, $169 = 0, $17 = 0, $173 = 0, $178 = 0, $181 = 0, $185 = 0, $190 = 0, $193 = 0, $197 = 0, $2 = 0, $203 = 0, $207 = 0, $213 = 0, $217 = 0, $22 = 0, $223 = 0, $227 = 0, $233 = 0, $237 = 0, $243 = 0, $247 = 0, $25 = 0, $253 = 0, $257 = 0, $263 = 0, $267 = 0, $273 = 0, $277 = 0, $283 = 0, $287 = 0, $29 = 0, $293 = 0, $297 = 0, $3 = 0, $303 = 0, $307 = 0, $313 = 0, $317 = 0, $323 = 0, $327 = 0, $333 = 0, $337 = 0, $34 = 0, $343 = 0, $347 = 0, $348 = 0, $353 = 0, $357 = 0, $361 = 0, $365 = 0, $37 = 0, $370 = 0, $374 = 0, $379 = 0, $383 = 0, $388 = 0, $392 = 0, $397 = 0, $4 = 0, $401 = 0, $406 = 0, $41 = 0, $410 = 0, $415 = 0, $419 = 0, $424 = 0, $428 = 0, $433 = 0, $437 = 0, $442 = 0, $446 = 0, $451 = 0, $455 = 0, $46 = 0, $460 = 0, $464 = 0, $469 = 0, $473 = 0, $478 = 0, $482 = 0, $487 = 0, $49 = 0, $491 = 0, $496 = 0, $5 = 0, $500 = 0, $506 = 0, $510 = 0, $516 = 0, $520 = 0, $526 = 0, $53 = 0, $530 = 0, $536 = 0, $540 = 0, $546 = 0, $550 = 0, $556 = 0, $560 = 0, $566 = 0, $570 = 0, $576 = 0, $58 = 0, $580 = 0, $586 = 0, $590 = 0, $596 = 0, $6 = 0, $600 = 0, $606 = 0, $61 = 0, $610 = 0, $616 = 0, $620 = 0, $626 = 0, $630 = 0, $636 = 0, $640 = 0, $646 = 0, $65 = 0, $650 = 0, $656 = 0, $70 = 0, $73 = 0, $77 = 0, $82 = 0, $85 = 0, $89 = 0, $94 = 0, $97 = 0;
 $0 = HEAP32[$buf >> 2] | 0;
 $1 = $buf + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $buf + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $buf + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $10 = HEAP32[$in >> 2] | 0;
 $13 = $0 + -680876936 + $10 + (($6 ^ $4) & $2 ^ $6) | 0;
 $17 = ($13 << 7 | $13 >>> 25) + $2 | 0;
 $22 = HEAP32[$in + 4 >> 2] | 0;
 $25 = $6 + -389564586 + $22 + ($17 & ($4 ^ $2) ^ $4) | 0;
 $29 = ($25 << 12 | $25 >>> 20) + $17 | 0;
 $34 = HEAP32[$in + 8 >> 2] | 0;
 $37 = $4 + 606105819 + $34 + ($29 & ($17 ^ $2) ^ $2) | 0;
 $41 = ($37 << 17 | $37 >>> 15) + $29 | 0;
 $46 = HEAP32[$in + 12 >> 2] | 0;
 $49 = $2 + -1044525330 + $46 + ($41 & ($29 ^ $17) ^ $17) | 0;
 $53 = ($49 << 22 | $49 >>> 10) + $41 | 0;
 $58 = HEAP32[$in + 16 >> 2] | 0;
 $61 = $58 + -176418897 + $17 + ($53 & ($41 ^ $29) ^ $29) | 0;
 $65 = ($61 << 7 | $61 >>> 25) + $53 | 0;
 $70 = HEAP32[$in + 20 >> 2] | 0;
 $73 = $70 + 1200080426 + $29 + ($65 & ($53 ^ $41) ^ $41) | 0;
 $77 = ($73 << 12 | $73 >>> 20) + $65 | 0;
 $82 = HEAP32[$in + 24 >> 2] | 0;
 $85 = $82 + -1473231341 + $41 + ($77 & ($65 ^ $53) ^ $53) | 0;
 $89 = ($85 << 17 | $85 >>> 15) + $77 | 0;
 $94 = HEAP32[$in + 28 >> 2] | 0;
 $97 = $94 + -45705983 + $53 + ($89 & ($77 ^ $65) ^ $65) | 0;
 $101 = ($97 << 22 | $97 >>> 10) + $89 | 0;
 $106 = HEAP32[$in + 32 >> 2] | 0;
 $109 = $106 + 1770035416 + $65 + ($101 & ($89 ^ $77) ^ $77) | 0;
 $113 = ($109 << 7 | $109 >>> 25) + $101 | 0;
 $118 = HEAP32[$in + 36 >> 2] | 0;
 $121 = $118 + -1958414417 + $77 + ($113 & ($101 ^ $89) ^ $89) | 0;
 $125 = ($121 << 12 | $121 >>> 20) + $113 | 0;
 $130 = HEAP32[$in + 40 >> 2] | 0;
 $133 = $130 + -42063 + $89 + ($125 & ($113 ^ $101) ^ $101) | 0;
 $137 = ($133 << 17 | $133 >>> 15) + $125 | 0;
 $142 = HEAP32[$in + 44 >> 2] | 0;
 $145 = $142 + -1990404162 + $101 + ($137 & ($125 ^ $113) ^ $113) | 0;
 $149 = ($145 << 22 | $145 >>> 10) + $137 | 0;
 $154 = HEAP32[$in + 48 >> 2] | 0;
 $157 = $154 + 1804603682 + $113 + ($149 & ($137 ^ $125) ^ $125) | 0;
 $161 = ($157 << 7 | $157 >>> 25) + $149 | 0;
 $166 = HEAP32[$in + 52 >> 2] | 0;
 $169 = $166 + -40341101 + $125 + ($161 & ($149 ^ $137) ^ $137) | 0;
 $173 = ($169 << 12 | $169 >>> 20) + $161 | 0;
 $178 = HEAP32[$in + 56 >> 2] | 0;
 $181 = $178 + -1502002290 + $137 + ($173 & ($161 ^ $149) ^ $149) | 0;
 $185 = ($181 << 17 | $181 >>> 15) + $173 | 0;
 $190 = HEAP32[$in + 60 >> 2] | 0;
 $193 = $190 + 1236535329 + $149 + ($185 & ($173 ^ $161) ^ $161) | 0;
 $197 = ($193 << 22 | $193 >>> 10) + $185 | 0;
 $203 = $22 + -165796510 + $161 + (($197 ^ $185) & $173 ^ $185) | 0;
 $207 = ($203 << 5 | $203 >>> 27) + $197 | 0;
 $213 = $82 + -1069501632 + $173 + (($207 ^ $197) & $185 ^ $197) | 0;
 $217 = ($213 << 9 | $213 >>> 23) + $207 | 0;
 $223 = $142 + 643717713 + $185 + (($217 ^ $207) & $197 ^ $207) | 0;
 $227 = ($223 << 14 | $223 >>> 18) + $217 | 0;
 $233 = $10 + -373897302 + $197 + (($227 ^ $217) & $207 ^ $217) | 0;
 $237 = ($233 << 20 | $233 >>> 12) + $227 | 0;
 $243 = $70 + -701558691 + $207 + (($237 ^ $227) & $217 ^ $227) | 0;
 $247 = ($243 << 5 | $243 >>> 27) + $237 | 0;
 $253 = $130 + 38016083 + $217 + (($247 ^ $237) & $227 ^ $237) | 0;
 $257 = ($253 << 9 | $253 >>> 23) + $247 | 0;
 $263 = $190 + -660478335 + $227 + (($257 ^ $247) & $237 ^ $247) | 0;
 $267 = ($263 << 14 | $263 >>> 18) + $257 | 0;
 $273 = $58 + -405537848 + $237 + (($267 ^ $257) & $247 ^ $257) | 0;
 $277 = ($273 << 20 | $273 >>> 12) + $267 | 0;
 $283 = $118 + 568446438 + $247 + (($277 ^ $267) & $257 ^ $267) | 0;
 $287 = ($283 << 5 | $283 >>> 27) + $277 | 0;
 $293 = $178 + -1019803690 + $257 + (($287 ^ $277) & $267 ^ $277) | 0;
 $297 = ($293 << 9 | $293 >>> 23) + $287 | 0;
 $303 = $46 + -187363961 + $267 + (($297 ^ $287) & $277 ^ $287) | 0;
 $307 = ($303 << 14 | $303 >>> 18) + $297 | 0;
 $313 = $106 + 1163531501 + $277 + (($307 ^ $297) & $287 ^ $297) | 0;
 $317 = ($313 << 20 | $313 >>> 12) + $307 | 0;
 $323 = $166 + -1444681467 + $287 + (($317 ^ $307) & $297 ^ $307) | 0;
 $327 = ($323 << 5 | $323 >>> 27) + $317 | 0;
 $333 = $34 + -51403784 + $297 + (($327 ^ $317) & $307 ^ $317) | 0;
 $337 = ($333 << 9 | $333 >>> 23) + $327 | 0;
 $343 = $94 + 1735328473 + $307 + (($337 ^ $327) & $317 ^ $327) | 0;
 $347 = ($343 << 14 | $343 >>> 18) + $337 | 0;
 $348 = $347 ^ $337;
 $353 = $154 + -1926607734 + $317 + ($348 & $327 ^ $337) | 0;
 $357 = ($353 << 20 | $353 >>> 12) + $347 | 0;
 $361 = $70 + -378558 + $327 + ($348 ^ $357) | 0;
 $365 = ($361 << 4 | $361 >>> 28) + $357 | 0;
 $370 = $106 + -2022574463 + $337 + ($357 ^ $347 ^ $365) | 0;
 $374 = ($370 << 11 | $370 >>> 21) + $365 | 0;
 $379 = $142 + 1839030562 + $347 + ($365 ^ $357 ^ $374) | 0;
 $383 = ($379 << 16 | $379 >>> 16) + $374 | 0;
 $388 = $178 + -35309556 + $357 + ($374 ^ $365 ^ $383) | 0;
 $392 = ($388 << 23 | $388 >>> 9) + $383 | 0;
 $397 = $22 + -1530992060 + $365 + ($383 ^ $374 ^ $392) | 0;
 $401 = ($397 << 4 | $397 >>> 28) + $392 | 0;
 $406 = $58 + 1272893353 + $374 + ($392 ^ $383 ^ $401) | 0;
 $410 = ($406 << 11 | $406 >>> 21) + $401 | 0;
 $415 = $94 + -155497632 + $383 + ($401 ^ $392 ^ $410) | 0;
 $419 = ($415 << 16 | $415 >>> 16) + $410 | 0;
 $424 = $130 + -1094730640 + $392 + ($410 ^ $401 ^ $419) | 0;
 $428 = ($424 << 23 | $424 >>> 9) + $419 | 0;
 $433 = $166 + 681279174 + $401 + ($419 ^ $410 ^ $428) | 0;
 $437 = ($433 << 4 | $433 >>> 28) + $428 | 0;
 $442 = $10 + -358537222 + $410 + ($428 ^ $419 ^ $437) | 0;
 $446 = ($442 << 11 | $442 >>> 21) + $437 | 0;
 $451 = $46 + -722521979 + $419 + ($437 ^ $428 ^ $446) | 0;
 $455 = ($451 << 16 | $451 >>> 16) + $446 | 0;
 $460 = $82 + 76029189 + $428 + ($446 ^ $437 ^ $455) | 0;
 $464 = ($460 << 23 | $460 >>> 9) + $455 | 0;
 $469 = $118 + -640364487 + $437 + ($455 ^ $446 ^ $464) | 0;
 $473 = ($469 << 4 | $469 >>> 28) + $464 | 0;
 $478 = $154 + -421815835 + $446 + ($464 ^ $455 ^ $473) | 0;
 $482 = ($478 << 11 | $478 >>> 21) + $473 | 0;
 $487 = $190 + 530742520 + $455 + ($473 ^ $464 ^ $482) | 0;
 $491 = ($487 << 16 | $487 >>> 16) + $482 | 0;
 $496 = $34 + -995338651 + $464 + ($482 ^ $473 ^ $491) | 0;
 $500 = ($496 << 23 | $496 >>> 9) + $491 | 0;
 $506 = $10 + -198630844 + $473 + (($500 | ~$482) ^ $491) | 0;
 $510 = ($506 << 6 | $506 >>> 26) + $500 | 0;
 $516 = $94 + 1126891415 + $482 + (($510 | ~$491) ^ $500) | 0;
 $520 = ($516 << 10 | $516 >>> 22) + $510 | 0;
 $526 = $178 + -1416354905 + $491 + (($520 | ~$500) ^ $510) | 0;
 $530 = ($526 << 15 | $526 >>> 17) + $520 | 0;
 $536 = $70 + -57434055 + $500 + (($530 | ~$510) ^ $520) | 0;
 $540 = ($536 << 21 | $536 >>> 11) + $530 | 0;
 $546 = $154 + 1700485571 + $510 + (($540 | ~$520) ^ $530) | 0;
 $550 = ($546 << 6 | $546 >>> 26) + $540 | 0;
 $556 = $46 + -1894986606 + $520 + (($550 | ~$530) ^ $540) | 0;
 $560 = ($556 << 10 | $556 >>> 22) + $550 | 0;
 $566 = $130 + -1051523 + $530 + (($560 | ~$540) ^ $550) | 0;
 $570 = ($566 << 15 | $566 >>> 17) + $560 | 0;
 $576 = $22 + -2054922799 + $540 + (($570 | ~$550) ^ $560) | 0;
 $580 = ($576 << 21 | $576 >>> 11) + $570 | 0;
 $586 = $106 + 1873313359 + $550 + (($580 | ~$560) ^ $570) | 0;
 $590 = ($586 << 6 | $586 >>> 26) + $580 | 0;
 $596 = $190 + -30611744 + $560 + (($590 | ~$570) ^ $580) | 0;
 $600 = ($596 << 10 | $596 >>> 22) + $590 | 0;
 $606 = $82 + -1560198380 + $570 + (($600 | ~$580) ^ $590) | 0;
 $610 = ($606 << 15 | $606 >>> 17) + $600 | 0;
 $616 = $166 + 1309151649 + $580 + (($610 | ~$590) ^ $600) | 0;
 $620 = ($616 << 21 | $616 >>> 11) + $610 | 0;
 $626 = $58 + -145523070 + $590 + (($620 | ~$600) ^ $610) | 0;
 $630 = ($626 << 6 | $626 >>> 26) + $620 | 0;
 $636 = $142 + -1120210379 + $600 + (($630 | ~$610) ^ $620) | 0;
 $640 = ($636 << 10 | $636 >>> 22) + $630 | 0;
 $646 = $34 + 718787259 + $610 + (($640 | ~$620) ^ $630) | 0;
 $650 = ($646 << 15 | $646 >>> 17) + $640 | 0;
 $656 = $118 + -343485551 + $620 + (($650 | ~$630) ^ $640) | 0;
 HEAP32[$buf >> 2] = $630 + $0;
 HEAP32[$1 >> 2] = $650 + (HEAP32[$1 >> 2] | 0) + ($656 << 21 | $656 >>> 11);
 HEAP32[$3 >> 2] = $650 + (HEAP32[$3 >> 2] | 0);
 HEAP32[$5 >> 2] = $640 + (HEAP32[$5 >> 2] | 0);
 return;
}

function __ZN12dwarf2reader15CompilationUnit11ReadAbbrevsEv($this) {
 $this = $this | 0;
 var $$0$i = 0, $$0$i12 = 0, $$0$i17 = 0, $$0$i22 = 0, $$03 = 0, $$lcssa = 0, $$lcssa135 = 0, $$lcssa137 = 0, $$lcssa139 = 0, $$lcssa141 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $111 = 0, $113 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $122 = 0, $124 = 0, $125 = 0, $127 = 0, $128 = 0, $13 = 0, $132 = 0, $134 = 0, $139 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $15 = 0, $157 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $167 = 0, $172 = 0, $173 = 0, $178 = 0, $181 = 0, $183 = 0, $192 = 0, $194 = 0, $196 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $30 = 0, $36 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $68 = 0, $7 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $84 = 0, $85 = 0, $90 = 0, $94 = 0, $95 = 0, $97 = 0, $99 = 0, $__f$01$i$i$i = 0, $abbrev = 0, $abbrevptr$0 = 0, $abbrevptr$1 = 0, $abbrevptr$2 = 0, $num_read$0$i = 0, $num_read$0$i10 = 0, $num_read$0$i15 = 0, $num_read$0$i20 = 0, $shift$0$i = 0, $shift$0$i11 = 0, $shift$0$i16 = 0, $shift$0$i21 = 0, label = 0, sp = 0, $178$looptemp = 0, $__f$01$i$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp + 44 | 0;
 $1 = sp + 32 | 0;
 $abbrev = sp;
 $2 = $this + 80 | 0;
 if (HEAP32[$2 >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 $5 = $this + 72 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 17991, 13);
 $7 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($6, $0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $8 = HEAP32[$5 >> 2] | 0;
 if (($7 | 0) == ($8 + 4 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 18005, 14);
  $11 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($8, $1) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $13 = HEAP32[$5 >> 2] | 0;
  $15 = $11;
 } else {
  $13 = $8;
  $15 = $7;
 }
 if (($15 | 0) == ($13 + 4 | 0)) ___assert_fail(18020, 18044, 78, 18077);
 $16 = __Znwj(12) | 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = 0;
 HEAP32[$2 >> 2] = $16;
 __ZNSt3__16vectorIN12dwarf2reader15CompilationUnit6AbbrevENS_9allocatorIS3_EEE8__appendEj($16, 1);
 $20 = HEAP32[$15 + 32 >> 2] | 0;
 $22 = $this + 24 | 0;
 $24 = HEAP32[$22 >> 2] | 0;
 $30 = $15 + 40 | 0;
 $36 = _i64Subtract(HEAP32[$30 >> 2] | 0, HEAP32[$30 + 4 >> 2] | 0, $24 | 0, HEAP32[$22 + 4 >> 2] | 0) | 0;
 $38 = $abbrev + 16 | 0;
 $39 = $abbrev + 20 | 0;
 $40 = $abbrev + 24 | 0;
 $41 = $abbrev + 16 | 0;
 $42 = $20 + ($36 + $24) | 0;
 $43 = $abbrev + 8 | 0;
 $44 = $abbrev + 12 | 0;
 $abbrevptr$0 = $20 + $24 | 0;
 L10 : while (1) {
  HEAP32[$38 >> 2] = $38;
  HEAP32[$39 >> 2] = $38;
  HEAP32[$40 >> 2] = 0;
  $$0$i = $abbrevptr$0;
  $53 = 0;
  $55 = 0;
  $num_read$0$i = 0;
  $shift$0$i = 0;
  while (1) {
   $47 = $num_read$0$i + 1 | 0;
   $48 = HEAPU8[$$0$i >> 0] | 0;
   $50 = _bitshift64Shl($48 & 127 | 0, 0, $shift$0$i | 0) | 0;
   $52 = $50 | $53;
   $54 = tempRet0 | $55;
   if (!($48 & 128)) {
    $$lcssa = $47;
    $60 = $52;
    $62 = $54;
    break;
   } else {
    $$0$i = $$0$i + 1 | 0;
    $53 = $52;
    $55 = $54;
    $num_read$0$i = $47;
    $shift$0$i = $shift$0$i + 7 | 0;
   }
  }
  do if (($60 | 0) == 0 & ($62 | 0) == 0) {
   $$03 = 0;
   $abbrevptr$2 = $abbrevptr$0;
  } else {
   $64 = $abbrev;
   HEAP32[$64 >> 2] = $60;
   HEAP32[$64 + 4 >> 2] = $62;
   $68 = $abbrevptr$0 + $$lcssa | 0;
   if ($68 >>> 0 < $42 >>> 0) {
    $$0$i22 = $68;
    $78 = 0;
    $80 = 0;
    $num_read$0$i20 = 0;
    $shift$0$i21 = 0;
   } else {
    label = 11;
    break L10;
   }
   while (1) {
    $72 = $num_read$0$i20 + 1 | 0;
    $73 = HEAPU8[$$0$i22 >> 0] | 0;
    $75 = _bitshift64Shl($73 & 127 | 0, 0, $shift$0$i21 | 0) | 0;
    $77 = $75 | $78;
    if (!($73 & 128)) {
     $$lcssa135 = $72;
     $85 = $77;
     break;
    } else {
     $$0$i22 = $$0$i22 + 1 | 0;
     $78 = $77;
     $80 = tempRet0 | $80;
     $num_read$0$i20 = $72;
     $shift$0$i21 = $shift$0$i21 + 7 | 0;
    }
   }
   $$sum4 = $$lcssa135 + $$lcssa | 0;
   $84 = $abbrevptr$0 + $$sum4 | 0;
   HEAP32[$43 >> 2] = $85;
   if ($84 >>> 0 >= $42 >>> 0) {
    label = 14;
    break L10;
   }
   HEAP8[$44 >> 0] = (HEAP8[$84 >> 0] | 0) != 0 & 1;
   $90 = $abbrevptr$0 + ($$sum4 + 1) | 0;
   if ($90 >>> 0 < $42 >>> 0) {
    $139 = $38;
    $142 = 0;
    $abbrevptr$1 = $90;
   } else {
    label = 16;
    break L10;
   }
   while (1) {
    $$0$i17 = $abbrevptr$1;
    $100 = 0;
    $102 = 0;
    $num_read$0$i15 = 0;
    $shift$0$i16 = 0;
    while (1) {
     $94 = $num_read$0$i15 + 1 | 0;
     $95 = HEAPU8[$$0$i17 >> 0] | 0;
     $97 = _bitshift64Shl($95 & 127 | 0, 0, $shift$0$i16 | 0) | 0;
     $99 = $97 | $100;
     $101 = tempRet0 | $102;
     if (!($95 & 128)) {
      $$lcssa137 = $94;
      $125 = $99;
      $128 = $101;
      break;
     } else {
      $$0$i17 = $$0$i17 + 1 | 0;
      $100 = $99;
      $102 = $101;
      $num_read$0$i15 = $94;
      $shift$0$i16 = $shift$0$i16 + 7 | 0;
     }
    }
    $106 = $abbrevptr$1 + $$lcssa137 | 0;
    if ($106 >>> 0 < $42 >>> 0) {
     $$0$i12 = $106;
     $116 = 0;
     $118 = 0;
     $num_read$0$i10 = 0;
     $shift$0$i11 = 0;
    } else {
     label = 20;
     break L10;
    }
    while (1) {
     $110 = $num_read$0$i10 + 1 | 0;
     $111 = HEAPU8[$$0$i12 >> 0] | 0;
     $113 = _bitshift64Shl($111 & 127 | 0, 0, $shift$0$i11 | 0) | 0;
     $115 = $113 | $116;
     $117 = tempRet0 | $118;
     if (!($111 & 128)) {
      $$lcssa139 = $110;
      $124 = $115;
      $127 = $117;
      break;
     } else {
      $$0$i12 = $$0$i12 + 1 | 0;
      $116 = $115;
      $118 = $117;
      $num_read$0$i10 = $110;
      $shift$0$i11 = $shift$0$i11 + 7 | 0;
     }
    }
    $122 = $abbrevptr$1 + ($$lcssa139 + $$lcssa137) | 0;
    if (($124 | $125 | 0) == 0 & ($127 | $128 | 0) == 0) {
     $$lcssa141 = $122;
     break;
    }
    $132 = __Znwj(16) | 0;
    $134 = $132 + 8 | 0;
    HEAP32[$134 >> 2] = $125;
    HEAP32[$134 + 4 >> 2] = $124;
    HEAP32[$132 + 4 >> 2] = $38;
    HEAP32[$132 >> 2] = $139;
    HEAP32[$139 + 4 >> 2] = $132;
    HEAP32[$38 >> 2] = $132;
    $141 = $142 + 1 | 0;
    HEAP32[$40 >> 2] = $141;
    $139 = $132;
    $142 = $141;
    $abbrevptr$1 = $122;
   }
   $143 = HEAP32[$2 >> 2] | 0;
   $144 = $143 + 4 | 0;
   $145 = HEAP32[$144 >> 2] | 0;
   if (!(($62 | 0) == 0 ? ($60 | 0) == ($145 - (HEAP32[$143 >> 2] | 0) >> 5 | 0) : 0)) {
    label = 25;
    break L10;
   }
   if (($145 | 0) == (HEAP32[$143 + 8 >> 2] | 0)) {
    __ZNSt3__16vectorIN12dwarf2reader15CompilationUnit6AbbrevENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($143, $abbrev);
    $$03 = 1;
    $abbrevptr$2 = $$lcssa141;
    break;
   };
   HEAP32[$145 >> 2] = HEAP32[$abbrev >> 2];
   HEAP32[$145 + 4 >> 2] = HEAP32[$abbrev + 4 >> 2];
   HEAP32[$145 + 8 >> 2] = HEAP32[$abbrev + 8 >> 2];
   HEAP8[$145 + 12 >> 0] = HEAP8[$abbrev + 12 >> 0] | 0;
   $157 = $145 + 16 | 0;
   HEAP32[$157 >> 2] = $157;
   HEAP32[$145 + 20 >> 2] = $157;
   $159 = $145 + 24 | 0;
   HEAP32[$159 >> 2] = 0;
   $160 = HEAP32[$39 >> 2] | 0;
   if (($160 | 0) != ($38 | 0)) {
    $165 = $160;
    $178 = $157;
    $181 = 0;
    $183 = $160;
    do {
     $178$looptemp = $178;
     $178 = __Znwj(16) | 0;
     $167 = $165 + 8 | 0;
     $172 = HEAP32[$167 + 4 >> 2] | 0;
     $173 = $178 + 8 | 0;
     HEAP32[$173 >> 2] = HEAP32[$167 >> 2];
     HEAP32[$173 + 4 >> 2] = $172;
     HEAP32[$178 + 4 >> 2] = $157;
     HEAP32[$178 >> 2] = $178$looptemp;
     HEAP32[$178$looptemp + 4 >> 2] = $178;
     HEAP32[$157 >> 2] = $178;
     $181 = $181 + 1 | 0;
     HEAP32[$159 >> 2] = $181;
     $183 = HEAP32[$183 + 4 >> 2] | 0;
     $165 = $183;
    } while (($165 | 0) != ($38 | 0));
   }
   HEAP32[$144 >> 2] = (HEAP32[$144 >> 2] | 0) + 32;
   $$03 = 1;
   $abbrevptr$2 = $$lcssa141;
  } while (0);
  if (HEAP32[$40 >> 2] | 0) {
   $192 = HEAP32[$39 >> 2] | 0;
   $194 = (HEAP32[$41 >> 2] | 0) + 4 | 0;
   $196 = HEAP32[$192 >> 2] | 0;
   HEAP32[$196 + 4 >> 2] = HEAP32[$194 >> 2];
   HEAP32[HEAP32[$194 >> 2] >> 2] = $196;
   HEAP32[$40 >> 2] = 0;
   if (($192 | 0) != ($41 | 0)) {
    $__f$01$i$i$i = $192;
    do {
     $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
     $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i$i$looptemp);
    } while (($__f$01$i$i$i | 0) != ($41 | 0));
   }
  }
  if ($$03) $abbrevptr$0 = $abbrevptr$2; else {
   label = 36;
   break;
  }
 }
 if ((label | 0) == 11) ___assert_fail(18089, 18044, 103, 18077); else if ((label | 0) == 14) ___assert_fail(18089, 18044, 108, 18077); else if ((label | 0) == 16) ___assert_fail(18089, 18044, 112, 18077); else if ((label | 0) == 20) ___assert_fail(18089, 18044, 118, 18077); else if ((label | 0) == 25) ___assert_fail(18130, 18044, 129, 18077); else if ((label | 0) == 36) {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$025 = 0, $$033 = 0, $$lcssa = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i$lcssa = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $115 = 0, $123 = 0, $125 = 0, $130 = 0, $142 = 0, $162 = 0, $163 = 0, $18 = 0, $24 = 0, $27 = 0, $3 = 0, $37 = 0, $40 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $56 = 0, $69 = 0, $79 = 0, $8 = 0, $80 = 0, $86 = 0, $9 = 0, $94 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0, $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0, $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0, $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) __ZSt17__throw_bad_allocv(); else {
   $162 = $5;
   $__status$0 = $5;
  }
 } else {
  $162 = 0;
  $__status$0 = $__statbuf;
 }
 if (($__kb | 0) == ($__ke | 0)) {
  $__n_does_match$0$lcssa = 0;
  $__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;
  $__n_does_match$050 = 0;
  $__n_might_match$049 = $3;
  $__st$051 = $__status$0;
  while (1) {
   $10 = HEAP8[$__ky$052 >> 0] | 0;
   if (!($10 & 1)) $18 = ($10 & 255) >>> 1; else $18 = HEAP32[$__ky$052 + 4 >> 2] | 0;
   if (!$18) {
    HEAP8[$__st$051 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$050 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$049 + -1 | 0;
   } else {
    HEAP8[$__st$051 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$050;
    $__n_might_match$1 = $__n_might_match$049;
   }
   $__ky$052 = $__ky$052 + 12 | 0;
   if (($__ky$052 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$1;
    $__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__n_does_match$050 = $__n_does_match$1;
    $__n_might_match$049 = $__n_might_match$1;
    $__st$051 = $__st$051 + 1 | 0;
   }
  }
 }
 $8 = ($__kb | 0) == ($__ke | 0);
 $9 = ($__kb | 0) == ($__ke | 0);
 $__indx$0 = 0;
 $__n_does_match$2 = $__n_does_match$0$lcssa;
 $__n_might_match$2 = $__n_might_match$0$lcssa;
 L17 : while (1) {
  $24 = HEAP32[$__b >> 2] | 0;
  do if (!$24) $50 = 1; else {
   $27 = HEAP32[$24 + 12 >> 2] | 0;
   if (($27 | 0) == (HEAP32[$24 + 16 >> 2] | 0)) $$0$i$i$i$i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i$i$i3 = HEAP32[$27 >> 2] | 0;
   if (($$0$i$i$i$i3 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $50 = 1;
    break;
   } else {
    $50 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $37 = HEAP32[$__e >> 2] | 0;
  if (!$37) {
   $$pre$i3$i$i = 0;
   $51 = 1;
  } else {
   $40 = HEAP32[$37 + 12 >> 2] | 0;
   if (($40 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i1$i$i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i1$i$i9 = HEAP32[$40 >> 2] | 0;
   if (($$0$i$i1$i$i9 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    $$pre$i3$i$i = 0;
    $51 = 1;
   } else {
    $$pre$i3$i$i = $37;
    $51 = 0;
   }
  }
  $54 = HEAP32[$__b >> 2] | 0;
  if (!(($__n_might_match$2 | 0) != 0 & ($50 ^ $51))) {
   $$lcssa = $54;
   $$pre$i3$i$i$lcssa = $$pre$i3$i$i;
   break;
  }
  $56 = HEAP32[$54 + 12 >> 2] | 0;
  if (($56 | 0) == (HEAP32[$54 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$54 >> 2] | 0) + 36 >> 2] & 127]($54) | 0; else $$0$i$i = HEAP32[$56 >> 2] | 0;
  if ($__case_sensitive) $__c$0 = $$0$i$i; else $__c$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 31]($__ct, $$0$i$i) | 0;
  $69 = $__indx$0 + 1 | 0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;
   $__n_does_match$3$lcssa = $__n_does_match$2;
   $__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;
   $__ky1$039 = $__kb;
   $__n_does_match$335 = $__n_does_match$2;
   $__n_might_match$334 = $__n_might_match$2;
   $__st$136 = $__status$0;
   while (1) {
    do if ((HEAP8[$__st$136 >> 0] | 0) == 1) {
     if (!(HEAP8[$__ky1$039 >> 0] & 1)) $79 = $__ky1$039 + 4 | 0; else $79 = HEAP32[$__ky1$039 + 8 >> 2] | 0;
     $80 = HEAP32[$79 + ($__indx$0 << 2) >> 2] | 0;
     if ($__case_sensitive) $__kc$0 = $80; else $__kc$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 31]($__ct, $80) | 0;
     if (($__c$0 | 0) != ($__kc$0 | 0)) {
      HEAP8[$__st$136 >> 0] = 0;
      $__consume$1$off0 = $__consume$0$off038;
      $__n_does_match$4 = $__n_does_match$335;
      $__n_might_match$4 = $__n_might_match$334 + -1 | 0;
      break;
     }
     $86 = HEAP8[$__ky1$039 >> 0] | 0;
     if (!($86 & 1)) $94 = ($86 & 255) >>> 1; else $94 = HEAP32[$__ky1$039 + 4 >> 2] | 0;
     if (($94 | 0) == ($69 | 0)) {
      HEAP8[$__st$136 >> 0] = 2;
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$335 + 1 | 0;
      $__n_might_match$4 = $__n_might_match$334 + -1 | 0;
     } else {
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$335;
      $__n_might_match$4 = $__n_might_match$334;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off038;
     $__n_does_match$4 = $__n_does_match$335;
     $__n_might_match$4 = $__n_might_match$334;
    } while (0);
    $__ky1$039 = $__ky1$039 + 12 | 0;
    if (($__ky1$039 | 0) == ($__ke | 0)) {
     $__consume$0$off0$lcssa = $__consume$1$off0;
     $__n_does_match$3$lcssa = $__n_does_match$4;
     $__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;
     $__n_does_match$335 = $__n_does_match$4;
     $__n_might_match$334 = $__n_might_match$4;
     $__st$136 = $__st$136 + 1 | 0;
    }
   }
  }
  if (!$__consume$0$off0$lcssa) {
   $__indx$0 = $69;
   $__n_does_match$2 = $__n_does_match$3$lcssa;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $101 = HEAP32[$__b >> 2] | 0;
  $102 = $101 + 12 | 0;
  $103 = HEAP32[$102 >> 2] | 0;
  if (($103 | 0) == (HEAP32[$101 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$101 >> 2] | 0) + 40 >> 2] & 127]($101) | 0; else HEAP32[$102 >> 2] = $103 + 4;
  if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 < 2 | $9) {
   $__indx$0 = $69;
   $__n_does_match$2 = $__n_does_match$3$lcssa;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;
   $__n_does_match$544 = $__n_does_match$3$lcssa;
   $__st$245 = $__status$0;
  }
  while (1) {
   if ((HEAP8[$__st$245 >> 0] | 0) == 2) {
    $115 = HEAP8[$__ky2$046 >> 0] | 0;
    if (!($115 & 1)) $123 = ($115 & 255) >>> 1; else $123 = HEAP32[$__ky2$046 + 4 >> 2] | 0;
    if (($123 | 0) == ($69 | 0)) $__n_does_match$6 = $__n_does_match$544; else {
     HEAP8[$__st$245 >> 0] = 0;
     $__n_does_match$6 = $__n_does_match$544 + -1 | 0;
    }
   } else $__n_does_match$6 = $__n_does_match$544;
   $125 = $__ky2$046 + 12 | 0;
   if (($125 | 0) == ($__ke | 0)) {
    $__indx$0 = $69;
    $__n_does_match$2 = $__n_does_match$6;
    $__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $125;
    $__n_does_match$544 = $__n_does_match$6;
    $__st$245 = $__st$245 + 1 | 0;
   }
  }
 }
 do if (!$$lcssa) $163 = 1; else {
  $130 = HEAP32[$$lcssa + 12 >> 2] | 0;
  if (($130 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$130 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $163 = 1;
   break;
  } else {
   $163 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i$lcssa) label = 72; else {
  $142 = HEAP32[$$pre$i3$i$i$lcssa + 12 >> 2] | 0;
  if (($142 | 0) == (HEAP32[$$pre$i3$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i$lcssa) | 0; else $$0$i$i1$i$i = HEAP32[$142 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 72;
   break;
  } else if ($163) break; else {
   label = 74;
   break;
  }
 } while (0);
 if ((label | 0) == 72) if ($163) label = 74;
 if ((label | 0) == 74) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 L107 : do if (($__kb | 0) == ($__ke | 0)) label = 78; else {
  $$033 = $__kb;
  $__st$332 = $__status$0;
  while (1) {
   if ((HEAP8[$__st$332 >> 0] | 0) == 2) {
    $$025 = $$033;
    break L107;
   }
   $$033 = $$033 + 12 | 0;
   if (($$033 | 0) == ($__ke | 0)) {
    label = 78;
    break;
   } else $__st$332 = $__st$332 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 78) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$025 = $__ke;
 }
 _free($162);
 STACKTOP = sp;
 return $$025 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0, $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $118 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $139 = 0, $146 = 0, $157 = 0, $167 = 0, $170 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $3 = 0, $4 = 0, $41 = 0, $47 = 0, $48 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $79 = 0, $8 = 0, $9 = 0, $90 = 0, $92 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $3;
 $4 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9444) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
 HEAP32[$__err >> 2] = 0;
 $6 = HEAP32[$__b >> 2] | 0;
 L1 : do if (($__fmtb | 0) == ($__fmte | 0)) $$pre$i$i$i22 = $6; else {
  $$0$ph89 = $__fmtb;
  $8 = $6;
  L2 : while (1) {
   $9 = $8;
   if (!$8) {
    $126 = 0;
    $183 = 1;
    $58 = $9;
   } else {
    $11 = HEAP32[$8 + 12 >> 2] | 0;
    if (($11 | 0) == (HEAP32[$8 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] & 127]($8) | 0; else $$0$i$i$i$i = HEAP32[$11 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $126 = 0;
     $183 = 1;
     $58 = 0;
    } else {
     $126 = $8;
     $183 = 0;
     $58 = $9;
    }
   }
   $21 = HEAP32[$__e >> 2] | 0;
   $23 = $21;
   do if (!$21) {
    $$ph = $23;
    label = 14;
   } else {
    $25 = HEAP32[$21 + 12 >> 2] | 0;
    if (($25 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i1$i$i = HEAP32[$25 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$ph = 0;
     label = 14;
     break;
    } else if ($183) {
     $184 = $21;
     $59 = $23;
     break;
    } else {
     $$lcssa = $126;
     label = 16;
     break L2;
    }
   } while (0);
   if ((label | 0) == 14) {
    label = 0;
    if ($183) {
     $$lcssa = $126;
     label = 16;
     break;
    } else {
     $184 = 0;
     $59 = $$ph;
    }
   }
   L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 31]($4, HEAP32[$$0$ph89 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    $41 = $$0$ph89 + 4 | 0;
    if (($41 | 0) == ($__fmte | 0)) {
     $$lcssa97 = $126;
     label = 19;
     break L2;
    }
    $47 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 31]($4, HEAP32[$41 >> 2] | 0, 0) | 0;
    switch ($47 << 24 >> 24) {
    case 48:
    case 69:
     {
      $48 = $$0$ph89 + 8 | 0;
      if (($48 | 0) == ($__fmte | 0)) {
       $$lcssa98 = $126;
       label = 22;
       break L2;
      }
      $62 = $41;
      $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 31]($4, HEAP32[$48 >> 2] | 0, 0) | 0;
      $__opt$0 = $47;
      break;
     }
    default:
     {
      $62 = $$0$ph89;
      $__cmd$0 = $47;
      $__opt$0 = 0;
     }
    }
    $57 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
    HEAP32[$1 >> 2] = $58;
    HEAP32[$2 >> 2] = $59;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$__b >> 2] = FUNCTION_TABLE_iiiiiiiii[$57 & 15]($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0) | 0;
    $$0$ph$be = $62 + 8 | 0;
   } else {
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 31]($4, 8192, HEAP32[$$0$ph89 >> 2] | 0) | 0) $$0$pn = $$0$ph89; else {
     $125 = $126 + 12 | 0;
     $127 = HEAP32[$125 >> 2] | 0;
     $128 = $126 + 16 | 0;
     if (($127 | 0) == (HEAP32[$128 >> 2] | 0)) $$0$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$126 >> 2] | 0) + 36 >> 2] & 127]($126) | 0; else $$0$i$i17 = HEAP32[$127 >> 2] | 0;
     $139 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $$0$i$i17) | 0;
     if (($139 | 0) != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, HEAP32[$$0$ph89 >> 2] | 0) | 0)) {
      label = 59;
      break L2;
     }
     $146 = HEAP32[$125 >> 2] | 0;
     if (($146 | 0) == (HEAP32[$128 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$126 >> 2] | 0) + 40 >> 2] & 127]($126) | 0; else HEAP32[$125 >> 2] = $146 + 4;
     $$0$ph$be = $$0$ph89 + 4 | 0;
     break;
    }
    while (1) {
     $$2 = $$0$pn + 4 | 0;
     if (($$2 | 0) == ($__fmte | 0)) {
      $$2$lcssa = $__fmte;
      break;
     }
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 31]($4, 8192, HEAP32[$$2 >> 2] | 0) | 0) $$0$pn = $$2; else {
      $$2$lcssa = $$2;
      break;
     }
    }
    $$pre$i$i$i7 = $126;
    $$pre$i3$i$i13 = $184;
    $90 = $184;
    while (1) {
     if (!$$pre$i$i$i7) {
      $102 = 1;
      $104 = 0;
     } else {
      $79 = HEAP32[$$pre$i$i$i7 + 12 >> 2] | 0;
      if (($79 | 0) == (HEAP32[$$pre$i$i$i7 + 16 >> 2] | 0)) $$0$i$i$i$i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i7 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i7) | 0; else $$0$i$i$i$i5 = HEAP32[$79 >> 2] | 0;
      if (($$0$i$i$i$i5 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $102 = 1;
       $104 = 0;
      } else {
       $102 = 0;
       $104 = $$pre$i$i$i7;
      }
     }
     do if (!$90) {
      $$pre$i3$i$i1345 = $$pre$i3$i$i13;
      label = 42;
     } else {
      $92 = HEAP32[$90 + 12 >> 2] | 0;
      if (($92 | 0) == (HEAP32[$90 + 16 >> 2] | 0)) $$0$i$i1$i$i11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$90 >> 2] | 0) + 36 >> 2] & 127]($90) | 0; else $$0$i$i1$i$i11 = HEAP32[$92 >> 2] | 0;
      if (($$0$i$i1$i$i11 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i3$i$i1345 = 0;
       label = 42;
       break;
      } else if ($102 ^ ($$pre$i3$i$i13 | 0) == 0) {
       $$pre$i3$i$i1344 = $$pre$i3$i$i13;
       $185 = $$pre$i3$i$i13;
       break;
      } else {
       $$0$ph$be = $$2$lcssa;
       break L24;
      }
     } while (0);
     if ((label | 0) == 42) {
      label = 0;
      if ($102) {
       $$0$ph$be = $$2$lcssa;
       break L24;
      } else {
       $$pre$i3$i$i1344 = $$pre$i3$i$i1345;
       $185 = 0;
      }
     }
     $103 = $104 + 12 | 0;
     $105 = HEAP32[$103 >> 2] | 0;
     $106 = $104 + 16 | 0;
     if (($105 | 0) == (HEAP32[$106 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$104 >> 2] | 0) + 36 >> 2] & 127]($104) | 0; else $$0$i$i = HEAP32[$105 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 31]($4, 8192, $$0$i$i) | 0)) {
      $$0$ph$be = $$2$lcssa;
      break L24;
     }
     $118 = HEAP32[$103 >> 2] | 0;
     if (($118 | 0) == (HEAP32[$106 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$104 >> 2] | 0) + 40 >> 2] & 127]($104) | 0;
      $$pre$i$i$i7 = $104;
      $$pre$i3$i$i13 = $$pre$i3$i$i1344;
      $90 = $185;
      continue;
     } else {
      HEAP32[$103 >> 2] = $118 + 4;
      $$pre$i$i$i7 = $104;
      $$pre$i3$i$i13 = $$pre$i3$i$i1344;
      $90 = $185;
      continue;
     }
    }
   } while (0);
   $65 = HEAP32[$__b >> 2] | 0;
   if (($$0$ph$be | 0) != ($__fmte | 0) & (HEAP32[$__err >> 2] | 0) == 0) {
    $$0$ph89 = $$0$ph$be;
    $8 = $65;
   } else {
    $$pre$i$i$i22 = $65;
    break L1;
   }
  }
  if ((label | 0) == 16) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = $$lcssa;
   break;
  } else if ((label | 0) == 19) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = $$lcssa97;
   break;
  } else if ((label | 0) == 22) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = $$lcssa98;
   break;
  } else if ((label | 0) == 59) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = HEAP32[$__b >> 2] | 0;
   break;
  }
 } while (0);
 if (!$$pre$i$i$i22) {
  $182 = 0;
  $186 = 1;
 } else {
  $157 = HEAP32[$$pre$i$i$i22 + 12 >> 2] | 0;
  if (($157 | 0) == (HEAP32[$$pre$i$i$i22 + 16 >> 2] | 0)) $$0$i$i$i$i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i22 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i22) | 0; else $$0$i$i$i$i20 = HEAP32[$157 >> 2] | 0;
  if (($$0$i$i$i$i20 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $182 = 0;
   $186 = 1;
  } else {
   $182 = $$pre$i$i$i22;
   $186 = 0;
  }
 }
 $167 = HEAP32[$__e >> 2] | 0;
 do if (!$167) label = 72; else {
  $170 = HEAP32[$167 + 12 >> 2] | 0;
  if (($170 | 0) == (HEAP32[$167 + 16 >> 2] | 0)) $$0$i$i1$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$167 >> 2] | 0) + 36 >> 2] & 127]($167) | 0; else $$0$i$i1$i$i26 = HEAP32[$170 >> 2] | 0;
  if (($$0$i$i1$i$i26 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 72;
   break;
  } else if ($186) break; else {
   label = 74;
   break;
  }
 } while (0);
 if ((label | 0) == 72) if ($186) label = 74;
 if ((label | 0) == 74) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return $182 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $0 = 0, $1 = 0, $10 = 0, $107 = 0, $108 = 0, $109 = 0, $125 = 0, $132 = 0, $133 = 0, $134 = 0, $147 = 0, $154 = 0, $174 = 0, $175 = 0, $176 = 0, $190 = 0, $191 = 0, $192 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $4 = 0, $42 = 0, $48 = 0, $49 = 0, $5 = 0, $58 = 0, $59 = 0, $60 = 0, $63 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $75 = 0, $9 = 0, $92 = 0, $93 = 0, $95 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $3;
 $4 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
 HEAP32[$__err >> 2] = 0;
 $5 = $4 + 8 | 0;
 $7 = HEAP32[$__b >> 2] | 0;
 L1 : do if (($__fmtb | 0) == ($__fmte | 0)) $$pre$i$i$i8 = $7; else {
  $$0$ph86 = $__fmtb;
  $9 = $7;
  L2 : while (1) {
   $10 = $9;
   if (!$9) {
    $22 = 0;
    $59 = $10;
   } else if ((HEAP32[$9 + 12 >> 2] | 0) == (HEAP32[$9 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 36 >> 2] & 127]($9) | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $22 = 0;
    $59 = 0;
   } else {
    $22 = $9;
    $59 = $10;
   } else {
    $22 = $9;
    $59 = $10;
   }
   $21 = ($22 | 0) == 0;
   $23 = HEAP32[$__e >> 2] | 0;
   $25 = $23;
   do if (!$23) {
    $190 = $25;
    label = 11;
   } else {
    if ((HEAP32[$23 + 12 >> 2] | 0) == (HEAP32[$23 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$23 >> 2] | 0) + 36 >> 2] & 127]($23) | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $190 = 0;
     label = 11;
     break;
    }
    if ($21) {
     $191 = $23;
     $60 = $25;
    } else {
     $$lcssa = $22;
     label = 12;
     break L2;
    }
   } while (0);
   if ((label | 0) == 11) {
    label = 0;
    if ($21) {
     $$lcssa = $22;
     label = 12;
     break;
    } else {
     $191 = 0;
     $60 = $190;
    }
   }
   L18 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 31]($4, HEAP8[$$0$ph86 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    $42 = $$0$ph86 + 1 | 0;
    if (($42 | 0) == ($__fmte | 0)) {
     $$lcssa94 = $22;
     label = 15;
     break L2;
    }
    $48 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 31]($4, HEAP8[$42 >> 0] | 0, 0) | 0;
    switch ($48 << 24 >> 24) {
    case 48:
    case 69:
     {
      $49 = $$0$ph86 + 2 | 0;
      if (($49 | 0) == ($__fmte | 0)) {
       $$lcssa95 = $22;
       label = 18;
       break L2;
      }
      $63 = $42;
      $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 31]($4, HEAP8[$49 >> 0] | 0, 0) | 0;
      $__opt$0 = $48;
      break;
     }
    default:
     {
      $63 = $$0$ph86;
      $__cmd$0 = $48;
      $__opt$0 = 0;
     }
    }
    $58 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
    HEAP32[$1 >> 2] = $59;
    HEAP32[$2 >> 2] = $60;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$__b >> 2] = FUNCTION_TABLE_iiiiiiiii[$58 & 15]($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0) | 0;
    $$0$ph$be = $63 + 2 | 0;
   } else {
    $67 = HEAP8[$$0$ph86 >> 0] | 0;
    if ($67 << 24 >> 24 > -1) {
     $69 = HEAP32[$5 >> 2] | 0;
     if (HEAP16[$69 + ($67 << 24 >> 24 << 1) >> 1] & 8192) {
      $$0$pn = $$0$ph86;
      while (1) {
       $$2 = $$0$pn + 1 | 0;
       if (($$2 | 0) == ($__fmte | 0)) {
        $$2$lcssa = $__fmte;
        break;
       }
       $75 = HEAP8[$$2 >> 0] | 0;
       if ($75 << 24 >> 24 <= -1) {
        $$2$lcssa = $$2;
        break;
       }
       if (!(HEAP16[$69 + ($75 << 24 >> 24 << 1) >> 1] & 8192)) {
        $$2$lcssa = $$2;
        break;
       } else $$0$pn = $$2;
      }
      $$pre$i$i$i17 = $22;
      $$pre$i2$i$i21 = $191;
      $95 = $191;
      while (1) {
       if (!$$pre$i$i$i17) $93 = 0; else if ((HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $93 = 0;
       } else $93 = $$pre$i$i$i17; else $93 = $$pre$i$i$i17;
       $92 = ($93 | 0) == 0;
       do if (!$95) {
        $$pre$i2$i$i2140 = $$pre$i2$i$i21;
        label = 37;
       } else {
        if ((HEAP32[$95 + 12 >> 2] | 0) != (HEAP32[$95 + 16 >> 2] | 0)) if ($92) {
         $$pre$i2$i$i2139 = $$pre$i2$i$i21;
         $192 = $95;
         break;
        } else {
         $$0$ph$be = $$2$lcssa;
         break L18;
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 127]($95) | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i2$i$i2140 = 0;
         label = 37;
         break;
        } else if ($92 ^ ($$pre$i2$i$i21 | 0) == 0) {
         $$pre$i2$i$i2139 = $$pre$i2$i$i21;
         $192 = $$pre$i2$i$i21;
         break;
        } else {
         $$0$ph$be = $$2$lcssa;
         break L18;
        }
       } while (0);
       if ((label | 0) == 37) {
        label = 0;
        if ($92) {
         $$0$ph$be = $$2$lcssa;
         break L18;
        } else {
         $$pre$i2$i$i2139 = $$pre$i2$i$i2140;
         $192 = 0;
        }
       }
       $107 = $93 + 12 | 0;
       $108 = HEAP32[$107 >> 2] | 0;
       $109 = $93 + 16 | 0;
       if (($108 | 0) == (HEAP32[$109 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0; else $$0$i$i = HEAPU8[$108 >> 0] | 0;
       if (($$0$i$i & 255) << 24 >> 24 <= -1) {
        $$0$ph$be = $$2$lcssa;
        break L18;
       }
       if (!(HEAP16[(HEAP32[$5 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
        $$0$ph$be = $$2$lcssa;
        break L18;
       }
       $125 = HEAP32[$107 >> 2] | 0;
       if (($125 | 0) == (HEAP32[$109 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 40 >> 2] & 127]($93) | 0;
        $$pre$i$i$i17 = $93;
        $$pre$i2$i$i21 = $$pre$i2$i$i2139;
        $95 = $192;
        continue;
       } else {
        HEAP32[$107 >> 2] = $125 + 1;
        $$pre$i$i$i17 = $93;
        $$pre$i2$i$i21 = $$pre$i2$i$i2139;
        $95 = $192;
        continue;
       }
      }
     }
    }
    $132 = $22 + 12 | 0;
    $133 = HEAP32[$132 >> 2] | 0;
    $134 = $22 + 16 | 0;
    if (($133 | 0) == (HEAP32[$134 >> 2] | 0)) $$0$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 36 >> 2] & 127]($22) | 0; else $$0$i$i26 = HEAPU8[$133 >> 0] | 0;
    $147 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 31]($4, $$0$i$i26 & 255) | 0;
    if ($147 << 24 >> 24 != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 31]($4, HEAP8[$$0$ph86 >> 0] | 0) | 0) << 24 >> 24) {
     label = 55;
     break L2;
    }
    $154 = HEAP32[$132 >> 2] | 0;
    if (($154 | 0) == (HEAP32[$134 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 40 >> 2] & 127]($22) | 0; else HEAP32[$132 >> 2] = $154 + 1;
    $$0$ph$be = $$0$ph86 + 1 | 0;
   } while (0);
   $66 = HEAP32[$__b >> 2] | 0;
   if (($$0$ph$be | 0) != ($__fmte | 0) & (HEAP32[$__err >> 2] | 0) == 0) {
    $$0$ph86 = $$0$ph$be;
    $9 = $66;
   } else {
    $$pre$i$i$i8 = $66;
    break L1;
   }
  }
  if ((label | 0) == 12) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = $$lcssa;
   break;
  } else if ((label | 0) == 15) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = $$lcssa94;
   break;
  } else if ((label | 0) == 18) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = $$lcssa95;
   break;
  } else if ((label | 0) == 55) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = HEAP32[$__b >> 2] | 0;
   break;
  }
 } while (0);
 if (!$$pre$i$i$i8) $175 = 0; else if ((HEAP32[$$pre$i$i$i8 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i8 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i8 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i8) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $175 = 0;
 } else $175 = $$pre$i$i$i8; else $175 = $$pre$i$i$i8;
 $174 = ($175 | 0) == 0;
 $176 = HEAP32[$__e >> 2] | 0;
 do if (!$176) label = 65; else {
  if ((HEAP32[$176 + 12 >> 2] | 0) == (HEAP32[$176 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$176 >> 2] | 0) + 36 >> 2] & 127]($176) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 65;
   break;
  }
  if (!$174) label = 66;
 } while (0);
 if ((label | 0) == 65) if ($174) label = 66;
 if ((label | 0) == 66) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return $175 | 0;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0$i$i = 0, $$021 = 0, $$033 = 0, $$lcssa = 0, $$lcssa59 = 0, $$pre$i2$i$i = 0, $$pre$i2$i$i$lcssa = 0, $10 = 0, $102 = 0, $103 = 0, $104 = 0, $116 = 0, $124 = 0, $126 = 0, $140 = 0, $141 = 0, $162 = 0, $18 = 0, $24 = 0, $3 = 0, $36 = 0, $37 = 0, $38 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $65 = 0, $70 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $9 = 0, $95 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off038 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$052 = 0, $__ky1$039 = 0, $__ky2$046 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$050 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$335 = 0, $__n_does_match$4 = 0, $__n_does_match$544 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$049 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$334 = 0, $__n_might_match$4 = 0, $__st$051 = 0, $__st$136 = 0, $__st$245 = 0, $__st$332 = 0, $__statbuf = 0, $__status$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) __ZSt17__throw_bad_allocv(); else {
   $162 = $5;
   $__status$0 = $5;
  }
 } else {
  $162 = 0;
  $__status$0 = $__statbuf;
 }
 if (($__kb | 0) == ($__ke | 0)) {
  $__n_does_match$0$lcssa = 0;
  $__n_might_match$0$lcssa = $3;
 } else {
  $__ky$052 = $__kb;
  $__n_does_match$050 = 0;
  $__n_might_match$049 = $3;
  $__st$051 = $__status$0;
  while (1) {
   $10 = HEAP8[$__ky$052 >> 0] | 0;
   if (!($10 & 1)) $18 = ($10 & 255) >>> 1; else $18 = HEAP32[$__ky$052 + 4 >> 2] | 0;
   if (!$18) {
    HEAP8[$__st$051 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$050 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$049 + -1 | 0;
   } else {
    HEAP8[$__st$051 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$050;
    $__n_might_match$1 = $__n_might_match$049;
   }
   $__ky$052 = $__ky$052 + 12 | 0;
   if (($__ky$052 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$1;
    $__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__n_does_match$050 = $__n_does_match$1;
    $__n_might_match$049 = $__n_might_match$1;
    $__st$051 = $__st$051 + 1 | 0;
   }
  }
 }
 $8 = ($__kb | 0) == ($__ke | 0);
 $9 = ($__kb | 0) == ($__ke | 0);
 $__indx$0 = 0;
 $__n_does_match$2 = $__n_does_match$0$lcssa;
 $__n_might_match$2 = $__n_might_match$0$lcssa;
 L17 : while (1) {
  $24 = HEAP32[$__b >> 2] | 0;
  do if (!$24) $37 = 0; else if ((HEAP32[$24 + 12 >> 2] | 0) == (HEAP32[$24 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $37 = 0;
   break;
  } else {
   $37 = HEAP32[$__b >> 2] | 0;
   break;
  } else $37 = $24; while (0);
  $36 = ($37 | 0) == 0;
  $38 = HEAP32[$__e >> 2] | 0;
  if (!$38) $$pre$i2$i$i = 0; else if ((HEAP32[$38 + 12 >> 2] | 0) == (HEAP32[$38 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$38 >> 2] | 0) + 36 >> 2] & 127]($38) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   $$pre$i2$i$i = 0;
  } else $$pre$i2$i$i = $38; else $$pre$i2$i$i = $38;
  $50 = ($$pre$i2$i$i | 0) == 0;
  $53 = HEAP32[$__b >> 2] | 0;
  if (!(($__n_might_match$2 | 0) != 0 & ($36 ^ $50))) {
   $$lcssa = $50;
   $$lcssa59 = $53;
   $$pre$i2$i$i$lcssa = $$pre$i2$i$i;
   break;
  }
  $55 = HEAP32[$53 + 12 >> 2] | 0;
  if (($55 | 0) == (HEAP32[$53 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 127]($53) | 0; else $$0$i$i = HEAPU8[$55 >> 0] | 0;
  $65 = $$0$i$i & 255;
  if ($__case_sensitive) $__c$0 = $65; else $__c$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, $65) | 0;
  $70 = $__indx$0 + 1 | 0;
  if ($8) {
   $__consume$0$off0$lcssa = 0;
   $__n_does_match$3$lcssa = $__n_does_match$2;
   $__n_might_match$3$lcssa = $__n_might_match$2;
  } else {
   $__consume$0$off038 = 0;
   $__ky1$039 = $__kb;
   $__n_does_match$335 = $__n_does_match$2;
   $__n_might_match$334 = $__n_might_match$2;
   $__st$136 = $__status$0;
   while (1) {
    do if ((HEAP8[$__st$136 >> 0] | 0) == 1) {
     if (!(HEAP8[$__ky1$039 >> 0] & 1)) $80 = $__ky1$039 + 1 | 0; else $80 = HEAP32[$__ky1$039 + 8 >> 2] | 0;
     $81 = HEAP8[$80 + $__indx$0 >> 0] | 0;
     if ($__case_sensitive) $__kc$0 = $81; else $__kc$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, $81) | 0;
     if ($__c$0 << 24 >> 24 != $__kc$0 << 24 >> 24) {
      HEAP8[$__st$136 >> 0] = 0;
      $__consume$1$off0 = $__consume$0$off038;
      $__n_does_match$4 = $__n_does_match$335;
      $__n_might_match$4 = $__n_might_match$334 + -1 | 0;
      break;
     }
     $87 = HEAP8[$__ky1$039 >> 0] | 0;
     if (!($87 & 1)) $95 = ($87 & 255) >>> 1; else $95 = HEAP32[$__ky1$039 + 4 >> 2] | 0;
     if (($95 | 0) == ($70 | 0)) {
      HEAP8[$__st$136 >> 0] = 2;
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$335 + 1 | 0;
      $__n_might_match$4 = $__n_might_match$334 + -1 | 0;
     } else {
      $__consume$1$off0 = 1;
      $__n_does_match$4 = $__n_does_match$335;
      $__n_might_match$4 = $__n_might_match$334;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off038;
     $__n_does_match$4 = $__n_does_match$335;
     $__n_might_match$4 = $__n_might_match$334;
    } while (0);
    $__ky1$039 = $__ky1$039 + 12 | 0;
    if (($__ky1$039 | 0) == ($__ke | 0)) {
     $__consume$0$off0$lcssa = $__consume$1$off0;
     $__n_does_match$3$lcssa = $__n_does_match$4;
     $__n_might_match$3$lcssa = $__n_might_match$4;
     break;
    } else {
     $__consume$0$off038 = $__consume$1$off0;
     $__n_does_match$335 = $__n_does_match$4;
     $__n_might_match$334 = $__n_might_match$4;
     $__st$136 = $__st$136 + 1 | 0;
    }
   }
  }
  if (!$__consume$0$off0$lcssa) {
   $__indx$0 = $70;
   $__n_does_match$2 = $__n_does_match$3$lcssa;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  }
  $102 = HEAP32[$__b >> 2] | 0;
  $103 = $102 + 12 | 0;
  $104 = HEAP32[$103 >> 2] | 0;
  if (($104 | 0) == (HEAP32[$102 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$102 >> 2] | 0) + 40 >> 2] & 127]($102) | 0; else HEAP32[$103 >> 2] = $104 + 1;
  if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 < 2 | $9) {
   $__indx$0 = $70;
   $__n_does_match$2 = $__n_does_match$3$lcssa;
   $__n_might_match$2 = $__n_might_match$3$lcssa;
   continue;
  } else {
   $__ky2$046 = $__kb;
   $__n_does_match$544 = $__n_does_match$3$lcssa;
   $__st$245 = $__status$0;
  }
  while (1) {
   if ((HEAP8[$__st$245 >> 0] | 0) == 2) {
    $116 = HEAP8[$__ky2$046 >> 0] | 0;
    if (!($116 & 1)) $124 = ($116 & 255) >>> 1; else $124 = HEAP32[$__ky2$046 + 4 >> 2] | 0;
    if (($124 | 0) == ($70 | 0)) $__n_does_match$6 = $__n_does_match$544; else {
     HEAP8[$__st$245 >> 0] = 0;
     $__n_does_match$6 = $__n_does_match$544 + -1 | 0;
    }
   } else $__n_does_match$6 = $__n_does_match$544;
   $126 = $__ky2$046 + 12 | 0;
   if (($126 | 0) == ($__ke | 0)) {
    $__indx$0 = $70;
    $__n_does_match$2 = $__n_does_match$6;
    $__n_might_match$2 = $__n_might_match$3$lcssa;
    continue L17;
   } else {
    $__ky2$046 = $126;
    $__n_does_match$544 = $__n_does_match$6;
    $__st$245 = $__st$245 + 1 | 0;
   }
  }
 }
 do if (!$$lcssa59) $141 = 0; else if ((HEAP32[$$lcssa59 + 12 >> 2] | 0) == (HEAP32[$$lcssa59 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa59 >> 2] | 0) + 36 >> 2] & 127]($$lcssa59) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $141 = 0;
  break;
 } else {
  $141 = HEAP32[$__b >> 2] | 0;
  break;
 } else $141 = $$lcssa59; while (0);
 $140 = ($141 | 0) == 0;
 do if ($$lcssa) label = 65; else {
  if ((HEAP32[$$pre$i2$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i$lcssa) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 65;
   break;
  }
  if (!$140) label = 66;
 } while (0);
 if ((label | 0) == 65) if ($140) label = 66;
 if ((label | 0) == 66) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 L95 : do if (($__kb | 0) == ($__ke | 0)) label = 70; else {
  $$033 = $__kb;
  $__st$332 = $__status$0;
  while (1) {
   if ((HEAP8[$__st$332 >> 0] | 0) == 2) {
    $$021 = $$033;
    break L95;
   }
   $$033 = $$033 + 12 | 0;
   if (($$033 | 0) == ($__ke | 0)) {
    label = 70;
    break;
   } else $__st$332 = $__st$332 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 70) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$021 = $__ke;
 }
 _free($162);
 STACKTOP = sp;
 return $$021 | 0;
}

function __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__z) {
 $__root = $__root | 0;
 $__z = $__z | 0;
 var $$0 = 0, $$0$i$i = 0, $$1 = 0, $$2 = 0, $$2$be = 0, $$4 = 0, $$6 = 0, $$cast22 = 0, $$lcssa = 0, $$lcssa116 = 0, $$lcssa131 = 0, $$lcssa35 = 0, $$pre = 0, $$pre41 = 0, $0 = 0, $10 = 0, $100 = 0, $101 = 0, $104 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $123 = 0, $126 = 0, $131 = 0, $132 = 0, $133 = 0, $136 = 0, $139 = 0, $144 = 0, $147 = 0, $148 = 0, $15 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $166 = 0, $171 = 0, $174 = 0, $175 = 0, $178 = 0, $181 = 0, $184 = 0, $189 = 0, $190 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $200 = 0, $203 = 0, $207 = 0, $208 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $35 = 0, $44 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $56 = 0, $59 = 0, $63 = 0, $67 = 0, $73 = 0, $8 = 0, $80 = 0, $87 = 0, $9 = 0, $93 = 0, $97 = 0, $99 = 0, $__w$0 = 0, $__w$1 = 0, $__w$1$be$in = 0, $__w$2 = 0, $__w$2$lcssa = 0, $__w$2112 = 0, $__w$2113 = 0, $__w$3 = 0, $__w$4 = 0, $__w$4123 = 0, $__w$4124 = 0, $__w$5 = 0, label = 0;
 $0 = HEAP32[$__z >> 2] | 0;
 if (!$0) {
  $10 = $__z;
  $8 = 0;
 } else {
  $3 = HEAP32[$__z + 4 >> 2] | 0;
  if (!$3) {
   $10 = $__z;
   $8 = $0;
  } else {
   $$0$i$i = $3;
   while (1) {
    $5 = HEAP32[$$0$i$i >> 2] | 0;
    if (!$5) {
     $10 = $$0$i$i;
     $8 = 0;
     break;
    } else $$0$i$i = $5;
   }
  }
 }
 $9 = $10 + 4 | 0;
 $11 = HEAP32[(($8 | 0) == 0 ? $9 : $10) >> 2] | 0;
 $12 = ($11 | 0) == 0;
 $$pre41 = $10 + 8 | 0;
 if (!$12) HEAP32[$11 + 8 >> 2] = HEAP32[$$pre41 >> 2];
 $15 = HEAP32[$$pre41 >> 2] | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) == ($10 | 0)) {
  HEAP32[$15 >> 2] = $11;
  if (($10 | 0) == ($__root | 0)) {
   $$0 = $11;
   $__w$0 = 0;
  } else {
   $$0 = $__root;
   $__w$0 = HEAP32[$15 + 4 >> 2] | 0;
  }
 } else {
  HEAP32[$15 + 4 >> 2] = $11;
  $$0 = $__root;
  $__w$0 = $16;
 }
 $22 = $10 + 12 | 0;
 $24 = (HEAP8[$22 >> 0] | 0) == 0;
 if (($10 | 0) == ($__z | 0)) $$1 = $$0; else {
  $26 = $__z + 8 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  HEAP32[$$pre41 >> 2] = $27;
  $$cast22 = $27;
  if ((HEAP32[HEAP32[$26 >> 2] >> 2] | 0) == ($__z | 0)) HEAP32[$$cast22 >> 2] = $10; else HEAP32[$$cast22 + 4 >> 2] = $10;
  $32 = HEAP32[$__z >> 2] | 0;
  HEAP32[$10 >> 2] = $32;
  HEAP32[$32 + 8 >> 2] = $10;
  $35 = HEAP32[$__z + 4 >> 2] | 0;
  HEAP32[$9 >> 2] = $35;
  if ($35) HEAP32[$35 + 8 >> 2] = $10;
  HEAP8[$22 >> 0] = HEAP8[$__z + 12 >> 0] | 0;
  $$1 = ($$0 | 0) == ($__z | 0) ? $10 : $$0;
 }
 if ($24 | ($$1 | 0) == 0) return;
 if ($12) {
  $$2 = $$1;
  $__w$1 = $__w$0;
 } else {
  HEAP8[$11 + 12 >> 0] = 1;
  return;
 }
 while (1) {
  $44 = HEAP32[$__w$1 + 8 >> 2] | 0;
  $47 = $__w$1 + 12 | 0;
  $49 = (HEAP8[$47 >> 0] | 0) != 0;
  if ((HEAP32[$44 >> 2] | 0) == ($__w$1 | 0)) {
   if ($49) {
    $$6 = $$2;
    $__w$4 = $__w$1;
   } else {
    HEAP8[$47 >> 0] = 1;
    HEAP8[$44 + 12 >> 0] = 0;
    $131 = HEAP32[$44 >> 2] | 0;
    $132 = $131 + 4 | 0;
    $133 = HEAP32[$132 >> 2] | 0;
    HEAP32[$44 >> 2] = $133;
    if ($133) HEAP32[$133 + 8 >> 2] = $44;
    $136 = $44 + 8 | 0;
    HEAP32[$131 + 8 >> 2] = HEAP32[$136 >> 2];
    $139 = HEAP32[$136 >> 2] | 0;
    if ((HEAP32[$139 >> 2] | 0) == ($44 | 0)) HEAP32[$139 >> 2] = $131; else HEAP32[$139 + 4 >> 2] = $131;
    HEAP32[$132 >> 2] = $44;
    HEAP32[$136 >> 2] = $131;
    $144 = HEAP32[$__w$1 + 4 >> 2] | 0;
    $$6 = ($$2 | 0) == ($144 | 0) ? $__w$1 : $$2;
    $__w$4 = HEAP32[$144 >> 2] | 0;
   }
   $147 = HEAP32[$__w$4 >> 2] | 0;
   $148 = ($147 | 0) == 0;
   if (!$148) if (!(HEAP8[$147 + 12 >> 0] | 0)) {
    $171 = $147;
    $__w$4123 = $__w$4;
    label = 66;
    break;
   }
   $153 = HEAP32[$__w$4 + 4 >> 2] | 0;
   if ($153) if (!(HEAP8[$153 + 12 >> 0] | 0)) {
    label = 65;
    break;
   }
   HEAP8[$__w$4 + 12 >> 0] = 0;
   $160 = HEAP32[$__w$4 + 8 >> 2] | 0;
   $161 = $160 + 12 | 0;
   if (($160 | 0) == ($$6 | 0) | (HEAP8[$161 >> 0] | 0) == 0) {
    $$lcssa131 = $161;
    label = 62;
    break;
   }
   $166 = HEAP32[$160 + 8 >> 2] | 0;
   $$2$be = $$6;
   $__w$1$be$in = (HEAP32[$166 >> 2] | 0) == ($160 | 0) ? $166 + 4 | 0 : $166;
  } else {
   if ($49) {
    $$4 = $$2;
    $__w$2 = $__w$1;
   } else {
    HEAP8[$47 >> 0] = 1;
    HEAP8[$44 + 12 >> 0] = 0;
    $51 = $44 + 4 | 0;
    $52 = HEAP32[$51 >> 2] | 0;
    $53 = HEAP32[$52 >> 2] | 0;
    HEAP32[$51 >> 2] = $53;
    if ($53) HEAP32[$53 + 8 >> 2] = $44;
    $56 = $44 + 8 | 0;
    HEAP32[$52 + 8 >> 2] = HEAP32[$56 >> 2];
    $59 = HEAP32[$56 >> 2] | 0;
    if ((HEAP32[$59 >> 2] | 0) == ($44 | 0)) HEAP32[$59 >> 2] = $52; else HEAP32[$59 + 4 >> 2] = $52;
    HEAP32[$52 >> 2] = $44;
    HEAP32[$56 >> 2] = $52;
    $63 = HEAP32[$__w$1 >> 2] | 0;
    $$4 = ($$2 | 0) == ($63 | 0) ? $__w$1 : $$2;
    $__w$2 = HEAP32[$63 + 4 >> 2] | 0;
   }
   $67 = HEAP32[$__w$2 >> 2] | 0;
   if ($67) if (!(HEAP8[$67 + 12 >> 0] | 0)) {
    $$lcssa = $__w$2;
    $$lcssa116 = $67;
    $__w$2$lcssa = $__w$2;
    label = 36;
    break;
   }
   $73 = HEAP32[$__w$2 + 4 >> 2] | 0;
   if ($73) if (!(HEAP8[$73 + 12 >> 0] | 0)) {
    $207 = $67;
    $208 = $__w$2;
    $93 = $73;
    $__w$2112 = $__w$2;
    label = 37;
    break;
   }
   HEAP8[$__w$2 + 12 >> 0] = 0;
   $80 = HEAP32[$__w$2 + 8 >> 2] | 0;
   if (($80 | 0) == ($$4 | 0)) {
    $$lcssa35 = $$4;
    label = 34;
    break;
   }
   if (!(HEAP8[$80 + 12 >> 0] | 0)) {
    $$lcssa35 = $80;
    label = 34;
    break;
   }
   $87 = HEAP32[$80 + 8 >> 2] | 0;
   $$2$be = $$4;
   $__w$1$be$in = (HEAP32[$87 >> 2] | 0) == ($80 | 0) ? $87 + 4 | 0 : $87;
  }
  $$2 = $$2$be;
  $__w$1 = HEAP32[$__w$1$be$in >> 2] | 0;
 }
 if ((label | 0) == 34) {
  HEAP8[$$lcssa35 + 12 >> 0] = 1;
  return;
 } else if ((label | 0) == 36) {
  $$pre = HEAP32[$__w$2$lcssa + 4 >> 2] | 0;
  if (!$$pre) {
   $101 = $$lcssa;
   $97 = $$lcssa116;
   $__w$2113 = $__w$2$lcssa;
   label = 38;
  } else {
   $207 = $$lcssa116;
   $208 = $$lcssa;
   $93 = $$pre;
   $__w$2112 = $__w$2$lcssa;
   label = 37;
  }
 } else if ((label | 0) == 62) {
  HEAP8[$$lcssa131 >> 0] = 1;
  return;
 } else if ((label | 0) == 65) if ($148) {
  $__w$4124 = $__w$4;
  label = 67;
 } else {
  $171 = $147;
  $__w$4123 = $__w$4;
  label = 66;
 }
 if ((label | 0) == 37) if (!(HEAP8[$93 + 12 >> 0] | 0)) {
  $117 = $93;
  $__w$3 = $__w$2112;
  label = 44;
 } else {
  $101 = $208;
  $97 = $207;
  $__w$2113 = $__w$2112;
  label = 38;
 } else if ((label | 0) == 66) if (!(HEAP8[$171 + 12 >> 0] | 0)) {
  $194 = $171;
  $__w$5 = $__w$4123;
  label = 73;
 } else {
  $__w$4124 = $__w$4123;
  label = 67;
 }
 if ((label | 0) == 38) {
  HEAP8[$97 + 12 >> 0] = 1;
  HEAP8[$__w$2113 + 12 >> 0] = 0;
  $99 = $97 + 4 | 0;
  $100 = HEAP32[$99 >> 2] | 0;
  HEAP32[$101 >> 2] = $100;
  if ($100) HEAP32[$100 + 8 >> 2] = $__w$2113;
  $104 = $__w$2113 + 8 | 0;
  HEAP32[$97 + 8 >> 2] = HEAP32[$104 >> 2];
  $107 = HEAP32[$104 >> 2] | 0;
  if ((HEAP32[$107 >> 2] | 0) == ($__w$2113 | 0)) HEAP32[$107 >> 2] = $97; else HEAP32[$107 + 4 >> 2] = $97;
  HEAP32[$99 >> 2] = $__w$2113;
  HEAP32[$104 >> 2] = $97;
  $117 = $__w$2113;
  $__w$3 = $97;
  label = 44;
 } else if ((label | 0) == 67) {
  $174 = $__w$4124 + 4 | 0;
  $175 = HEAP32[$174 >> 2] | 0;
  HEAP8[$175 + 12 >> 0] = 1;
  HEAP8[$__w$4124 + 12 >> 0] = 0;
  $178 = HEAP32[$175 >> 2] | 0;
  HEAP32[$174 >> 2] = $178;
  if ($178) HEAP32[$178 + 8 >> 2] = $__w$4124;
  $181 = $__w$4124 + 8 | 0;
  HEAP32[$175 + 8 >> 2] = HEAP32[$181 >> 2];
  $184 = HEAP32[$181 >> 2] | 0;
  if ((HEAP32[$184 >> 2] | 0) == ($__w$4124 | 0)) HEAP32[$184 >> 2] = $175; else HEAP32[$184 + 4 >> 2] = $175;
  HEAP32[$175 >> 2] = $__w$4124;
  HEAP32[$181 >> 2] = $175;
  $194 = $__w$4124;
  $__w$5 = $175;
  label = 73;
 }
 if ((label | 0) == 44) {
  $112 = HEAP32[$__w$3 + 8 >> 2] | 0;
  $113 = $112 + 12 | 0;
  HEAP8[$__w$3 + 12 >> 0] = HEAP8[$113 >> 0] | 0;
  HEAP8[$113 >> 0] = 1;
  HEAP8[$117 + 12 >> 0] = 1;
  $118 = $112 + 4 | 0;
  $119 = HEAP32[$118 >> 2] | 0;
  $120 = HEAP32[$119 >> 2] | 0;
  HEAP32[$118 >> 2] = $120;
  if ($120) HEAP32[$120 + 8 >> 2] = $112;
  $123 = $112 + 8 | 0;
  HEAP32[$119 + 8 >> 2] = HEAP32[$123 >> 2];
  $126 = HEAP32[$123 >> 2] | 0;
  if ((HEAP32[$126 >> 2] | 0) == ($112 | 0)) HEAP32[$126 >> 2] = $119; else HEAP32[$126 + 4 >> 2] = $119;
  HEAP32[$119 >> 2] = $112;
  HEAP32[$123 >> 2] = $119;
  return;
 } else if ((label | 0) == 73) {
  $189 = HEAP32[$__w$5 + 8 >> 2] | 0;
  $190 = $189 + 12 | 0;
  HEAP8[$__w$5 + 12 >> 0] = HEAP8[$190 >> 0] | 0;
  HEAP8[$190 >> 0] = 1;
  HEAP8[$194 + 12 >> 0] = 1;
  $195 = HEAP32[$189 >> 2] | 0;
  $196 = $195 + 4 | 0;
  $197 = HEAP32[$196 >> 2] | 0;
  HEAP32[$189 >> 2] = $197;
  if ($197) HEAP32[$197 + 8 >> 2] = $189;
  $200 = $189 + 8 | 0;
  HEAP32[$195 + 8 >> 2] = HEAP32[$200 >> 2];
  $203 = HEAP32[$200 >> 2] | 0;
  if ((HEAP32[$203 >> 2] | 0) == ($189 | 0)) HEAP32[$203 >> 2] = $195; else HEAP32[$203 + 4 >> 2] = $195;
  HEAP32[$196 >> 2] = $189;
  HEAP32[$200 >> 2] = $195;
  return;
 }
}

function __ZN12dwarf2reader13CallFrameInfo5StartEv($this) {
 $this = $this | 0;
 var $$all_ok$0$off0 = 0, $$lcssa118 = 0, $0 = 0, $1 = 0, $10 = 0, $103 = 0, $11 = 0, $112 = 0, $12 = 0, $120 = 0, $124 = 0, $13 = 0, $135 = 0, $136 = 0, $14 = 0, $140 = 0, $15 = 0, $152 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $162 = 0, $165 = 0, $166 = 0, $17 = 0, $170 = 0, $178 = 0, $18 = 0, $188 = 0, $19 = 0, $192 = 0, $194 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $57 = 0, $59 = 0, $6 = 0, $62 = 0, $69 = 0, $7 = 0, $79 = 0, $8 = 0, $84 = 0, $9 = 0, $92 = 0, $97 = 0, $all_ok$0$off055 = 0, $all_ok$0$off055$lcssa112 = 0, $all_ok$1$off0$ph = 0, $all_ok$1$off0$ph21 = 0, $all_ok$2$off0 = 0, $cie = 0, $cursor$054 = 0, $entry_end$056 = 0, $entry_end$1$ph = 0, $fde = 0, $ok$0 = 0, $ok$1$off0$ph = 0, $state = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $fde = sp + 192 | 0;
 $cie = sp + 88 | 0;
 $state = sp;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $0 + $2 | 0;
 if (($2 | 0) <= 0) {
  $all_ok$2$off0 = 1;
  STACKTOP = sp;
  return $all_ok$2$off0 | 0;
 }
 $5 = $fde + 20 | 0;
 $6 = $fde + 8 | 0;
 $7 = $fde + 24 | 0;
 $8 = $this + 16 | 0;
 $9 = $cie + 44 | 0;
 $10 = $cie + 8 | 0;
 $11 = $cie + 32 | 0;
 $12 = $fde + 32 | 0;
 $13 = $this + 12 | 0;
 $14 = $fde + 40 | 0;
 $15 = $fde + 48 | 0;
 $16 = $cie + 40 | 0;
 $17 = $cie + 68 | 0;
 $18 = $cie + 72 | 0;
 $19 = $this + 8 | 0;
 $20 = $state + 4 | 0;
 $21 = $state + 8 | 0;
 $22 = $state + 16 | 0;
 $23 = $state + 24 | 0;
 $24 = $state + 28 | 0;
 $25 = $state + 32 | 0;
 $26 = $state + 36 | 0;
 $27 = $state + 40 | 0;
 $28 = $state + 44 | 0;
 $29 = $state + 40 | 0;
 $30 = $state + 48 | 0;
 $31 = $state + 52 | 0;
 $32 = $state + 56 | 0;
 $33 = $state + 60 | 0;
 $34 = $state + 56 | 0;
 $35 = $state + 64 | 0;
 $36 = $cie + 16 | 0;
 $37 = $cie + 20 | 0;
 $38 = $state + 48 | 0;
 $39 = $state + 32 | 0;
 $40 = $fde + 16 | 0;
 $41 = $cie + 73 | 0;
 $42 = $cie + 75 | 0;
 $43 = $fde + 56 | 0;
 $44 = $cie + 76 | 0;
 $45 = $cie + 88 | 0;
 $46 = $cie + 80 | 0;
 $all_ok$0$off055 = 1;
 $cursor$054 = $0;
 $entry_end$056 = 0;
 L4 : while (1) {
  $47 = __ZN12dwarf2reader13CallFrameInfo17ReadEntryPrologueEPKcPNS0_5EntryE($this, $cursor$054, $fde) | 0;
  $48 = HEAP32[$5 >> 2] | 0;
  L6 : do if ($47) {
   switch (HEAP32[$6 >> 2] | 0) {
   case 3:
    {
     $$lcssa118 = $48;
     $all_ok$0$off055$lcssa112 = $all_ok$0$off055;
     label = 6;
     break L4;
     break;
    }
   case 2:
    break;
   default:
    {
     $all_ok$1$off0$ph = $all_ok$0$off055;
     $entry_end$1$ph = $48;
     $ok$1$off0$ph = 1;
     break L6;
    }
   }
   $57 = $7;
   $59 = HEAP32[$57 >> 2] | 0;
   $62 = HEAP32[$57 + 4 >> 2] | 0;
   if ($62 >>> 0 > 0 | (($62 | 0) == 0 ? $59 >>> 0 > (HEAP32[$1 >> 2] | 0) >>> 0 : 0)) {
    $69 = HEAP32[$8 >> 2] | 0;
    FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$69 >> 2] | 0) + 16 >> 2] & 31]($69, HEAP32[$fde >> 2] | 0, 0, $59, $62);
    $all_ok$1$off0$ph = $all_ok$0$off055;
    $entry_end$1$ph = $48;
    $ok$1$off0$ph = 0;
    break;
   };
   HEAP32[$9 >> 2] = 0;
   HEAP32[$9 + 4 >> 2] = 0;
   HEAP32[$9 + 8 >> 2] = 0;
   do if (__ZN12dwarf2reader13CallFrameInfo17ReadEntryPrologueEPKcPNS0_5EntryE($this, (HEAP32[$this >> 2] | 0) + $59 | 0, $cie) | 0) {
    if ((HEAP32[$10 >> 2] | 0) != 1) {
     $79 = HEAP32[$8 >> 2] | 0;
     $84 = $7;
     FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$79 >> 2] | 0) + 20 >> 2] & 31]($79, HEAP32[$fde >> 2] | 0, 0, HEAP32[$84 >> 2] | 0, HEAP32[$84 + 4 >> 2] | 0);
     $ok$0 = 0;
     break;
    }
    if (__ZN12dwarf2reader13CallFrameInfo13ReadCIEFieldsEPNS0_3CIEE($this, $cie) | 0) {
     HEAP32[$11 >> 2] = $cie;
     HEAP32[$12 >> 2] = $cie;
     if (__ZN12dwarf2reader13CallFrameInfo13ReadFDEFieldsEPNS0_3FDEE($this, $fde) | 0) {
      $92 = HEAP32[$13 >> 2] | 0;
      $97 = $14;
      $103 = $15;
      if (FUNCTION_TABLE_iiiiiiiiii[HEAP32[(HEAP32[$92 >> 2] | 0) + 8 >> 2] & 1]($92, HEAP32[$fde >> 2] | 0, HEAP32[$97 >> 2] | 0, HEAP32[$97 + 4 >> 2] | 0, HEAP32[$103 >> 2] | 0, HEAP32[$103 + 4 >> 2] | 0, HEAP8[$16 >> 0] | 0, $9, HEAP32[$17 >> 2] | 0) | 0) {
       $112 = HEAP32[$18 >> 2] | 0;
       if (($112 & 255) << 24 >> 24) {
        if (!($112 & 16711680)) $135 = (HEAPU16[$18 >> 1] | 0) >>> 8 & 255; else {
         $120 = HEAP32[$13 >> 2] | 0;
         $124 = $45;
         if (!(FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$120 >> 2] | 0) + 44 >> 2] & 31]($120, HEAP32[$124 >> 2] | 0, HEAP32[$124 + 4 >> 2] | 0, (HEAP32[$46 >> 2] & 128 | 0) != 0) | 0)) {
          $ok$0 = 0;
          break;
         }
         $135 = HEAP8[$41 >> 0] | 0;
        }
        if ($135 << 24 >> 24) {
         $136 = HEAP32[$13 >> 2] | 0;
         $140 = $43;
         if (!(FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$136 >> 2] | 0) + 48 >> 2] & 31]($136, HEAP32[$140 >> 2] | 0, HEAP32[$140 + 4 >> 2] | 0, (HEAP32[$44 >> 2] & 128 | 0) != 0) | 0)) {
          $ok$0 = 0;
          break;
         }
        }
        if (HEAP8[$42 >> 0] | 0) {
         $152 = HEAP32[$13 >> 2] | 0;
         if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$152 >> 2] | 0) + 52 >> 2] & 127]($152) | 0)) {
          $ok$0 = 0;
          break;
         }
        }
       }
       $158 = HEAP32[$13 >> 2] | 0;
       $159 = HEAP32[$8 >> 2] | 0;
       $160 = $14;
       $162 = HEAP32[$160 >> 2] | 0;
       $165 = HEAP32[$160 + 4 >> 2] | 0;
       HEAP32[$state >> 2] = HEAP32[$19 >> 2];
       HEAP32[$20 >> 2] = $158;
       HEAP32[$21 >> 2] = $159;
       $166 = $22;
       HEAP32[$166 >> 2] = $162;
       HEAP32[$166 + 4 >> 2] = $165;
       HEAP32[$25 >> 2] = 0;
       HEAP32[$27 >> 2] = 0;
       HEAP32[$28 >> 2] = 0;
       HEAP32[$26 >> 2] = $29;
       HEAP32[$30 >> 2] = 0;
       HEAP32[$32 >> 2] = 0;
       HEAP32[$33 >> 2] = 0;
       HEAP32[$31 >> 2] = $34;
       HEAP32[$35 >> 2] = 0;
       HEAP32[$35 + 4 >> 2] = 0;
       HEAP32[$35 + 8 >> 2] = 0;
       HEAP32[$35 + 12 >> 2] = 0;
       HEAP32[$35 + 16 >> 2] = 0;
       HEAP32[$35 + 20 >> 2] = 0;
       HEAP32[$23 >> 2] = $cie;
       $170 = HEAP32[$36 >> 2] | 0;
       HEAP32[$24 >> 2] = $170;
       L31 : do if ($170 >>> 0 < (HEAP32[$37 >> 2] | 0) >>> 0) while (1) {
        if (!(__ZN12dwarf2reader13CallFrameInfo5State13DoInstructionEv($state) | 0)) {
         $194 = 0;
         break L31;
        }
        if ((HEAP32[$24 >> 2] | 0) >>> 0 >= (HEAP32[(HEAP32[$23 >> 2] | 0) + 20 >> 2] | 0) >>> 0) {
         label = 27;
         break;
        }
       } else label = 27; while (0);
       L35 : do if ((label | 0) == 27) {
        label = 0;
        __ZN12dwarf2reader13CallFrameInfo7RuleMapaSERKS1_($38, $39) | 0;
        HEAP32[$23 >> 2] = $fde;
        $178 = HEAP32[$40 >> 2] | 0;
        HEAP32[$24 >> 2] = $178;
        if ($178 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0) while (1) {
         if (!(__ZN12dwarf2reader13CallFrameInfo5State13DoInstructionEv($state) | 0)) {
          $194 = 0;
          break L35;
         }
         if ((HEAP32[$24 >> 2] | 0) >>> 0 >= (HEAP32[(HEAP32[$23 >> 2] | 0) + 20 >> 2] | 0) >>> 0) {
          $194 = 1;
          break;
         }
        } else $194 = 1;
       } while (0);
       HEAP8[(HEAP32[$19 >> 2] | 0) + 29 >> 0] = 0;
       $188 = HEAP32[$13 >> 2] | 0;
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[$188 >> 2] | 0) + 40 >> 2] & 127]($188) | 0;
       __ZN12dwarf2reader13CallFrameInfo5StateD2Ev($state);
       $ok$0 = $194;
      } else $ok$0 = 1;
     } else $ok$0 = 0;
    } else $ok$0 = 0;
   } else $ok$0 = 0; while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $all_ok$1$off0$ph = $all_ok$0$off055;
   $entry_end$1$ph = $48;
   $ok$1$off0$ph = $ok$0;
  } else {
   $49 = ($48 | 0) == 0;
   $$all_ok$0$off0 = $all_ok$0$off055 & ($49 ^ 1);
   if ($49) {
    $all_ok$1$off0$ph21 = $$all_ok$0$off0;
    break L4;
   } else {
    $all_ok$1$off0$ph = $$all_ok$0$off0;
    $entry_end$1$ph = $49 ? $entry_end$056 : $48;
    $ok$1$off0$ph = 0;
   }
  } while (0);
  $192 = $all_ok$1$off0$ph & $ok$1$off0$ph;
  if ($entry_end$1$ph >>> 0 < $3 >>> 0) {
   $all_ok$0$off055 = $192;
   $cursor$054 = $entry_end$1$ph;
   $entry_end$056 = $entry_end$1$ph;
  } else {
   $all_ok$2$off0 = $192;
   label = 34;
   break;
  }
 }
 if ((label | 0) == 34) {
  STACKTOP = sp;
  return $all_ok$2$off0 | 0;
 }
 if ((label | 0) == 6) if ($$lcssa118 >>> 0 < $3 >>> 0) {
  $52 = HEAP32[$8 >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$52 >> 2] | 0) + 12 >> 2] & 15]($52, HEAP32[$fde >> 2] | 0, 0);
  $all_ok$1$off0$ph21 = $all_ok$0$off055$lcssa112;
 } else $all_ok$1$off0$ph21 = $all_ok$0$off055$lcssa112;
 $all_ok$2$off0 = $all_ok$1$off0$ph21;
 STACKTOP = sp;
 return $all_ok$2$off0 | 0;
}

function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $124 = 0, $126 = 0, $127 = 0, $129 = 0, $13 = 0, $138 = 0, $142 = 0, $143 = 0, $147 = 0, $149 = 0, $151 = 0, $153 = 0, $158 = 0, $160 = 0, $164 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $173 = 0, $174 = 0, $18 = 0, $2 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $65 = 0, $7 = 0, $71 = 0, $77 = 0, $8 = 0, $82 = 0, $83 = 0, $87 = 0, $89 = 0, $9 = 0, $95 = 0, $97 = 0, $98 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0, $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $scevgep29 = 0, $umax28 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 4 | 0;
 $1 = $__sn + 8 | 0;
 $2 = $__sn + 1 | 0;
 $3 = $__sym + 4 | 0;
 $5 = ($__flags & 512 | 0) == 0;
 $6 = $__sym + 8 | 0;
 $7 = $__sym + 1 | 0;
 $8 = $__ct + 8 | 0;
 $9 = ($__fd | 0) > 0;
 $10 = $__grp + 4 | 0;
 $11 = $__grp + 8 | 0;
 $12 = $__grp + 1 | 0;
 $13 = $__fd + 1 | 0;
 $17 = -2 - $__fd - (($__fd | 0) < 0 ? ~$__fd : -1) | 0;
 $18 = ($__fd | 0) > 0;
 $$062 = $__db;
 $__p$061 = 0;
 while (1) {
  switch (HEAP8[$__pat + $__p$061 >> 0] | 0) {
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$062;
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 31]($__ct, 32) | 0;
    $28 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $28 + 1;
    HEAP8[$28 >> 0] = $27;
    $$2 = $$062;
    break;
   }
  case 3:
   {
    $30 = HEAP8[$__sn >> 0] | 0;
    $32 = ($30 & 1) == 0;
    if (!(($32 ? ($30 & 255) >>> 1 : HEAP32[$0 >> 2] | 0) | 0)) $$2 = $$062; else {
     $40 = HEAP8[($32 ? $2 : HEAP32[$1 >> 2] | 0) >> 0] | 0;
     $41 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $41 + 1;
     HEAP8[$41 >> 0] = $40;
     $$2 = $$062;
    }
    break;
   }
  case 2:
   {
    $43 = HEAP8[$__sym >> 0] | 0;
    $45 = ($43 & 1) == 0;
    $49 = $45 ? ($43 & 255) >>> 1 : HEAP32[$3 >> 2] | 0;
    if ($5 | ($49 | 0) == 0) $$2 = $$062; else {
     $52 = $45 ? $7 : HEAP32[$6 >> 2] | 0;
     $53 = $52 + $49 | 0;
     $54 = HEAP32[$__me >> 2] | 0;
     if (!$49) $$0$i$i9$lcssa = $54; else {
      $$0$i$i958 = $54;
      $57 = $52;
      while (1) {
       HEAP8[$$0$i$i958 >> 0] = HEAP8[$57 >> 0] | 0;
       $57 = $57 + 1 | 0;
       $59 = $$0$i$i958 + 1 | 0;
       if (($57 | 0) == ($53 | 0)) {
        $$0$i$i9$lcssa = $59;
        break;
       } else $$0$i$i958 = $59;
      }
     }
     HEAP32[$__me >> 2] = $$0$i$i9$lcssa;
     $$2 = $$062;
    }
    break;
   }
  case 4:
   {
    $61 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$062 + 1 | 0 : $$062;
    $$$027 = $$$0;
    $63 = HEAP32[$8 >> 2] | 0;
    L15 : do if ($$$0 >>> 0 < $__de >>> 0) {
     $__d$036 = $$$0;
     while (1) {
      $65 = HEAP8[$__d$036 >> 0] | 0;
      if ($65 << 24 >> 24 <= -1) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      if (!(HEAP16[$63 + ($65 << 24 >> 24 << 1) >> 1] & 2048)) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      $71 = $__d$036 + 1 | 0;
      if ($71 >>> 0 < $__de >>> 0) $__d$036 = $71; else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else $__d$0$lcssa = $$$0; while (0);
    $__d$0$lcssa26 = $__d$0$lcssa;
    if ($9) {
     $77 = -2 - $__d$0$lcssa26 - ~($__d$0$lcssa26 >>> 0 > $$$027 >>> 0 ? $$$027 : $__d$0$lcssa26) | 0;
     $umax28 = $17 >>> 0 > $77 >>> 0 ? $17 : $77;
     if ($__d$0$lcssa >>> 0 > $$$0 >>> 0 & $18) {
      $__d$142 = $__d$0$lcssa;
      $__f$043 = $__fd;
      while (1) {
       $__d$142 = $__d$142 + -1 | 0;
       $82 = HEAP8[$__d$142 >> 0] | 0;
       $83 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $83 + 1;
       HEAP8[$83 >> 0] = $82;
       $87 = ($__f$043 | 0) > 1;
       if (!($__d$142 >>> 0 > $$$0 >>> 0 & $87)) {
        $$lcssa = $87;
        break;
       } else $__f$043 = $__f$043 + -1 | 0;
      }
     } else $$lcssa = $18;
     $89 = $13 + $umax28 | 0;
     $scevgep29 = $__d$0$lcssa + ($umax28 + 1) | 0;
     if ($$lcssa) $97 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 31]($__ct, 48) | 0; else $97 = 0;
     $95 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $95 + 1;
     if (($89 | 0) > 0) {
      $98 = $95;
      $__f$146 = $89;
      while (1) {
       HEAP8[$98 >> 0] = $97;
       $101 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $101 + 1;
       if (($__f$146 | 0) > 1) {
        $98 = $101;
        $__f$146 = $__f$146 + -1 | 0;
       } else {
        $$lcssa34 = $101;
        break;
       }
      }
     } else $$lcssa34 = $95;
     HEAP8[$$lcssa34 >> 0] = $__dp;
     $__d$2 = $scevgep29;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $107 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 31]($__ct, 48) | 0;
     $108 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $108 + 1;
     HEAP8[$108 >> 0] = $107;
    } else {
     $110 = HEAP8[$__grp >> 0] | 0;
     $112 = ($110 & 1) == 0;
     if (!(($112 ? ($110 & 255) >>> 1 : HEAP32[$10 >> 2] | 0) | 0)) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($112 ? $12 : HEAP32[$11 >> 2] | 0) >> 0] | 0;
     if (($__d$2 | 0) != ($$$0 | 0)) {
      $__d$351 = $__d$2;
      $__gl$054 = $__gl$0$ph;
      $__ig$053 = 0;
      $__ng$052 = 0;
      while (1) {
       if (($__ng$052 | 0) == ($__gl$054 | 0)) {
        $124 = HEAP32[$__me >> 2] | 0;
        HEAP32[$__me >> 2] = $124 + 1;
        HEAP8[$124 >> 0] = $__ts;
        $126 = $__ig$053 + 1 | 0;
        $127 = HEAP8[$__grp >> 0] | 0;
        $129 = ($127 & 1) == 0;
        if ($126 >>> 0 < ($129 ? ($127 & 255) >>> 1 : HEAP32[$10 >> 2] | 0) >>> 0) {
         $138 = HEAP8[($129 ? $12 : HEAP32[$11 >> 2] | 0) + $126 >> 0] | 0;
         $__gl$1 = $138 << 24 >> 24 == 127 ? -1 : $138 << 24 >> 24;
         $__ig$1 = $126;
         $__ng$1 = 0;
        } else {
         $__gl$1 = $__ng$052;
         $__ig$1 = $126;
         $__ng$1 = 0;
        }
       } else {
        $__gl$1 = $__gl$054;
        $__ig$1 = $__ig$053;
        $__ng$1 = $__ng$052;
       }
       $__d$351 = $__d$351 + -1 | 0;
       $142 = HEAP8[$__d$351 >> 0] | 0;
       $143 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $143 + 1;
       HEAP8[$143 >> 0] = $142;
       if (($__d$351 | 0) == ($$$0 | 0)) break; else {
        $__gl$054 = $__gl$1;
        $__ig$053 = $__ig$1;
        $__ng$052 = $__ng$1 + 1 | 0;
       }
      }
     }
    }
    $147 = HEAP32[$__me >> 2] | 0;
    if (($61 | 0) == ($147 | 0)) $$2 = $$$0; else {
     $149 = $147 + -1 | 0;
     if ($61 >>> 0 < $149 >>> 0) {
      $$01$i$i56 = $61;
      $153 = $149;
      do {
       $151 = HEAP8[$$01$i$i56 >> 0] | 0;
       HEAP8[$$01$i$i56 >> 0] = HEAP8[$153 >> 0] | 0;
       HEAP8[$153 >> 0] = $151;
       $$01$i$i56 = $$01$i$i56 + 1 | 0;
       $153 = $153 + -1 | 0;
      } while ($$01$i$i56 >>> 0 < $153 >>> 0);
      $$2 = $$$0;
     } else $$2 = $$$0;
    }
    break;
   }
  default:
   $$2 = $$062;
  }
  $__p$061 = $__p$061 + 1 | 0;
  if (($__p$061 | 0) == 4) break; else $$062 = $$2;
 }
 $158 = HEAP8[$__sn >> 0] | 0;
 $160 = ($158 & 1) == 0;
 $164 = $160 ? ($158 & 255) >>> 1 : HEAP32[$0 >> 2] | 0;
 if ($164 >>> 0 > 1) {
  $167 = $160 ? $2 : HEAP32[$1 >> 2] | 0;
  $168 = $167 + $164 | 0;
  $169 = HEAP32[$__me >> 2] | 0;
  if (($164 | 0) == 1) $$0$i$i$lcssa = $169; else {
   $$0$i$i35 = $169;
   $173 = $167 + 1 | 0;
   while (1) {
    HEAP8[$$0$i$i35 >> 0] = HEAP8[$173 >> 0] | 0;
    $174 = $$0$i$i35 + 1 | 0;
    $173 = $173 + 1 | 0;
    if (($173 | 0) == ($168 | 0)) {
     $$0$i$i$lcssa = $174;
     break;
    } else $$0$i$i35 = $174;
   }
  }
  HEAP32[$__me >> 2] = $$0$i$i$lcssa;
 }
 switch ($__flags & 176 | 0) {
 case 32:
  {
   HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$__mi >> 2] = $__mb;
 }
 return;
}

function __ZNSt3__17__sort4IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEjT0_SA_SA_SA_T_($__x1, $__x2, $__x3, $__x4, $__c) {
 $__x1 = $__x1 | 0;
 $__x2 = $__x2 | 0;
 $__x3 = $__x3 | 0;
 $__x4 = $__x4 | 0;
 $__c = $__c | 0;
 var $$0$i = 0, $1 = 0, $3 = 0, $__r$0 = 0, $__t$i2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__t$i2 = sp;
 $1 = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31]($__x2, $__x1) | 0;
 $3 = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31]($__x3, $__x2) | 0;
 do if ($1) {
  if ($3) {
   HEAP32[$__t$i2 >> 2] = HEAP32[$__x1 >> 2];
   HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x1 + 4 >> 2];
   HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x1 + 8 >> 2];
   HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x1 + 12 >> 2];
   HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x1 + 16 >> 2];
   HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x1 + 20 >> 2];
   HEAP32[$__x1 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x1 + 4 >> 2] = HEAP32[$__x3 + 4 >> 2];
   HEAP32[$__x1 + 8 >> 2] = HEAP32[$__x3 + 8 >> 2];
   HEAP32[$__x1 + 12 >> 2] = HEAP32[$__x3 + 12 >> 2];
   HEAP32[$__x1 + 16 >> 2] = HEAP32[$__x3 + 16 >> 2];
   HEAP32[$__x1 + 20 >> 2] = HEAP32[$__x3 + 20 >> 2];
   HEAP32[$__x3 >> 2] = HEAP32[$__t$i2 >> 2];
   HEAP32[$__x3 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
   HEAP32[$__x3 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
   HEAP32[$__x3 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
   HEAP32[$__x3 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
   HEAP32[$__x3 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
   $$0$i = 1;
   break;
  };
  HEAP32[$__t$i2 >> 2] = HEAP32[$__x1 >> 2];
  HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x1 + 4 >> 2];
  HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x1 + 8 >> 2];
  HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x1 + 12 >> 2];
  HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x1 + 16 >> 2];
  HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x1 + 20 >> 2];
  HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
  HEAP32[$__x1 + 4 >> 2] = HEAP32[$__x2 + 4 >> 2];
  HEAP32[$__x1 + 8 >> 2] = HEAP32[$__x2 + 8 >> 2];
  HEAP32[$__x1 + 12 >> 2] = HEAP32[$__x2 + 12 >> 2];
  HEAP32[$__x1 + 16 >> 2] = HEAP32[$__x2 + 16 >> 2];
  HEAP32[$__x1 + 20 >> 2] = HEAP32[$__x2 + 20 >> 2];
  HEAP32[$__x2 >> 2] = HEAP32[$__t$i2 >> 2];
  HEAP32[$__x2 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
  HEAP32[$__x2 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
  HEAP32[$__x2 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
  HEAP32[$__x2 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
  HEAP32[$__x2 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
  if (FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31]($__x3, $__x2) | 0) {
   HEAP32[$__t$i2 >> 2] = HEAP32[$__x2 >> 2];
   HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x2 + 4 >> 2];
   HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x2 + 8 >> 2];
   HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x2 + 12 >> 2];
   HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x2 + 16 >> 2];
   HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x2 + 20 >> 2];
   HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x2 + 4 >> 2] = HEAP32[$__x3 + 4 >> 2];
   HEAP32[$__x2 + 8 >> 2] = HEAP32[$__x3 + 8 >> 2];
   HEAP32[$__x2 + 12 >> 2] = HEAP32[$__x3 + 12 >> 2];
   HEAP32[$__x2 + 16 >> 2] = HEAP32[$__x3 + 16 >> 2];
   HEAP32[$__x2 + 20 >> 2] = HEAP32[$__x3 + 20 >> 2];
   HEAP32[$__x3 >> 2] = HEAP32[$__t$i2 >> 2];
   HEAP32[$__x3 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
   HEAP32[$__x3 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
   HEAP32[$__x3 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
   HEAP32[$__x3 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
   HEAP32[$__x3 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
   $$0$i = 2;
  } else $$0$i = 1;
 } else if ($3) {
  HEAP32[$__t$i2 >> 2] = HEAP32[$__x2 >> 2];
  HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x2 + 4 >> 2];
  HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x2 + 8 >> 2];
  HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x2 + 12 >> 2];
  HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x2 + 16 >> 2];
  HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x2 + 20 >> 2];
  HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
  HEAP32[$__x2 + 4 >> 2] = HEAP32[$__x3 + 4 >> 2];
  HEAP32[$__x2 + 8 >> 2] = HEAP32[$__x3 + 8 >> 2];
  HEAP32[$__x2 + 12 >> 2] = HEAP32[$__x3 + 12 >> 2];
  HEAP32[$__x2 + 16 >> 2] = HEAP32[$__x3 + 16 >> 2];
  HEAP32[$__x2 + 20 >> 2] = HEAP32[$__x3 + 20 >> 2];
  HEAP32[$__x3 >> 2] = HEAP32[$__t$i2 >> 2];
  HEAP32[$__x3 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
  HEAP32[$__x3 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
  HEAP32[$__x3 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
  HEAP32[$__x3 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
  HEAP32[$__x3 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
  if (FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31]($__x2, $__x1) | 0) {
   HEAP32[$__t$i2 >> 2] = HEAP32[$__x1 >> 2];
   HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x1 + 4 >> 2];
   HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x1 + 8 >> 2];
   HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x1 + 12 >> 2];
   HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x1 + 16 >> 2];
   HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x1 + 20 >> 2];
   HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
   HEAP32[$__x1 + 4 >> 2] = HEAP32[$__x2 + 4 >> 2];
   HEAP32[$__x1 + 8 >> 2] = HEAP32[$__x2 + 8 >> 2];
   HEAP32[$__x1 + 12 >> 2] = HEAP32[$__x2 + 12 >> 2];
   HEAP32[$__x1 + 16 >> 2] = HEAP32[$__x2 + 16 >> 2];
   HEAP32[$__x1 + 20 >> 2] = HEAP32[$__x2 + 20 >> 2];
   HEAP32[$__x2 >> 2] = HEAP32[$__t$i2 >> 2];
   HEAP32[$__x2 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
   HEAP32[$__x2 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
   HEAP32[$__x2 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
   HEAP32[$__x2 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
   HEAP32[$__x2 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
   $$0$i = 2;
  } else $$0$i = 1;
 } else $$0$i = 0; while (0);
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31]($__x4, $__x3) | 0)) {
  $__r$0 = $$0$i;
  STACKTOP = sp;
  return $__r$0 | 0;
 };
 HEAP32[$__t$i2 >> 2] = HEAP32[$__x3 >> 2];
 HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x3 + 4 >> 2];
 HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x3 + 8 >> 2];
 HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x3 + 12 >> 2];
 HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x3 + 16 >> 2];
 HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x3 + 20 >> 2];
 HEAP32[$__x3 >> 2] = HEAP32[$__x4 >> 2];
 HEAP32[$__x3 + 4 >> 2] = HEAP32[$__x4 + 4 >> 2];
 HEAP32[$__x3 + 8 >> 2] = HEAP32[$__x4 + 8 >> 2];
 HEAP32[$__x3 + 12 >> 2] = HEAP32[$__x4 + 12 >> 2];
 HEAP32[$__x3 + 16 >> 2] = HEAP32[$__x4 + 16 >> 2];
 HEAP32[$__x3 + 20 >> 2] = HEAP32[$__x4 + 20 >> 2];
 HEAP32[$__x4 >> 2] = HEAP32[$__t$i2 >> 2];
 HEAP32[$__x4 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
 HEAP32[$__x4 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
 HEAP32[$__x4 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
 HEAP32[$__x4 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
 HEAP32[$__x4 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31]($__x3, $__x2) | 0)) {
  $__r$0 = $$0$i + 1 | 0;
  STACKTOP = sp;
  return $__r$0 | 0;
 };
 HEAP32[$__t$i2 >> 2] = HEAP32[$__x2 >> 2];
 HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x2 + 4 >> 2];
 HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x2 + 8 >> 2];
 HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x2 + 12 >> 2];
 HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x2 + 16 >> 2];
 HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x2 + 20 >> 2];
 HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
 HEAP32[$__x2 + 4 >> 2] = HEAP32[$__x3 + 4 >> 2];
 HEAP32[$__x2 + 8 >> 2] = HEAP32[$__x3 + 8 >> 2];
 HEAP32[$__x2 + 12 >> 2] = HEAP32[$__x3 + 12 >> 2];
 HEAP32[$__x2 + 16 >> 2] = HEAP32[$__x3 + 16 >> 2];
 HEAP32[$__x2 + 20 >> 2] = HEAP32[$__x3 + 20 >> 2];
 HEAP32[$__x3 >> 2] = HEAP32[$__t$i2 >> 2];
 HEAP32[$__x3 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
 HEAP32[$__x3 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
 HEAP32[$__x3 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
 HEAP32[$__x3 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
 HEAP32[$__x3 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31]($__x2, $__x1) | 0)) {
  $__r$0 = $$0$i + 2 | 0;
  STACKTOP = sp;
  return $__r$0 | 0;
 };
 HEAP32[$__t$i2 >> 2] = HEAP32[$__x1 >> 2];
 HEAP32[$__t$i2 + 4 >> 2] = HEAP32[$__x1 + 4 >> 2];
 HEAP32[$__t$i2 + 8 >> 2] = HEAP32[$__x1 + 8 >> 2];
 HEAP32[$__t$i2 + 12 >> 2] = HEAP32[$__x1 + 12 >> 2];
 HEAP32[$__t$i2 + 16 >> 2] = HEAP32[$__x1 + 16 >> 2];
 HEAP32[$__t$i2 + 20 >> 2] = HEAP32[$__x1 + 20 >> 2];
 HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
 HEAP32[$__x1 + 4 >> 2] = HEAP32[$__x2 + 4 >> 2];
 HEAP32[$__x1 + 8 >> 2] = HEAP32[$__x2 + 8 >> 2];
 HEAP32[$__x1 + 12 >> 2] = HEAP32[$__x2 + 12 >> 2];
 HEAP32[$__x1 + 16 >> 2] = HEAP32[$__x2 + 16 >> 2];
 HEAP32[$__x1 + 20 >> 2] = HEAP32[$__x2 + 20 >> 2];
 HEAP32[$__x2 >> 2] = HEAP32[$__t$i2 >> 2];
 HEAP32[$__x2 + 4 >> 2] = HEAP32[$__t$i2 + 4 >> 2];
 HEAP32[$__x2 + 8 >> 2] = HEAP32[$__t$i2 + 8 >> 2];
 HEAP32[$__x2 + 12 >> 2] = HEAP32[$__t$i2 + 12 >> 2];
 HEAP32[$__x2 + 16 >> 2] = HEAP32[$__t$i2 + 16 >> 2];
 HEAP32[$__x2 + 20 >> 2] = HEAP32[$__t$i2 + 20 >> 2];
 $__r$0 = $$0$i + 3 | 0;
 STACKTOP = sp;
 return $__r$0 | 0;
}

function __ZNK15google_breakpad11DumpSymbols7ReadCFIEPNS_6ModuleERKNS_6mach_o6ReaderERKNS3_7SectionEb($this, $module, $macho_reader, $section, $eh_frame) {
 $this = $this | 0;
 $module = $module | 0;
 $macho_reader = $macho_reader | 0;
 $section = $section | 0;
 $eh_frame = $eh_frame | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $11 = 0, $111 = 0, $113 = 0, $115 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $55 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $9 = 0, $90 = 0, $95 = 0, $97 = 0, $byte_reader = 0, $dwarf_reporter = 0, $handler = 0, $module_reporter = 0, $parser = 0, $register_names = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $vararg_buffer4 = sp + 88 | 0;
 $vararg_buffer1 = sp + 80 | 0;
 $vararg_buffer = sp + 72 | 0;
 $register_names = sp + 224 | 0;
 $0 = sp + 212 | 0;
 $1 = sp + 200 | 0;
 $2 = sp + 188 | 0;
 $3 = sp + 176 | 0;
 $module_reporter = sp + 148 | 0;
 $handler = sp + 240 | 0;
 $byte_reader = sp;
 $dwarf_reporter = sp + 120 | 0;
 $parser = sp + 96 | 0;
 HEAP32[$register_names >> 2] = 0;
 $4 = $register_names + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$register_names + 8 >> 2] = 0;
 $6 = $macho_reader + 16 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 L1 : do if (($7 | 0) < 16777223) switch ($7 | 0) {
 case 7:
  {
   __ZN15google_breakpad16DwarfCFIToModule13RegisterNames4I386Ev($0);
   $9 = $0 + 4 | 0;
   __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_($register_names, HEAP32[$0 >> 2] | 0, HEAP32[$9 >> 2] | 0);
   $11 = HEAP32[$0 >> 2] | 0;
   if (!$11) {
    label = 25;
    break L1;
   }
   while (1) {
    $13 = HEAP32[$9 >> 2] | 0;
    if (($13 | 0) == ($11 | 0)) break;
    $15 = $13 + -12 | 0;
    HEAP32[$9 >> 2] = $15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
   }
   __ZdlPv(HEAP32[$0 >> 2] | 0);
   label = 25;
   break L1;
   break;
  }
 case 12:
  {
   __ZN15google_breakpad16DwarfCFIToModule13RegisterNames3ARMEv($2);
   $27 = $2 + 4 | 0;
   __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_($register_names, HEAP32[$2 >> 2] | 0, HEAP32[$27 >> 2] | 0);
   $29 = HEAP32[$2 >> 2] | 0;
   if (!$29) {
    label = 25;
    break L1;
   }
   while (1) {
    $31 = HEAP32[$27 >> 2] | 0;
    if (($31 | 0) == ($29 | 0)) break;
    $33 = $31 + -12 | 0;
    HEAP32[$27 >> 2] = $33;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
   }
   __ZdlPv(HEAP32[$2 >> 2] | 0);
   label = 25;
   break L1;
   break;
  }
 default:
  {
   label = 18;
   break L1;
  }
 } else switch ($7 | 0) {
 case 16777223:
  {
   __ZN15google_breakpad16DwarfCFIToModule13RegisterNames6X86_64Ev($1);
   $18 = $1 + 4 | 0;
   __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_($register_names, HEAP32[$1 >> 2] | 0, HEAP32[$18 >> 2] | 0);
   $20 = HEAP32[$1 >> 2] | 0;
   if (!$20) {
    label = 25;
    break L1;
   }
   while (1) {
    $22 = HEAP32[$18 >> 2] | 0;
    if (($22 | 0) == ($20 | 0)) break;
    $24 = $22 + -12 | 0;
    HEAP32[$18 >> 2] = $24;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
   }
   __ZdlPv(HEAP32[$1 >> 2] | 0);
   label = 25;
   break L1;
   break;
  }
 case 16777228:
  {
   __ZN15google_breakpad16DwarfCFIToModule13RegisterNames5ARM64Ev($3);
   $36 = $3 + 4 | 0;
   __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_($register_names, HEAP32[$3 >> 2] | 0, HEAP32[$36 >> 2] | 0);
   $38 = HEAP32[$3 >> 2] | 0;
   if (!$38) {
    label = 25;
    break L1;
   }
   while (1) {
    $40 = HEAP32[$36 >> 2] | 0;
    if (($40 | 0) == ($38 | 0)) break;
    $42 = $40 + -12 | 0;
    HEAP32[$36 >> 2] = $42;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
   }
   __ZdlPv(HEAP32[$3 >> 2] | 0);
   label = 25;
   break L1;
   break;
  }
 default:
  {
   label = 18;
   break L1;
  }
 } while (0);
 do if ((label | 0) == 18) {
  $44 = $macho_reader + 20 | 0;
  $46 = __ZN15google_breakpad30BreakpadGetArchInfoFromCpuTypeEii($7, HEAP32[$44 >> 2] | 0) | 0;
  $47 = HEAP32[_stderr >> 2] | 0;
  $48 = $this + 52 | 0;
  if (!(HEAP8[$48 >> 0] & 1)) $55 = $48 + 1 | 0; else $55 = HEAP32[$this + 60 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $55;
  _fprintf($47 | 0, 22032, $vararg_buffer | 0) | 0;
  if (!$46) {
   $59 = HEAP32[$44 >> 2] | 0;
   HEAP32[$vararg_buffer4 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$vararg_buffer4 + 4 >> 2] = $59;
   _fprintf($47 | 0, 22103, $vararg_buffer4 | 0) | 0;
  } else {
   HEAP32[$vararg_buffer1 >> 2] = HEAP32[$46 >> 2];
   _fprintf($47 | 0, 22085, $vararg_buffer1 | 0) | 0;
  }
  _fwrite(22122, 49, 1, $47 | 0) | 0;
  $$0 = 0;
 } else if ((label | 0) == 25) {
  $60 = HEAP32[$section >> 2] | 0;
  $62 = HEAP32[$section + 4 >> 2] | 0;
  if ($60 >>> 0 > $62 >>> 0) ___assert_fail(22901, 22914, 70, 22941); else {
   $66 = $this + 52 | 0;
   $67 = $section + 8 | 0;
   HEAP32[$module_reporter >> 2] = 2688;
   $68 = $module_reporter + 4 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($68, $66);
   $69 = $module_reporter + 16 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($69, $67);
   HEAP32[$handler >> 2] = 2716;
   HEAP32[$handler + 4 >> 2] = $module;
   HEAP32[$handler + 8 >> 2] = $register_names;
   HEAP32[$handler + 12 >> 2] = $module_reporter;
   HEAP32[$handler + 16 >> 2] = 0;
   HEAP32[$handler + 24 >> 2] = -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($handler + 28 | 0, 22172, 4);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($handler + 40 | 0, 22177, 3);
   HEAP32[$handler + 56 >> 2] = 0;
   HEAP32[$handler + 60 >> 2] = 0;
   HEAP32[$handler + 52 >> 2] = $handler + 56;
   __ZN12dwarf2reader10ByteReaderC2ENS_10EndiannessE($byte_reader, HEAPU8[$macho_reader + 12 >> 0] ^ 1);
   __ZN12dwarf2reader10ByteReader14SetAddressSizeEh($byte_reader, (HEAP8[$macho_reader + 13 >> 0] | 0) != 0 ? 8 : 4);
   $90 = $section + 32 | 0;
   $95 = HEAP32[$90 + 4 >> 2] | 0;
   $97 = $byte_reader + 32 | 0;
   HEAP32[$97 >> 2] = HEAP32[$90 >> 2];
   HEAP32[$97 + 4 >> 2] = $95;
   HEAP32[$byte_reader + 64 >> 2] = $60;
   HEAP8[$byte_reader + 26 >> 0] = 1;
   HEAP32[$dwarf_reporter >> 2] = 4724;
   $103 = $dwarf_reporter + 4 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($103, $66);
   $104 = $dwarf_reporter + 16 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($104, $67);
   HEAP32[$parser >> 2] = $60;
   HEAP32[$parser + 4 >> 2] = $62 - $60;
   HEAP32[$parser + 8 >> 2] = $byte_reader;
   HEAP32[$parser + 12 >> 2] = $handler;
   HEAP32[$parser + 16 >> 2] = $dwarf_reporter;
   HEAP8[$parser + 20 >> 0] = $eh_frame & 1;
   __ZN12dwarf2reader13CallFrameInfo5StartEv($parser) | 0;
   HEAP32[$dwarf_reporter >> 2] = 4724;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($104);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
   __ZN12dwarf2reader10ByteReaderD2Ev($byte_reader);
   __ZN15google_breakpad16DwarfCFIToModuleD2Ev($handler);
   HEAP32[$module_reporter >> 2] = 2688;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
   $$0 = 1;
   break;
  }
 } while (0);
 $111 = HEAP32[$register_names >> 2] | 0;
 if (!$111) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 while (1) {
  $113 = HEAP32[$4 >> 2] | 0;
  if (($113 | 0) == ($111 | 0)) break;
  $115 = $113 + -12 | 0;
  HEAP32[$4 >> 2] = $115;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115);
 }
 __ZdlPv(HEAP32[$register_names >> 2] | 0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $0 = 0, $1 = 0, $10 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $112 = 0, $120 = 0, $124 = 0, $126 = 0, $130 = 0, $131 = 0, $133 = 0, $135 = 0, $140 = 0, $142 = 0, $146 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $155 = 0, $158 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $53 = 0, $6 = 0, $61 = 0, $65 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $79 = 0, $8 = 0, $82 = 0, $83 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $__d$0$lcssa = 0, $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 4 | 0;
 $1 = $__sn + 8 | 0;
 $2 = $__sym + 4 | 0;
 $4 = ($__flags & 512 | 0) == 0;
 $5 = $__sym + 8 | 0;
 $6 = ($__fd | 0) > 0;
 $7 = $__grp + 4 | 0;
 $8 = $__grp + 8 | 0;
 $9 = $__grp + 1 | 0;
 $10 = ($__fd | 0) > 0;
 $$057 = $__db;
 $__p$056 = 0;
 while (1) {
  switch (HEAP8[$__pat + $__p$056 >> 0] | 0) {
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$057;
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 31]($__ct, 32) | 0;
    $20 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $20 + 4;
    HEAP32[$20 >> 2] = $19;
    $$2 = $$057;
    break;
   }
  case 3:
   {
    $22 = HEAP8[$__sn >> 0] | 0;
    $24 = ($22 & 1) == 0;
    if (!(($24 ? ($22 & 255) >>> 1 : HEAP32[$0 >> 2] | 0) | 0)) $$2 = $$057; else {
     $32 = HEAP32[($24 ? $0 : HEAP32[$1 >> 2] | 0) >> 2] | 0;
     $33 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $33 + 4;
     HEAP32[$33 >> 2] = $32;
     $$2 = $$057;
    }
    break;
   }
  case 2:
   {
    $35 = HEAP8[$__sym >> 0] | 0;
    $37 = ($35 & 1) == 0;
    $41 = $37 ? ($35 & 255) >>> 1 : HEAP32[$2 >> 2] | 0;
    if ($4 | ($41 | 0) == 0) $$2 = $$057; else {
     $44 = $37 ? $2 : HEAP32[$5 >> 2] | 0;
     $45 = $44 + ($41 << 2) | 0;
     $46 = HEAP32[$__me >> 2] | 0;
     if ($41) {
      $$0$i$i954 = $46;
      $49 = $44;
      while (1) {
       HEAP32[$$0$i$i954 >> 2] = HEAP32[$49 >> 2];
       $49 = $49 + 4 | 0;
       if (($49 | 0) == ($45 | 0)) break; else $$0$i$i954 = $$0$i$i954 + 4 | 0;
      }
     }
     HEAP32[$__me >> 2] = $46 + ($41 << 2);
     $$2 = $$057;
    }
    break;
   }
  case 4:
   {
    $53 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$057 + 4 | 0 : $$057;
    L15 : do if ($$$0 >>> 0 < $__de >>> 0) {
     $__d$031 = $$$0;
     while (1) {
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 2048, HEAP32[$__d$031 >> 2] | 0) | 0)) {
       $__d$0$lcssa = $__d$031;
       break L15;
      }
      $61 = $__d$031 + 4 | 0;
      if ($61 >>> 0 < $__de >>> 0) $__d$031 = $61; else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else $__d$0$lcssa = $$$0; while (0);
    if ($6) {
     if ($__d$0$lcssa >>> 0 > $$$0 >>> 0 & $10) {
      $68 = HEAP32[$__me >> 2] | 0;
      $__d$137 = $__d$0$lcssa;
      $__f$038 = $__fd;
      while (1) {
       $65 = $__d$137 + -4 | 0;
       $67 = $68 + 4 | 0;
       HEAP32[$68 >> 2] = HEAP32[$65 >> 2];
       $69 = $__f$038 + -1 | 0;
       $71 = ($__f$038 | 0) > 1;
       if ($65 >>> 0 > $$$0 >>> 0 & $71) {
        $68 = $67;
        $__d$137 = $65;
        $__f$038 = $69;
       } else {
        $$lcssa63 = $65;
        $$lcssa64 = $69;
        $$lcssa65 = $71;
        $$lcssa67 = $67;
        break;
       }
      }
      HEAP32[$__me >> 2] = $$lcssa67;
      $$lcssa = $$lcssa65;
      $__d$1$lcssa = $$lcssa63;
      $__f$0$lcssa = $$lcssa64;
     } else {
      $$lcssa = $10;
      $__d$1$lcssa = $__d$0$lcssa;
      $__f$0$lcssa = $__fd;
     }
     if ($$lcssa) $83 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 31]($__ct, 48) | 0; else $83 = 0;
     $__me$promoted = HEAP32[$__me >> 2] | 0;
     $79 = $__f$0$lcssa + (($__f$0$lcssa | 0) < 0 ? ~$__f$0$lcssa : -1) | 0;
     if (($__f$0$lcssa | 0) > 0) {
      $82 = $__me$promoted;
      $__f$143 = $__f$0$lcssa;
      while (1) {
       HEAP32[$82 >> 2] = $83;
       if (($__f$143 | 0) > 1) {
        $82 = $82 + 4 | 0;
        $__f$143 = $__f$143 + -1 | 0;
       } else break;
      }
     }
     HEAP32[$__me >> 2] = $__me$promoted + ($79 + 2 << 2);
     HEAP32[$__me$promoted + ($79 + 1 << 2) >> 2] = $__dp;
     $__d$2 = $__d$1$lcssa;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 31]($__ct, 48) | 0;
     $91 = HEAP32[$__me >> 2] | 0;
     $92 = $91 + 4 | 0;
     HEAP32[$__me >> 2] = $92;
     HEAP32[$91 >> 2] = $90;
     $130 = $92;
    } else {
     $93 = HEAP8[$__grp >> 0] | 0;
     $95 = ($93 & 1) == 0;
     $96 = HEAP32[$7 >> 2] | 0;
     if (!(($95 ? ($93 & 255) >>> 1 : $96) | 0)) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($95 ? $9 : HEAP32[$8 >> 2] | 0) >> 0] | 0;
     if (($__d$2 | 0) != ($$$0 | 0)) {
      $__d$347 = $__d$2;
      $__gl$050 = $__gl$0$ph;
      $__ig$049 = 0;
      $__ng$048 = 0;
      while (1) {
       $107 = HEAP32[$__me >> 2] | 0;
       if (($__ng$048 | 0) == ($__gl$050 | 0)) {
        $108 = $107 + 4 | 0;
        HEAP32[$__me >> 2] = $108;
        HEAP32[$107 >> 2] = $__ts;
        $109 = $__ig$049 + 1 | 0;
        $110 = HEAP8[$__grp >> 0] | 0;
        $112 = ($110 & 1) == 0;
        if ($109 >>> 0 < ($112 ? ($110 & 255) >>> 1 : $96) >>> 0) {
         $120 = HEAP8[($112 ? $9 : HEAP32[$8 >> 2] | 0) + $109 >> 0] | 0;
         $126 = $108;
         $__gl$1 = $120 << 24 >> 24 == 127 ? -1 : $120 << 24 >> 24;
         $__ig$1 = $109;
         $__ng$1 = 0;
        } else {
         $126 = $108;
         $__gl$1 = $__ng$048;
         $__ig$1 = $109;
         $__ng$1 = 0;
        }
       } else {
        $126 = $107;
        $__gl$1 = $__gl$050;
        $__ig$1 = $__ig$049;
        $__ng$1 = $__ng$048;
       }
       $__d$347 = $__d$347 + -4 | 0;
       $124 = HEAP32[$__d$347 >> 2] | 0;
       HEAP32[$__me >> 2] = $126 + 4;
       HEAP32[$126 >> 2] = $124;
       if (($__d$347 | 0) == ($$$0 | 0)) break; else {
        $__gl$050 = $__gl$1;
        $__ig$049 = $__ig$1;
        $__ng$048 = $__ng$1 + 1 | 0;
       }
      }
     }
     $130 = HEAP32[$__me >> 2] | 0;
    }
    if (($53 | 0) == ($130 | 0)) $$2 = $$$0; else {
     $131 = $130 + -4 | 0;
     if ($53 >>> 0 < $131 >>> 0) {
      $$01$i$i52 = $53;
      $135 = $131;
      do {
       $133 = HEAP32[$$01$i$i52 >> 2] | 0;
       HEAP32[$$01$i$i52 >> 2] = HEAP32[$135 >> 2];
       HEAP32[$135 >> 2] = $133;
       $$01$i$i52 = $$01$i$i52 + 4 | 0;
       $135 = $135 + -4 | 0;
      } while ($$01$i$i52 >>> 0 < $135 >>> 0);
      $$2 = $$$0;
     } else $$2 = $$$0;
    }
    break;
   }
  default:
   $$2 = $$057;
  }
  $__p$056 = $__p$056 + 1 | 0;
  if (($__p$056 | 0) == 4) break; else $$057 = $$2;
 }
 $140 = HEAP8[$__sn >> 0] | 0;
 $142 = ($140 & 1) == 0;
 $146 = $142 ? ($140 & 255) >>> 1 : HEAP32[$0 >> 2] | 0;
 if ($146 >>> 0 > 1) {
  $149 = $142 ? $0 : HEAP32[$1 >> 2] | 0;
  $150 = $149 + 4 | 0;
  $151 = $149 + ($146 << 2) | 0;
  $152 = HEAP32[$__me >> 2] | 0;
  $155 = $151 - $150 | 0;
  if (($146 | 0) != 1) {
   $$0$i$i30 = $152;
   $158 = $150;
   while (1) {
    HEAP32[$$0$i$i30 >> 2] = HEAP32[$158 >> 2];
    $158 = $158 + 4 | 0;
    if (($158 | 0) == ($151 | 0)) break; else $$0$i$i30 = $$0$i$i30 + 4 | 0;
   }
  }
  HEAP32[$__me >> 2] = $152 + ($155 >>> 2 << 2);
 }
 switch ($__flags & 176 | 0) {
 case 32:
  {
   HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$__mi >> 2] = $__mb;
 }
 return;
}

function __ZN15google_breakpad6mach_o9FatReader4ReadEPKhj($this, $buffer, $size) {
 $this = $this | 0;
 $buffer = $buffer | 0;
 $size = $size | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $118 = 0, $119 = 0, $141 = 0, $142 = 0, $164 = 0, $165 = 0, $187 = 0, $191 = 0, $196 = 0, $2 = 0, $201 = 0, $206 = 0, $207 = 0, $211 = 0, $216 = 0, $22 = 0, $220 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $23 = 0, $231 = 0, $234 = 0, $240 = 0, $241 = 0, $246 = 0, $248 = 0, $250 = 0, $252 = 0, $27 = 0, $277 = 0, $278 = 0, $279 = 0, $280 = 0, $285 = 0, $287 = 0, $289 = 0, $3 = 0, $313 = 0, $314 = 0, $319 = 0, $323 = 0, $328 = 0, $333 = 0, $337 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $4 = 0, $47 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $57 = 0, $61 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $95 = 0, $96 = 0, $i$067 = 0, $storemerge$i$i13 = 0, $storemerge$i$i33 = 0, $storemerge$i$i39 = 0, $storemerge$i$i46 = 0, $storemerge$i$i53 = 0, $storemerge$i$i60 = 0, $v$2$i$i11 = 0, $v$2$i$i4 = 0, label = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = $buffer;
 $1 = $buffer + $size | 0;
 $2 = $this + 8 | 0;
 HEAP32[$2 >> 2] = $1;
 $3 = $this + 12 | 0;
 $4 = $1;
 L1 : do if ($size >>> 0 < 4) HEAP32[$3 >> 2] = -559038737; else {
  $22 = ((HEAPU8[$buffer + 1 >> 0] | 0 | (HEAPU8[$buffer >> 0] | 0) << 8) << 8 | (HEAPU8[$buffer + 2 >> 0] | 0)) << 8 | (HEAPU8[$buffer + 3 >> 0] | 0);
  $23 = $buffer + 4 | 0;
  HEAP32[$3 >> 2] = $22;
  L4 : do if (($22 | 0) < -805638658) {
   if (($22 | 0) >= -822415874) switch ($22 | 0) {
   case -822415874:
    {
     label = 30;
     break L4;
     break;
    }
   default:
    break L1;
   }
   switch ($22 | 0) {
   case -889275714:
    break;
   default:
    break L1;
   }
   if (($4 - $23 | 0) >>> 0 < 4) {
    $27 = HEAP32[$this >> 2] | 0;
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$27 >> 2] | 0) + 16 >> 2] & 255]($27);
    $$0 = 0;
    return $$0 | 0;
   }
   $47 = ((HEAPU8[$buffer + 5 >> 0] | 0 | (HEAPU8[$23 >> 0] | 0) << 8) << 8 | (HEAPU8[$buffer + 6 >> 0] | 0)) << 8 | (HEAPU8[$buffer + 7 >> 0] | 0);
   $49 = $buffer + 8 | 0;
   $50 = $this + 16 | 0;
   $51 = $this + 20 | 0;
   $52 = HEAP32[$51 >> 2] | 0;
   $53 = HEAP32[$50 >> 2] | 0;
   $57 = $52 - $53 >> 5;
   if ($47 >>> 0 > $57 >>> 0) __ZNSt3__16vectorI12SuperFatArchNS_9allocatorIS1_EEE8__appendEj($50, $47 - $57 | 0); else if ($47 >>> 0 < $57 >>> 0) {
    $61 = $53 + ($47 << 5) | 0;
    if (($52 | 0) != ($61 | 0)) HEAP32[$51 >> 2] = $52 + (~(($52 + -32 - $61 | 0) >>> 5) << 5);
   }
   if (!$47) {
    $$0 = 1;
    return $$0 | 0;
   }
   $341 = 1;
   $71 = $49;
   $73 = HEAP32[$2 >> 2] | 0;
   $i$067 = 0;
   while (1) {
    $70 = $71;
    $72 = $73;
    if (($72 - $71 | 0) >>> 0 < 4) {
     $343 = 0;
     $96 = $72;
     $storemerge$i$i33 = -559038737;
    } else {
     $343 = $341;
     $96 = $70 + 4 | 0;
     $storemerge$i$i33 = ((HEAPU8[$70 + 1 >> 0] | 0 | (HEAPU8[$70 >> 0] | 0) << 8) << 8 | (HEAPU8[$70 + 2 >> 0] | 0)) << 8 | (HEAPU8[$70 + 3 >> 0] | 0);
    }
    $95 = $96;
    if (($72 - $96 | 0) >>> 0 < 4) {
     $119 = $72;
     $344 = 0;
     $storemerge$i$i39 = -559038737;
    } else {
     $119 = $95 + 4 | 0;
     $344 = $343;
     $storemerge$i$i39 = ((HEAPU8[$95 + 1 >> 0] | 0 | (HEAPU8[$95 >> 0] | 0) << 8) << 8 | (HEAPU8[$95 + 2 >> 0] | 0)) << 8 | (HEAPU8[$95 + 3 >> 0] | 0);
    }
    $118 = $119;
    if (($72 - $119 | 0) >>> 0 < 4) {
     $142 = $72;
     $345 = 0;
     $storemerge$i$i60 = -559038737;
    } else {
     $142 = $118 + 4 | 0;
     $345 = $344;
     $storemerge$i$i60 = ((HEAPU8[$118 + 1 >> 0] | 0 | (HEAPU8[$118 >> 0] | 0) << 8) << 8 | (HEAPU8[$118 + 2 >> 0] | 0)) << 8 | (HEAPU8[$118 + 3 >> 0] | 0);
    }
    $141 = $142;
    if (($72 - $142 | 0) >>> 0 < 4) {
     $165 = $72;
     $346 = 0;
     $storemerge$i$i53 = -559038737;
    } else {
     $165 = $141 + 4 | 0;
     $346 = $345;
     $storemerge$i$i53 = ((HEAPU8[$141 + 1 >> 0] | 0 | (HEAPU8[$141 >> 0] | 0) << 8) << 8 | (HEAPU8[$141 + 2 >> 0] | 0)) << 8 | (HEAPU8[$141 + 3 >> 0] | 0);
    }
    $164 = $165;
    if (($72 - $165 | 0) >>> 0 < 4) {
     $206 = 0;
     $342 = $72;
     $storemerge$i$i46 = -559038737;
    } else {
     $206 = $346;
     $342 = $164 + 4 | 0;
     $storemerge$i$i46 = ((HEAPU8[$164 + 1 >> 0] | 0 | (HEAPU8[$164 >> 0] | 0) << 8) << 8 | (HEAPU8[$164 + 2 >> 0] | 0)) << 8 | (HEAPU8[$164 + 3 >> 0] | 0);
    }
    $187 = HEAP32[$50 >> 2] | 0;
    HEAP32[$187 + ($i$067 << 5) >> 2] = $storemerge$i$i33;
    HEAP32[$187 + ($i$067 << 5) + 4 >> 2] = $storemerge$i$i39;
    $191 = $187 + ($i$067 << 5) + 8 | 0;
    HEAP32[$191 >> 2] = $storemerge$i$i60;
    HEAP32[$191 + 4 >> 2] = 0;
    $196 = $187 + ($i$067 << 5) + 16 | 0;
    HEAP32[$196 >> 2] = $storemerge$i$i53;
    HEAP32[$196 + 4 >> 2] = 0;
    $201 = $187 + ($i$067 << 5) + 24 | 0;
    HEAP32[$201 >> 2] = $storemerge$i$i46;
    HEAP32[$201 + 4 >> 2] = 0;
    if (!($206 << 24 >> 24)) {
     label = 25;
     break;
    }
    $211 = HEAP32[$0 >> 2] | 0;
    $73 = HEAP32[$2 >> 2] | 0;
    if ($211 >>> 0 > $73 >>> 0) {
     label = 27;
     break;
    }
    $216 = $73 - $211 | 0;
    $i$067 = $i$067 + 1 | 0;
    if ($216 >>> 0 < $storemerge$i$i60 >>> 0 | $storemerge$i$i53 >>> 0 > ($216 - $storemerge$i$i60 | 0) >>> 0) {
     label = 29;
     break;
    }
    if ($i$067 >>> 0 >= $47 >>> 0) {
     $$0 = 1;
     label = 52;
     break;
    } else {
     $341 = $206;
     $71 = $342;
    }
   }
   if ((label | 0) == 25) {
    $207 = HEAP32[$this >> 2] | 0;
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$207 >> 2] | 0) + 16 >> 2] & 255]($207);
    $$0 = 0;
    return $$0 | 0;
   } else if ((label | 0) == 27) ___assert_fail(22901, 22914, 70, 22941); else if ((label | 0) == 29) {
    $220 = HEAP32[$this >> 2] | 0;
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$220 >> 2] | 0) + 12 >> 2] & 255]($220);
    $$0 = 0;
    return $$0 | 0;
   } else if ((label | 0) == 52) return $$0 | 0;
  } else if (($22 | 0) < -17958194) switch ($22 | 0) {
  case -805638658:
   {
    label = 30;
    break L4;
    break;
   }
  default:
   break L1;
  } else switch ($22 | 0) {
  case -17958193:
  case -17958194:
   {
    $246 = 1;
    break L4;
    break;
   }
  default:
   break L1;
  } while (0);
  if ((label | 0) == 30) $246 = 0;
  $224 = $this + 16 | 0;
  $225 = $this + 20 | 0;
  $226 = HEAP32[$225 >> 2] | 0;
  $227 = HEAP32[$224 >> 2] | 0;
  $231 = $226 - $227 >> 5;
  if (!$231) {
   __ZNSt3__16vectorI12SuperFatArchNS_9allocatorIS1_EEE8__appendEj($224, 1);
   $241 = HEAP32[$2 >> 2] | 0;
   $277 = HEAP32[$224 >> 2] | 0;
  } else if ($231 >>> 0 > 1) {
   $234 = $227 + 32 | 0;
   if (($226 | 0) == ($234 | 0)) {
    $241 = $1;
    $277 = $227;
   } else {
    HEAP32[$225 >> 2] = $226 + (~(($226 + -32 - $234 | 0) >>> 5) << 5);
    $241 = $1;
    $277 = $227;
   }
  } else {
   $241 = $1;
   $277 = $227;
  }
  $240 = $241;
  if (($240 - $23 | 0) >>> 0 < 4) {
   $280 = $240;
   $313 = 0;
   $storemerge$i$i13 = -559038737;
  } else {
   $248 = HEAP8[$buffer + 7 >> 0] | 0;
   $250 = HEAP8[$buffer + 6 >> 0] | 0;
   $252 = HEAP8[$buffer + 5 >> 0] | 0;
   if (!($246 << 24 >> 24)) $v$2$i$i11 = (($250 & 255 | ($248 & 255) << 8) << 8 | $252 & 255) << 8 | (HEAPU8[$23 >> 0] | 0); else $v$2$i$i11 = (($252 & 255 | (HEAPU8[$23 >> 0] | 0) << 8) << 8 | $250 & 255) << 8 | $248 & 255;
   $280 = $buffer + 8 | 0;
   $313 = 1;
   $storemerge$i$i13 = $v$2$i$i11;
  }
  HEAP32[$277 >> 2] = $storemerge$i$i13;
  $278 = $277 + 4 | 0;
  $279 = $280;
  if (($240 - $280 | 0) >>> 0 < 4) HEAP32[$278 >> 2] = -559038737; else {
   $285 = HEAP8[$279 + 3 >> 0] | 0;
   $287 = HEAP8[$279 + 2 >> 0] | 0;
   $289 = HEAP8[$279 + 1 >> 0] | 0;
   if (!($246 << 24 >> 24)) $v$2$i$i4 = (($287 & 255 | ($285 & 255) << 8) << 8 | $289 & 255) << 8 | (HEAPU8[$279 >> 0] | 0); else $v$2$i$i4 = (($289 & 255 | (HEAPU8[$279 >> 0] | 0) << 8) << 8 | $287 & 255) << 8 | $285 & 255;
   HEAP32[$278 >> 2] = $v$2$i$i4;
   if ($313 << 24 >> 24) {
    $319 = $277 + 8 | 0;
    HEAP32[$319 >> 2] = 0;
    HEAP32[$319 + 4 >> 2] = 0;
    $323 = HEAP32[$0 >> 2] | 0;
    if ($323 >>> 0 > $241 >>> 0) ___assert_fail(22901, 22914, 70, 22941);
    $328 = $277 + 16 | 0;
    HEAP32[$328 >> 2] = $240 - $323;
    HEAP32[$328 + 4 >> 2] = 0;
    $333 = $277 + 24 | 0;
    HEAP32[$333 >> 2] = 12;
    HEAP32[$333 + 4 >> 2] = 0;
    $$0 = 1;
    return $$0 | 0;
   }
  }
  $314 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$314 >> 2] | 0) + 16 >> 2] & 255]($314);
  $$0 = 0;
  return $$0 | 0;
 } while (0);
 $337 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$337 >> 2] | 0) + 8 >> 2] & 255]($337);
 $$0 = 0;
 return $$0 | 0;
}

function __ZNSt3__124__buffered_inplace_mergeIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeE($__first, $__middle, $__last, $__comp, $__len1, $__len2, $__buff) {
 $__first = $__first | 0;
 $__middle = $__middle | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 $__len1 = $__len1 | 0;
 $__len2 = $__len2 | 0;
 $__buff = $__buff | 0;
 var $$01$i$i$i = 0, $$in$i = 0, $$lcssa = 0, $$lcssa138 = 0, $$lcssa142 = 0, $$lcssa144 = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $104 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $110 = 0, $113 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $67 = 0, $68 = 0, $71 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__p$072 = 0, $__p1$0$lcssa = 0, $__p1$071 = 0, $scevgep97 = 0, label = 0;
 if (($__len1 | 0) <= ($__len2 | 0)) {
  $1 = HEAP32[$__first >> 2] | 0;
  $2 = $1;
  $3 = HEAP32[$__middle >> 2] | 0;
  $5 = $3;
  L3 : do if (($2 | 0) == ($3 | 0)) {
   $20 = HEAP32[$__last >> 2] | 0;
   label = 7;
  } else {
   $9 = ((($3 + -24 + (0 - $1) | 0) >>> 0) / 24 | 0) + 1 | 0;
   $11 = $1;
   $13 = $2;
   $__p$072 = $__buff;
   while (1) {
    $10 = $11;
    HEAP32[$__p$072 >> 2] = HEAP32[$10 >> 2];
    HEAP32[$__p$072 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
    HEAP32[$__p$072 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
    HEAP32[$__p$072 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
    HEAP32[$__p$072 + 16 >> 2] = HEAP32[$10 + 16 >> 2];
    HEAP32[$__p$072 + 20 >> 2] = HEAP32[$10 + 20 >> 2];
    $12 = $13 + 24 | 0;
    if (($12 | 0) == ($3 | 0)) break; else {
     $11 = $12;
     $13 = $12;
     $__p$072 = $__p$072 + 24 | 0;
    }
   }
   $scevgep97 = $__buff + ($9 * 24 | 0) | 0;
   $17 = HEAP32[$__last >> 2] | 0;
   $19 = $scevgep97;
   if (($scevgep97 | 0) == ($__buff | 0)) {
    $20 = $17;
    label = 7;
   } else {
    $22 = $17;
    $$in$i = $__buff;
    $123 = $5;
    $124 = $__buff;
    $24 = $3;
    $31 = $1;
    $33 = $3;
    while (1) {
     if (($24 | 0) == ($22 | 0)) {
      $$lcssa142 = $31;
      $$lcssa144 = $124;
      break;
     }
     $32 = $31;
     if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($24, $$in$i) | 0) {
      HEAP32[$32 >> 2] = HEAP32[$33 >> 2];
      HEAP32[$32 + 4 >> 2] = HEAP32[$33 + 4 >> 2];
      HEAP32[$32 + 8 >> 2] = HEAP32[$33 + 8 >> 2];
      HEAP32[$32 + 12 >> 2] = HEAP32[$33 + 12 >> 2];
      HEAP32[$32 + 16 >> 2] = HEAP32[$33 + 16 >> 2];
      HEAP32[$32 + 20 >> 2] = HEAP32[$33 + 20 >> 2];
      $34 = $24 + 24 | 0;
      $125 = $34;
      $126 = $124;
      $127 = $34;
      $128 = $34;
      $41 = $$in$i;
     } else {
      HEAP32[$32 >> 2] = HEAP32[$$in$i >> 2];
      HEAP32[$32 + 4 >> 2] = HEAP32[$$in$i + 4 >> 2];
      HEAP32[$32 + 8 >> 2] = HEAP32[$$in$i + 8 >> 2];
      HEAP32[$32 + 12 >> 2] = HEAP32[$$in$i + 12 >> 2];
      HEAP32[$32 + 16 >> 2] = HEAP32[$$in$i + 16 >> 2];
      HEAP32[$32 + 20 >> 2] = HEAP32[$$in$i + 20 >> 2];
      $36 = $$in$i + 24 | 0;
      $125 = $123;
      $126 = $36;
      $127 = $33;
      $128 = $24;
      $41 = $36;
     }
     $39 = $31 + 24 | 0;
     if (($41 | 0) == ($scevgep97 | 0)) {
      $$pre$phiZ2D = $22;
      $43 = $125;
      $46 = $39;
      break L3;
     } else {
      $$in$i = $41;
      $123 = $125;
      $124 = $126;
      $24 = $128;
      $31 = $39;
      $33 = $127;
     }
    }
    _memmove($$lcssa142 | 0, $$lcssa144 | 0, $19 - $$lcssa144 | 0) | 0;
    return;
   }
  } while (0);
  if ((label | 0) == 7) {
   $$pre$phiZ2D = $20;
   $43 = $5;
   $46 = $1;
  }
  $42 = $43;
  if (($42 | 0) == ($$pre$phiZ2D | 0)) return;
  $$01$i$i$i = $46;
  $47 = $42;
  while (1) {
   HEAP32[$$01$i$i$i >> 2] = HEAP32[$47 >> 2];
   HEAP32[$$01$i$i$i + 4 >> 2] = HEAP32[$47 + 4 >> 2];
   HEAP32[$$01$i$i$i + 8 >> 2] = HEAP32[$47 + 8 >> 2];
   HEAP32[$$01$i$i$i + 12 >> 2] = HEAP32[$47 + 12 >> 2];
   HEAP32[$$01$i$i$i + 16 >> 2] = HEAP32[$47 + 16 >> 2];
   HEAP32[$$01$i$i$i + 20 >> 2] = HEAP32[$47 + 20 >> 2];
   $47 = $47 + 24 | 0;
   if (($47 | 0) == ($$pre$phiZ2D | 0)) break; else $$01$i$i$i = $$01$i$i$i + 24 | 0;
  }
  return;
 }
 $51 = HEAP32[$__middle >> 2] | 0;
 $52 = $51;
 $53 = HEAP32[$__last >> 2] | 0;
 $55 = $53;
 if (($52 | 0) == ($53 | 0)) $__p1$0$lcssa = $__buff; else {
  $58 = ((($53 + -24 + (0 - $51) | 0) >>> 0) / 24 | 0) + 1 | 0;
  $60 = $51;
  $62 = $52;
  $__p1$071 = $__buff;
  while (1) {
   $59 = $60;
   HEAP32[$__p1$071 >> 2] = HEAP32[$59 >> 2];
   HEAP32[$__p1$071 + 4 >> 2] = HEAP32[$59 + 4 >> 2];
   HEAP32[$__p1$071 + 8 >> 2] = HEAP32[$59 + 8 >> 2];
   HEAP32[$__p1$071 + 12 >> 2] = HEAP32[$59 + 12 >> 2];
   HEAP32[$__p1$071 + 16 >> 2] = HEAP32[$59 + 16 >> 2];
   HEAP32[$__p1$071 + 20 >> 2] = HEAP32[$59 + 20 >> 2];
   $61 = $62 + 24 | 0;
   if (($61 | 0) == ($53 | 0)) break; else {
    $60 = $61;
    $62 = $61;
    $__p1$071 = $__p1$071 + 24 | 0;
   }
  }
  $__p1$0$lcssa = $__buff + ($58 * 24 | 0) | 0;
 }
 $67 = $__p1$0$lcssa;
 $68 = HEAP32[$__first >> 2] | 0;
 L35 : do if (($52 | 0) == ($68 | 0)) {
  $110 = $67;
  $113 = $55;
 } else {
  $100 = $51;
  $129 = $67;
  $130 = $51;
  $71 = $67;
  $86 = $__p1$0$lcssa;
  $88 = $52;
  $92 = $55;
  $95 = $__p1$0$lcssa;
  $97 = $__p1$0$lcssa;
  while (1) {
   if (($71 | 0) == ($__buff | 0)) {
    $$lcssa = $92;
    $$lcssa138 = $130;
    break;
   }
   $87 = $88 + -24 | 0;
   $93 = $92 + -24 | 0;
   if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($86 + -24 | 0, $87) | 0) {
    $101 = $100 + -24 | 0;
    HEAP32[$93 >> 2] = HEAP32[$101 >> 2];
    HEAP32[$93 + 4 >> 2] = HEAP32[$101 + 4 >> 2];
    HEAP32[$93 + 8 >> 2] = HEAP32[$101 + 8 >> 2];
    HEAP32[$93 + 12 >> 2] = HEAP32[$101 + 12 >> 2];
    HEAP32[$93 + 16 >> 2] = HEAP32[$101 + 16 >> 2];
    HEAP32[$93 + 20 >> 2] = HEAP32[$101 + 20 >> 2];
    $102 = $87;
    $104 = $86;
    $107 = $102;
    $131 = $129;
    $132 = $102;
    $133 = $97;
    $134 = $95;
   } else {
    $94 = $95 + -24 | 0;
    HEAP32[$93 >> 2] = HEAP32[$94 >> 2];
    HEAP32[$93 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
    HEAP32[$93 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
    HEAP32[$93 + 12 >> 2] = HEAP32[$94 + 12 >> 2];
    HEAP32[$93 + 16 >> 2] = HEAP32[$94 + 16 >> 2];
    HEAP32[$93 + 20 >> 2] = HEAP32[$94 + 20 >> 2];
    $96 = $97 + -24 | 0;
    $104 = $96;
    $107 = $100;
    $131 = $96;
    $132 = $130;
    $133 = $96;
    $134 = $96;
   }
   $105 = $93;
   $88 = $107;
   if (($88 | 0) == ($68 | 0)) {
    $110 = $131;
    $113 = $105;
    break L35;
   } else {
    $100 = $107;
    $129 = $131;
    $130 = $132;
    $71 = $104;
    $86 = $104;
    $92 = $105;
    $95 = $134;
    $97 = $133;
   }
  }
  $73 = $$lcssa138;
  if (($73 | 0) == ($68 | 0)) return;
  $77 = $$lcssa;
  $80 = $73;
  $82 = $$lcssa;
  while (1) {
   $78 = $77 + -24 | 0;
   $79 = $80 + -24 | 0;
   HEAP32[$78 >> 2] = HEAP32[$79 >> 2];
   HEAP32[$78 + 4 >> 2] = HEAP32[$79 + 4 >> 2];
   HEAP32[$78 + 8 >> 2] = HEAP32[$79 + 8 >> 2];
   HEAP32[$78 + 12 >> 2] = HEAP32[$79 + 12 >> 2];
   HEAP32[$78 + 16 >> 2] = HEAP32[$79 + 16 >> 2];
   HEAP32[$78 + 20 >> 2] = HEAP32[$79 + 20 >> 2];
   $81 = $82 + -24 | 0;
   if (($79 | 0) == ($68 | 0)) break; else {
    $77 = $81;
    $80 = $79;
    $82 = $81;
   }
  }
  return;
 } while (0);
 $109 = $110;
 if (($109 | 0) == ($__buff | 0)) return;
 $115 = $113;
 $118 = $109;
 $120 = $113;
 while (1) {
  $116 = $115 + -24 | 0;
  $117 = $118 + -24 | 0;
  HEAP32[$116 >> 2] = HEAP32[$117 >> 2];
  HEAP32[$116 + 4 >> 2] = HEAP32[$117 + 4 >> 2];
  HEAP32[$116 + 8 >> 2] = HEAP32[$117 + 8 >> 2];
  HEAP32[$116 + 12 >> 2] = HEAP32[$117 + 12 >> 2];
  HEAP32[$116 + 16 >> 2] = HEAP32[$117 + 16 >> 2];
  HEAP32[$116 + 20 >> 2] = HEAP32[$117 + 20 >> 2];
  $119 = $120 + -24 | 0;
  if (($117 | 0) == ($__buff | 0)) break; else {
   $115 = $119;
   $118 = $117;
   $120 = $119;
  }
 }
 return;
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZNSt3__15dequeIN12dwarf2reader13DIEDispatcher12HandlerStackENS_9allocatorIS3_EEE19__add_back_capacityEv($this) {
 $this = $this | 0;
 var $$in = 0, $$in$i = 0, $$in$i11 = 0, $$in$i51 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa71 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa77 = 0, $$pre$phi$i16Z2D = 0, $$pre$phi$i56Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $114 = 0, $116 = 0, $118 = 0, $121 = 0, $123 = 0, $126 = 0, $129 = 0, $131 = 0, $133 = 0, $134 = 0, $136 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $155 = 0, $157 = 0, $158 = 0, $162 = 0, $163 = 0, $165 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $184 = 0, $186 = 0, $188 = 0, $191 = 0, $192 = 0, $193 = 0, $195 = 0, $198 = 0, $2 = 0, $200 = 0, $202 = 0, $208 = 0, $211 = 0, $213 = 0, $216 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $24 = 0, $26 = 0, $30 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $43 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $71 = 0, $75 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $93 = 0, $95 = 0, $97 = 0, $__i$079 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = $this + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 >>> 0 > 255) {
  HEAP32[$1 >> 2] = $2 + -256;
  $5 = $this + 4 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $8 = $6 + 4 | 0;
  HEAP32[$5 >> 2] = $8;
  $9 = $this + 8 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = $this + 12 | 0;
  $14 = $10;
  do if (($10 | 0) == (HEAP32[$11 >> 2] | 0)) {
   $15 = HEAP32[$this >> 2] | 0;
   $17 = $15;
   if ($8 >>> 0 > $15 >>> 0) {
    $18 = $8;
    $22 = (($18 - $17 >> 2) + 1 | 0) / -2 | 0;
    $24 = $14 - $18 | 0;
    _memmove($6 + ($22 + 1 << 2) | 0, $8 | 0, $24 | 0) | 0;
    $26 = $6 + (($24 >> 2) + 1 + $22 << 2) | 0;
    HEAP32[$9 >> 2] = $26;
    HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($22 << 2);
    $55 = $26;
    break;
   }
   $30 = $14 - $17 >> 1;
   $32 = ($30 | 0) == 0 ? 1 : $30;
   $35 = __Znwj($32 << 2) | 0;
   $36 = $35;
   $37 = $35 + ($32 >>> 2 << 2) | 0;
   $38 = $37;
   $40 = $35 + ($32 << 2) | 0;
   if (($8 | 0) == ($10 | 0)) {
    $$pre$phi$i16Z2D = $this;
    $50 = $38;
    $52 = $17;
   } else {
    $$in$i11 = $37;
    $43 = $8;
    $45 = $38;
    while (1) {
     HEAP32[$$in$i11 >> 2] = HEAP32[$43 >> 2];
     $$in$i11 = $45 + 4 | 0;
     $47 = $$in$i11;
     $43 = $43 + 4 | 0;
     if (($43 | 0) == ($10 | 0)) {
      $$lcssa = $47;
      break;
     } else $45 = $47;
    }
    $$pre$phi$i16Z2D = $this;
    $50 = $$lcssa;
    $52 = HEAP32[$this >> 2] | 0;
   }
   HEAP32[$$pre$phi$i16Z2D >> 2] = $36;
   HEAP32[$5 >> 2] = $38;
   HEAP32[$9 >> 2] = $50;
   HEAP32[$11 >> 2] = $40;
   if (!$52) $55 = $50; else {
    __ZdlPv($52);
    $55 = HEAP32[$9 >> 2] | 0;
   }
  } else $55 = $10; while (0);
  HEAP32[$55 >> 2] = $7;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
 $58 = $this + 8 | 0;
 $59 = HEAP32[$58 >> 2] | 0;
 $60 = $this + 4 | 0;
 $64 = $59 - (HEAP32[$60 >> 2] | 0) | 0;
 $65 = $64 >> 2;
 $66 = $this + 12 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 $71 = $67 - (HEAP32[$this >> 2] | 0) | 0;
 if ($65 >>> 0 < $71 >> 2 >>> 0) {
  $75 = __Znwj(4096) | 0;
  if (($67 | 0) != ($59 | 0)) {
   HEAP32[$59 >> 2] = $75;
   HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 4;
   STACKTOP = sp;
   return;
  }
  HEAP32[$0 >> 2] = $75;
  __ZNSt3__114__split_bufferIPN12dwarf2reader13DIEDispatcher12HandlerStackENS_9allocatorIS4_EEE10push_frontERKS4_($this, $0);
  $79 = HEAP32[$60 >> 2] | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $79 + 4 | 0;
  HEAP32[$60 >> 2] = $81;
  $82 = HEAP32[$58 >> 2] | 0;
  $85 = $82;
  do if (($82 | 0) == (HEAP32[$66 >> 2] | 0)) {
   $86 = HEAP32[$this >> 2] | 0;
   $88 = $86;
   if ($81 >>> 0 > $86 >>> 0) {
    $89 = $81;
    $93 = (($89 - $88 >> 2) + 1 | 0) / -2 | 0;
    $95 = $85 - $89 | 0;
    _memmove($79 + ($93 + 1 << 2) | 0, $81 | 0, $95 | 0) | 0;
    $97 = $79 + (($95 >> 2) + 1 + $93 << 2) | 0;
    HEAP32[$58 >> 2] = $97;
    HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + ($93 << 2);
    $126 = $97;
    break;
   }
   $101 = $85 - $88 >> 1;
   $103 = ($101 | 0) == 0 ? 1 : $101;
   $106 = __Znwj($103 << 2) | 0;
   $107 = $106;
   $108 = $106 + ($103 >>> 2 << 2) | 0;
   $109 = $108;
   $111 = $106 + ($103 << 2) | 0;
   if (($81 | 0) == ($82 | 0)) {
    $$pre$phi$i56Z2D = $this;
    $121 = $109;
    $123 = $88;
   } else {
    $$in$i51 = $108;
    $114 = $81;
    $116 = $109;
    while (1) {
     HEAP32[$$in$i51 >> 2] = HEAP32[$114 >> 2];
     $$in$i51 = $116 + 4 | 0;
     $118 = $$in$i51;
     $114 = $114 + 4 | 0;
     if (($114 | 0) == ($82 | 0)) {
      $$lcssa117 = $118;
      break;
     } else $116 = $118;
    }
    $$pre$phi$i56Z2D = $this;
    $121 = $$lcssa117;
    $123 = HEAP32[$this >> 2] | 0;
   }
   HEAP32[$$pre$phi$i56Z2D >> 2] = $107;
   HEAP32[$60 >> 2] = $109;
   HEAP32[$58 >> 2] = $121;
   HEAP32[$66 >> 2] = $111;
   if (!$123) $126 = $121; else {
    __ZdlPv($123);
    $126 = HEAP32[$58 >> 2] | 0;
   }
  } else $126 = $82; while (0);
  HEAP32[$126 >> 2] = $80;
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
 $129 = $71 >> 1;
 $131 = ($129 | 0) == 0 ? 1 : $129;
 $133 = __Znwj($131 << 2) | 0;
 $134 = $133;
 $136 = $133 + ($131 << 2) | 0;
 $138 = $133 + ($65 << 2) | 0;
 $139 = __Znwj(4096) | 0;
 do if (($65 | 0) == ($131 | 0)) if (($64 | 0) > 0) {
  $$in = $133 + ((($65 + 1 | 0) / -2 | 0) + $65 << 2) | 0;
  $219 = $134;
  $220 = $136;
  break;
 } else {
  $145 = $64 >> 1;
  $147 = ($145 | 0) == 0 ? 1 : $145;
  $149 = __Znwj($147 << 2) | 0;
  __ZdlPv($133);
  $$in = $149 + ($147 >>> 2 << 2) | 0;
  $219 = $149;
  $220 = $149 + ($147 << 2) | 0;
  break;
 } else {
  $$in = $138;
  $219 = $134;
  $220 = $136;
 } while (0);
 $155 = $$in;
 HEAP32[$$in >> 2] = $139;
 $157 = $$in + 4 | 0;
 $158 = HEAP32[$58 >> 2] | 0;
 if (($158 | 0) == (HEAP32[$60 >> 2] | 0)) {
  $$lcssa71 = $219;
  $$lcssa73 = $220;
  $$lcssa75 = $157;
  $$lcssa77 = $155;
 } else {
  $163 = $155;
  $165 = $219;
  $168 = $157;
  $170 = $220;
  $__i$079 = $158;
  while (1) {
   $__i$079 = $__i$079 + -4 | 0;
   $162 = $163;
   do if (($162 | 0) == ($165 | 0)) {
    $167 = $168;
    if ($167 >>> 0 < $170 >>> 0) {
     $175 = (($170 - $168 >> 2) + 1 | 0) / 2 | 0;
     $176 = $168 - $163 | 0;
     $178 = $167 + ($175 - ($176 >> 2) << 2) | 0;
     _memmove($178 | 0, $163 | 0, $176 | 0) | 0;
     $208 = $178;
     $211 = $178;
     $221 = $165;
     $222 = $170;
     $223 = $167 + ($175 << 2) | 0;
     break;
    }
    $184 = $170 - $163 >> 1;
    $186 = ($184 | 0) == 0 ? 1 : $184;
    $188 = __Znwj($186 << 2) | 0;
    $191 = $188;
    $192 = $188 + (($186 + 3 | 0) >>> 2 << 2) | 0;
    $193 = $192;
    $195 = $188 + ($186 << 2) | 0;
    if (($162 | 0) == ($167 | 0)) $224 = $193; else {
     $$in$i = $192;
     $198 = $162;
     $200 = $193;
     while (1) {
      HEAP32[$$in$i >> 2] = HEAP32[$198 >> 2];
      $$in$i = $200 + 4 | 0;
      $202 = $$in$i;
      $198 = $198 + 4 | 0;
      if (($198 | 0) == ($167 | 0)) {
       $224 = $202;
       break;
      } else $200 = $202;
     }
    }
    if (!$165) {
     $208 = $192;
     $211 = $193;
     $221 = $191;
     $222 = $195;
     $223 = $224;
    } else {
     __ZdlPv($165);
     $208 = $192;
     $211 = $193;
     $221 = $191;
     $222 = $195;
     $223 = $224;
    }
   } else {
    $208 = $162;
    $211 = $163;
    $221 = $165;
    $222 = $170;
    $223 = $168;
   } while (0);
   HEAP32[$208 + -4 >> 2] = HEAP32[$__i$079 >> 2];
   $213 = $211 + -4 | 0;
   if (($__i$079 | 0) == (HEAP32[$60 >> 2] | 0)) {
    $$lcssa71 = $221;
    $$lcssa73 = $222;
    $$lcssa75 = $223;
    $$lcssa77 = $213;
    break;
   } else {
    $163 = $213;
    $165 = $221;
    $168 = $223;
    $170 = $222;
   }
  }
 }
 $216 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $$lcssa71;
 HEAP32[$60 >> 2] = $$lcssa77;
 HEAP32[$58 >> 2] = $$lcssa75;
 HEAP32[$66 >> 2] = $$lcssa73;
 if (!$216) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($216);
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad11StabsReader22ProcessCompilationUnitEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$pre1$i = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $11 = 0, $111 = 0, $122 = 0, $124 = 0, $125 = 0, $13 = 0, $131 = 0, $134 = 0, $137 = 0, $144 = 0, $146 = 0, $147 = 0, $15 = 0, $153 = 0, $156 = 0, $159 = 0, $162 = 0, $164 = 0, $167 = 0, $170 = 0, $174 = 0, $175 = 0, $178 = 0, $179 = 0, $180 = 0, $22 = 0, $25 = 0, $28 = 0, $29 = 0, $37 = 0, $4 = 0, $46 = 0, $48 = 0, $50 = 0, $57 = 0, $60 = 0, $63 = 0, $64 = 0, $67 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $77 = 0, $84 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $98 = 0, $build_directory$0 = 0, $line = 0, $offset$0$i = 0, $offset$0$i11 = 0, $offset$0$i17 = 0, $offset$0$i5 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer1 = sp + 24 | 0;
 $vararg_buffer = sp + 16 | 0;
 $line = sp;
 $0 = $this + 16 | 0;
 $1 = $this + 32 | 0;
 if (HEAP8[$1 >> 0] | 0) ___assert_fail(16861, 16769, 201, 16907);
 $4 = $this + 44 | 0;
 if ((HEAP8[$4 >> 0] | 0) != 100) ___assert_fail(16861, 16769, 201, 16907);
 $7 = $this + 64 | 0;
 $9 = $this + 40 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) + (HEAP32[$7 >> 2] | 0) | 0;
 $$pre1$i = $this + 8 | 0;
 do if (($11 | 0) < 0) label = 8; else {
  $13 = HEAP32[$$pre1$i >> 2] | 0;
  $15 = HEAP32[$this + 12 >> 2] | 0;
  if ($13 >>> 0 > $15 >>> 0) ___assert_fail(22901, 22914, 70, 22941); else if ($11 >>> 0 < ($15 - $13 | 0) >>> 0) {
   $29 = $13;
   $offset$0$i = $11;
   break;
  } else {
   label = 8;
   break;
  }
 } while (0);
 if ((label | 0) == 8) {
  $22 = HEAP32[$this + 60 >> 2] | 0;
  $25 = HEAP32[(HEAP32[$22 >> 2] | 0) + 32 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[$this + 36 >> 2];
  FUNCTION_TABLE_viii[$25 & 15]($22, 16810, $vararg_buffer);
  $29 = HEAP32[$$pre1$i >> 2] | 0;
  $offset$0$i = 0;
 }
 $28 = $29 + $offset$0$i | 0;
 if (!(HEAP8[$28 >> 0] | 0)) $build_directory$0 = 0; else if ((HEAP8[$29 + ($offset$0$i + -1 + (_strlen($28 | 0) | 0)) >> 0] | 0) == 47) {
  __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
  $37 = $this + 36 | 0;
  HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 1;
  $build_directory$0 = $28;
 } else $build_directory$0 = 0;
 if (HEAP8[$1 >> 0] | 0) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ((HEAP8[$4 >> 0] | 0) != 100) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $46 = (HEAP32[$9 >> 2] | 0) + (HEAP32[$7 >> 2] | 0) | 0;
 do if (($46 | 0) < 0) label = 18; else {
  $48 = HEAP32[$$pre1$i >> 2] | 0;
  $50 = HEAP32[$this + 12 >> 2] | 0;
  if ($48 >>> 0 > $50 >>> 0) ___assert_fail(22901, 22914, 70, 22941); else if ($46 >>> 0 < ($50 - $48 | 0) >>> 0) {
   $64 = $48;
   $offset$0$i11 = $46;
   break;
  } else {
   label = 18;
   break;
  }
 } while (0);
 if ((label | 0) == 18) {
  $57 = HEAP32[$this + 60 >> 2] | 0;
  $60 = HEAP32[(HEAP32[$57 >> 2] | 0) + 32 >> 2] | 0;
  HEAP32[$vararg_buffer1 >> 2] = HEAP32[$this + 36 >> 2];
  FUNCTION_TABLE_viii[$60 & 15]($57, 16810, $vararg_buffer1);
  $64 = HEAP32[$$pre1$i >> 2] | 0;
  $offset$0$i11 = 0;
 }
 $63 = $64 + $offset$0$i11 | 0;
 if (!(HEAP8[$63 >> 0] | 0)) {
  __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
  $67 = $this + 36 | 0;
  HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 1;
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $70 = $this + 72 | 0;
 HEAP32[$70 >> 2] = $63;
 $71 = $this + 60 | 0;
 $72 = HEAP32[$71 >> 2] | 0;
 $76 = $this + 48 | 0;
 $77 = $76;
 if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$72 >> 2] | 0) + 8 >> 2] & 63]($72, $63, HEAP32[$77 >> 2] | 0, HEAP32[$77 + 4 >> 2] | 0, $build_directory$0) | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
 $84 = $this + 36 | 0;
 HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
 L40 : do if (!(HEAP8[$1 >> 0] | 0)) {
  $89 = $line + 8 | 0;
  $90 = $this + 46 | 0;
  $91 = $line + 12 | 0;
  $92 = $this + 80 | 0;
  $93 = $this + 84 | 0;
  $94 = $this + 76 | 0;
  $95 = $this + 12 | 0;
  L42 : while (1) {
   switch (HEAP8[$4 >> 0] | 0) {
   case 100:
    {
     label = 38;
     break L42;
     break;
    }
   case 36:
    {
     if (!(__ZN15google_breakpad11StabsReader15ProcessFunctionEv($this) | 0)) {
      $$0 = 0;
      label = 48;
      break L42;
     }
     break;
    }
   case 68:
    {
     $98 = $76;
     $103 = HEAP32[$98 + 4 >> 2] | 0;
     $104 = $line;
     HEAP32[$104 >> 2] = HEAP32[$98 >> 2];
     HEAP32[$104 + 4 >> 2] = $103;
     HEAP32[$89 >> 2] = HEAP32[$70 >> 2];
     HEAP32[$91 >> 2] = HEAPU16[$90 >> 1];
     $111 = HEAP32[$92 >> 2] | 0;
     if (($111 | 0) == (HEAP32[$93 >> 2] | 0)) __ZNSt3__16vectorIN15google_breakpad11StabsReader4LineENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($94, $line); else {
      HEAP32[$111 >> 2] = HEAP32[$line >> 2];
      HEAP32[$111 + 4 >> 2] = HEAP32[$line + 4 >> 2];
      HEAP32[$111 + 8 >> 2] = HEAP32[$line + 8 >> 2];
      HEAP32[$111 + 12 >> 2] = HEAP32[$line + 12 >> 2];
      HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + 16;
     }
     __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     break;
    }
   case -124:
    {
     $122 = (HEAP32[$9 >> 2] | 0) + (HEAP32[$7 >> 2] | 0) | 0;
     if (($122 | 0) < 0) label = 35; else {
      $124 = HEAP32[$$pre1$i >> 2] | 0;
      $125 = HEAP32[$95 >> 2] | 0;
      if ($124 >>> 0 > $125 >>> 0) {
       label = 33;
       break L42;
      }
      if ($122 >>> 0 < ($125 - $124 | 0) >>> 0) {
       $137 = $124;
       $offset$0$i17 = $122;
      } else label = 35;
     }
     if ((label | 0) == 35) {
      label = 0;
      $131 = HEAP32[$71 >> 2] | 0;
      $134 = HEAP32[(HEAP32[$131 >> 2] | 0) + 32 >> 2] | 0;
      HEAP32[$vararg_buffer5 >> 2] = HEAP32[$84 >> 2];
      FUNCTION_TABLE_viii[$134 & 15]($131, 16810, $vararg_buffer5);
      $137 = HEAP32[$$pre1$i >> 2] | 0;
      $offset$0$i17 = 0;
     }
     HEAP32[$70 >> 2] = $137 + $offset$0$i17;
     __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     break;
    }
   default:
    {
     __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
    }
   }
   if (HEAP8[$1 >> 0] | 0) {
    $174 = 0;
    $175 = 0;
    break L40;
   }
  }
  if ((label | 0) == 33) ___assert_fail(22901, 22914, 70, 22941); else if ((label | 0) == 38) {
   $144 = (HEAP32[$9 >> 2] | 0) + (HEAP32[$7 >> 2] | 0) | 0;
   do if (($144 | 0) < 0) label = 42; else {
    $146 = HEAP32[$$pre1$i >> 2] | 0;
    $147 = HEAP32[$95 >> 2] | 0;
    if ($146 >>> 0 > $147 >>> 0) ___assert_fail(22901, 22914, 70, 22941); else if ($144 >>> 0 < ($147 - $146 | 0) >>> 0) {
     $159 = $146;
     $offset$0$i5 = $144;
     break;
    } else {
     label = 42;
     break;
    }
   } while (0);
   if ((label | 0) == 42) {
    $153 = HEAP32[$71 >> 2] | 0;
    $156 = HEAP32[(HEAP32[$153 >> 2] | 0) + 32 >> 2] | 0;
    HEAP32[$vararg_buffer9 >> 2] = HEAP32[$84 >> 2];
    FUNCTION_TABLE_viii[$156 & 15]($153, 16810, $vararg_buffer9);
    $159 = HEAP32[$$pre1$i >> 2] | 0;
    $offset$0$i5 = 0;
   }
   if (HEAP8[$159 + $offset$0$i5 >> 0] | 0) {
    $174 = 0;
    $175 = 0;
    break;
   }
   $162 = $76;
   $164 = HEAP32[$162 >> 2] | 0;
   $167 = HEAP32[$162 + 4 >> 2] | 0;
   __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
   HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
   $174 = $164;
   $175 = $167;
   break;
  } else if ((label | 0) == 48) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  $174 = 0;
  $175 = 0;
 } while (0);
 $170 = HEAP32[$71 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$170 >> 2] | 0) + 12 >> 2] & 31]($170, $174, $175) | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $178 = HEAP32[$this + 76 >> 2] | 0;
 $179 = $this + 80 | 0;
 $180 = HEAP32[$179 >> 2] | 0;
 if (($180 | 0) == ($178 | 0)) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$179 >> 2] = $180 + (~(($180 + -16 - $178 | 0) >>> 4) << 4);
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__15dequeIN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS3_EEE19__add_back_capacityEv($this) {
 $this = $this | 0;
 var $$in = 0, $$in$i = 0, $$in$i11 = 0, $$in$i51 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa71 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa77 = 0, $$pre$phi$i16Z2D = 0, $$pre$phi$i56Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $114 = 0, $116 = 0, $118 = 0, $121 = 0, $123 = 0, $126 = 0, $129 = 0, $131 = 0, $133 = 0, $134 = 0, $136 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $155 = 0, $157 = 0, $158 = 0, $162 = 0, $163 = 0, $165 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $184 = 0, $186 = 0, $188 = 0, $191 = 0, $192 = 0, $193 = 0, $195 = 0, $198 = 0, $2 = 0, $200 = 0, $202 = 0, $208 = 0, $211 = 0, $213 = 0, $216 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $24 = 0, $26 = 0, $30 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $43 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $71 = 0, $75 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $93 = 0, $95 = 0, $97 = 0, $__i$079 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = $this + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 >>> 0 > 255) {
  HEAP32[$1 >> 2] = $2 + -256;
  $5 = $this + 4 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $8 = $6 + 4 | 0;
  HEAP32[$5 >> 2] = $8;
  $9 = $this + 8 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = $this + 12 | 0;
  $14 = $10;
  do if (($10 | 0) == (HEAP32[$11 >> 2] | 0)) {
   $15 = HEAP32[$this >> 2] | 0;
   $17 = $15;
   if ($8 >>> 0 > $15 >>> 0) {
    $18 = $8;
    $22 = (($18 - $17 >> 2) + 1 | 0) / -2 | 0;
    $24 = $14 - $18 | 0;
    _memmove($6 + ($22 + 1 << 2) | 0, $8 | 0, $24 | 0) | 0;
    $26 = $6 + (($24 >> 2) + 1 + $22 << 2) | 0;
    HEAP32[$9 >> 2] = $26;
    HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($22 << 2);
    $55 = $26;
    break;
   }
   $30 = $14 - $17 >> 1;
   $32 = ($30 | 0) == 0 ? 1 : $30;
   $35 = __Znwj($32 << 2) | 0;
   $36 = $35;
   $37 = $35 + ($32 >>> 2 << 2) | 0;
   $38 = $37;
   $40 = $35 + ($32 << 2) | 0;
   if (($8 | 0) == ($10 | 0)) {
    $$pre$phi$i16Z2D = $this;
    $50 = $38;
    $52 = $17;
   } else {
    $$in$i11 = $37;
    $43 = $8;
    $45 = $38;
    while (1) {
     HEAP32[$$in$i11 >> 2] = HEAP32[$43 >> 2];
     $$in$i11 = $45 + 4 | 0;
     $47 = $$in$i11;
     $43 = $43 + 4 | 0;
     if (($43 | 0) == ($10 | 0)) {
      $$lcssa = $47;
      break;
     } else $45 = $47;
    }
    $$pre$phi$i16Z2D = $this;
    $50 = $$lcssa;
    $52 = HEAP32[$this >> 2] | 0;
   }
   HEAP32[$$pre$phi$i16Z2D >> 2] = $36;
   HEAP32[$5 >> 2] = $38;
   HEAP32[$9 >> 2] = $50;
   HEAP32[$11 >> 2] = $40;
   if (!$52) $55 = $50; else {
    __ZdlPv($52);
    $55 = HEAP32[$9 >> 2] | 0;
   }
  } else $55 = $10; while (0);
  HEAP32[$55 >> 2] = $7;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
 $58 = $this + 8 | 0;
 $59 = HEAP32[$58 >> 2] | 0;
 $60 = $this + 4 | 0;
 $64 = $59 - (HEAP32[$60 >> 2] | 0) | 0;
 $65 = $64 >> 2;
 $66 = $this + 12 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 $71 = $67 - (HEAP32[$this >> 2] | 0) | 0;
 if ($65 >>> 0 < $71 >> 2 >>> 0) {
  $75 = __Znwj(4096) | 0;
  if (($67 | 0) != ($59 | 0)) {
   HEAP32[$59 >> 2] = $75;
   HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 4;
   STACKTOP = sp;
   return;
  }
  HEAP32[$0 >> 2] = $75;
  __ZNSt3__114__split_bufferIPN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS4_EEE10push_frontERKS4_($this, $0);
  $79 = HEAP32[$60 >> 2] | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $79 + 4 | 0;
  HEAP32[$60 >> 2] = $81;
  $82 = HEAP32[$58 >> 2] | 0;
  $85 = $82;
  do if (($82 | 0) == (HEAP32[$66 >> 2] | 0)) {
   $86 = HEAP32[$this >> 2] | 0;
   $88 = $86;
   if ($81 >>> 0 > $86 >>> 0) {
    $89 = $81;
    $93 = (($89 - $88 >> 2) + 1 | 0) / -2 | 0;
    $95 = $85 - $89 | 0;
    _memmove($79 + ($93 + 1 << 2) | 0, $81 | 0, $95 | 0) | 0;
    $97 = $79 + (($95 >> 2) + 1 + $93 << 2) | 0;
    HEAP32[$58 >> 2] = $97;
    HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + ($93 << 2);
    $126 = $97;
    break;
   }
   $101 = $85 - $88 >> 1;
   $103 = ($101 | 0) == 0 ? 1 : $101;
   $106 = __Znwj($103 << 2) | 0;
   $107 = $106;
   $108 = $106 + ($103 >>> 2 << 2) | 0;
   $109 = $108;
   $111 = $106 + ($103 << 2) | 0;
   if (($81 | 0) == ($82 | 0)) {
    $$pre$phi$i56Z2D = $this;
    $121 = $109;
    $123 = $88;
   } else {
    $$in$i51 = $108;
    $114 = $81;
    $116 = $109;
    while (1) {
     HEAP32[$$in$i51 >> 2] = HEAP32[$114 >> 2];
     $$in$i51 = $116 + 4 | 0;
     $118 = $$in$i51;
     $114 = $114 + 4 | 0;
     if (($114 | 0) == ($82 | 0)) {
      $$lcssa117 = $118;
      break;
     } else $116 = $118;
    }
    $$pre$phi$i56Z2D = $this;
    $121 = $$lcssa117;
    $123 = HEAP32[$this >> 2] | 0;
   }
   HEAP32[$$pre$phi$i56Z2D >> 2] = $107;
   HEAP32[$60 >> 2] = $109;
   HEAP32[$58 >> 2] = $121;
   HEAP32[$66 >> 2] = $111;
   if (!$123) $126 = $121; else {
    __ZdlPv($123);
    $126 = HEAP32[$58 >> 2] | 0;
   }
  } else $126 = $82; while (0);
  HEAP32[$126 >> 2] = $80;
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
 $129 = $71 >> 1;
 $131 = ($129 | 0) == 0 ? 1 : $129;
 $133 = __Znwj($131 << 2) | 0;
 $134 = $133;
 $136 = $133 + ($131 << 2) | 0;
 $138 = $133 + ($65 << 2) | 0;
 $139 = __Znwj(4096) | 0;
 do if (($65 | 0) == ($131 | 0)) if (($64 | 0) > 0) {
  $$in = $133 + ((($65 + 1 | 0) / -2 | 0) + $65 << 2) | 0;
  $219 = $134;
  $220 = $136;
  break;
 } else {
  $145 = $64 >> 1;
  $147 = ($145 | 0) == 0 ? 1 : $145;
  $149 = __Znwj($147 << 2) | 0;
  __ZdlPv($133);
  $$in = $149 + ($147 >>> 2 << 2) | 0;
  $219 = $149;
  $220 = $149 + ($147 << 2) | 0;
  break;
 } else {
  $$in = $138;
  $219 = $134;
  $220 = $136;
 } while (0);
 $155 = $$in;
 HEAP32[$$in >> 2] = $139;
 $157 = $$in + 4 | 0;
 $158 = HEAP32[$58 >> 2] | 0;
 if (($158 | 0) == (HEAP32[$60 >> 2] | 0)) {
  $$lcssa71 = $219;
  $$lcssa73 = $220;
  $$lcssa75 = $157;
  $$lcssa77 = $155;
 } else {
  $163 = $155;
  $165 = $219;
  $168 = $157;
  $170 = $220;
  $__i$079 = $158;
  while (1) {
   $__i$079 = $__i$079 + -4 | 0;
   $162 = $163;
   do if (($162 | 0) == ($165 | 0)) {
    $167 = $168;
    if ($167 >>> 0 < $170 >>> 0) {
     $175 = (($170 - $168 >> 2) + 1 | 0) / 2 | 0;
     $176 = $168 - $163 | 0;
     $178 = $167 + ($175 - ($176 >> 2) << 2) | 0;
     _memmove($178 | 0, $163 | 0, $176 | 0) | 0;
     $208 = $178;
     $211 = $178;
     $221 = $165;
     $222 = $170;
     $223 = $167 + ($175 << 2) | 0;
     break;
    }
    $184 = $170 - $163 >> 1;
    $186 = ($184 | 0) == 0 ? 1 : $184;
    $188 = __Znwj($186 << 2) | 0;
    $191 = $188;
    $192 = $188 + (($186 + 3 | 0) >>> 2 << 2) | 0;
    $193 = $192;
    $195 = $188 + ($186 << 2) | 0;
    if (($162 | 0) == ($167 | 0)) $224 = $193; else {
     $$in$i = $192;
     $198 = $162;
     $200 = $193;
     while (1) {
      HEAP32[$$in$i >> 2] = HEAP32[$198 >> 2];
      $$in$i = $200 + 4 | 0;
      $202 = $$in$i;
      $198 = $198 + 4 | 0;
      if (($198 | 0) == ($167 | 0)) {
       $224 = $202;
       break;
      } else $200 = $202;
     }
    }
    if (!$165) {
     $208 = $192;
     $211 = $193;
     $221 = $191;
     $222 = $195;
     $223 = $224;
    } else {
     __ZdlPv($165);
     $208 = $192;
     $211 = $193;
     $221 = $191;
     $222 = $195;
     $223 = $224;
    }
   } else {
    $208 = $162;
    $211 = $163;
    $221 = $165;
    $222 = $170;
    $223 = $168;
   } while (0);
   HEAP32[$208 + -4 >> 2] = HEAP32[$__i$079 >> 2];
   $213 = $211 + -4 | 0;
   if (($__i$079 | 0) == (HEAP32[$60 >> 2] | 0)) {
    $$lcssa71 = $221;
    $$lcssa73 = $222;
    $$lcssa75 = $223;
    $$lcssa77 = $213;
    break;
   } else {
    $163 = $213;
    $165 = $221;
    $168 = $223;
    $170 = $222;
   }
  }
 }
 $216 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $$lcssa71;
 HEAP32[$60 >> 2] = $$lcssa77;
 HEAP32[$58 >> 2] = $$lcssa75;
 HEAP32[$66 >> 2] = $$lcssa73;
 if (!$216) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($216);
 STACKTOP = sp;
 return;
}

function __ZNSt3__15dequeIyNS_9allocatorIyEEE19__add_back_capacityEv($this) {
 $this = $this | 0;
 var $$in = 0, $$in$i = 0, $$in$i11 = 0, $$in$i51 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa71 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa77 = 0, $$pre$phi$i16Z2D = 0, $$pre$phi$i56Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $114 = 0, $116 = 0, $118 = 0, $121 = 0, $123 = 0, $126 = 0, $129 = 0, $131 = 0, $133 = 0, $134 = 0, $136 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $155 = 0, $157 = 0, $158 = 0, $162 = 0, $163 = 0, $165 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $184 = 0, $186 = 0, $188 = 0, $191 = 0, $192 = 0, $193 = 0, $195 = 0, $198 = 0, $2 = 0, $200 = 0, $202 = 0, $208 = 0, $211 = 0, $213 = 0, $216 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $24 = 0, $26 = 0, $30 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $43 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $71 = 0, $75 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $93 = 0, $95 = 0, $97 = 0, $__i$079 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = $this + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 >>> 0 > 511) {
  HEAP32[$1 >> 2] = $2 + -512;
  $5 = $this + 4 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $8 = $6 + 4 | 0;
  HEAP32[$5 >> 2] = $8;
  $9 = $this + 8 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = $this + 12 | 0;
  $14 = $10;
  do if (($10 | 0) == (HEAP32[$11 >> 2] | 0)) {
   $15 = HEAP32[$this >> 2] | 0;
   $17 = $15;
   if ($8 >>> 0 > $15 >>> 0) {
    $18 = $8;
    $22 = (($18 - $17 >> 2) + 1 | 0) / -2 | 0;
    $24 = $14 - $18 | 0;
    _memmove($6 + ($22 + 1 << 2) | 0, $8 | 0, $24 | 0) | 0;
    $26 = $6 + (($24 >> 2) + 1 + $22 << 2) | 0;
    HEAP32[$9 >> 2] = $26;
    HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($22 << 2);
    $55 = $26;
    break;
   }
   $30 = $14 - $17 >> 1;
   $32 = ($30 | 0) == 0 ? 1 : $30;
   $35 = __Znwj($32 << 2) | 0;
   $36 = $35;
   $37 = $35 + ($32 >>> 2 << 2) | 0;
   $38 = $37;
   $40 = $35 + ($32 << 2) | 0;
   if (($8 | 0) == ($10 | 0)) {
    $$pre$phi$i16Z2D = $this;
    $50 = $38;
    $52 = $17;
   } else {
    $$in$i11 = $37;
    $43 = $8;
    $45 = $38;
    while (1) {
     HEAP32[$$in$i11 >> 2] = HEAP32[$43 >> 2];
     $$in$i11 = $45 + 4 | 0;
     $47 = $$in$i11;
     $43 = $43 + 4 | 0;
     if (($43 | 0) == ($10 | 0)) {
      $$lcssa = $47;
      break;
     } else $45 = $47;
    }
    $$pre$phi$i16Z2D = $this;
    $50 = $$lcssa;
    $52 = HEAP32[$this >> 2] | 0;
   }
   HEAP32[$$pre$phi$i16Z2D >> 2] = $36;
   HEAP32[$5 >> 2] = $38;
   HEAP32[$9 >> 2] = $50;
   HEAP32[$11 >> 2] = $40;
   if (!$52) $55 = $50; else {
    __ZdlPv($52);
    $55 = HEAP32[$9 >> 2] | 0;
   }
  } else $55 = $10; while (0);
  HEAP32[$55 >> 2] = $7;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
 $58 = $this + 8 | 0;
 $59 = HEAP32[$58 >> 2] | 0;
 $60 = $this + 4 | 0;
 $64 = $59 - (HEAP32[$60 >> 2] | 0) | 0;
 $65 = $64 >> 2;
 $66 = $this + 12 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 $71 = $67 - (HEAP32[$this >> 2] | 0) | 0;
 if ($65 >>> 0 < $71 >> 2 >>> 0) {
  $75 = __Znwj(4096) | 0;
  if (($67 | 0) != ($59 | 0)) {
   HEAP32[$59 >> 2] = $75;
   HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 4;
   STACKTOP = sp;
   return;
  }
  HEAP32[$0 >> 2] = $75;
  __ZNSt3__114__split_bufferIPyNS_9allocatorIS1_EEE10push_frontERKS1_($this, $0);
  $79 = HEAP32[$60 >> 2] | 0;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $79 + 4 | 0;
  HEAP32[$60 >> 2] = $81;
  $82 = HEAP32[$58 >> 2] | 0;
  $85 = $82;
  do if (($82 | 0) == (HEAP32[$66 >> 2] | 0)) {
   $86 = HEAP32[$this >> 2] | 0;
   $88 = $86;
   if ($81 >>> 0 > $86 >>> 0) {
    $89 = $81;
    $93 = (($89 - $88 >> 2) + 1 | 0) / -2 | 0;
    $95 = $85 - $89 | 0;
    _memmove($79 + ($93 + 1 << 2) | 0, $81 | 0, $95 | 0) | 0;
    $97 = $79 + (($95 >> 2) + 1 + $93 << 2) | 0;
    HEAP32[$58 >> 2] = $97;
    HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + ($93 << 2);
    $126 = $97;
    break;
   }
   $101 = $85 - $88 >> 1;
   $103 = ($101 | 0) == 0 ? 1 : $101;
   $106 = __Znwj($103 << 2) | 0;
   $107 = $106;
   $108 = $106 + ($103 >>> 2 << 2) | 0;
   $109 = $108;
   $111 = $106 + ($103 << 2) | 0;
   if (($81 | 0) == ($82 | 0)) {
    $$pre$phi$i56Z2D = $this;
    $121 = $109;
    $123 = $88;
   } else {
    $$in$i51 = $108;
    $114 = $81;
    $116 = $109;
    while (1) {
     HEAP32[$$in$i51 >> 2] = HEAP32[$114 >> 2];
     $$in$i51 = $116 + 4 | 0;
     $118 = $$in$i51;
     $114 = $114 + 4 | 0;
     if (($114 | 0) == ($82 | 0)) {
      $$lcssa117 = $118;
      break;
     } else $116 = $118;
    }
    $$pre$phi$i56Z2D = $this;
    $121 = $$lcssa117;
    $123 = HEAP32[$this >> 2] | 0;
   }
   HEAP32[$$pre$phi$i56Z2D >> 2] = $107;
   HEAP32[$60 >> 2] = $109;
   HEAP32[$58 >> 2] = $121;
   HEAP32[$66 >> 2] = $111;
   if (!$123) $126 = $121; else {
    __ZdlPv($123);
    $126 = HEAP32[$58 >> 2] | 0;
   }
  } else $126 = $82; while (0);
  HEAP32[$126 >> 2] = $80;
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
 $129 = $71 >> 1;
 $131 = ($129 | 0) == 0 ? 1 : $129;
 $133 = __Znwj($131 << 2) | 0;
 $134 = $133;
 $136 = $133 + ($131 << 2) | 0;
 $138 = $133 + ($65 << 2) | 0;
 $139 = __Znwj(4096) | 0;
 do if (($65 | 0) == ($131 | 0)) if (($64 | 0) > 0) {
  $$in = $133 + ((($65 + 1 | 0) / -2 | 0) + $65 << 2) | 0;
  $219 = $134;
  $220 = $136;
  break;
 } else {
  $145 = $64 >> 1;
  $147 = ($145 | 0) == 0 ? 1 : $145;
  $149 = __Znwj($147 << 2) | 0;
  __ZdlPv($133);
  $$in = $149 + ($147 >>> 2 << 2) | 0;
  $219 = $149;
  $220 = $149 + ($147 << 2) | 0;
  break;
 } else {
  $$in = $138;
  $219 = $134;
  $220 = $136;
 } while (0);
 $155 = $$in;
 HEAP32[$$in >> 2] = $139;
 $157 = $$in + 4 | 0;
 $158 = HEAP32[$58 >> 2] | 0;
 if (($158 | 0) == (HEAP32[$60 >> 2] | 0)) {
  $$lcssa71 = $219;
  $$lcssa73 = $220;
  $$lcssa75 = $157;
  $$lcssa77 = $155;
 } else {
  $163 = $155;
  $165 = $219;
  $168 = $157;
  $170 = $220;
  $__i$079 = $158;
  while (1) {
   $__i$079 = $__i$079 + -4 | 0;
   $162 = $163;
   do if (($162 | 0) == ($165 | 0)) {
    $167 = $168;
    if ($167 >>> 0 < $170 >>> 0) {
     $175 = (($170 - $168 >> 2) + 1 | 0) / 2 | 0;
     $176 = $168 - $163 | 0;
     $178 = $167 + ($175 - ($176 >> 2) << 2) | 0;
     _memmove($178 | 0, $163 | 0, $176 | 0) | 0;
     $208 = $178;
     $211 = $178;
     $221 = $165;
     $222 = $170;
     $223 = $167 + ($175 << 2) | 0;
     break;
    }
    $184 = $170 - $163 >> 1;
    $186 = ($184 | 0) == 0 ? 1 : $184;
    $188 = __Znwj($186 << 2) | 0;
    $191 = $188;
    $192 = $188 + (($186 + 3 | 0) >>> 2 << 2) | 0;
    $193 = $192;
    $195 = $188 + ($186 << 2) | 0;
    if (($162 | 0) == ($167 | 0)) $224 = $193; else {
     $$in$i = $192;
     $198 = $162;
     $200 = $193;
     while (1) {
      HEAP32[$$in$i >> 2] = HEAP32[$198 >> 2];
      $$in$i = $200 + 4 | 0;
      $202 = $$in$i;
      $198 = $198 + 4 | 0;
      if (($198 | 0) == ($167 | 0)) {
       $224 = $202;
       break;
      } else $200 = $202;
     }
    }
    if (!$165) {
     $208 = $192;
     $211 = $193;
     $221 = $191;
     $222 = $195;
     $223 = $224;
    } else {
     __ZdlPv($165);
     $208 = $192;
     $211 = $193;
     $221 = $191;
     $222 = $195;
     $223 = $224;
    }
   } else {
    $208 = $162;
    $211 = $163;
    $221 = $165;
    $222 = $170;
    $223 = $168;
   } while (0);
   HEAP32[$208 + -4 >> 2] = HEAP32[$__i$079 >> 2];
   $213 = $211 + -4 | 0;
   if (($__i$079 | 0) == (HEAP32[$60 >> 2] | 0)) {
    $$lcssa71 = $221;
    $$lcssa73 = $222;
    $$lcssa75 = $223;
    $$lcssa77 = $213;
    break;
   } else {
    $163 = $213;
    $165 = $221;
    $168 = $223;
    $170 = $222;
   }
  }
 }
 $216 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $$lcssa71;
 HEAP32[$60 >> 2] = $$lcssa77;
 HEAP32[$58 >> 2] = $$lcssa75;
 HEAP32[$66 >> 2] = $$lcssa73;
 if (!$216) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($216);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$pre$phi32Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $2 = 0, $3 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $80 = 0, $81 = 0, $84 = 0, $9 = 0, $99 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9060) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 63]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 63]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$1 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   HEAP32[$1 >> 2] = 0;
   HEAP32[$1 + 4 >> 2] = 0;
   HEAP32[$1 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$pre$phiZ2D = $12;
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 63]($2, $12);
   $31 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $31;
   HEAP8[$__pat + 1 >> 0] = $31 >> 8;
   HEAP8[$__pat + 2 >> 0] = $31 >> 16;
   HEAP8[$__pat + 3 >> 0] = $31 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 63]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$3 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$pre$phiZ2D = $12;
  }
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 20 >> 2] & 63]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 24 >> 2] & 63]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$5 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $80 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 8996) | 0;
  $81 = HEAP32[$80 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$81 + 44 >> 2] & 63]($6, $80);
   $84 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $84;
   HEAP8[$__pat + 1 >> 0] = $84 >> 8;
   HEAP8[$__pat + 2 >> 0] = $84 >> 16;
   HEAP8[$__pat + 3 >> 0] = $84 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$80 >> 2] | 0) + 32 >> 2] & 63]($7, $80);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$7 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$7 >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   HEAP32[$7 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $$pre$phi32Z2D = $80;
  } else {
   FUNCTION_TABLE_vii[HEAP32[$81 + 40 >> 2] & 63]($8, $80);
   $99 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $99;
   HEAP8[$__pat + 1 >> 0] = $99 >> 8;
   HEAP8[$__pat + 2 >> 0] = $99 >> 16;
   HEAP8[$__pat + 3 >> 0] = $99 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$80 >> 2] | 0) + 28 >> 2] & 63]($9, $80);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$9 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   HEAP32[$9 >> 2] = 0;
   HEAP32[$9 + 4 >> 2] = 0;
   HEAP32[$9 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$pre$phi32Z2D = $80;
  }
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 12 >> 2] & 127]($80) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 16 >> 2] & 127]($80) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi32Z2D >> 2] | 0) + 20 >> 2] & 63]($10, $80);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$10 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi32Z2D >> 2] | 0) + 24 >> 2] & 63]($11, $80);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$11 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  HEAP32[$11 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad6mach_o6Reader4ReadEPKhjii($this, $buffer, $size, $expected_cpu_type, $expected_cpu_subtype) {
 $this = $this | 0;
 $buffer = $buffer | 0;
 $size = $size | 0;
 $expected_cpu_type = $expected_cpu_type | 0;
 $expected_cpu_subtype = $expected_cpu_subtype | 0;
 var $$0 = 0, $0 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $132 = 0, $134 = 0, $136 = 0, $161 = 0, $162 = 0, $163 = 0, $168 = 0, $170 = 0, $172 = 0, $197 = 0, $198 = 0, $203 = 0, $205 = 0, $207 = 0, $232 = 0, $233 = 0, $234 = 0, $239 = 0, $241 = 0, $243 = 0, $269 = 0, $27 = 0, $271 = 0, $277 = 0, $278 = 0, $28 = 0, $284 = 0, $288 = 0, $29 = 0, $290 = 0, $297 = 0, $3 = 0, $30 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $35 = 0, $47 = 0, $5 = 0, $51 = 0, $56 = 0, $58 = 0, $60 = 0, $62 = 0, $7 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $95 = 0, $97 = 0, $99 = 0, $expected_magic$0 = 0, $storemerge$i$i13 = 0, $storemerge$i$i20 = 0, $storemerge$i$i27 = 0, $storemerge$i$i34 = 0, $v$2$i$i11 = 0, $v$2$i$i18 = 0, $v$2$i$i25 = 0, $v$2$i$i32 = 0, $v$2$i$i39 = 0, $v$2$i$i45 = 0, label = 0;
 $0 = $this + 4 | 0;
 if (HEAP32[$0 >> 2] | 0) ___assert_fail(23841, 23856, 230, 23887);
 HEAP32[$0 >> 2] = $buffer;
 $3 = $buffer + $size | 0;
 HEAP32[$this + 8 >> 2] = $3;
 $5 = $3;
 if ($size >>> 0 < 4) {
  $7 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$7 >> 2] | 0) + 16 >> 2] & 255]($7);
  $$0 = 0;
  return $$0 | 0;
 }
 $27 = ((HEAPU8[$buffer + 1 >> 0] | 0 | (HEAPU8[$buffer >> 0] | 0) << 8) << 8 | (HEAPU8[$buffer + 2 >> 0] | 0)) << 8 | (HEAPU8[$buffer + 3 >> 0] | 0);
 $28 = $buffer + 4 | 0;
 $29 = ($expected_cpu_type | 0) != -1;
 if ($29) {
  L10 : do if (($expected_cpu_type | 0) < 16777223) {
   switch ($expected_cpu_type | 0) {
   case 7:
   case 12:
    {
     $expected_magic$0 = -822415874;
     break L10;
     break;
    }
   case 18:
    break;
   default:
    {
     label = 10;
     break L10;
    }
   }
   $expected_magic$0 = -17958194;
  } else switch ($expected_cpu_type | 0) {
  case 16777223:
  case 16777228:
   {
    $expected_magic$0 = -805638658;
    break L10;
    break;
   }
  case 16777234:
   {
    $expected_magic$0 = -17958193;
    break L10;
    break;
   }
  default:
   {
    label = 10;
    break L10;
   }
  } while (0);
  if ((label | 0) == 10) {
   $30 = HEAP32[$this >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$30 >> 2] | 0) + 48 >> 2] & 63]($30, $expected_cpu_type);
   $$0 = 0;
   return $$0 | 0;
  }
  if (($expected_magic$0 | 0) != ($27 | 0)) {
   $35 = HEAP32[$this >> 2] | 0;
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 8 >> 2] & 255]($35);
   $$0 = 0;
   return $$0 | 0;
  }
 }
 L24 : do if (($27 | 0) < -17958194) if (($27 | 0) < -805638658) {
  switch ($27 | 0) {
  case -822415874:
   break;
  default:
   {
    label = 18;
    break L24;
   }
  }
  HEAP8[$this + 12 >> 0] = 0;
  HEAP8[$this + 13 >> 0] = 0;
  $269 = 0;
  $56 = 0;
  break;
 } else {
  switch ($27 | 0) {
  case -805638658:
   break;
  default:
   {
    label = 18;
    break L24;
   }
  }
  HEAP8[$this + 12 >> 0] = 0;
  HEAP8[$this + 13 >> 0] = 1;
  $269 = 1;
  $56 = 0;
  break;
 } else switch ($27 | 0) {
 case -17958194:
  {
   HEAP8[$this + 12 >> 0] = 1;
   HEAP8[$this + 13 >> 0] = 0;
   $269 = 0;
   $56 = 1;
   break L24;
   break;
  }
 case -17958193:
  {
   HEAP8[$this + 12 >> 0] = 1;
   HEAP8[$this + 13 >> 0] = 1;
   $269 = 1;
   $56 = 1;
   break L24;
   break;
  }
 default:
  {
   label = 18;
   break L24;
  }
 } while (0);
 if ((label | 0) == 18) {
  $47 = HEAP32[$this >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$47 >> 2] | 0) + 8 >> 2] & 255]($47);
  $$0 = 0;
  return $$0 | 0;
 }
 $51 = $this + 16 | 0;
 if (($5 - $28 | 0) >>> 0 < 4) {
  $301 = 0;
  $87 = -559038737;
  $90 = $5;
 } else {
  $58 = HEAP8[$buffer + 7 >> 0] | 0;
  $60 = HEAP8[$buffer + 6 >> 0] | 0;
  $62 = HEAP8[$buffer + 5 >> 0] | 0;
  if (!($56 << 24 >> 24)) $v$2$i$i45 = (($60 & 255 | ($58 & 255) << 8) << 8 | $62 & 255) << 8 | (HEAPU8[$28 >> 0] | 0); else $v$2$i$i45 = (($62 & 255 | (HEAPU8[$28 >> 0] | 0) << 8) << 8 | $60 & 255) << 8 | $58 & 255;
  $301 = 1;
  $87 = $v$2$i$i45;
  $90 = $buffer + 8 | 0;
 }
 HEAP32[$51 >> 2] = $87;
 $88 = $this + 20 | 0;
 $89 = $90;
 if (($5 - $90 | 0) >>> 0 < 4) {
  $124 = -559038737;
  $127 = $5;
  $302 = 0;
 } else {
  $95 = HEAP8[$89 + 3 >> 0] | 0;
  $97 = HEAP8[$89 + 2 >> 0] | 0;
  $99 = HEAP8[$89 + 1 >> 0] | 0;
  if (!($56 << 24 >> 24)) $v$2$i$i39 = (($97 & 255 | ($95 & 255) << 8) << 8 | $99 & 255) << 8 | (HEAPU8[$89 >> 0] | 0); else $v$2$i$i39 = (($99 & 255 | (HEAPU8[$89 >> 0] | 0) << 8) << 8 | $97 & 255) << 8 | $95 & 255;
  $124 = $v$2$i$i39;
  $127 = $89 + 4 | 0;
  $302 = $301;
 }
 HEAP32[$88 >> 2] = $124;
 $125 = $this + 24 | 0;
 $126 = $127;
 if (($5 - $127 | 0) >>> 0 < 4) {
  $163 = $5;
  $303 = 0;
  $storemerge$i$i34 = -559038737;
 } else {
  $132 = HEAP8[$126 + 3 >> 0] | 0;
  $134 = HEAP8[$126 + 2 >> 0] | 0;
  $136 = HEAP8[$126 + 1 >> 0] | 0;
  if (!($56 << 24 >> 24)) $v$2$i$i32 = (($134 & 255 | ($132 & 255) << 8) << 8 | $136 & 255) << 8 | (HEAPU8[$126 >> 0] | 0); else $v$2$i$i32 = (($136 & 255 | (HEAPU8[$126 >> 0] | 0) << 8) << 8 | $134 & 255) << 8 | $132 & 255;
  $163 = $126 + 4 | 0;
  $303 = $302;
  $storemerge$i$i34 = $v$2$i$i32;
 }
 HEAP32[$125 >> 2] = $storemerge$i$i34;
 $161 = $this + 36 | 0;
 $162 = $163;
 if (($5 - $163 | 0) >>> 0 < 4) {
  $198 = $5;
  $304 = 0;
  $storemerge$i$i27 = -559038737;
 } else {
  $168 = HEAP8[$162 + 3 >> 0] | 0;
  $170 = HEAP8[$162 + 2 >> 0] | 0;
  $172 = HEAP8[$162 + 1 >> 0] | 0;
  if (!($56 << 24 >> 24)) $v$2$i$i25 = (($170 & 255 | ($168 & 255) << 8) << 8 | $172 & 255) << 8 | (HEAPU8[$162 >> 0] | 0); else $v$2$i$i25 = (($172 & 255 | (HEAPU8[$162 >> 0] | 0) << 8) << 8 | $170 & 255) << 8 | $168 & 255;
  $198 = $162 + 4 | 0;
  $304 = $303;
  $storemerge$i$i27 = $v$2$i$i25;
 }
 HEAP32[$161 >> 2] = $storemerge$i$i27;
 $197 = $198;
 if (($5 - $198 | 0) >>> 0 < 4) {
  $234 = $5;
  $305 = 0;
  $storemerge$i$i20 = -559038737;
 } else {
  $203 = HEAP8[$197 + 3 >> 0] | 0;
  $205 = HEAP8[$197 + 2 >> 0] | 0;
  $207 = HEAP8[$197 + 1 >> 0] | 0;
  if (!($56 << 24 >> 24)) $v$2$i$i18 = (($205 & 255 | ($203 & 255) << 8) << 8 | $207 & 255) << 8 | (HEAPU8[$197 >> 0] | 0); else $v$2$i$i18 = (($207 & 255 | (HEAPU8[$197 >> 0] | 0) << 8) << 8 | $205 & 255) << 8 | $203 & 255;
  $234 = $197 + 4 | 0;
  $305 = $304;
  $storemerge$i$i20 = $v$2$i$i18;
 }
 $232 = $this + 40 | 0;
 $233 = $234;
 if (($5 - $234 | 0) >>> 0 < 4) {
  $271 = $5;
  $277 = 0;
  $storemerge$i$i13 = -559038737;
 } else {
  $239 = HEAP8[$233 + 3 >> 0] | 0;
  $241 = HEAP8[$233 + 2 >> 0] | 0;
  $243 = HEAP8[$233 + 1 >> 0] | 0;
  if (!($56 << 24 >> 24)) $v$2$i$i11 = (($241 & 255 | ($239 & 255) << 8) << 8 | $243 & 255) << 8 | (HEAPU8[$233 >> 0] | 0); else $v$2$i$i11 = (($243 & 255 | (HEAPU8[$233 >> 0] | 0) << 8) << 8 | $241 & 255) << 8 | $239 & 255;
  $271 = $233 + 4 | 0;
  $277 = $305;
  $storemerge$i$i13 = $v$2$i$i11;
 }
 HEAP32[$232 >> 2] = $storemerge$i$i13;
 if (!($269 << 24 >> 24)) {
  $290 = $271;
  label = 52;
 } else if (($5 - $271 | 0) >>> 0 >= 4) {
  $290 = $271 + 4 | 0;
  label = 52;
 }
 if ((label | 0) == 52) if ($277 << 24 >> 24) {
  if ($29) if (!(($87 | 0) == ($expected_cpu_type | 0) & ($124 | 0) == ($expected_cpu_subtype | 0))) {
   $284 = HEAP32[$this >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$284 >> 2] | 0) + 12 >> 2] & 31]($284, $87, $124, $expected_cpu_type, $expected_cpu_subtype);
   $$0 = 0;
   return $$0 | 0;
  }
  $288 = $this + 28 | 0;
  if (($5 - $290 | 0) >>> 0 < $storemerge$i$i20 >>> 0) {
   HEAP32[$288 >> 2] = 0;
   HEAP32[$this + 32 >> 2] = $5;
   $297 = HEAP32[$this >> 2] | 0;
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$297 >> 2] | 0) + 20 >> 2] & 255]($297);
   $$0 = 0;
   return $$0 | 0;
  } else {
   HEAP32[$288 >> 2] = $290;
   HEAP32[$this + 32 >> 2] = $290 + $storemerge$i$i20;
   $$0 = 1;
   return $$0 | 0;
  }
 }
 $278 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$278 >> 2] | 0) + 16 >> 2] & 255]($278);
 $$0 = 0;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i18 = 0, $$0$i$i1027 = 0, $$0$i$i24 = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $104 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $118 = 0, $120 = 0, $123 = 0, $124 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $29 = 0, $3 = 0, $30 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $45 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $59 = 0, $61 = 0, $64 = 0, $65 = 0, $69 = 0, $74 = 0, $75 = 0, $81 = 0, $88 = 0, $89 = 0, $98 = 0, $__p$0$i$i23 = 0, $__p$0$i$i926 = 0, $__p$0$ph$i$i = 0, $__p$0$ph$i$i7 = 0, $__v$i$i17 = 0, $cv = 0, $cv1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__v$i$i17 = sp + 108 | 0;
 $cv = sp + 104 | 0;
 $0 = sp + 80 | 0;
 $1 = sp + 64 | 0;
 $2 = sp + 52 | 0;
 $cv1 = sp + 48 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 L1 : do if (($last - $first | 0) > 2) if ((HEAP8[$first >> 0] | 0) == 102) {
  switch (HEAP8[$first + 1 >> 0] | 0) {
  case 112:
   {
    $15 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first + 2 | 0, $last, $cv) | 0;
    $16 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($15, $last) | 0;
    if (($16 | 0) == ($last | 0)) {
     $$0 = $first;
     break L1;
    }
    if ((HEAP8[$16 >> 0] | 0) != 95) {
     $$0 = $first;
     break L1;
    }
    $22 = $16 - $15 | 0;
    if ($22 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($2);
    if ($22 >>> 0 < 11) {
     HEAP8[$2 >> 0] = $22 << 1;
     $__p$0$ph$i$i = $2 + 1 | 0;
    } else {
     $29 = $22 + 16 & -16;
     $30 = _malloc($29) | 0;
     HEAP32[$2 + 8 >> 2] = $30;
     HEAP32[$2 >> 2] = $29 | 1;
     HEAP32[$2 + 4 >> 2] = $22;
     $__p$0$ph$i$i = $30;
    }
    if (($15 | 0) != ($16 | 0)) {
     $$0$i$i24 = $15;
     $__p$0$i$i23 = $__p$0$ph$i$i;
     while (1) {
      HEAP8[$__p$0$i$i23 >> 0] = HEAP8[$$0$i$i24 >> 0] | 0;
      $$0$i$i24 = $$0$i$i24 + 1 | 0;
      if (($$0$i$i24 | 0) == ($16 | 0)) break; else $__p$0$i$i23 = $__p$0$i$i23 + 1 | 0;
     }
    }
    HEAP8[$__p$0$ph$i$i + $22 >> 0] = 0;
    $39 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($2, 0, 26991) | 0;
    HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
    HEAP32[$1 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
    HEAP32[$1 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
    HEAP32[$39 >> 2] = 0;
    HEAP32[$39 + 4 >> 2] = 0;
    HEAP32[$39 + 8 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
    $42 = $db + 4 | 0;
    $43 = HEAP32[$42 >> 2] | 0;
    $45 = HEAP32[$db + 8 >> 2] | 0;
    if ($43 >>> 0 < $45 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($43, $0);
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 24;
    } else {
     $52 = HEAP32[$db >> 2] | 0;
     $53 = $43 - $52 | 0;
     $54 = ($53 | 0) / 24 | 0;
     $55 = $54 + 1 | 0;
     if (($53 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $59 = ($45 - $52 | 0) / 24 | 0;
     if ($59 >>> 0 < 1073741823) {
      $61 = $59 << 1;
      $$0$i$i$i = $61 >>> 0 < $55 >>> 0 ? $55 : $61;
     } else $$0$i$i$i = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17, $$0$i$i$i, $54, $db + 12 | 0);
     $64 = $__v$i$i17 + 8 | 0;
     $65 = HEAP32[$64 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($65, $0);
     HEAP32[$64 >> 2] = $65 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i17);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
    $$0 = $16 + 1 | 0;
    break L1;
    break;
   }
  case 76:
   break;
  default:
   {
    $$0 = $first;
    break L1;
   }
  }
  $69 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first + 2 | 0, $last) | 0;
  if (($69 | 0) == ($last | 0)) $$0 = $first; else if ((HEAP8[$69 >> 0] | 0) == 112) {
   $74 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($69 + 1 | 0, $last, $cv1) | 0;
   $75 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($74, $last) | 0;
   if (($75 | 0) == ($last | 0)) $$0 = $first; else if ((HEAP8[$75 >> 0] | 0) == 95) {
    $81 = $75 - $74 | 0;
    if ($81 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($5);
    if ($81 >>> 0 < 11) {
     HEAP8[$5 >> 0] = $81 << 1;
     $__p$0$ph$i$i7 = $5 + 1 | 0;
    } else {
     $88 = $81 + 16 & -16;
     $89 = _malloc($88) | 0;
     HEAP32[$5 + 8 >> 2] = $89;
     HEAP32[$5 >> 2] = $88 | 1;
     HEAP32[$5 + 4 >> 2] = $81;
     $__p$0$ph$i$i7 = $89;
    }
    if (($74 | 0) != ($75 | 0)) {
     $$0$i$i1027 = $74;
     $__p$0$i$i926 = $__p$0$ph$i$i7;
     while (1) {
      HEAP8[$__p$0$i$i926 >> 0] = HEAP8[$$0$i$i1027 >> 0] | 0;
      $$0$i$i1027 = $$0$i$i1027 + 1 | 0;
      if (($$0$i$i1027 | 0) == ($75 | 0)) break; else $__p$0$i$i926 = $__p$0$i$i926 + 1 | 0;
     }
    }
    HEAP8[$__p$0$ph$i$i7 + $81 >> 0] = 0;
    $98 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 26991) | 0;
    HEAP32[$4 >> 2] = HEAP32[$98 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$98 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$98 + 8 >> 2];
    HEAP32[$98 >> 2] = 0;
    HEAP32[$98 + 4 >> 2] = 0;
    HEAP32[$98 + 8 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    $101 = $db + 4 | 0;
    $102 = HEAP32[$101 >> 2] | 0;
    $104 = HEAP32[$db + 8 >> 2] | 0;
    if ($102 >>> 0 < $104 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($102, $3);
     HEAP32[$101 >> 2] = (HEAP32[$101 >> 2] | 0) + 24;
    } else {
     $111 = HEAP32[$db >> 2] | 0;
     $112 = $102 - $111 | 0;
     $113 = ($112 | 0) / 24 | 0;
     $114 = $113 + 1 | 0;
     if (($112 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
     $118 = ($104 - $111 | 0) / 24 | 0;
     if ($118 >>> 0 < 1073741823) {
      $120 = $118 << 1;
      $$0$i$i$i18 = $120 >>> 0 < $114 >>> 0 ? $114 : $120;
     } else $$0$i$i$i18 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i17, $$0$i$i$i18, $113, $db + 12 | 0);
     $123 = $__v$i$i17 + 8 | 0;
     $124 = HEAP32[$123 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($124, $3);
     HEAP32[$123 >> 2] = $124 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i17);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i17);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$0 = $75 + 1 | 0;
   } else $$0 = $first;
  } else $$0 = $first;
 } else $$0 = $first; else $$0 = $first; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _mbsrtowcs($ws, $src, $wn, $st) {
 $ws = $ws | 0;
 $src = $src | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0, $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $0 = 0, $101 = 0, $107 = 0, $108 = 0, $116 = 0, $118 = 0, $121 = 0, $126 = 0, $128 = 0, $131 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $33 = 0, $40 = 0, $47 = 0, $54 = 0, $63 = 0, $7 = 0, $71 = 0, $87 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $97 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0;
 $0 = HEAP32[$src >> 2] | 0;
 if (!$st) label = 5; else {
  $2 = HEAP32[$st >> 2] | 0;
  if (!$2) label = 5; else if (!$ws) {
   $$36 = $wn;
   $c$2 = $2;
   $s$3 = $0;
   label = 16;
  } else {
   HEAP32[$st >> 2] = 0;
   $$3 = $ws;
   $$7 = $wn;
   $c$4 = $2;
   $s$8 = $0;
   label = 37;
  }
 }
 if ((label | 0) == 5) if (!$ws) {
  $$03 = $wn;
  $s$0 = $0;
  label = 7;
 } else {
  $$02$ph = $ws;
  $$47$ph = $wn;
  $s$5$ph = $0;
  label = 6;
 }
 L7 : while (1) if ((label | 0) == 6) {
  label = 0;
  if (!$$47$ph) {
   $s$5$lcssa = $s$5$ph;
   label = 26;
   break;
  } else {
   $$0219 = $$02$ph;
   $$4718 = $$47$ph;
   $s$520 = $s$5$ph;
  }
  while (1) {
   $63 = HEAP8[$s$520 >> 0] | 0;
   do if ((($63 & 255) + -1 | 0) >>> 0 < 127) if ($$4718 >>> 0 > 4 & ($s$520 & 3 | 0) == 0) {
    $$1 = $$0219;
    $$5 = $$4718;
    $s$6 = $s$520;
    while (1) {
     $71 = HEAP32[$s$6 >> 2] | 0;
     if (($71 + -16843009 | $71) & -2139062144) {
      $$1$lcssa = $$1;
      $$5$lcssa = $$5;
      $$lcssa94 = $71;
      $s$6$lcssa = $s$6;
      label = 32;
      break;
     }
     HEAP32[$$1 >> 2] = $71 & 255;
     HEAP32[$$1 + 4 >> 2] = HEAPU8[$s$6 + 1 >> 0];
     HEAP32[$$1 + 8 >> 2] = HEAPU8[$s$6 + 2 >> 0];
     $87 = $s$6 + 4 | 0;
     $90 = $$1 + 16 | 0;
     HEAP32[$$1 + 12 >> 2] = HEAPU8[$s$6 + 3 >> 0];
     $91 = $$5 + -4 | 0;
     if ($91 >>> 0 > 4) {
      $$1 = $90;
      $$5 = $91;
      $s$6 = $87;
     } else {
      $$lcssa96 = $87;
      $$lcssa97 = $90;
      $$lcssa98 = $91;
      label = 31;
      break;
     }
    }
    if ((label | 0) == 31) {
     label = 0;
     $$2 = $$lcssa97;
     $$6 = $$lcssa98;
     $94 = HEAP8[$$lcssa96 >> 0] | 0;
     $s$7 = $$lcssa96;
     break;
    } else if ((label | 0) == 32) {
     label = 0;
     $$2 = $$1$lcssa;
     $$6 = $$5$lcssa;
     $94 = $$lcssa94 & 255;
     $s$7 = $s$6$lcssa;
     break;
    }
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } while (0);
   $93 = $94 & 255;
   if (($93 + -1 | 0) >>> 0 >= 127) {
    $$2$lcssa = $$2;
    $$6$lcssa = $$6;
    $$lcssa102 = $93;
    $s$7$lcssa = $s$7;
    break;
   }
   $97 = $s$7 + 1 | 0;
   HEAP32[$$2 >> 2] = $93;
   $$4718 = $$6 + -1 | 0;
   if (!$$4718) {
    $s$5$lcssa = $97;
    label = 26;
    break L7;
   } else {
    $$0219 = $$2 + 4 | 0;
    $s$520 = $97;
   }
  }
  $101 = $$lcssa102 + -194 | 0;
  if ($101 >>> 0 > 50) {
   $$434 = $$2$lcssa;
   $$833 = $$6$lcssa;
   $s$1035 = $s$7$lcssa;
   label = 48;
   break;
  }
  $$3 = $$2$lcssa;
  $$7 = $$6$lcssa;
  $c$4 = HEAP32[5360 + ($101 << 2) >> 2] | 0;
  $s$8 = $s$7$lcssa + 1 | 0;
  label = 37;
  continue;
 } else if ((label | 0) == 7) {
  label = 0;
  $7 = HEAP8[$s$0 >> 0] | 0;
  if ((($7 & 255) + -1 | 0) >>> 0 < 127) if (!($s$0 & 3)) {
   $14 = HEAP32[$s$0 >> 2] | 0;
   if (!(($14 + -16843009 | $14) & -2139062144)) {
    $$1415 = $$03;
    $s$116 = $s$0;
    while (1) {
     $19 = $s$116 + 4 | 0;
     $20 = $$1415 + -4 | 0;
     $21 = HEAP32[$19 >> 2] | 0;
     if (!(($21 + -16843009 | $21) & -2139062144)) {
      $$1415 = $20;
      $s$116 = $19;
     } else {
      $$14$lcssa = $20;
      $$in = $21;
      $s$1$lcssa = $19;
      break;
     }
    }
   } else {
    $$14$lcssa = $$03;
    $$in = $14;
    $s$1$lcssa = $s$0;
   }
   $$25 = $$14$lcssa;
   $28 = $$in & 255;
   $s$2 = $s$1$lcssa;
  } else {
   $$25 = $$03;
   $28 = $7;
   $s$2 = $s$0;
  } else {
   $$25 = $$03;
   $28 = $7;
   $s$2 = $s$0;
  }
  $27 = $28 & 255;
  if (($27 + -1 | 0) >>> 0 < 127) {
   $$03 = $$25 + -1 | 0;
   $s$0 = $s$2 + 1 | 0;
   label = 7;
   continue;
  } else {
   $$25$lcssa = $$25;
   $$lcssa90 = $27;
   $s$2$lcssa = $s$2;
  }
  $33 = $$lcssa90 + -194 | 0;
  if ($33 >>> 0 > 50) {
   $$434 = $ws;
   $$833 = $$25$lcssa;
   $s$1035 = $s$2$lcssa;
   label = 48;
   break;
  }
  $$36 = $$25$lcssa;
  $c$2 = HEAP32[5360 + ($33 << 2) >> 2] | 0;
  $s$3 = $s$2$lcssa + 1 | 0;
  label = 16;
  continue;
 } else if ((label | 0) == 16) {
  label = 0;
  $40 = (HEAPU8[$s$3 >> 0] | 0) >>> 3;
  if (($40 + -16 | $40 + ($c$2 >> 26)) >>> 0 > 7) {
   label = 17;
   break;
  }
  $47 = $s$3 + 1 | 0;
  if (!($c$2 & 33554432)) $s$4 = $47; else {
   if ((HEAP8[$47 >> 0] & -64) << 24 >> 24 != -128) {
    label = 20;
    break;
   }
   $54 = $s$3 + 2 | 0;
   if (!($c$2 & 524288)) $s$4 = $54; else {
    if ((HEAP8[$54 >> 0] & -64) << 24 >> 24 != -128) {
     label = 23;
     break;
    }
    $s$4 = $s$3 + 3 | 0;
   }
  }
  $$03 = $$36 + -1 | 0;
  $s$0 = $s$4;
  label = 7;
  continue;
 } else if ((label | 0) == 37) {
  label = 0;
  $107 = HEAPU8[$s$8 >> 0] | 0;
  $108 = $107 >>> 3;
  if (($108 + -16 | $108 + ($c$4 >> 26)) >>> 0 > 7) {
   label = 38;
   break;
  }
  $116 = $s$8 + 1 | 0;
  $118 = $107 + -128 | $c$4 << 6;
  if (($118 | 0) < 0) {
   $121 = HEAPU8[$116 >> 0] | 0;
   if (($121 & 192 | 0) != 128) {
    label = 41;
    break;
   }
   $126 = $s$8 + 2 | 0;
   $128 = $121 + -128 | $118 << 6;
   if (($128 | 0) < 0) {
    $131 = HEAPU8[$126 >> 0] | 0;
    if (($131 & 192 | 0) != 128) {
     label = 44;
     break;
    }
    $c$5 = $131 + -128 | $128 << 6;
    $s$9 = $s$8 + 3 | 0;
   } else {
    $c$5 = $128;
    $s$9 = $126;
   }
  } else {
   $c$5 = $118;
   $s$9 = $116;
  }
  HEAP32[$$3 >> 2] = $c$5;
  $$02$ph = $$3 + 4 | 0;
  $$47$ph = $$7 + -1 | 0;
  $s$5$ph = $s$9;
  label = 6;
  continue;
 }
 if ((label | 0) == 17) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 20) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 23) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 26) {
  HEAP32[$src >> 2] = $s$5$lcssa;
  $$0 = $wn;
  return $$0 | 0;
 } else if ((label | 0) == 38) {
  $$4 = $$3;
  $$8 = $$7;
  $c$6 = $c$4;
  $s$10 = $s$8 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 41) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
 } else if ((label | 0) == 44) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
 }
 if ((label | 0) == 47) if (!$c$6) {
  $$434 = $$4;
  $$833 = $$8;
  $s$1035 = $s$10;
  label = 48;
 } else {
  $$48 = $$4;
  $s$109 = $s$10;
 }
 if ((label | 0) == 48) if (!(HEAP8[$s$1035 >> 0] | 0)) {
  if ($$434) {
   HEAP32[$$434 >> 2] = 0;
   HEAP32[$src >> 2] = 0;
  }
  $$0 = $wn - $$833 | 0;
  return $$0 | 0;
 } else {
  $$48 = $$434;
  $s$109 = $s$1035;
 }
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 if (!$$48) {
  $$0 = -1;
  return $$0 | 0;
 }
 HEAP32[$src >> 2] = $s$109;
 $$0 = -1;
 return $$0 | 0;
}

function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $2 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $77 = 0, $78 = 0, $8 = 0, $81 = 0, $9 = 0, $95 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9188) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 63]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 63]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$1 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   HEAP32[$1 >> 2] = 0;
   HEAP32[$1 + 4 >> 2] = 0;
   HEAP32[$1 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 63]($2, $12);
   $30 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $30;
   HEAP8[$__pat + 1 >> 0] = $30 >> 8;
   HEAP8[$__pat + 2 >> 0] = $30 >> 16;
   HEAP8[$__pat + 3 >> 0] = $30 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 63]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$3 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 63]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 63]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$5 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $77 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9124) | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$78 + 44 >> 2] & 63]($6, $77);
   $81 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $81;
   HEAP8[$__pat + 1 >> 0] = $81 >> 8;
   HEAP8[$__pat + 2 >> 0] = $81 >> 16;
   HEAP8[$__pat + 3 >> 0] = $81 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$77 >> 2] | 0) + 32 >> 2] & 63]($7, $77);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$7 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   HEAP32[$7 >> 2] = 0;
   HEAP32[$7 + 4 >> 2] = 0;
   HEAP32[$7 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   FUNCTION_TABLE_vii[HEAP32[$78 + 40 >> 2] & 63]($8, $77);
   $95 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $95;
   HEAP8[$__pat + 1 >> 0] = $95 >> 8;
   HEAP8[$__pat + 2 >> 0] = $95 >> 16;
   HEAP8[$__pat + 3 >> 0] = $95 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$77 >> 2] | 0) + 28 >> 2] & 63]($9, $77);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn, 0);
   HEAP32[$__sn >> 2] = HEAP32[$9 >> 2];
   HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   HEAP32[$9 >> 2] = 0;
   HEAP32[$9 + 4 >> 2] = 0;
   HEAP32[$9 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$77 >> 2] | 0) + 12 >> 2] & 127]($77) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$77 >> 2] | 0) + 16 >> 2] & 127]($77) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$77 >> 2] | 0) + 20 >> 2] & 63]($10, $77);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$10 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$77 >> 2] | 0) + 24 >> 2] & 63]($11, $77);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$11 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  HEAP32[$11 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$77 >> 2] | 0) + 36 >> 2] & 127]($77) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNK15google_breakpad11DumpSymbols9ReadDwarfEPNS_6ModuleERKNS_6mach_o6ReaderERKNSt3__13mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS3_7SectionENS7_4lessISE_EENSC_INS7_4pairIKSE_SF_EEEEEEb($this, $module, $macho_reader, $dwarf_sections, $handle_inter_cu_refs) {
 $this = $this | 0;
 $module = $module | 0;
 $macho_reader = $macho_reader | 0;
 $dwarf_sections = $dwarf_sections | 0;
 $handle_inter_cu_refs = $handle_inter_cu_refs | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $0 = 0, $10 = 0, $102 = 0, $11 = 0, $13 = 0, $20 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $37 = 0, $44 = 0, $45 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $68 = 0, $7 = 0, $70 = 0, $74 = 0, $76 = 0, $78 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $__f$01$i$i$i$i$i$i$i$i$i19 = 0, $byte_reader = 0, $die_dispatcher = 0, $dwarf_reader = 0, $file_context = 0, $line_to_module = 0, $reporter = 0, $root_handler = 0, $vararg_buffer = 0, sp = 0, $__f$01$i$i$i$i$i$i$i$i$i19$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368 | 0;
 $vararg_buffer = sp + 256 | 0;
 $byte_reader = sp + 184 | 0;
 $file_context = sp + 328 | 0;
 $0 = sp + 316 | 0;
 $line_to_module = sp + 296 | 0;
 $reporter = sp + 144 | 0;
 $root_handler = sp + 96 | 0;
 $die_dispatcher = sp + 264 | 0;
 $dwarf_reader = sp;
 __ZN12dwarf2reader10ByteReaderC2ENS_10EndiannessE($byte_reader, (HEAPU8[$macho_reader + 12 >> 0] | 0) ^ 1);
 $5 = $this + 52 | 0;
 __ZN15google_breakpad15DwarfCUToModule11FileContextC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_6ModuleEb($file_context, $5, $module, $handle_inter_cu_refs);
 $6 = HEAP32[$dwarf_sections >> 2] | 0;
 $7 = $dwarf_sections + 4 | 0;
 L1 : do if (($6 | 0) != ($7 | 0)) {
  $10 = $6;
  while (1) {
   $11 = HEAP32[$10 + 32 >> 2] | 0;
   $13 = HEAP32[$10 + 36 >> 2] | 0;
   if ($11 >>> 0 > $13 >>> 0) break;
   __ZN15google_breakpad15DwarfCUToModule11FileContext22AddSectionToSectionMapERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcy($file_context, $10 + 16 | 0, $11, $13 - $11 | 0, 0);
   $20 = HEAP32[$10 + 4 >> 2] | 0;
   if (!$20) {
    $$01$i$i$i = $10;
    while (1) {
     $25 = HEAP32[$$01$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$25 >> 2] | 0) == ($$01$i$i$i | 0)) {
      $$0$i$i$i = $25;
      break;
     } else $$01$i$i$i = $25;
    }
   } else {
    $$0$i$i$i$i = $20;
    while (1) {
     $22 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$22) {
      $$0$i$i$i = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $22;
    }
   }
   if (($$0$i$i$i | 0) == ($7 | 0)) break L1; else $10 = $$0$i$i$i;
  }
  ___assert_fail(22901, 22914, 70, 22941);
 } while (0);
 $29 = __ZNK15google_breakpad15DwarfCUToModule11FileContext11section_mapEv($file_context) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 21899, 12);
 $30 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($29, $0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 if (($30 | 0) == ((__ZNK15google_breakpad15DwarfCUToModule11FileContext11section_mapEv($file_context) | 0) + 4 | 0)) ___assert_fail(21912, 21646, 356, 21965);
 if (!(HEAP32[$30 + 32 >> 2] | 0)) {
  $37 = HEAP32[_stderr >> 2] | 0;
  if (!(HEAP8[$5 >> 0] & 1)) $44 = $5 + 1 | 0; else $44 = HEAP32[$this + 60 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $44;
  _fprintf($37 | 0, 21975, $vararg_buffer | 0) | 0;
  $$0 = 0;
  __ZN15google_breakpad15DwarfCUToModule11FileContextD2Ev($file_context);
  __ZN12dwarf2reader10ByteReaderD2Ev($byte_reader);
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$line_to_module >> 2] = 5212;
 $45 = $line_to_module + 4 | 0;
 HEAP32[$45 >> 2] = 0;
 HEAP32[$45 + 4 >> 2] = 0;
 HEAP32[$45 + 8 >> 2] = 0;
 HEAP32[$line_to_module + 16 >> 2] = $byte_reader;
 $48 = $30 + 40 | 0;
 $50 = HEAP32[$48 >> 2] | 0;
 $53 = HEAP32[$48 + 4 >> 2] | 0;
 if (!(($50 | 0) == 0 & ($53 | 0) == 0)) {
  $57 = $reporter + 4 | 0;
  $58 = $reporter + 16 | 0;
  $59 = $reporter + 24 | 0;
  $60 = $die_dispatcher + 4 | 0;
  $61 = $die_dispatcher + 28 | 0;
  $62 = $dwarf_reader + 80 | 0;
  $65 = 0;
  $68 = 0;
  do {
   HEAP32[$reporter >> 2] = 4268;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($57, $5);
   $63 = $58;
   HEAP32[$63 >> 2] = $65;
   HEAP32[$63 + 4 >> 2] = $68;
   HEAP32[$59 >> 2] = 0;
   HEAP32[$59 + 4 >> 2] = 0;
   HEAP32[$59 + 8 >> 2] = 0;
   HEAP16[$59 + 12 >> 1] = 0;
   HEAP8[$59 + 14 >> 0] = 0;
   __ZN15google_breakpad15DwarfCUToModuleC2EPNS0_11FileContextEPNS0_19LineToModuleHandlerEPNS0_15WarningReporterE($root_handler, $file_context, $line_to_module, $reporter);
   HEAP32[$die_dispatcher >> 2] = 4672;
   HEAP32[$60 >> 2] = 0;
   HEAP32[$60 + 4 >> 2] = 0;
   HEAP32[$60 + 8 >> 2] = 0;
   HEAP32[$60 + 12 >> 2] = 0;
   HEAP32[$60 + 16 >> 2] = 0;
   HEAP32[$60 + 20 >> 2] = 0;
   HEAP32[$61 >> 2] = $root_handler;
   __ZN12dwarf2reader15CompilationUnitC2ERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4pairIPKcyEENS1_4lessIS8_EENS6_INS9_IKS8_SC_EEEEEEyPNS_10ByteReaderEPNS_13Dwarf2HandlerE($dwarf_reader, __ZNK15google_breakpad15DwarfCUToModule11FileContext11section_mapEv($file_context) | 0, $65, $68, $byte_reader, $die_dispatcher);
   $70 = __ZN12dwarf2reader15CompilationUnit5StartEv($dwarf_reader) | 0;
   $65 = _i64Add($70 | 0, tempRet0 | 0, $65 | 0, $68 | 0) | 0;
   $68 = tempRet0;
   HEAP32[$dwarf_reader >> 2] = 4792;
   $74 = HEAP32[$62 >> 2] | 0;
   if ($74) {
    $76 = HEAP32[$74 >> 2] | 0;
    if ($76) {
     $78 = $74 + 4 | 0;
     $79 = HEAP32[$78 >> 2] | 0;
     if (($79 | 0) == ($76 | 0)) $102 = $76; else {
      $82 = $79;
      while (1) {
       $81 = $82 + -32 | 0;
       HEAP32[$78 >> 2] = $81;
       $83 = $82 + -16 | 0;
       $84 = $82 + -8 | 0;
       if (!(HEAP32[$84 >> 2] | 0)) $88 = $81; else {
        $90 = HEAP32[$82 + -12 >> 2] | 0;
        $92 = (HEAP32[$83 >> 2] | 0) + 4 | 0;
        $94 = HEAP32[$90 >> 2] | 0;
        HEAP32[$94 + 4 >> 2] = HEAP32[$92 >> 2];
        HEAP32[HEAP32[$92 >> 2] >> 2] = $94;
        HEAP32[$84 >> 2] = 0;
        if (($90 | 0) == ($83 | 0)) $88 = $81; else {
         $__f$01$i$i$i$i$i$i$i$i$i19 = $90;
         do {
          $__f$01$i$i$i$i$i$i$i$i$i19$looptemp = $__f$01$i$i$i$i$i$i$i$i$i19;
          $__f$01$i$i$i$i$i$i$i$i$i19 = HEAP32[$__f$01$i$i$i$i$i$i$i$i$i19 + 4 >> 2] | 0;
          __ZdlPv($__f$01$i$i$i$i$i$i$i$i$i19$looptemp);
         } while (($__f$01$i$i$i$i$i$i$i$i$i19 | 0) != ($83 | 0));
         $88 = HEAP32[$78 >> 2] | 0;
        }
       }
       if (($88 | 0) == ($76 | 0)) break; else $82 = $88;
      }
      $102 = HEAP32[$74 >> 2] | 0;
     }
     __ZdlPv($102);
    }
    __ZdlPv($74);
   }
   __ZN12dwarf2reader13DIEDispatcherD2Ev($die_dispatcher);
   __ZN15google_breakpad15DwarfCUToModuleD2Ev($root_handler);
   HEAP32[$reporter >> 2] = 4268;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
  } while ($68 >>> 0 < $53 >>> 0 | ($68 | 0) == ($53 | 0) & $65 >>> 0 < $50 >>> 0);
 }
 HEAP32[$line_to_module >> 2] = 5212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
 $$0 = 1;
 __ZN15google_breakpad15DwarfCUToModule11FileContextD2Ev($file_context);
 __ZN12dwarf2reader10ByteReaderD2Ev($byte_reader);
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN15google_breakpad11StabsReader15ProcessFunctionEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$lcssa57 = 0, $$pre = 0, $$pre1$i = 0, $$sink29 = 0, $$sink29$lcssa56 = 0, $0 = 0, $1 = 0, $10 = 0, $108 = 0, $110 = 0, $111 = 0, $117 = 0, $120 = 0, $123 = 0, $13 = 0, $130 = 0, $132 = 0, $133 = 0, $139 = 0, $14 = 0, $142 = 0, $145 = 0, $148 = 0, $150 = 0, $153 = 0, $154 = 0, $155 = 0, $158 = 0, $16 = 0, $164 = 0, $168 = 0, $169 = 0, $18 = 0, $20 = 0, $22 = 0, $29 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $44 = 0, $45 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $60 = 0, $61 = 0, $65 = 0, $7 = 0, $8 = 0, $82 = 0, $83 = 0, $84 = 0, $86 = 0, $92 = 0, $95 = 0, $name = 0, $name_end$0 = 0, $offset$0$i = 0, $offset$0$i12 = 0, $offset$0$i5 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer5 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $name = sp + 20 | 0;
 $0 = $this + 16 | 0;
 $1 = $this + 32 | 0;
 if (HEAP8[$1 >> 0] | 0) ___assert_fail(17038, 16769, 291, 17085);
 $4 = $this + 44 | 0;
 if ((HEAP8[$4 >> 0] | 0) != 36) ___assert_fail(17038, 16769, 291, 17085);
 $7 = $this + 48 | 0;
 $8 = $7;
 $10 = HEAP32[$8 >> 2] | 0;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $14 = $this + 64 | 0;
 $16 = $this + 40 | 0;
 $18 = (HEAP32[$16 >> 2] | 0) + (HEAP32[$14 >> 2] | 0) | 0;
 $$pre1$i = $this + 8 | 0;
 do if (($18 | 0) < 0) label = 8; else {
  $20 = HEAP32[$$pre1$i >> 2] | 0;
  $22 = HEAP32[$this + 12 >> 2] | 0;
  if ($20 >>> 0 > $22 >>> 0) ___assert_fail(22901, 22914, 70, 22941); else if ($18 >>> 0 < ($22 - $20 | 0) >>> 0) {
   $36 = $20;
   $offset$0$i = $18;
   break;
  } else {
   label = 8;
   break;
  }
 } while (0);
 if ((label | 0) == 8) {
  $29 = HEAP32[$this + 60 >> 2] | 0;
  $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + 32 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[$this + 36 >> 2];
  FUNCTION_TABLE_viii[$32 & 15]($29, 16810, $vararg_buffer);
  $36 = HEAP32[$$pre1$i >> 2] | 0;
  $offset$0$i = 0;
 }
 $35 = $36 + $offset$0$i | 0;
 $37 = _strchr($35, 58) | 0;
 if (!$37) $name_end$0 = $36 + ((_strlen($35 | 0) | 0) + $offset$0$i) | 0; else $name_end$0 = $37;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($name, $35, $name_end$0 - $35 | 0);
 $44 = $this + 60 | 0;
 $45 = HEAP32[$44 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$45 >> 2] | 0) + 16 >> 2] & 31]($45, $name, $10, $13) | 0)) {
  $$0 = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
  STACKTOP = sp;
  return $$0 | 0;
 }
 __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
 $50 = $this + 36 | 0;
 HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 1;
 $53 = $this + 76 | 0;
 $54 = HEAP32[$53 >> 2] | 0;
 $55 = $this + 80 | 0;
 if (($54 | 0) != (HEAP32[$55 >> 2] | 0)) {
  $$sink29 = $54;
  while (1) {
   $61 = HEAP32[$44 >> 2] | 0;
   $65 = $$sink29;
   $60 = $$sink29 + 16 | 0;
   if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$61 >> 2] | 0) + 24 >> 2] & 63]($61, HEAP32[$65 >> 2] | 0, HEAP32[$65 + 4 >> 2] | 0, HEAP32[$$sink29 + 8 >> 2] | 0, HEAP32[$$sink29 + 12 >> 2] | 0) | 0)) {
    $$0 = 0;
    label = 39;
    break;
   }
   if (($60 | 0) == (HEAP32[$55 >> 2] | 0)) {
    $$lcssa57 = $60;
    $$sink29$lcssa56 = $$sink29;
    break;
   } else $$sink29 = $60;
  }
  if ((label | 0) == 39) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
   STACKTOP = sp;
   return $$0 | 0;
  }
  $$pre = HEAP32[$53 >> 2] | 0;
  if (($$lcssa57 | 0) != ($$pre | 0)) HEAP32[$55 >> 2] = $$sink29$lcssa56 + (0 - (($$sink29$lcssa56 - $$pre | 0) >>> 4) << 4);
 }
 L30 : do if (!(HEAP8[$1 >> 0] | 0)) {
  $82 = $this + 46 | 0;
  $83 = $this + 72 | 0;
  $84 = $this + 12 | 0;
  L32 : while (1) {
   switch (HEAP8[$4 >> 0] | 0) {
   case 100:
    {
     label = 37;
     break L32;
     break;
    }
   case 36:
    {
     label = 30;
     break L32;
     break;
    }
   case -124:
    {
     $108 = (HEAP32[$16 >> 2] | 0) + (HEAP32[$14 >> 2] | 0) | 0;
     if (($108 | 0) < 0) label = 27; else {
      $110 = HEAP32[$$pre1$i >> 2] | 0;
      $111 = HEAP32[$84 >> 2] | 0;
      if ($110 >>> 0 > $111 >>> 0) {
       label = 25;
       break L32;
      }
      if ($108 >>> 0 < ($111 - $110 | 0) >>> 0) {
       $123 = $110;
       $offset$0$i12 = $108;
      } else label = 27;
     }
     if ((label | 0) == 27) {
      label = 0;
      $117 = HEAP32[$44 >> 2] | 0;
      $120 = HEAP32[(HEAP32[$117 >> 2] | 0) + 32 >> 2] | 0;
      HEAP32[$vararg_buffer1 >> 2] = HEAP32[$50 >> 2];
      FUNCTION_TABLE_viii[$120 & 15]($117, 16810, $vararg_buffer1);
      $123 = HEAP32[$$pre1$i >> 2] | 0;
      $offset$0$i12 = 0;
     }
     HEAP32[$83 >> 2] = $123 + $offset$0$i12;
     __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
     HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 1;
     break;
    }
   case 68:
    {
     $86 = $7;
     $92 = _i64Add(HEAP32[$86 >> 2] | 0, HEAP32[$86 + 4 >> 2] | 0, $10 | 0, $13 | 0) | 0;
     $95 = HEAP32[$44 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$95 >> 2] | 0) + 24 >> 2] & 63]($95, $92, tempRet0, HEAP32[$83 >> 2] | 0, HEAPU16[$82 >> 1] | 0) | 0)) {
      $$0 = 0;
      label = 39;
      break L32;
     }
     __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
     HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 1;
     break;
    }
   default:
    {
     __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
     HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 1;
    }
   }
   if (HEAP8[$1 >> 0] | 0) {
    $168 = 0;
    $169 = 0;
    break L30;
   }
  }
  if ((label | 0) == 25) ___assert_fail(22901, 22914, 70, 22941); else if ((label | 0) == 30) {
   $130 = (HEAP32[$16 >> 2] | 0) + (HEAP32[$14 >> 2] | 0) | 0;
   do if (($130 | 0) < 0) label = 34; else {
    $132 = HEAP32[$$pre1$i >> 2] | 0;
    $133 = HEAP32[$84 >> 2] | 0;
    if ($132 >>> 0 > $133 >>> 0) ___assert_fail(22901, 22914, 70, 22941); else if ($130 >>> 0 < ($133 - $132 | 0) >>> 0) {
     $145 = $132;
     $offset$0$i5 = $130;
     break;
    } else {
     label = 34;
     break;
    }
   } while (0);
   if ((label | 0) == 34) {
    $139 = HEAP32[$44 >> 2] | 0;
    $142 = HEAP32[(HEAP32[$139 >> 2] | 0) + 32 >> 2] | 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$50 >> 2];
    FUNCTION_TABLE_viii[$142 & 15]($139, 16810, $vararg_buffer5);
    $145 = HEAP32[$$pre1$i >> 2] | 0;
    $offset$0$i5 = 0;
   }
   $148 = $7;
   $150 = HEAP32[$148 >> 2] | 0;
   $153 = HEAP32[$148 + 4 >> 2] | 0;
   if (HEAP8[$145 + $offset$0$i5 >> 0] | 0) {
    $168 = $150;
    $169 = $153;
    break;
   }
   $154 = _i64Add($150 | 0, $153 | 0, $10 | 0, $13 | 0) | 0;
   $155 = tempRet0;
   __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
   HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 1;
   $168 = $154;
   $169 = $155;
   break;
  } else if ((label | 0) == 37) {
   $158 = $7;
   $168 = HEAP32[$158 >> 2] | 0;
   $169 = HEAP32[$158 + 4 >> 2] | 0;
   break;
  } else if ((label | 0) == 39) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  $168 = 0;
  $169 = 0;
 } while (0);
 $164 = HEAP32[$44 >> 2] | 0;
 $$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$164 >> 2] | 0) + 20 >> 2] & 31]($164, $168, $169) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__118__insertion_sort_3IRPFbRKN15google_breakpad6Module4LineES5_EPS3_EEvT0_SA_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $18 = 0, $3 = 0, $5 = 0, $__i$02 = 0, $__j$01 = 0, $__j$01$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0, $__t = 0, $__t$i4$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__t$i4$i = sp + 24 | 0;
 $__t = sp;
 $0 = $__first + 48 | 0;
 $1 = $__first + 24 | 0;
 $3 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($1, $__first) | 0;
 $5 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($0, $1) | 0;
 do if ($3) {
  if ($5) {
   HEAP32[$__t$i4$i >> 2] = HEAP32[$__first >> 2];
   HEAP32[$__t$i4$i + 4 >> 2] = HEAP32[$__first + 4 >> 2];
   HEAP32[$__t$i4$i + 8 >> 2] = HEAP32[$__first + 8 >> 2];
   HEAP32[$__t$i4$i + 12 >> 2] = HEAP32[$__first + 12 >> 2];
   HEAP32[$__t$i4$i + 16 >> 2] = HEAP32[$__first + 16 >> 2];
   HEAP32[$__t$i4$i + 20 >> 2] = HEAP32[$__first + 20 >> 2];
   HEAP32[$__first >> 2] = HEAP32[$0 >> 2];
   HEAP32[$__first + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$__first + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   HEAP32[$__first + 12 >> 2] = HEAP32[$0 + 12 >> 2];
   HEAP32[$__first + 16 >> 2] = HEAP32[$0 + 16 >> 2];
   HEAP32[$__first + 20 >> 2] = HEAP32[$0 + 20 >> 2];
   HEAP32[$0 >> 2] = HEAP32[$__t$i4$i >> 2];
   HEAP32[$0 + 4 >> 2] = HEAP32[$__t$i4$i + 4 >> 2];
   HEAP32[$0 + 8 >> 2] = HEAP32[$__t$i4$i + 8 >> 2];
   HEAP32[$0 + 12 >> 2] = HEAP32[$__t$i4$i + 12 >> 2];
   HEAP32[$0 + 16 >> 2] = HEAP32[$__t$i4$i + 16 >> 2];
   HEAP32[$0 + 20 >> 2] = HEAP32[$__t$i4$i + 20 >> 2];
   break;
  };
  HEAP32[$__t$i4$i >> 2] = HEAP32[$__first >> 2];
  HEAP32[$__t$i4$i + 4 >> 2] = HEAP32[$__first + 4 >> 2];
  HEAP32[$__t$i4$i + 8 >> 2] = HEAP32[$__first + 8 >> 2];
  HEAP32[$__t$i4$i + 12 >> 2] = HEAP32[$__first + 12 >> 2];
  HEAP32[$__t$i4$i + 16 >> 2] = HEAP32[$__first + 16 >> 2];
  HEAP32[$__t$i4$i + 20 >> 2] = HEAP32[$__first + 20 >> 2];
  HEAP32[$__first >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__first + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__first + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$__first + 12 >> 2] = HEAP32[$1 + 12 >> 2];
  HEAP32[$__first + 16 >> 2] = HEAP32[$1 + 16 >> 2];
  HEAP32[$__first + 20 >> 2] = HEAP32[$1 + 20 >> 2];
  HEAP32[$1 >> 2] = HEAP32[$__t$i4$i >> 2];
  HEAP32[$1 + 4 >> 2] = HEAP32[$__t$i4$i + 4 >> 2];
  HEAP32[$1 + 8 >> 2] = HEAP32[$__t$i4$i + 8 >> 2];
  HEAP32[$1 + 12 >> 2] = HEAP32[$__t$i4$i + 12 >> 2];
  HEAP32[$1 + 16 >> 2] = HEAP32[$__t$i4$i + 16 >> 2];
  HEAP32[$1 + 20 >> 2] = HEAP32[$__t$i4$i + 20 >> 2];
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($0, $1) | 0) {
   HEAP32[$__t$i4$i >> 2] = HEAP32[$1 >> 2];
   HEAP32[$__t$i4$i + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__t$i4$i + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   HEAP32[$__t$i4$i + 12 >> 2] = HEAP32[$1 + 12 >> 2];
   HEAP32[$__t$i4$i + 16 >> 2] = HEAP32[$1 + 16 >> 2];
   HEAP32[$__t$i4$i + 20 >> 2] = HEAP32[$1 + 20 >> 2];
   HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$1 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   HEAP32[$1 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
   HEAP32[$1 + 16 >> 2] = HEAP32[$0 + 16 >> 2];
   HEAP32[$1 + 20 >> 2] = HEAP32[$0 + 20 >> 2];
   HEAP32[$0 >> 2] = HEAP32[$__t$i4$i >> 2];
   HEAP32[$0 + 4 >> 2] = HEAP32[$__t$i4$i + 4 >> 2];
   HEAP32[$0 + 8 >> 2] = HEAP32[$__t$i4$i + 8 >> 2];
   HEAP32[$0 + 12 >> 2] = HEAP32[$__t$i4$i + 12 >> 2];
   HEAP32[$0 + 16 >> 2] = HEAP32[$__t$i4$i + 16 >> 2];
   HEAP32[$0 + 20 >> 2] = HEAP32[$__t$i4$i + 20 >> 2];
  }
 } else if ($5) {
  HEAP32[$__t$i4$i >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__t$i4$i + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__t$i4$i + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$__t$i4$i + 12 >> 2] = HEAP32[$1 + 12 >> 2];
  HEAP32[$__t$i4$i + 16 >> 2] = HEAP32[$1 + 16 >> 2];
  HEAP32[$__t$i4$i + 20 >> 2] = HEAP32[$1 + 20 >> 2];
  HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$1 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$1 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$1 + 16 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$1 + 20 >> 2] = HEAP32[$0 + 20 >> 2];
  HEAP32[$0 >> 2] = HEAP32[$__t$i4$i >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$__t$i4$i + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$__t$i4$i + 8 >> 2];
  HEAP32[$0 + 12 >> 2] = HEAP32[$__t$i4$i + 12 >> 2];
  HEAP32[$0 + 16 >> 2] = HEAP32[$__t$i4$i + 16 >> 2];
  HEAP32[$0 + 20 >> 2] = HEAP32[$__t$i4$i + 20 >> 2];
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($1, $__first) | 0) {
   HEAP32[$__t$i4$i >> 2] = HEAP32[$__first >> 2];
   HEAP32[$__t$i4$i + 4 >> 2] = HEAP32[$__first + 4 >> 2];
   HEAP32[$__t$i4$i + 8 >> 2] = HEAP32[$__first + 8 >> 2];
   HEAP32[$__t$i4$i + 12 >> 2] = HEAP32[$__first + 12 >> 2];
   HEAP32[$__t$i4$i + 16 >> 2] = HEAP32[$__first + 16 >> 2];
   HEAP32[$__t$i4$i + 20 >> 2] = HEAP32[$__first + 20 >> 2];
   HEAP32[$__first >> 2] = HEAP32[$1 >> 2];
   HEAP32[$__first + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$__first + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   HEAP32[$__first + 12 >> 2] = HEAP32[$1 + 12 >> 2];
   HEAP32[$__first + 16 >> 2] = HEAP32[$1 + 16 >> 2];
   HEAP32[$__first + 20 >> 2] = HEAP32[$1 + 20 >> 2];
   HEAP32[$1 >> 2] = HEAP32[$__t$i4$i >> 2];
   HEAP32[$1 + 4 >> 2] = HEAP32[$__t$i4$i + 4 >> 2];
   HEAP32[$1 + 8 >> 2] = HEAP32[$__t$i4$i + 8 >> 2];
   HEAP32[$1 + 12 >> 2] = HEAP32[$__t$i4$i + 12 >> 2];
   HEAP32[$1 + 16 >> 2] = HEAP32[$__t$i4$i + 16 >> 2];
   HEAP32[$1 + 20 >> 2] = HEAP32[$__t$i4$i + 20 >> 2];
  }
 } while (0);
 $10 = $__first + 72 | 0;
 if (($10 | 0) == ($__last | 0)) {
  STACKTOP = sp;
  return;
 }
 $__i$02 = $10;
 $__j$01 = $0;
 while (1) {
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($__i$02, $__j$01) | 0) {
   HEAP32[$__t >> 2] = HEAP32[$__i$02 >> 2];
   HEAP32[$__t + 4 >> 2] = HEAP32[$__i$02 + 4 >> 2];
   HEAP32[$__t + 8 >> 2] = HEAP32[$__i$02 + 8 >> 2];
   HEAP32[$__t + 12 >> 2] = HEAP32[$__i$02 + 12 >> 2];
   HEAP32[$__t + 16 >> 2] = HEAP32[$__i$02 + 16 >> 2];
   HEAP32[$__t + 20 >> 2] = HEAP32[$__i$02 + 20 >> 2];
   $__j$1 = $__i$02;
   $__k$0 = $__j$01;
   while (1) {
    HEAP32[$__j$1 >> 2] = HEAP32[$__k$0 >> 2];
    HEAP32[$__j$1 + 4 >> 2] = HEAP32[$__k$0 + 4 >> 2];
    HEAP32[$__j$1 + 8 >> 2] = HEAP32[$__k$0 + 8 >> 2];
    HEAP32[$__j$1 + 12 >> 2] = HEAP32[$__k$0 + 12 >> 2];
    HEAP32[$__j$1 + 16 >> 2] = HEAP32[$__k$0 + 16 >> 2];
    HEAP32[$__j$1 + 20 >> 2] = HEAP32[$__k$0 + 20 >> 2];
    if (($__k$0 | 0) == ($__first | 0)) {
     $$lcssa = $__k$0;
     break;
    }
    $16 = $__k$0 + -24 | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($__t, $16) | 0) {
     $__j$1$phi = $__k$0;
     $__k$0 = $16;
     $__j$1 = $__j$1$phi;
    } else {
     $$lcssa = $__k$0;
     break;
    }
   }
   HEAP32[$$lcssa >> 2] = HEAP32[$__t >> 2];
   HEAP32[$$lcssa + 4 >> 2] = HEAP32[$__t + 4 >> 2];
   HEAP32[$$lcssa + 8 >> 2] = HEAP32[$__t + 8 >> 2];
   HEAP32[$$lcssa + 12 >> 2] = HEAP32[$__t + 12 >> 2];
   HEAP32[$$lcssa + 16 >> 2] = HEAP32[$__t + 16 >> 2];
   HEAP32[$$lcssa + 20 >> 2] = HEAP32[$__t + 20 >> 2];
  }
  $18 = $__i$02 + 24 | 0;
  if (($18 | 0) == ($__last | 0)) break; else {
   $__j$01$phi = $__i$02;
   $__i$02 = $18;
   $__j$01 = $__j$01$phi;
  }
 }
 STACKTOP = sp;
 return;
}

function __ZN16MacFileUtilities7MachoID8WalkerCBEPNS_11MachoWalkerEP12load_commandibPv($walker, $cmd, $offset, $swap, $context) {
 $walker = $walker | 0;
 $cmd = $cmd | 0;
 $offset = $offset | 0;
 $swap = $swap | 0;
 $context = $context | 0;
 var $$02$i = 0, $$02$i$us = 0, $$02$i12 = 0, $$0629 = 0, $$0629$us = 0, $$1731 = 0, $$4 = 0, $$field17 = 0, $$field20 = 0, $$field29 = 0, $$field32 = 0, $$field5 = 0, $$field8 = 0, $10 = 0, $103 = 0, $107 = 0, $114 = 0, $15 = 0, $17 = 0, $24 = 0, $28 = 0, $3 = 0, $35 = 0, $4 = 0, $47 = 0, $49 = 0, $56 = 0, $60 = 0, $67 = 0, $7 = 0, $77 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $89 = 0, $9 = 0, $93 = 0, $buffer$i = 0, $buffer_size$0$i = 0, $buffer_size$0$i$us = 0, $buffer_size$0$i13 = 0, $file_offset$03$i = 0, $file_offset$03$i$us = 0, $file_offset$03$i11 = 0, $header = 0, $header1 = 0, $header_offset = 0, $header_offset2 = 0, $i$030 = 0, $i$030$us = 0, $i3$032 = 0, $sec = 0, $seg = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4336 | 0;
 $buffer$i = sp + 232 | 0;
 $seg = sp + 80 | 0;
 $header = sp + 200 | 0;
 $header_offset = sp + 192 | 0;
 $sec = sp;
 $header1 = sp + 160 | 0;
 $header_offset2 = sp + 152 | 0;
 switch (HEAP32[$cmd >> 2] | 0) {
 case 1:
  {
   if (__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $seg, 56, $offset) | 0) {
    if ($swap) __Z29breakpad_swap_segment_commandP15segment_command($seg);
    if (__ZN16MacFileUtilities11MachoWalker13CurrentHeaderEP14mach_header_64Pi($walker, $header, $header_offset) | 0) {
     $3 = $offset + 56 | 0;
     $4 = $seg + 48 | 0;
     L9 : do if (HEAP32[$4 >> 2] | 0) {
      $7 = $sec + 56 | 0;
      $8 = $sec + 40 | 0;
      $9 = $sec + 36 | 0;
      $10 = $context + 4196 | 0;
      L11 : do if ($swap) {
       $$0629$us = $3;
       $i$030$us = 0;
       while (1) {
        if (!(__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $sec, 68, $$0629$us) | 0)) break L11;
        __Z21breakpad_swap_sectionP7sectionj($sec, 1);
        if ((HEAP32[$7 >> 2] & 255 | 0) != 1) {
         $15 = HEAP32[$8 >> 2] | 0;
         if ($15) {
          $17 = HEAP32[$9 >> 2] | 0;
          if (($17 | 0) != 0 ? (HEAP32[$10 + 4 >> 2] & 1 | HEAP32[$10 >> 2] | 0) != 0 : 0) {
           $$02$i$us = $17;
           $file_offset$03$i$us = (HEAP32[$header_offset >> 2] | 0) + $15 | 0;
           while (1) {
            $24 = $$02$i$us >>> 0 > 4096;
            $buffer_size$0$i$us = $24 ? 4096 : $$02$i$us;
            $$02$i$us = $$02$i$us + -4096 | 0;
            if (!(__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $buffer$i, $buffer_size$0$i$us, $file_offset$03$i$us) | 0)) break;
            $$field5 = HEAP32[$10 >> 2] | 0;
            $$field8 = HEAP32[$10 + 4 >> 2] | 0;
            $28 = $context + ($$field8 >> 1) | 0;
            if (!($$field8 & 1)) $35 = $$field5; else $35 = HEAP32[(HEAP32[$28 >> 2] | 0) + $$field5 >> 2] | 0;
            FUNCTION_TABLE_viii[$35 & 15]($28, $buffer$i, $buffer_size$0$i$us);
            if (($$02$i$us | 0) == 0 | $24 ^ 1) break; else $file_offset$03$i$us = $buffer_size$0$i$us + $file_offset$03$i$us | 0;
           }
          }
         }
        }
        $i$030$us = $i$030$us + 1 | 0;
        if ($i$030$us >>> 0 >= (HEAP32[$4 >> 2] | 0) >>> 0) break L9; else $$0629$us = $$0629$us + 68 | 0;
       }
      } else {
       $$0629 = $3;
       $i$030 = 0;
       while (1) {
        if (!(__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $sec, 68, $$0629) | 0)) break L11;
        if ((HEAP32[$7 >> 2] & 255 | 0) != 1) {
         $47 = HEAP32[$8 >> 2] | 0;
         if ($47) {
          $49 = HEAP32[$9 >> 2] | 0;
          if (($49 | 0) != 0 ? (HEAP32[$10 + 4 >> 2] & 1 | HEAP32[$10 >> 2] | 0) != 0 : 0) {
           $$02$i = $49;
           $file_offset$03$i = (HEAP32[$header_offset >> 2] | 0) + $47 | 0;
           while (1) {
            $56 = $$02$i >>> 0 > 4096;
            $buffer_size$0$i = $56 ? 4096 : $$02$i;
            $$02$i = $$02$i + -4096 | 0;
            if (!(__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $buffer$i, $buffer_size$0$i, $file_offset$03$i) | 0)) break;
            $$field17 = HEAP32[$10 >> 2] | 0;
            $$field20 = HEAP32[$10 + 4 >> 2] | 0;
            $60 = $context + ($$field20 >> 1) | 0;
            if (!($$field20 & 1)) $67 = $$field17; else $67 = HEAP32[(HEAP32[$60 >> 2] | 0) + $$field17 >> 2] | 0;
            FUNCTION_TABLE_viii[$67 & 15]($60, $buffer$i, $buffer_size$0$i);
            if (($$02$i | 0) == 0 | $56 ^ 1) break; else $file_offset$03$i = $buffer_size$0$i + $file_offset$03$i | 0;
           }
          }
         }
        }
        $i$030 = $i$030 + 1 | 0;
        if ($i$030 >>> 0 >= (HEAP32[$4 >> 2] | 0) >>> 0) break L9; else $$0629 = $$0629 + 68 | 0;
       }
      } while (0);
      $$4 = 0;
      STACKTOP = sp;
      return $$4 | 0;
     } while (0);
     $$4 = 1;
     STACKTOP = sp;
     return $$4 | 0;
    }
   }
   $$4 = 0;
   STACKTOP = sp;
   return $$4 | 0;
  }
 case 25:
  {
   if (__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $seg, 72, $offset) | 0) {
    if ($swap) __Z32breakpad_swap_segment_command_64P18segment_command_64($seg);
    if (__ZN16MacFileUtilities11MachoWalker13CurrentHeaderEP14mach_header_64Pi($walker, $header1, $header_offset2) | 0) {
     $77 = $seg + 64 | 0;
     L57 : do if (HEAP32[$77 >> 2] | 0) {
      $81 = $sec + 64 | 0;
      $82 = $sec + 48 | 0;
      $83 = $sec + 40 | 0;
      $84 = $context + 4196 | 0;
      $$1731 = $offset + 72 | 0;
      $i3$032 = 0;
      while (1) {
       if (!(__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $sec, 80, $$1731) | 0)) break;
       if ($swap) __Z24breakpad_swap_section_64P10section_64j($sec, 1);
       if ((HEAP32[$81 >> 2] & 255 | 0) != 1) {
        $89 = HEAP32[$82 >> 2] | 0;
        if ($89) {
         $93 = HEAP32[$83 >> 2] | 0;
         if (($93 | 0) != 0 ? (HEAP32[$84 + 4 >> 2] & 1 | HEAP32[$84 >> 2] | 0) != 0 : 0) {
          $$02$i12 = $93;
          $file_offset$03$i11 = (HEAP32[$header_offset2 >> 2] | 0) + $89 | 0;
          while (1) {
           $103 = $$02$i12 >>> 0 > 4096;
           $buffer_size$0$i13 = $103 ? 4096 : $$02$i12;
           $$02$i12 = $$02$i12 + -4096 | 0;
           if (!(__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $buffer$i, $buffer_size$0$i13, $file_offset$03$i11) | 0)) break;
           $$field29 = HEAP32[$84 >> 2] | 0;
           $$field32 = HEAP32[$84 + 4 >> 2] | 0;
           $107 = $context + ($$field32 >> 1) | 0;
           if (!($$field32 & 1)) $114 = $$field29; else $114 = HEAP32[(HEAP32[$107 >> 2] | 0) + $$field29 >> 2] | 0;
           FUNCTION_TABLE_viii[$114 & 15]($107, $buffer$i, $buffer_size$0$i13);
           if (($$02$i12 | 0) == 0 | $103 ^ 1) break; else $file_offset$03$i11 = $buffer_size$0$i13 + $file_offset$03$i11 | 0;
          }
         }
        }
       }
       $i3$032 = $i3$032 + 1 | 0;
       if ($i3$032 >>> 0 >= (HEAP32[$77 >> 2] | 0) >>> 0) break L57; else $$1731 = $$1731 + 80 | 0;
      }
      $$4 = 0;
      STACKTOP = sp;
      return $$4 | 0;
     } while (0);
     $$4 = 1;
     STACKTOP = sp;
     return $$4 | 0;
    }
   }
   $$4 = 0;
   STACKTOP = sp;
   return $$4 | 0;
  }
 default:
  {
   $$4 = 1;
   STACKTOP = sp;
   return $$4 | 0;
  }
 }
 return 0;
}

function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $75 = 0, $79 = 0, $8 = 0, $9 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9060) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 63]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 63]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn, 0);
  HEAP32[$__nsn >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 63]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn, 0);
  HEAP32[$__psn >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 63]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
 } else {
  $75 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 8996) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 44 >> 2] & 63]($5, $75);
  $79 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $79;
  HEAP8[$__pat + 1 >> 0] = $79 >> 8;
  HEAP8[$__pat + 2 >> 0] = $79 >> 16;
  HEAP8[$__pat + 3 >> 0] = $79 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 32 >> 2] & 63]($6, $75);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn, 0);
  HEAP32[$__nsn >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 28 >> 2] & 63]($7, $75);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn, 0);
  HEAP32[$__psn >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$75 >> 2] | 0) + 12 >> 2] & 127]($75) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$75 >> 2] | 0) + 16 >> 2] & 127]($75) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 20 >> 2] & 63]($8, $75);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$8 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$75 >> 2] | 0) + 24 >> 2] & 63]($9, $75);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$9 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$75 >> 2] | 0) + 36 >> 2] & 127]($75) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZN16MacFileUtilities11MachoWalker10FindHeaderEiiRi($this, $cpu_type, $cpu_subtype, $offset) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 $offset = $offset | 0;
 var $$0 = 0, $$lcssa26 = 0, $$lcssa28 = 0, $$lcssa30 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $62 = 0, $75 = 0, $78 = 0, $80 = 0, $arch = 0, $fat = 0, $header = 0, $i$031 = 0, $i$031$us = 0, $magic = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $magic = sp + 56 | 0;
 $header = sp + 28 | 0;
 $fat = sp;
 $arch = sp + 8 | 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) if ((_pread(HEAP32[$this >> 2] | 0, $magic | 0, 4, 0) | 0) == 4) {
  $11 = HEAP32[$magic >> 2] | 0;
  break;
 } else {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  if ($4 >>> 0 >= 4) {
   $6 = HEAPU8[$1 >> 0] | HEAPU8[$1 + 1 >> 0] << 8 | HEAPU8[$1 + 2 >> 0] << 16 | HEAPU8[$1 + 3 >> 0] << 24;
   HEAP32[$magic >> 2] = $6;
   $11 = $6;
   break;
  }
  if (!$4) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  _memcpy($magic | 0, $1 | 0, $4 | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 HEAP32[$offset >> 2] = 4;
 L15 : do if (($11 | 0) < -805638658) {
  L17 : do if (($11 | 0) < -889275714) {
   switch ($11 | 0) {
   case -1095041334:
    {
     break L17;
     break;
    }
   default:
    $$0 = 0;
   }
   STACKTOP = sp;
   return $$0 | 0;
  } else if (($11 | 0) < -822415874) {
   switch ($11 | 0) {
   case -889275714:
    {
     break L17;
     break;
    }
   default:
    $$0 = 0;
   }
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   switch ($11 | 0) {
   case -822415874:
    {
     break L15;
     break;
    }
   default:
    $$0 = 0;
   }
   STACKTOP = sp;
   return $$0 | 0;
  } while (0);
  HEAP32[$offset >> 2] = 0;
  $30 = HEAP32[$0 >> 2] | 0;
  do if (!$30) {
   if ((_pread(HEAP32[$this >> 2] | 0, $fat | 0, 8, 0) | 0) != 8) {
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else {
   $33 = HEAP32[$this + 8 >> 2] | 0;
   if ($33 >>> 0 >= 8) {
    $35 = $30;
    $36 = $35;
    $39 = $35 + 4 | 0;
    $40 = HEAPU8[$39 >> 0] | HEAPU8[$39 + 1 >> 0] << 8 | HEAPU8[$39 + 2 >> 0] << 16 | HEAPU8[$39 + 3 >> 0] << 24;
    $41 = $fat;
    HEAP32[$41 >> 2] = HEAPU8[$36 >> 0] | HEAPU8[$36 + 1 >> 0] << 8 | HEAPU8[$36 + 2 >> 0] << 16 | HEAPU8[$36 + 3 >> 0] << 24;
    HEAP32[$41 + 4 >> 2] = $40;
    break;
   }
   if (!$33) {
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   _memcpy($fat | 0, $30 | 0, $33 | 0) | 0;
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } while (0);
  __Z24breakpad_swap_fat_headerP10fat_header($fat);
  $50 = (HEAP32[$offset >> 2] | 0) + 8 | 0;
  HEAP32[$offset >> 2] = $50;
  $51 = $fat + 4 | 0;
  if (!(HEAP32[$51 >> 2] | 0)) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $55 = $arch + 4 | 0;
  $56 = $this + 8 | 0;
  L42 : do if (($cpu_subtype | 0) == -1) {
   $60 = $50;
   $i$031$us = 0;
   while (1) {
    $57 = HEAP32[$0 >> 2] | 0;
    if (!$57) {
     if ((_pread(HEAP32[$this >> 2] | 0, $arch | 0, 20, $60 | 0) | 0) != 20) {
      $$0 = 0;
      label = 46;
      break;
     }
    } else {
     if (($60 | 0) < 0) {
      $$0 = 0;
      label = 46;
      break;
     }
     $62 = HEAP32[$56 >> 2] | 0;
     if (($60 + 20 | 0) >>> 0 > $62 >>> 0) {
      $$lcssa26 = $60;
      $$lcssa28 = $57;
      $$lcssa30 = $62;
      break L42;
     }
     dest = $arch;
     src = $57 + $60 | 0;
     stop = dest + 20 | 0;
     do {
      HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
      dest = dest + 1 | 0;
      src = src + 1 | 0;
     } while ((dest | 0) < (stop | 0));
    }
    __Z22breakpad_swap_fat_archP8fat_archj($arch, 1);
    if ((HEAP32[$arch >> 2] | 0) == ($cpu_type | 0)) {
     label = 44;
     break L42;
    }
    $60 = (HEAP32[$offset >> 2] | 0) + 20 | 0;
    HEAP32[$offset >> 2] = $60;
    $i$031$us = $i$031$us + 1 | 0;
    if ($i$031$us >>> 0 >= (HEAP32[$51 >> 2] | 0) >>> 0) {
     $$0 = 0;
     label = 46;
     break;
    }
   }
   if ((label | 0) == 46) {
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else {
   $78 = $50;
   $i$031 = 0;
   while (1) {
    $75 = HEAP32[$0 >> 2] | 0;
    if (!$75) {
     if ((_pread(HEAP32[$this >> 2] | 0, $arch | 0, 20, $78 | 0) | 0) != 20) {
      $$0 = 0;
      label = 46;
      break;
     }
    } else {
     if (($78 | 0) < 0) {
      $$0 = 0;
      label = 46;
      break;
     }
     $80 = HEAP32[$56 >> 2] | 0;
     if (($78 + 20 | 0) >>> 0 > $80 >>> 0) {
      $$lcssa26 = $78;
      $$lcssa28 = $75;
      $$lcssa30 = $80;
      break L42;
     }
     dest = $arch;
     src = $75 + $78 | 0;
     stop = dest + 20 | 0;
     do {
      HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
      dest = dest + 1 | 0;
      src = src + 1 | 0;
     } while ((dest | 0) < (stop | 0));
    }
    __Z22breakpad_swap_fat_archP8fat_archj($arch, 1);
    if ((HEAP32[$arch >> 2] | 0) == ($cpu_type | 0) ? (HEAP32[$55 >> 2] | 0) == ($cpu_subtype | 0) : 0) {
     label = 44;
     break L42;
    }
    $78 = (HEAP32[$offset >> 2] | 0) + 20 | 0;
    HEAP32[$offset >> 2] = $78;
    $i$031 = $i$031 + 1 | 0;
    if ($i$031 >>> 0 >= (HEAP32[$51 >> 2] | 0) >>> 0) {
     $$0 = 0;
     label = 46;
     break;
    }
   }
   if ((label | 0) == 46) {
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  if ((label | 0) == 44) {
   HEAP32[$offset >> 2] = HEAP32[$arch + 8 >> 2];
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if ($$lcssa30 >>> 0 <= $$lcssa26 >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  _memcpy($arch | 0, $$lcssa28 + $$lcssa26 | 0, $$lcssa30 - $$lcssa26 | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if (($11 | 0) < -17958194) {
  switch ($11 | 0) {
  case -805638658:
   {
    break L15;
    break;
   }
  default:
   $$0 = 0;
  }
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  switch ($11 | 0) {
  case -17958194:
  case -17958193:
   {
    break L15;
    break;
   }
  default:
   $$0 = 0;
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $12 = HEAP32[$0 >> 2] | 0;
 do if (!$12) {
  if ((_pread(HEAP32[$this >> 2] | 0, $header | 0, 28, 0) | 0) != 28) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  $15 = HEAP32[$this + 8 >> 2] | 0;
  if ($15 >>> 0 >= 28) {
   dest = $header;
   src = $12;
   stop = dest + 28 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   break;
  }
  if (!$15) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  _memcpy($header | 0, $12 | 0, $15 | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 if (($11 & -16777217 | 0) == -822415874) __Z25breakpad_swap_mach_headerP11mach_header($header);
 if ((HEAP32[$header + 4 >> 2] | 0) != ($cpu_type | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($cpu_subtype | 0) != -1) if ((HEAP32[$header + 8 >> 2] | 0) != ($cpu_subtype | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$offset >> 2] = 0;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad6Module11AddFunctionEPNS0_8FunctionE($this, $function) {
 $this = $this | 0;
 $function = $function | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i10 = 0, $$0$ph7$i$i$i = 0, $$0$ph7$i$i$i5 = 0, $$01$i$i$i$i = 0, $$01$ph6$i$i$i = 0, $$01$ph6$i$i$i6 = 0, $$014$i$i$i = 0, $$014$i$i$i$lcssa = 0, $$014$i$i$i8 = 0, $$014$i$i$i8$lcssa = 0, $$sroa$0$0$i$i13 = 0, $0 = 0, $1 = 0, $10 = 0, $104 = 0, $109 = 0, $11 = 0, $116 = 0, $117 = 0, $12 = 0, $120 = 0, $124 = 0, $127 = 0, $130 = 0, $136 = 0, $14 = 0, $143 = 0, $144 = 0, $145 = 0, $147 = 0, $149 = 0, $153 = 0, $158 = 0, $159 = 0, $167 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $177 = 0, $18 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $34 = 0, $4 = 0, $48 = 0, $53 = 0, $60 = 0, $65 = 0, $67 = 0, $70 = 0, $75 = 0, $76 = 0, $80 = 0, $81 = 0, $85 = 0, $90 = 0, $__parent$i$i = 0, $arm_thumb_ext = 0, $ext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$i$i = sp + 52 | 0;
 $0 = sp + 48 | 0;
 $ext = sp + 24 | 0;
 $arm_thumb_ext = sp;
 HEAP32[$0 >> 2] = $function;
 $1 = HEAP8[$function >> 0] | 0;
 $4 = $function;
 if (!($1 & 1)) $10 = ($1 & 255) >>> 1; else $10 = HEAP32[$function + 4 >> 2] | 0;
 if (!$10) ___assert_fail(16584, 16608, 81, 16629);
 $11 = $function + 16 | 0;
 $12 = $11;
 $14 = HEAP32[$12 >> 2] | 0;
 $17 = HEAP32[$12 + 4 >> 2] | 0;
 $18 = $ext;
 HEAP32[$18 >> 2] = $14;
 HEAP32[$18 + 4 >> 2] = $17;
 $22 = $ext + 8 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $23 = $this + 92 | 0;
 $24 = $this + 96 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 if (!$25) label = 13; else {
  $$0$ph7$i$i$i = $24;
  $$01$ph6$i$i$i = $25;
  L9 : while (1) {
   $$014$i$i$i = $$01$ph6$i$i$i;
   while (1) {
    $29 = HEAP32[$$014$i$i$i + 16 >> 2] | 0;
    $34 = HEAP32[$29 + 4 >> 2] | 0;
    if (!($34 >>> 0 < $17 >>> 0 | (($34 | 0) == ($17 | 0) ? (HEAP32[$29 >> 2] | 0) >>> 0 < $14 >>> 0 : 0))) {
     $$014$i$i$i$lcssa = $$014$i$i$i;
     break;
    }
    $$014$i$i$i = HEAP32[$$014$i$i$i + 4 >> 2] | 0;
    if (!$$014$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$0$ph7$i$i$i;
     break L9;
    }
   }
   $$01$ph6$i$i$i = HEAP32[$$014$i$i$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i$i$i) {
    $$0$ph$lcssa$i$i$i = $$014$i$i$i$lcssa;
    break;
   } else $$0$ph7$i$i$i = $$014$i$i$i$lcssa;
  }
  if (($$0$ph$lcssa$i$i$i | 0) == ($24 | 0)) label = 13; else {
   $48 = HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0;
   $53 = HEAP32[$48 + 4 >> 2] | 0;
   if ($17 >>> 0 < $53 >>> 0 | (($17 | 0) == ($53 | 0) ? $14 >>> 0 < (HEAP32[$48 >> 2] | 0) >>> 0 : 0)) label = 13; else {
    $60 = $$0$ph$lcssa$i$i$i;
    if (($$0$ph$lcssa$i$i$i | 0) == ($24 | 0)) {
     $177 = $60;
     label = 15;
    } else $117 = $60;
   }
  }
 }
 if ((label | 0) == 13) {
  $177 = $24;
  label = 15;
 }
 if ((label | 0) == 15) if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($this + 24 | 0, 21245) | 0)) {
  $65 = $11;
  $67 = HEAP32[$65 >> 2] | 0;
  $70 = HEAP32[$65 + 4 >> 2] | 0;
  if (($67 & 1 | 0) == 0 & 0 == 0) {
   $75 = $67 | 1;
   $76 = $arm_thumb_ext;
   HEAP32[$76 >> 2] = $75;
   HEAP32[$76 + 4 >> 2] = $70;
   $80 = $arm_thumb_ext + 8 | 0;
   HEAP32[$80 >> 2] = 0;
   HEAP32[$80 + 4 >> 2] = 0;
   HEAP32[$80 + 8 >> 2] = 0;
   $81 = HEAP32[$24 >> 2] | 0;
   if (!$81) label = 24; else {
    $$0$ph7$i$i$i5 = $24;
    $$01$ph6$i$i$i6 = $81;
    L25 : while (1) {
     $$014$i$i$i8 = $$01$ph6$i$i$i6;
     while (1) {
      $85 = HEAP32[$$014$i$i$i8 + 16 >> 2] | 0;
      $90 = HEAP32[$85 + 4 >> 2] | 0;
      if (!($90 >>> 0 < $70 >>> 0 | (($90 | 0) == ($70 | 0) ? (HEAP32[$85 >> 2] | 0) >>> 0 < $75 >>> 0 : 0))) {
       $$014$i$i$i8$lcssa = $$014$i$i$i8;
       break;
      }
      $$014$i$i$i8 = HEAP32[$$014$i$i$i8 + 4 >> 2] | 0;
      if (!$$014$i$i$i8) {
       $$0$ph$lcssa$i$i$i10 = $$0$ph7$i$i$i5;
       break L25;
      }
     }
     $$01$ph6$i$i$i6 = HEAP32[$$014$i$i$i8$lcssa >> 2] | 0;
     if (!$$01$ph6$i$i$i6) {
      $$0$ph$lcssa$i$i$i10 = $$014$i$i$i8$lcssa;
      break;
     } else $$0$ph7$i$i$i5 = $$014$i$i$i8$lcssa;
    }
    if (($$0$ph$lcssa$i$i$i10 | 0) == ($24 | 0)) label = 24; else {
     $104 = HEAP32[$$0$ph$lcssa$i$i$i10 + 16 >> 2] | 0;
     $109 = HEAP32[$104 + 4 >> 2] | 0;
     if ($70 >>> 0 < $109 >>> 0 | (($70 | 0) == ($109 | 0) ? $75 >>> 0 < (HEAP32[$104 >> 2] | 0) >>> 0 : 0)) label = 24; else $$sroa$0$0$i$i13 = $$0$ph$lcssa$i$i$i10;
    }
   }
   if ((label | 0) == 24) $$sroa$0$0$i$i13 = $24;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
   $117 = $$sroa$0$0$i$i13;
  } else $117 = $177;
 } else $117 = $177;
 $116 = $117;
 if (($116 | 0) != ($24 | 0)) {
  $120 = HEAP32[$116 + 16 >> 2] | 0;
  if ($120) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($120 + 8 | 0);
   __ZdlPv($120);
  }
  $124 = HEAP32[$116 + 4 >> 2] | 0;
  if (!$124) {
   $$01$i$i$i$i = $117;
   while (1) {
    $130 = HEAP32[$$01$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$130 >> 2] | 0) == ($$01$i$i$i$i | 0)) {
     $$0$i$i$i$i = $130;
     break;
    } else $$01$i$i$i$i = $130;
   }
  } else {
   $$0$i$i$i$i$i = $124;
   while (1) {
    $127 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
    if (!$127) {
     $$0$i$i$i$i = $$0$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i = $127;
   }
  }
  if ((HEAP32[$23 >> 2] | 0) == ($116 | 0)) HEAP32[$23 >> 2] = $$0$i$i$i$i;
  $136 = $this + 100 | 0;
  HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + -1;
  __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 96 >> 2] | 0, $117);
  __ZdlPv($117);
 }
 $143 = $this + 68 | 0;
 $144 = __ZNSt3__16__treeIPN15google_breakpad6Module8FunctionENS2_15FunctionCompareENS_9allocatorIS4_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEESE_RKT_($143, $__parent$i$i, $0) | 0;
 $145 = HEAP32[$144 >> 2] | 0;
 if (!$145) {
  $147 = __Znwj(20) | 0;
  HEAP32[$147 + 16 >> 2] = $4;
  $149 = HEAP32[$__parent$i$i >> 2] | 0;
  HEAP32[$147 >> 2] = 0;
  HEAP32[$147 + 4 >> 2] = 0;
  HEAP32[$147 + 8 >> 2] = $149;
  HEAP32[$144 >> 2] = $147;
  $153 = HEAP32[HEAP32[$143 >> 2] >> 2] | 0;
  if (!$153) $158 = $147; else {
   HEAP32[$143 >> 2] = $153;
   $158 = HEAP32[$144 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 72 >> 2] | 0, $158);
  $159 = $this + 76 | 0;
  HEAP32[$159 >> 2] = (HEAP32[$159 >> 2] | 0) + 1;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  STACKTOP = sp;
  return;
 }
 if (($function | 0) == 0 ? 1 : (HEAP32[$145 + 16 >> 2] | 0) == ($function | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  STACKTOP = sp;
  return;
 }
 $167 = HEAP32[$function + 40 >> 2] | 0;
 $169 = $167;
 if ($167) {
  $170 = $function + 44 | 0;
  $171 = HEAP32[$170 >> 2] | 0;
  if (($171 | 0) != ($167 | 0)) HEAP32[$170 >> 2] = $171 + (~((($171 + -24 - $169 | 0) >>> 0) / 24 | 0) * 24 | 0);
  __ZdlPv($167);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($function);
 __ZdlPv($function);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader8LineInfo10ReadHeaderEv($this) {
 $this = $this | 0;
 var $$0$i12 = 0, $$0$i16 = 0, $$0$i21 = 0, $$0$in$i = 0, $$field = 0, $$field2 = 0, $$lcssa = 0, $$lcssa84 = 0, $$lcssa86 = 0, $$sum10 = 0, $$sum2 = 0, $$sum3 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $11 = 0, $113 = 0, $117 = 0, $120 = 0, $122 = 0, $126 = 0, $127 = 0, $129 = 0, $131 = 0, $132 = 0, $134 = 0, $141 = 0, $142 = 0, $144 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $156 = 0, $157 = 0, $159 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $168 = 0, $171 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $182 = 0, $183 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $4 = 0, $43 = 0, $44 = 0, $49 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $86 = 0, $87 = 0, $92 = 0, $96 = 0, $97 = 0, $dirindex$036 = 0, $fileindex$034 = 0, $i$040 = 0, $initial_length_size = 0, $lineptr$0$lcssa = 0, $lineptr$041 = 0, $lineptr$137 = 0, $lineptr$2 = 0, $lineptr$335 = 0, $lineptr$4 = 0, $num_read$0$i = 0, $num_read$0$i14 = 0, $num_read$0$i19 = 0, $shift$0$i = 0, $shift$0$i15 = 0, $shift$0$i20 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $initial_length_size = sp + 24 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 $3 = HEAP32[$this + 56 >> 2] | 0;
 $4 = $this + 8 | 0;
 $6 = __ZN12dwarf2reader10ByteReader17ReadInitialLengthEPKcPj(HEAP32[$4 >> 2] | 0, $3, $initial_length_size) | 0;
 $8 = HEAP32[$initial_length_size >> 2] | 0;
 $11 = $this + 16 | 0;
 HEAP32[$11 >> 2] = $6;
 HEAP32[$11 + 4 >> 2] = tempRet0;
 if (($8 + $6 | 0) > (HEAP32[$this + 64 >> 2] | 0)) ___assert_fail(18758, 18044, 543, 18260);
 $23 = HEAP32[$4 >> 2] | 0;
 if (!(HEAP8[$23 + 24 >> 0] | 0)) ___assert_fail(18839, 18044, 546, 18260);
 $27 = HEAP8[$3 + $8 >> 0] | 0;
 $29 = HEAP8[$3 + ($8 + 1) >> 0] | 0;
 if ((HEAP32[$23 + 20 >> 2] | 0) == 1) $$0$in$i = ($29 & 255) << 8 | $27 & 255; else $$0$in$i = $29 & 255 | ($27 & 255) << 8;
 HEAP16[$this + 24 >> 1] = $$0$in$i;
 $$sum2 = $8 + 2 | 0;
 $43 = $23 + 4 | 0;
 $$field = HEAP32[$43 >> 2] | 0;
 $$field2 = HEAP32[$43 + 4 >> 2] | 0;
 $44 = $$field2 & 1;
 if (!($44 | $$field)) ___assert_fail(18373, 18394, 138, 18430);
 $49 = $23 + ($$field2 >> 1) | 0;
 if (!$44) $54 = $$field; else $54 = HEAP32[(HEAP32[$49 >> 2] | 0) + $$field >> 2] | 0;
 $55 = FUNCTION_TABLE_iii[$54 & 31]($49, $3 + $$sum2 | 0) | 0;
 $58 = $this + 32 | 0;
 HEAP32[$58 >> 2] = $55;
 HEAP32[$58 + 4 >> 2] = tempRet0;
 $$sum3 = (HEAPU8[(HEAP32[$4 >> 2] | 0) + 25 >> 0] | 0) + $$sum2 | 0;
 HEAP8[$this + 40 >> 0] = HEAP8[$3 + $$sum3 >> 0] | 0;
 HEAP8[$this + 41 >> 0] = (HEAP8[$3 + ($$sum3 + 1) >> 0] | 0) != 0 & 1;
 HEAP8[$this + 42 >> 0] = HEAP8[$3 + ($$sum3 + 2) >> 0] | 0;
 HEAP8[$this + 43 >> 0] = HEAP8[$3 + ($$sum3 + 3) >> 0] | 0;
 $81 = HEAP8[$3 + ($$sum3 + 4) >> 0] | 0;
 $82 = $this + 44 | 0;
 HEAP8[$82 >> 0] = $81;
 $83 = __Znwj(12) | 0;
 HEAP32[$83 >> 2] = 0;
 HEAP32[$83 + 4 >> 2] = 0;
 HEAP32[$83 + 8 >> 2] = 0;
 $86 = $3 + ($$sum3 + 5) | 0;
 $87 = $this + 48 | 0;
 HEAP32[$87 >> 2] = $83;
 __ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEj($83, ($81 & 255) + 1 | 0);
 HEAP8[HEAP32[HEAP32[$87 >> 2] >> 2] >> 0] = 0;
 $92 = HEAP8[$86 >> 0] | 0;
 if ((HEAPU8[$82 >> 0] | 0) > 1) {
  $96 = $92;
  $i$040 = 1;
  $lineptr$041 = $86;
  while (1) {
   HEAP8[(HEAP32[HEAP32[$87 >> 2] >> 2] | 0) + $i$040 >> 0] = $96;
   $97 = $lineptr$041 + 1 | 0;
   $i$040 = $i$040 + 1 | 0;
   $102 = HEAP8[$97 >> 0] | 0;
   if (($i$040 | 0) >= (HEAPU8[$82 >> 0] | 0)) {
    $104 = $102;
    $lineptr$0$lcssa = $97;
    break;
   } else {
    $96 = $102;
    $lineptr$041 = $97;
   }
  }
 } else {
  $104 = $92;
  $lineptr$0$lcssa = $86;
 }
 if (!($104 << 24 >> 24)) $lineptr$2 = $lineptr$0$lcssa; else {
  $105 = $this + 4 | 0;
  $dirindex$036 = 1;
  $lineptr$137 = $lineptr$0$lcssa;
  while (1) {
   $106 = HEAP32[$105 >> 2] | 0;
   $109 = HEAP32[(HEAP32[$106 >> 2] | 0) + 8 >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $lineptr$137, _strlen($lineptr$137 | 0) | 0);
   FUNCTION_TABLE_viii[$109 & 15]($106, $0, $dirindex$036);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $113 = $lineptr$137 + ((_strlen($lineptr$137 | 0) | 0) + 1) | 0;
   if (!(HEAP8[$113 >> 0] | 0)) {
    $lineptr$2 = $113;
    break;
   } else {
    $dirindex$036 = $dirindex$036 + 1 | 0;
    $lineptr$137 = $113;
   }
  }
 }
 $117 = $lineptr$2 + 1 | 0;
 if (!(HEAP8[$117 >> 0] | 0)) {
  $lineptr$4 = $117;
  $182 = $lineptr$4 + 1 | 0;
  $183 = $this + 72 | 0;
  HEAP32[$183 >> 2] = $182;
  STACKTOP = sp;
  return;
 }
 $120 = $this + 4 | 0;
 $fileindex$034 = 1;
 $lineptr$335 = $117;
 while (1) {
  $122 = (_strlen($lineptr$335 | 0) | 0) + 1 | 0;
  $$0$i21 = $lineptr$335 + $122 | 0;
  $132 = 0;
  $134 = 0;
  $num_read$0$i19 = 0;
  $shift$0$i20 = 0;
  while (1) {
   $126 = $num_read$0$i19 + 1 | 0;
   $127 = HEAPU8[$$0$i21 >> 0] | 0;
   $129 = _bitshift64Shl($127 & 127 | 0, 0, $shift$0$i20 | 0) | 0;
   $131 = $129 | $132;
   if (!($127 & 128)) {
    $$lcssa = $126;
    $173 = $131;
    break;
   } else {
    $$0$i21 = $$0$i21 + 1 | 0;
    $132 = $131;
    $134 = tempRet0 | $134;
    $num_read$0$i19 = $126;
    $shift$0$i20 = $shift$0$i20 + 7 | 0;
   }
  }
  $$sum9 = $$lcssa + $122 | 0;
  $$0$i16 = $lineptr$335 + $$sum9 | 0;
  $147 = 0;
  $149 = 0;
  $num_read$0$i14 = 0;
  $shift$0$i15 = 0;
  while (1) {
   $141 = $num_read$0$i14 + 1 | 0;
   $142 = HEAPU8[$$0$i16 >> 0] | 0;
   $144 = _bitshift64Shl($142 & 127 | 0, 0, $shift$0$i15 | 0) | 0;
   $146 = $144 | $147;
   $148 = tempRet0 | $149;
   if (!($142 & 128)) {
    $$lcssa84 = $141;
    $174 = $146;
    $175 = $148;
    break;
   } else {
    $$0$i16 = $$0$i16 + 1 | 0;
    $147 = $146;
    $149 = $148;
    $num_read$0$i14 = $141;
    $shift$0$i15 = $shift$0$i15 + 7 | 0;
   }
  }
  $$sum10 = $$lcssa84 + $$sum9 | 0;
  $$0$i12 = $lineptr$335 + $$sum10 | 0;
  $162 = 0;
  $164 = 0;
  $num_read$0$i = 0;
  $shift$0$i = 0;
  while (1) {
   $156 = $num_read$0$i + 1 | 0;
   $157 = HEAPU8[$$0$i12 >> 0] | 0;
   $159 = _bitshift64Shl($157 & 127 | 0, 0, $shift$0$i | 0) | 0;
   $161 = $159 | $162;
   $163 = tempRet0 | $164;
   if (!($157 & 128)) {
    $$lcssa86 = $156;
    $176 = $161;
    $177 = $163;
    break;
   } else {
    $$0$i12 = $$0$i12 + 1 | 0;
    $162 = $161;
    $164 = $163;
    $num_read$0$i = $156;
    $shift$0$i = $shift$0$i + 7 | 0;
   }
  }
  $168 = HEAP32[$120 >> 2] | 0;
  $171 = HEAP32[(HEAP32[$168 >> 2] | 0) + 12 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $lineptr$335, _strlen($lineptr$335 | 0) | 0);
  FUNCTION_TABLE_viiiiiiii[$171 & 3]($168, $1, $fileindex$034, $173, $174, $175, $176, $177);
  $178 = $lineptr$335 + ($$lcssa86 + $$sum10) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  if (!(HEAP8[$178 >> 0] | 0)) {
   $lineptr$4 = $178;
   break;
  } else {
   $fileindex$034 = $fileindex$034 + 1 | 0;
   $lineptr$335 = $178;
  }
 }
 $182 = $lineptr$4 + 1 | 0;
 $183 = $this + 72 | 0;
 HEAP32[$183 >> 2] = $182;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i217 = 0, $$01$i$i22 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $111 = 0, $112 = 0, $120 = 0, $121 = 0, $123 = 0, $126 = 0, $128 = 0, $13 = 0, $132 = 0, $137 = 0, $138 = 0, $139 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $152 = 0, $156 = 0, $162 = 0, $20 = 0, $25 = 0, $26 = 0, $28 = 0, $33 = 0, $34 = 0, $38 = 0, $42 = 0, $45 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $68 = 0, $70 = 0, $72 = 0, $74 = 0, $81 = 0, $82 = 0, $83 = 0, $91 = 0, $95 = 0, $97 = 0, $__dc$019 = 0, $__dc$1 = 0, $__dg$020 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$215 = 0, $__nf$215$lcssa = 0, $__nf$3 = 0, $__ns$028 = 0, $__ns$124 = 0, $__ns$2 = 0, $__p$021 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9600) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 63]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 switch ($5 << 24 >> 24) {
 case 43:
 case 45:
  {
   $10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, $5) | 0;
   $11 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $11 + 4;
   HEAP32[$11 >> 2] = $10;
   $__nf$0 = $__nb + 1 | 0;
   break;
  }
 default:
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 L4 : do if (($13 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
  $20 = $__nf$0 + 1 | 0;
  switch (HEAP8[$20 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    label = 4;
    break L4;
   }
  }
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, 48) | 0;
  $26 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $26 + 4;
  HEAP32[$26 >> 2] = $25;
  $28 = $__nf$0 + 2 | 0;
  $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, HEAP8[$20 >> 0] | 0) | 0;
  $34 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $34 + 4;
  HEAP32[$34 >> 2] = $33;
  if ($28 >>> 0 < $__ne >>> 0) {
   $__ns$028 = $28;
   while (1) {
    $38 = HEAP8[$__ns$028 >> 0] | 0;
    if (!(_isxdigit_l($38, __ZNSt3__16__clocEv() | 0) | 0)) {
     $__nf$1 = $28;
     $__ns$2 = $__ns$028;
     break L4;
    }
    $42 = $__ns$028 + 1 | 0;
    if ($42 >>> 0 < $__ne >>> 0) $__ns$028 = $42; else {
     $__nf$1 = $28;
     $__ns$2 = $42;
     break;
    }
   }
  } else {
   $__nf$1 = $28;
   $__ns$2 = $28;
  }
 } else label = 4; else label = 4; while (0);
 L11 : do if ((label | 0) == 4) if ($__nf$0 >>> 0 < $__ne >>> 0) {
  $__ns$124 = $__nf$0;
  while (1) {
   $45 = HEAP8[$__ns$124 >> 0] | 0;
   if (!(_isdigit_l($45, __ZNSt3__16__clocEv() | 0) | 0)) {
    $__nf$1 = $__nf$0;
    $__ns$2 = $__ns$124;
    break L11;
   }
   $49 = $__ns$124 + 1 | 0;
   if ($49 >>> 0 < $__ne >>> 0) $__ns$124 = $49; else {
    $__nf$1 = $__nf$0;
    $__ns$2 = $49;
    break;
   }
  }
 } else {
  $__nf$1 = $__nf$0;
  $__ns$2 = $__nf$0;
 } while (0);
 $51 = HEAP8[$__grouping >> 0] | 0;
 $54 = $__grouping + 4 | 0;
 if (!((($51 & 1) == 0 ? ($51 & 255) >>> 1 : HEAP32[$54 >> 2] | 0) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, $__nf$1, $__ns$2, HEAP32[$__oe >> 2] | 0) | 0;
  $68 = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1 << 2) | 0;
  HEAP32[$__oe >> 2] = $68;
  $$pre$phiZ2D = $0;
  $162 = $68;
 } else {
  if (($__nf$1 | 0) != ($__ns$2 | 0)) {
   $70 = $__ns$2 + -1 | 0;
   if ($__nf$1 >>> 0 < $70 >>> 0) {
    $$01$i$i22 = $__nf$1;
    $74 = $70;
    do {
     $72 = HEAP8[$$01$i$i22 >> 0] | 0;
     HEAP8[$$01$i$i22 >> 0] = HEAP8[$74 >> 0] | 0;
     HEAP8[$74 >> 0] = $72;
     $$01$i$i22 = $$01$i$i22 + 1 | 0;
     $74 = $74 + -1 | 0;
    } while ($$01$i$i22 >>> 0 < $74 >>> 0);
   }
  }
  $81 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 127]($1) | 0;
  $82 = $__grouping + 8 | 0;
  $83 = $__grouping + 1 | 0;
  if ($__nf$1 >>> 0 < $__ns$2 >>> 0) {
   $__dc$019 = 0;
   $__dg$020 = 0;
   $__p$021 = $__nf$1;
   while (1) {
    $91 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $83 : HEAP32[$82 >> 2] | 0) + $__dg$020 >> 0] | 0;
    if ($91 << 24 >> 24 > 0 & ($__dc$019 | 0) == ($91 << 24 >> 24 | 0)) {
     $95 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $95 + 4;
     HEAP32[$95 >> 2] = $81;
     $97 = HEAP8[$__grouping >> 0] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$020 >>> 0 < ((($97 & 1) == 0 ? ($97 & 255) >>> 1 : HEAP32[$54 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$020 | 0;
    } else {
     $__dc$1 = $__dc$019;
     $__dg$1 = $__dg$020;
    }
    $111 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, HEAP8[$__p$021 >> 0] | 0) | 0;
    $112 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $111;
    $__p$021 = $__p$021 + 1 | 0;
    if ($__p$021 >>> 0 >= $__ns$2 >>> 0) break; else {
     $__dc$019 = $__dc$1 + 1 | 0;
     $__dg$020 = $__dg$1;
    }
   }
  }
  $120 = $__ob + ($__nf$1 - $__nb << 2) | 0;
  $121 = HEAP32[$__oe >> 2] | 0;
  if (($120 | 0) == ($121 | 0)) {
   $$pre$phiZ2D = $0;
   $162 = $120;
  } else {
   $123 = $121 + -4 | 0;
   if ($120 >>> 0 < $123 >>> 0) {
    $$01$i$i217 = $120;
    $128 = $123;
    do {
     $126 = HEAP32[$$01$i$i217 >> 2] | 0;
     HEAP32[$$01$i$i217 >> 2] = HEAP32[$128 >> 2];
     HEAP32[$128 >> 2] = $126;
     $$01$i$i217 = $$01$i$i217 + 4 | 0;
     $128 = $128 + -4 | 0;
    } while ($$01$i$i217 >>> 0 < $128 >>> 0);
    $$pre$phiZ2D = $0;
    $162 = $121;
   } else {
    $$pre$phiZ2D = $0;
    $162 = $121;
   }
  }
 }
 L36 : do if ($__ns$2 >>> 0 < $__ne >>> 0) {
  $__nf$215 = $__ns$2;
  while (1) {
   $132 = HEAP8[$__nf$215 >> 0] | 0;
   if ($132 << 24 >> 24 == 46) {
    $__nf$215$lcssa = $__nf$215;
    break;
   }
   $144 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] & 31]($0, $132) | 0;
   $145 = HEAP32[$__oe >> 2] | 0;
   $146 = $145 + 4 | 0;
   HEAP32[$__oe >> 2] = $146;
   HEAP32[$145 >> 2] = $144;
   $147 = $__nf$215 + 1 | 0;
   if ($147 >>> 0 < $__ne >>> 0) $__nf$215 = $147; else {
    $152 = $146;
    $__nf$3 = $147;
    break L36;
   }
  }
  $137 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 127]($1) | 0;
  $138 = HEAP32[$__oe >> 2] | 0;
  $139 = $138 + 4 | 0;
  HEAP32[$__oe >> 2] = $139;
  HEAP32[$138 >> 2] = $137;
  $152 = $139;
  $__nf$3 = $__nf$215$lcssa + 1 | 0;
 } else {
  $152 = $162;
  $__nf$3 = $__ns$2;
 } while (0);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, $__nf$3, $__ne, $152) | 0;
 $156 = (HEAP32[$__oe >> 2] | 0) + ($13 - $__nf$3 << 2) | 0;
 HEAP32[$__oe >> 2] = $156;
 HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $156 : $__ob + ($__np - $__nb << 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $72 = 0, $76 = 0, $8 = 0, $9 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9188) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 63]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 63]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn, 0);
  HEAP32[$__nsn >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 63]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn, 0);
  HEAP32[$__psn >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 63]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
 } else {
  $72 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9124) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 44 >> 2] & 63]($5, $72);
  $76 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $76;
  HEAP8[$__pat + 1 >> 0] = $76 >> 8;
  HEAP8[$__pat + 2 >> 0] = $76 >> 16;
  HEAP8[$__pat + 3 >> 0] = $76 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 32 >> 2] & 63]($6, $72);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn, 0);
  HEAP32[$__nsn >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 28 >> 2] & 63]($7, $72);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn, 0);
  HEAP32[$__psn >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 12 >> 2] & 127]($72) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 16 >> 2] & 127]($72) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 20 >> 2] & 63]($8, $72);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp, 0);
  HEAP32[$__grp >> 2] = HEAP32[$8 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 24 >> 2] & 63]($9, $72);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym, 0);
  HEAP32[$__sym >> 2] = HEAP32[$9 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] & 127]($72) | 0;
 }
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i20 = 0, $$01$i$i215 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $111 = 0, $112 = 0, $120 = 0, $121 = 0, $123 = 0, $126 = 0, $128 = 0, $13 = 0, $132 = 0, $137 = 0, $138 = 0, $144 = 0, $145 = 0, $147 = 0, $156 = 0, $20 = 0, $25 = 0, $26 = 0, $28 = 0, $33 = 0, $34 = 0, $38 = 0, $42 = 0, $45 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $70 = 0, $72 = 0, $74 = 0, $81 = 0, $82 = 0, $83 = 0, $91 = 0, $95 = 0, $97 = 0, $__dc$017 = 0, $__dc$1 = 0, $__dg$018 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$214 = 0, $__nf$214$lcssa = 0, $__nf$3 = 0, $__ns$026 = 0, $__ns$122 = 0, $__ns$2 = 0, $__p$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9592) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 63]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 switch ($5 << 24 >> 24) {
 case 43:
 case 45:
  {
   $10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, $5) | 0;
   $11 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $11 + 1;
   HEAP8[$11 >> 0] = $10;
   $__nf$0 = $__nb + 1 | 0;
   break;
  }
 default:
  $__nf$0 = $__nb;
 }
 $13 = $__ne;
 L4 : do if (($13 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
  $20 = $__nf$0 + 1 | 0;
  switch (HEAP8[$20 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    label = 4;
    break L4;
   }
  }
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, 48) | 0;
  $26 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $26 + 1;
  HEAP8[$26 >> 0] = $25;
  $28 = $__nf$0 + 2 | 0;
  $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP8[$20 >> 0] | 0) | 0;
  $34 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $34 + 1;
  HEAP8[$34 >> 0] = $33;
  if ($28 >>> 0 < $__ne >>> 0) {
   $__ns$026 = $28;
   while (1) {
    $38 = HEAP8[$__ns$026 >> 0] | 0;
    if (!(_isxdigit_l($38, __ZNSt3__16__clocEv() | 0) | 0)) {
     $__nf$1 = $28;
     $__ns$2 = $__ns$026;
     break L4;
    }
    $42 = $__ns$026 + 1 | 0;
    if ($42 >>> 0 < $__ne >>> 0) $__ns$026 = $42; else {
     $__nf$1 = $28;
     $__ns$2 = $42;
     break;
    }
   }
  } else {
   $__nf$1 = $28;
   $__ns$2 = $28;
  }
 } else label = 4; else label = 4; while (0);
 L11 : do if ((label | 0) == 4) if ($__nf$0 >>> 0 < $__ne >>> 0) {
  $__ns$122 = $__nf$0;
  while (1) {
   $45 = HEAP8[$__ns$122 >> 0] | 0;
   if (!(_isdigit_l($45, __ZNSt3__16__clocEv() | 0) | 0)) {
    $__nf$1 = $__nf$0;
    $__ns$2 = $__ns$122;
    break L11;
   }
   $49 = $__ns$122 + 1 | 0;
   if ($49 >>> 0 < $__ne >>> 0) $__ns$122 = $49; else {
    $__nf$1 = $__nf$0;
    $__ns$2 = $49;
    break;
   }
  }
 } else {
  $__nf$1 = $__nf$0;
  $__ns$2 = $__nf$0;
 } while (0);
 $51 = HEAP8[$__grouping >> 0] | 0;
 $54 = $__grouping + 4 | 0;
 if (!((($51 & 1) == 0 ? ($51 & 255) >>> 1 : HEAP32[$54 >> 2] | 0) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] & 31]($0, $__nf$1, $__ns$2, HEAP32[$__oe >> 2] | 0) | 0;
  HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1);
  $$pre$phiZ2D = $0;
 } else {
  if (($__nf$1 | 0) != ($__ns$2 | 0)) {
   $70 = $__ns$2 + -1 | 0;
   if ($__nf$1 >>> 0 < $70 >>> 0) {
    $$01$i$i20 = $__nf$1;
    $74 = $70;
    do {
     $72 = HEAP8[$$01$i$i20 >> 0] | 0;
     HEAP8[$$01$i$i20 >> 0] = HEAP8[$74 >> 0] | 0;
     HEAP8[$74 >> 0] = $72;
     $$01$i$i20 = $$01$i$i20 + 1 | 0;
     $74 = $74 + -1 | 0;
    } while ($$01$i$i20 >>> 0 < $74 >>> 0);
   }
  }
  $81 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 127]($1) | 0;
  $82 = $__grouping + 8 | 0;
  $83 = $__grouping + 1 | 0;
  if ($__nf$1 >>> 0 < $__ns$2 >>> 0) {
   $__dc$017 = 0;
   $__dg$018 = 0;
   $__p$019 = $__nf$1;
   while (1) {
    $91 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $83 : HEAP32[$82 >> 2] | 0) + $__dg$018 >> 0] | 0;
    if ($91 << 24 >> 24 > 0 & ($__dc$017 | 0) == ($91 << 24 >> 24 | 0)) {
     $95 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $95 + 1;
     HEAP8[$95 >> 0] = $81;
     $97 = HEAP8[$__grouping >> 0] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$018 >>> 0 < ((($97 & 1) == 0 ? ($97 & 255) >>> 1 : HEAP32[$54 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$018 | 0;
    } else {
     $__dc$1 = $__dc$017;
     $__dg$1 = $__dg$018;
    }
    $111 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP8[$__p$019 >> 0] | 0) | 0;
    $112 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $112 + 1;
    HEAP8[$112 >> 0] = $111;
    $__p$019 = $__p$019 + 1 | 0;
    if ($__p$019 >>> 0 >= $__ns$2 >>> 0) break; else {
     $__dc$017 = $__dc$1 + 1 | 0;
     $__dg$018 = $__dg$1;
    }
   }
  }
  $120 = $__ob + ($__nf$1 - $__nb) | 0;
  $121 = HEAP32[$__oe >> 2] | 0;
  if (($120 | 0) == ($121 | 0)) $$pre$phiZ2D = $0; else {
   $123 = $121 + -1 | 0;
   if ($120 >>> 0 < $123 >>> 0) {
    $$01$i$i215 = $120;
    $128 = $123;
    do {
     $126 = HEAP8[$$01$i$i215 >> 0] | 0;
     HEAP8[$$01$i$i215 >> 0] = HEAP8[$128 >> 0] | 0;
     HEAP8[$128 >> 0] = $126;
     $$01$i$i215 = $$01$i$i215 + 1 | 0;
     $128 = $128 + -1 | 0;
    } while ($$01$i$i215 >>> 0 < $128 >>> 0);
    $$pre$phiZ2D = $0;
   } else $$pre$phiZ2D = $0;
  }
 }
 L36 : do if ($__ns$2 >>> 0 < $__ne >>> 0) {
  $__nf$214 = $__ns$2;
  while (1) {
   $132 = HEAP8[$__nf$214 >> 0] | 0;
   if ($132 << 24 >> 24 == 46) {
    $__nf$214$lcssa = $__nf$214;
    break;
   }
   $144 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] & 31]($0, $132) | 0;
   $145 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $145 + 1;
   HEAP8[$145 >> 0] = $144;
   $147 = $__nf$214 + 1 | 0;
   if ($147 >>> 0 < $__ne >>> 0) $__nf$214 = $147; else {
    $__nf$3 = $147;
    break L36;
   }
  }
  $137 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 127]($1) | 0;
  $138 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__oe >> 2] = $138 + 1;
  HEAP8[$138 >> 0] = $137;
  $__nf$3 = $__nf$214$lcssa + 1 | 0;
 } else $__nf$3 = $__ns$2; while (0);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] & 31]($0, $__nf$3, $__ne, HEAP32[$__oe >> 2] | 0) | 0;
 $156 = (HEAP32[$__oe >> 2] | 0) + ($13 - $__nf$3) | 0;
 HEAP32[$__oe >> 2] = $156;
 HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $156 : $__ob + ($__np - $__nb) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0$i$i$i = 0, $$0$i$i$i8 = 0, $$02 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $103 = 0, $105 = 0, $108 = 0, $109 = 0, $13 = 0, $19 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $33 = 0, $35 = 0, $40 = 0, $45 = 0, $47 = 0, $52 = 0, $56 = 0, $59 = 0, $60 = 0, $62 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $78 = 0, $81 = 0, $82 = 0, $86 = 0, $87 = 0, $89 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i7 = 0, $c$0$in$lcssa = 0, $c$0$in29 = 0, $isdigittmp = 0, $isdigittmp427 = 0, $isdigittmp431 = 0, $n$0$lcssa = 0, $n$030 = 0, $r = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__v$i$i7 = sp + 88 | 0;
 $r = sp + 76 | 0;
 $0 = sp + 64 | 0;
 $1 = sp + 40 | 0;
 $2 = sp + 16 | 0;
 $3 = sp;
 L1 : do if (($first | 0) == ($last | 0)) $$02 = $first; else {
  $isdigittmp = (HEAP8[$first >> 0] | 0) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $7 = $first + 1 | 0;
   if (($7 | 0) == ($last | 0)) $$02 = $first; else {
    $isdigittmp427 = (HEAP8[$7 >> 0] | 0) + -48 | 0;
    if ($isdigittmp427 >>> 0 < 10) {
     $c$0$in29 = $7;
     $isdigittmp431 = $isdigittmp427;
     $n$030 = $isdigittmp;
     while (1) {
      $10 = $c$0$in29 + 1 | 0;
      if (($10 | 0) == ($last | 0)) {
       $$02 = $first;
       break L1;
      }
      $13 = $isdigittmp431 + ($n$030 * 10 | 0) | 0;
      $isdigittmp431 = (HEAP8[$10 >> 0] | 0) + -48 | 0;
      if ($isdigittmp431 >>> 0 >= 10) {
       $$lcssa = $c$0$in29;
       $c$0$in$lcssa = $10;
       $n$0$lcssa = $13;
       break;
      } else {
       $c$0$in29 = $10;
       $n$030 = $13;
      }
     }
    } else {
     $$lcssa = $first;
     $c$0$in$lcssa = $7;
     $n$0$lcssa = $isdigittmp;
    }
    if (($last - $c$0$in$lcssa | 0) >>> 0 < $n$0$lcssa >>> 0) $$02 = $first; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($r, $c$0$in$lcssa, $n$0$lcssa);
     $19 = HEAP8[$r >> 0] | 0;
     $21 = ($19 & 1) == 0;
     $26 = $21 ? ($19 & 255) >>> 1 : HEAP32[$r + 4 >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $21 ? $r + 1 | 0 : HEAP32[$r + 8 >> 2] | 0, $26 >>> 0 < 10 ? $26 : 10);
     $33 = HEAP8[$0 >> 0] | 0;
     $35 = ($33 & 1) == 0;
     $40 = $35 ? ($33 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0;
     $45 = $40 >>> 0 > 10;
     $47 = _memcmp($35 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, 26587, $45 ? 10 : $40) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
     if (!((($47 | 0) == 0 ? ($40 >>> 0 < 10 ? -1 : $45 & 1) : $47) | 0)) {
      $52 = _malloc(32) | 0;
      HEAP32[$1 + 8 >> 2] = $52;
      HEAP32[$1 >> 2] = 33;
      HEAP32[$1 + 4 >> 2] = 21;
      dest = $52;
      src = 26598;
      stop = dest + 21 | 0;
      do {
       HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
       dest = dest + 1 | 0;
       src = src + 1 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP8[$52 + 21 >> 0] = 0;
      $56 = $1 + 12 | 0;
      HEAP32[$56 >> 2] = 0;
      HEAP32[$56 + 4 >> 2] = 0;
      HEAP32[$56 + 8 >> 2] = 0;
      $59 = $db + 4 | 0;
      $60 = HEAP32[$59 >> 2] | 0;
      $62 = HEAP32[$db + 8 >> 2] | 0;
      if ($60 >>> 0 < $62 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($60, $1);
       HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 24;
      } else {
       $69 = HEAP32[$db >> 2] | 0;
       $70 = $60 - $69 | 0;
       $71 = ($70 | 0) / 24 | 0;
       $72 = $71 + 1 | 0;
       if (($70 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $76 = ($62 - $69 | 0) / 24 | 0;
       if ($76 >>> 0 < 1073741823) {
        $78 = $76 << 1;
        $$0$i$i$i = $78 >>> 0 < $72 >>> 0 ? $72 : $78;
       } else $$0$i$i$i = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i7, $$0$i$i$i, $71, $db + 12 | 0);
       $81 = $__v$i$i7 + 8 | 0;
       $82 = HEAP32[$81 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($82, $1);
       HEAP32[$81 >> 2] = $82 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i7);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i7);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
     } else {
      HEAP32[$3 >> 2] = HEAP32[$r >> 2];
      HEAP32[$3 + 4 >> 2] = HEAP32[$r + 4 >> 2];
      HEAP32[$3 + 8 >> 2] = HEAP32[$r + 8 >> 2];
      HEAP32[$r >> 2] = 0;
      HEAP32[$r + 4 >> 2] = 0;
      HEAP32[$r + 8 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($2, $3);
      $86 = $db + 4 | 0;
      $87 = HEAP32[$86 >> 2] | 0;
      $89 = HEAP32[$db + 8 >> 2] | 0;
      if ($87 >>> 0 < $89 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($87, $2);
       HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 24;
      } else {
       $96 = HEAP32[$db >> 2] | 0;
       $97 = $87 - $96 | 0;
       $98 = ($97 | 0) / 24 | 0;
       $99 = $98 + 1 | 0;
       if (($97 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
       $103 = ($89 - $96 | 0) / 24 | 0;
       if ($103 >>> 0 < 1073741823) {
        $105 = $103 << 1;
        $$0$i$i$i8 = $105 >>> 0 < $99 >>> 0 ? $99 : $105;
       } else $$0$i$i$i8 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i7, $$0$i$i$i8, $98, $db + 12 | 0);
       $108 = $__v$i$i7 + 8 | 0;
       $109 = HEAP32[$108 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($109, $2);
       HEAP32[$108 >> 2] = $109 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i7);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i7);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($r);
     $$02 = $$lcssa + ($n$0$lcssa + 1) | 0;
    }
   }
  } else $$02 = $first;
 } while (0);
 STACKTOP = sp;
 return $$02 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $100 = 0, $101 = 0, $104 = 0, $107 = 0, $11 = 0, $119 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $78 = 0, $85 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 40 | 0;
 $__thousands_sep = sp + 36 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 48 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $7, 0);
 $11 = $__buf + 8 | 0;
 $13 = $__buf + 1 | 0;
 $14 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $14;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units >> 0] = 1;
 HEAP8[$__exp >> 0] = 69;
 $15 = $__buf + 4 | 0;
 $16 = HEAP32[$__decimal_point >> 2] | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $14;
 L4 : while (1) {
  if (!$$pre$i$i$i4) {
   $$pre$i$i$i = 0;
   $132 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) $$0$i$i$i$i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i4) | 0; else $$0$i$i$i$i2 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i2 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;
    $132 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i8 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i8 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($132) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $133 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$15 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $16, $17, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $133;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i4 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i4 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre22 = HEAP32[$__g_end >> 2] | 0;
 if ((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0) $104 = $$pre22; else if (($$pre22 - $__g | 0) < 160) {
  $100 = HEAP32[$__dc >> 2] | 0;
  $101 = $$pre22 + 4 | 0;
  HEAP32[$__g_end >> 2] = $101;
  HEAP32[$$pre22 >> 2] = $100;
  $104 = $101;
 } else $104 = $$pre22;
 HEAPF32[$__v >> 2] = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2, HEAP32[$__a_end >> 2] | 0, $__err);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $104, $__err);
 if (!$$pre$i$i$i$lcssa) $134 = 1; else {
  $107 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($107 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$107 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $134 = 1;
  } else $134 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $119 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($119 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$119 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($134) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($134) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $131 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $131 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $100 = 0, $101 = 0, $104 = 0, $107 = 0, $11 = 0, $119 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $78 = 0, $85 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 40 | 0;
 $__thousands_sep = sp + 36 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 48 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $7, 0);
 $11 = $__buf + 8 | 0;
 $13 = $__buf + 1 | 0;
 $14 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $14;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units >> 0] = 1;
 HEAP8[$__exp >> 0] = 69;
 $15 = $__buf + 4 | 0;
 $16 = HEAP32[$__decimal_point >> 2] | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $14;
 L4 : while (1) {
  if (!$$pre$i$i$i4) {
   $$pre$i$i$i = 0;
   $132 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) $$0$i$i$i$i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i4) | 0; else $$0$i$i$i$i2 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i2 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;
    $132 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i8 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i8 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($132) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $133 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$15 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $16, $17, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $133;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i4 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i4 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre22 = HEAP32[$__g_end >> 2] | 0;
 if ((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0) $104 = $$pre22; else if (($$pre22 - $__g | 0) < 160) {
  $100 = HEAP32[$__dc >> 2] | 0;
  $101 = $$pre22 + 4 | 0;
  HEAP32[$__g_end >> 2] = $101;
  HEAP32[$$pre22 >> 2] = $100;
  $104 = $101;
 } else $104 = $$pre22;
 HEAPF64[$__v >> 3] = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2, HEAP32[$__a_end >> 2] | 0, $__err);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $104, $__err);
 if (!$$pre$i$i$i$lcssa) $134 = 1; else {
  $107 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($107 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$107 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $134 = 1;
  } else $134 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $119 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($119 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$119 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($134) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($134) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $131 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $131 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i8 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i = 0, $$pre22 = 0, $100 = 0, $101 = 0, $104 = 0, $107 = 0, $11 = 0, $119 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $78 = 0, $85 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 40 | 0;
 $__thousands_sep = sp + 36 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 48 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $7, 0);
 $11 = $__buf + 8 | 0;
 $13 = $__buf + 1 | 0;
 $14 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $14;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units >> 0] = 1;
 HEAP8[$__exp >> 0] = 69;
 $15 = $__buf + 4 | 0;
 $16 = HEAP32[$__decimal_point >> 2] | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $14;
 L4 : while (1) {
  if (!$$pre$i$i$i4) {
   $$pre$i$i$i = 0;
   $132 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) $$0$i$i$i$i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i4) | 0; else $$0$i$i$i$i2 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i2 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $132 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i4;
    $132 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i8 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i8 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($132) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($132) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $133 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$15 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $16, $17, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $133;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i4 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i4 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre22 = HEAP32[$__g_end >> 2] | 0;
 if ((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0) $104 = $$pre22; else if (($$pre22 - $__g | 0) < 160) {
  $100 = HEAP32[$__dc >> 2] | 0;
  $101 = $$pre22 + 4 | 0;
  HEAP32[$__g_end >> 2] = $101;
  HEAP32[$$pre22 >> 2] = $100;
  $104 = $101;
 } else $104 = $$pre22;
 HEAPF64[$__v >> 3] = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2, HEAP32[$__a_end >> 2] | 0, $__err);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $104, $__err);
 if (!$$pre$i$i$i$lcssa) $134 = 1; else {
  $107 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($107 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$107 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $134 = 1;
  } else $134 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $119 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($119 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$119 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($134) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($134) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $131 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $131 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule11FuncHandler6FinishEv($this) {
 $this = $this | 0;
 var $$0$i12$i = 0, $$lcssa = 0, $$lcssa41 = 0, $$phi$trans$insert = 0, $$phi$trans$insert27 = 0, $0 = 0, $10 = 0, $105 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $112 = 0, $114 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $124 = 0, $130 = 0, $138 = 0, $139 = 0, $145 = 0, $147 = 0, $15 = 0, $152 = 0, $153 = 0, $157 = 0, $16 = 0, $160 = 0, $162 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $23 = 0, $25 = 0, $29 = 0, $30 = 0, $38 = 0, $4 = 0, $42 = 0, $47 = 0, $53 = 0, $55 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $65 = 0, $66 = 0, $72 = 0, $74 = 0, $79 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa39 = 0, $__nd$0$i$i$lcssa40 = 0, $__parent$i = 0, $__r$0$i = 0, $name = 0, $origin = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__parent$i = sp + 28 | 0;
 $name = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $origin = sp;
 $$phi$trans$insert = $this + 72 | 0;
 $4 = $$phi$trans$insert;
 $6 = HEAP32[$4 >> 2] | 0;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $$phi$trans$insert27 = $this + 80 | 0;
 $10 = $$phi$trans$insert27;
 $12 = HEAP32[$10 >> 2] | 0;
 $15 = HEAP32[$10 + 4 >> 2] | 0;
 if ((HEAP32[$this + 88 >> 2] | 0) == 1) {
  $23 = $15;
  $25 = $12;
 } else {
  $16 = _i64Add($12 | 0, $15 | 0, $6 | 0, $9 | 0) | 0;
  $17 = tempRet0;
  $18 = $$phi$trans$insert27;
  HEAP32[$18 >> 2] = $16;
  HEAP32[$18 + 4 >> 2] = $17;
  $23 = $17;
  $25 = $16;
 }
 if ($9 >>> 0 < $23 >>> 0 | ($9 | 0) == ($23 | 0) & $6 >>> 0 < $25 >>> 0) {
  HEAP32[$name >> 2] = 0;
  HEAP32[$name + 4 >> 2] = 0;
  HEAP32[$name + 8 >> 2] = 0;
  $29 = $this + 56 | 0;
  $30 = HEAP8[$29 >> 0] | 0;
  if (!($30 & 1)) $38 = ($30 & 255) >>> 1; else $38 = HEAP32[$this + 60 >> 2] | 0;
  if (!$38) {
   $42 = HEAP32[(HEAP32[$this + 4 >> 2] | 0) + 4 >> 2] | 0;
   $47 = $this + 16 | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$42 >> 2] | 0) + 44 >> 2] & 15]($42, HEAP32[$47 >> 2] | 0, HEAP32[$47 + 4 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($name, 15043) | 0;
  } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($name, $29) | 0;
  $53 = __Znwj(56) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($53, $name);
  $55 = $$phi$trans$insert;
  $57 = HEAP32[$55 >> 2] | 0;
  $60 = HEAP32[$55 + 4 >> 2] | 0;
  $61 = $53 + 16 | 0;
  HEAP32[$61 >> 2] = $57;
  HEAP32[$61 + 4 >> 2] = $60;
  $65 = $53 + 24 | 0;
  HEAP32[$65 >> 2] = 0;
  HEAP32[$65 + 4 >> 2] = 0;
  HEAP32[$65 + 8 >> 2] = 0;
  HEAP32[$65 + 12 >> 2] = 0;
  HEAP32[$65 + 16 >> 2] = 0;
  HEAP32[$65 + 20 >> 2] = 0;
  HEAP32[$65 + 24 >> 2] = 0;
  $66 = $$phi$trans$insert27;
  $72 = _i64Subtract(HEAP32[$66 >> 2] | 0, HEAP32[$66 + 4 >> 2] | 0, $57 | 0, $60 | 0) | 0;
  $74 = $65;
  HEAP32[$74 >> 2] = $72;
  HEAP32[$74 + 4 >> 2] = tempRet0;
  $79 = $53 + 32 | 0;
  HEAP32[$79 >> 2] = 0;
  HEAP32[$79 + 4 >> 2] = 0;
  do if (($57 | 0) == 0 & ($60 | 0) == 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
   __ZdlPv($53);
  } else {
   $87 = HEAP32[$this + 4 >> 2] | 0;
   HEAP32[$0 >> 2] = $53;
   $88 = $87 + 16 | 0;
   $89 = HEAP32[$88 >> 2] | 0;
   if (($89 | 0) == (HEAP32[$87 + 20 >> 2] | 0)) {
    __ZNSt3__16vectorIPN15google_breakpad6Module8FunctionENS_9allocatorIS4_EEE21__push_back_slow_pathIKS4_EEvRT_($87 + 12 | 0, $0);
    break;
   } else {
    HEAP32[$89 >> 2] = $53;
    HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + 4;
    break;
   }
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
  STACKTOP = sp;
  return;
 }
 if (!(HEAP8[$this + 96 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($origin, $this + 56 | 0);
 $105 = HEAP32[(HEAP32[HEAP32[$this + 4 >> 2] >> 2] | 0) + 32 >> 2] | 0;
 if (!$105) ___assert_fail(15030, 21517, 119, 26244);
 $107 = $105 + 32 | 0;
 $108 = $this + 16 | 0;
 $109 = $105 + 36 | 0;
 $110 = HEAP32[$109 >> 2] | 0;
 do if (!$110) {
  HEAP32[$__parent$i >> 2] = $109;
  $$0$i12$i = $109;
  $160 = $109;
  label = 30;
 } else {
  $112 = $108;
  $114 = HEAP32[$112 >> 2] | 0;
  $117 = HEAP32[$112 + 4 >> 2] | 0;
  $__nd$0$i$i = $110;
  while (1) {
   $119 = $__nd$0$i$i + 16 | 0;
   $121 = HEAP32[$119 >> 2] | 0;
   $124 = HEAP32[$119 + 4 >> 2] | 0;
   if ($117 >>> 0 < $124 >>> 0 | ($117 | 0) == ($124 | 0) & $114 >>> 0 < $121 >>> 0) {
    $130 = HEAP32[$__nd$0$i$i >> 2] | 0;
    if (!$130) {
     $$lcssa41 = $__nd$0$i$i;
     $__nd$0$i$i$lcssa40 = $__nd$0$i$i;
     label = 23;
     break;
    } else $__nd$0$be$in$i$i = $130;
   } else {
    if (!($124 >>> 0 < $117 >>> 0 | ($124 | 0) == ($117 | 0) & $121 >>> 0 < $114 >>> 0)) {
     $__nd$0$i$i$lcssa = $__nd$0$i$i;
     label = 29;
     break;
    }
    $138 = $__nd$0$i$i + 4 | 0;
    $139 = HEAP32[$138 >> 2] | 0;
    if (!$139) {
     $$lcssa = $138;
     $__nd$0$i$i$lcssa39 = $__nd$0$i$i;
     label = 27;
     break;
    } else $__nd$0$be$in$i$i = $139;
   }
   $__nd$0$i$i = $__nd$0$be$in$i$i;
  }
  if ((label | 0) == 23) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa40;
   $$0$i12$i = $$lcssa41;
   $160 = $__nd$0$i$i$lcssa40;
   label = 30;
   break;
  } else if ((label | 0) == 27) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa39;
   $$0$i12$i = $$lcssa;
   $160 = $__nd$0$i$i$lcssa39;
   label = 30;
   break;
  } else if ((label | 0) == 29) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
   if (!$__nd$0$i$i$lcssa) {
    $$0$i12$i = $__parent$i;
    $160 = $__nd$0$i$i$lcssa;
    label = 30;
    break;
   } else {
    $__r$0$i = $__nd$0$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 30) {
  $145 = __Znwj(40) | 0;
  $147 = $108;
  $152 = HEAP32[$147 + 4 >> 2] | 0;
  $153 = $145 + 16 | 0;
  HEAP32[$153 >> 2] = HEAP32[$147 >> 2];
  HEAP32[$153 + 4 >> 2] = $152;
  $157 = $145 + 24 | 0;
  HEAP32[$157 >> 2] = 0;
  HEAP32[$157 + 4 >> 2] = 0;
  HEAP32[$157 + 8 >> 2] = 0;
  HEAP32[$145 >> 2] = 0;
  HEAP32[$145 + 4 >> 2] = 0;
  HEAP32[$145 + 8 >> 2] = $160;
  HEAP32[$$0$i12$i >> 2] = $145;
  $162 = HEAP32[HEAP32[$107 >> 2] >> 2] | 0;
  if (!$162) $167 = $145; else {
   HEAP32[$107 >> 2] = $162;
   $167 = HEAP32[$$0$i12$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$105 + 36 >> 2] | 0, $167);
  $168 = $105 + 40 | 0;
  HEAP32[$168 >> 2] = (HEAP32[$168 >> 2] | 0) + 1;
  $__r$0$i = $145;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($__r$0$i + 24 | 0, $origin) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($origin);
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader15CompilationUnit13SkipAttributeEPKcNS_9DwarfFormE($this, $start, $form) {
 $this = $this | 0;
 $start = $start | 0;
 $form = $form | 0;
 var $$0 = 0, $$0$i = 0, $$0$i16 = 0, $$0$i20 = 0, $$0$i8 = 0, $$0$in$i = 0, $$0$in$i11 = 0, $$lcssa = 0, $$lcssa125 = 0, $$lcssa126 = 0, $$lcssa128 = 0, $10 = 0, $103 = 0, $104 = 0, $106 = 0, $108 = 0, $109 = 0, $111 = 0, $115 = 0, $124 = 0, $2 = 0, $23 = 0, $28 = 0, $3 = 0, $38 = 0, $42 = 0, $5 = 0, $56 = 0, $58 = 0, $7 = 0, $75 = 0, $78 = 0, $8 = 0, $81 = 0, $84 = 0, $form$tr = 0, $num_read$0$i = 0, $num_read$0$i15 = 0, $num_read$0$i18 = 0, $num_read$0$i6 = 0, $shift$0$i = 0, $shift$0$i7 = 0, $start$tr = 0, $start$tr$lcssa131 = 0, $start$tr$lcssa132 = 0, $start$tr$lcssa133 = 0, $start$tr$lcssa134 = 0, $start$tr$lcssa135 = 0, $start$tr$lcssa136 = 0, $start$tr$lcssa137 = 0, $start$tr$lcssa138 = 0, $start$tr$lcssa139 = 0, $start$tr$lcssa140 = 0, $start$tr$lcssa141 = 0, $start$tr$lcssa142 = 0, $start$tr$lcssa143 = 0, $start$tr$lcssa144 = 0, label = 0;
 $form$tr = $form;
 $start$tr = $start;
 L1 : while (1) {
  switch ($form$tr | 0) {
  case 17:
  case 12:
  case 11:
   {
    $start$tr$lcssa131 = $start$tr;
    label = 8;
    break L1;
    break;
   }
  case 5:
  case 18:
   {
    $start$tr$lcssa132 = $start$tr;
    label = 9;
    break L1;
    break;
   }
  case 6:
  case 19:
   {
    $start$tr$lcssa133 = $start$tr;
    label = 10;
    break L1;
    break;
   }
  case 32:
  case 7:
  case 20:
   {
    $start$tr$lcssa134 = $start$tr;
    label = 11;
    break L1;
    break;
   }
  case 8:
   {
    $start$tr$lcssa135 = $start$tr;
    label = 12;
    break L1;
    break;
   }
  case 21:
  case 15:
   {
    $start$tr$lcssa136 = $start$tr;
    label = 5;
    break L1;
    break;
   }
  case 13:
   {
    $start$tr$lcssa137 = $start$tr;
    label = 4;
    break L1;
    break;
   }
  case 1:
   {
    $start$tr$lcssa138 = $start$tr;
    label = 17;
    break L1;
    break;
   }
  case 16:
   {
    $start$tr$lcssa139 = $start$tr;
    label = 18;
    break L1;
    break;
   }
  case 10:
   {
    $start$tr$lcssa140 = $start$tr;
    label = 23;
    break L1;
    break;
   }
  case 3:
   {
    $start$tr$lcssa141 = $start$tr;
    label = 24;
    break L1;
    break;
   }
  case 4:
   {
    $start$tr$lcssa142 = $start$tr;
    label = 28;
    break L1;
    break;
   }
  case 24:
  case 9:
   {
    $start$tr$lcssa143 = $start$tr;
    label = 3;
    break L1;
    break;
   }
  case 23:
  case 14:
   {
    $start$tr$lcssa144 = $start$tr;
    label = 34;
    break L1;
    break;
   }
  case 25:
   {
    $$0 = $start$tr;
    label = 36;
    break L1;
    break;
   }
  case 22:
   {
    $$0$i = $start$tr;
    $10 = 0;
    $8 = 0;
    $num_read$0$i = 0;
    $shift$0$i = 0;
    break;
   }
  default:
   {
    label = 35;
    break L1;
   }
  }
  while (1) {
   $2 = $num_read$0$i + 1 | 0;
   $3 = HEAPU8[$$0$i >> 0] | 0;
   $5 = _bitshift64Shl($3 & 127 | 0, 0, $shift$0$i | 0) | 0;
   $7 = $5 | $8;
   if (!($3 & 128)) {
    $$lcssa128 = $2;
    $124 = $7;
    break;
   } else {
    $$0$i = $$0$i + 1 | 0;
    $10 = tempRet0 | $10;
    $8 = $7;
    $num_read$0$i = $2;
    $shift$0$i = $shift$0$i + 7 | 0;
   }
  }
  $form$tr = $124;
  $start$tr = $start$tr + $$lcssa128 | 0;
 }
 switch (label | 0) {
 case 3:
  {
   $$0$i8 = $start$tr$lcssa143;
   $109 = 0;
   $111 = 0;
   $num_read$0$i6 = 0;
   $shift$0$i7 = 0;
   while (1) {
    $103 = $num_read$0$i6 + 1 | 0;
    $104 = HEAPU8[$$0$i8 >> 0] | 0;
    $106 = _bitshift64Shl($104 & 127 | 0, 0, $shift$0$i7 | 0) | 0;
    $108 = $106 | $109;
    if (!($104 & 128)) {
     $$lcssa126 = $103;
     $115 = $108;
     break;
    } else {
     $$0$i8 = $$0$i8 + 1 | 0;
     $109 = $108;
     $111 = tempRet0 | $111;
     $num_read$0$i6 = $103;
     $shift$0$i7 = $shift$0$i7 + 7 | 0;
    }
   }
   $$0 = $start$tr$lcssa143 + ($115 + $$lcssa126) | 0;
   return $$0 | 0;
  }
 case 4:
  {
   $$0$i16 = $start$tr$lcssa137;
   $num_read$0$i15 = 0;
   while (1) {
    $28 = $num_read$0$i15 + 1 | 0;
    if ((HEAP8[$$0$i16 >> 0] | 0) > -1) {
     $$lcssa125 = $28;
     break;
    } else {
     $$0$i16 = $$0$i16 + 1 | 0;
     $num_read$0$i15 = $28;
    }
   }
   $$0 = $start$tr$lcssa137 + $$lcssa125 | 0;
   return $$0 | 0;
  }
 case 5:
  {
   $$0$i20 = $start$tr$lcssa136;
   $num_read$0$i18 = 0;
   while (1) {
    $23 = $num_read$0$i18 + 1 | 0;
    if ((HEAP8[$$0$i20 >> 0] | 0) > -1) {
     $$lcssa = $23;
     break;
    } else {
     $$0$i20 = $$0$i20 + 1 | 0;
     $num_read$0$i18 = $23;
    }
   }
   $$0 = $start$tr$lcssa136 + $$lcssa | 0;
   return $$0 | 0;
  }
 case 8:
  {
   $$0 = $start$tr$lcssa131 + 1 | 0;
   return $$0 | 0;
  }
 case 9:
  {
   $$0 = $start$tr$lcssa132 + 2 | 0;
   return $$0 | 0;
  }
 case 10:
  {
   $$0 = $start$tr$lcssa133 + 4 | 0;
   return $$0 | 0;
  }
 case 11:
  {
   $$0 = $start$tr$lcssa134 + 8 | 0;
   return $$0 | 0;
  }
 case 12:
  {
   $$0 = $start$tr$lcssa135 + ((_strlen($start$tr$lcssa135 | 0) | 0) + 1) | 0;
   return $$0 | 0;
  }
 case 17:
  {
   $$0 = $start$tr$lcssa138 + (HEAPU8[(HEAP32[$this + 68 >> 2] | 0) + 24 >> 0] | 0) | 0;
   return $$0 | 0;
  }
 case 18:
  {
   $38 = HEAP16[$this + 16 >> 1] | 0;
   if (($38 & 65535) <= 1) ___assert_fail(18164, 18044, 188, 18185);
   $42 = HEAP32[$this + 68 >> 2] | 0;
   if ($38 << 16 >> 16 == 2) {
    $$0 = $start$tr$lcssa139 + (HEAPU8[$42 + 24 >> 0] | 0) | 0;
    return $$0 | 0;
   } else {
    $$0 = $start$tr$lcssa139 + (HEAPU8[$42 + 25 >> 0] | 0) | 0;
    return $$0 | 0;
   }
   break;
  }
 case 23:
  {
   $$0 = $start$tr$lcssa140 + ((HEAPU8[$start$tr$lcssa140 >> 0] | 0) + 1) | 0;
   return $$0 | 0;
  }
 case 24:
  {
   $56 = HEAP8[$start$tr$lcssa141 >> 0] | 0;
   $58 = HEAP8[$start$tr$lcssa141 + 1 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i11 = ($58 & 255) << 8 | $56 & 255; else $$0$in$i11 = $58 & 255 | ($56 & 255) << 8;
   $$0 = $start$tr$lcssa141 + (($$0$in$i11 & 65535) + 2) | 0;
   return $$0 | 0;
  }
 case 28:
  {
   $75 = HEAPU8[$start$tr$lcssa142 >> 0] | 0;
   $78 = HEAPU8[$start$tr$lcssa142 + 1 >> 0] | 0;
   $81 = HEAPU8[$start$tr$lcssa142 + 2 >> 0] | 0;
   $84 = HEAPU8[$start$tr$lcssa142 + 3 >> 0] | 0;
   if ((HEAP32[(HEAP32[$this + 68 >> 2] | 0) + 20 >> 2] | 0) == 1) $$0$in$i = $78 << 8 | $75 | $81 << 16 | $84 << 24; else $$0$in$i = $78 << 16 | $75 << 24 | $81 << 8 | $84;
   $$0 = $start$tr$lcssa142 + ($$0$in$i + 4) | 0;
   return $$0 | 0;
  }
 case 34:
  {
   $$0 = $start$tr$lcssa144 + (HEAPU8[(HEAP32[$this + 68 >> 2] | 0) + 25 >> 0] | 0) | 0;
   return $$0 | 0;
  }
 case 35:
  {
   _fwrite(18199, 19, 1, HEAP32[_stderr >> 2] | 0) | 0;
   $$0 = 0;
   return $$0 | 0;
  }
 case 36:
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $101 = 0, $103 = 0, $107 = 0, $110 = 0, $12 = 0, $122 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $78 = 0, $8 = 0, $85 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $__atoms = sp + 208 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i3) {
   $$pre$i$i$i = 0;
   $135 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0; else $$0$i$i$i$i1 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
    $135 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i7 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($135) {
    $136 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $136 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $136;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre21 = HEAP32[$__g_end >> 2] | 0;
 if (!((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $107 = $$pre21; else if (($$pre21 - $__g | 0) < 160) {
  $98 = HEAP32[$__dc >> 2] | 0;
  $99 = $$pre21 + 4 | 0;
  HEAP32[$__g_end >> 2] = $99;
  HEAP32[$$pre21 >> 2] = $98;
  $107 = $99;
 } else $107 = $$pre21;
 $101 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 $103 = $__v;
 HEAP32[$103 >> 2] = $101;
 HEAP32[$103 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $107, $__err);
 if (!$$pre$i$i$i$lcssa) $137 = 1; else {
  $110 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($110 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$110 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $137 = 1;
  } else $137 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $122 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$122 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($137) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($137) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $134 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $134 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $101 = 0, $103 = 0, $107 = 0, $110 = 0, $12 = 0, $122 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $78 = 0, $8 = 0, $85 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $__atoms = sp + 208 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i3) {
   $$pre$i$i$i = 0;
   $135 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0; else $$0$i$i$i$i1 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $135 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
    $135 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i7 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($135) {
    $136 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($135) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $136 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $136;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre21 = HEAP32[$__g_end >> 2] | 0;
 if (!((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $107 = $$pre21; else if (($$pre21 - $__g | 0) < 160) {
  $98 = HEAP32[$__dc >> 2] | 0;
  $99 = $$pre21 + 4 | 0;
  HEAP32[$__g_end >> 2] = $99;
  HEAP32[$$pre21 >> 2] = $98;
  $107 = $99;
 } else $107 = $$pre21;
 $101 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 $103 = $__v;
 HEAP32[$103 >> 2] = $101;
 HEAP32[$103 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $107, $__err);
 if (!$$pre$i$i$i$lcssa) $137 = 1; else {
  $110 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($110 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$110 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $137 = 1;
  } else $137 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $122 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$122 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($137) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($137) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $134 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $134 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler20ComputeQualifiedNameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $$0$i17$i = 0, $$lcssa = 0, $$lcssa48 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $108 = 0, $110 = 0, $115 = 0, $116 = 0, $12 = 0, $121 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $32 = 0, $40 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $60 = 0, $62 = 0, $65 = 0, $67 = 0, $69 = 0, $72 = 0, $78 = 0, $86 = 0, $87 = 0, $93 = 0, $95 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa46 = 0, $__nd$0$i$i$lcssa47 = 0, $__parent$i = 0, $__r$0$i = 0, $enclosing_name$0$ph = 0, $enclosing_name$023 = 0, $qualified_name$014$ph = 0, $qualified_name$01420 = 0, $spec = 0, $unqualified_name$0 = 0, $unqualified_name$121 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$i = sp + 48 | 0;
 $0 = sp;
 $spec = sp + 12 | 0;
 $1 = $this + 44 | 0;
 $2 = HEAP8[$1 >> 0] | 0;
 if (!($2 & 1)) $10 = ($2 & 255) >>> 1; else $10 = HEAP32[$this + 48 >> 2] | 0;
 do if (!$10) {
  $12 = HEAP32[$this + 28 >> 2] | 0;
  $13 = ($12 | 0) == 0;
  if (!$13) {
   $14 = HEAP8[$12 >> 0] | 0;
   if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$12 + 4 >> 2] | 0;
   if ($22) {
    $qualified_name$014$ph = $12;
    label = 17;
    break;
   }
  }
  $23 = $this + 32 | 0;
  $24 = HEAP8[$23 >> 0] | 0;
  if (!($24 & 1)) $32 = ($24 & 255) >>> 1; else $32 = HEAP32[$this + 36 >> 2] | 0;
  $unqualified_name$0 = ($32 | 0) == 0 ? ($13 ? $23 : $12 + 24 | 0) : $23;
  if ($13) $enclosing_name$0$ph = HEAP32[$this + 8 >> 2] | 0; else $enclosing_name$0$ph = $12 + 12 | 0;
  HEAP32[$agg$result >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  $40 = HEAP32[(HEAP32[$this + 4 >> 2] | 0) + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$40 >> 2] | 0) + 12 >> 2] & 31]($0, $40, $enclosing_name$0$ph, $unqualified_name$0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($agg$result, $0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $124 = 0;
  $enclosing_name$023 = $enclosing_name$0$ph;
  $qualified_name$01420 = 0;
  $unqualified_name$121 = $unqualified_name$0;
 } else {
  $qualified_name$014$ph = $1;
  label = 17;
 } while (0);
 if ((label | 0) == 17) {
  HEAP32[$agg$result >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($agg$result, $qualified_name$014$ph) | 0;
  $124 = 1;
  $enclosing_name$023 = 0;
  $qualified_name$01420 = $qualified_name$014$ph;
  $unqualified_name$121 = 0;
 }
 if (!(HEAP8[$this + 24 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $spec;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if ($124) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($spec, $qualified_name$01420) | 0; else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($spec + 12 | 0, $enclosing_name$023) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($spec + 24 | 0, $unqualified_name$121) | 0;
 }
 $53 = HEAP32[(HEAP32[HEAP32[$this + 4 >> 2] >> 2] | 0) + 32 >> 2] | 0;
 if (!$53) ___assert_fail(15030, 21517, 119, 26244);
 $55 = $53 + 20 | 0;
 $56 = $this + 16 | 0;
 $57 = $53 + 24 | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 do if (!$58) {
  HEAP32[$__parent$i >> 2] = $57;
  $$0$i17$i = $57;
  $108 = $57;
  label = 36;
 } else {
  $60 = $56;
  $62 = HEAP32[$60 >> 2] | 0;
  $65 = HEAP32[$60 + 4 >> 2] | 0;
  $__nd$0$i$i = $58;
  while (1) {
   $67 = $__nd$0$i$i + 16 | 0;
   $69 = HEAP32[$67 >> 2] | 0;
   $72 = HEAP32[$67 + 4 >> 2] | 0;
   if ($65 >>> 0 < $72 >>> 0 | ($65 | 0) == ($72 | 0) & $62 >>> 0 < $69 >>> 0) {
    $78 = HEAP32[$__nd$0$i$i >> 2] | 0;
    if (!$78) {
     $$lcssa48 = $__nd$0$i$i;
     $__nd$0$i$i$lcssa47 = $__nd$0$i$i;
     label = 29;
     break;
    } else $__nd$0$be$in$i$i = $78;
   } else {
    if (!($72 >>> 0 < $65 >>> 0 | ($72 | 0) == ($65 | 0) & $69 >>> 0 < $62 >>> 0)) {
     $__nd$0$i$i$lcssa = $__nd$0$i$i;
     label = 35;
     break;
    }
    $86 = $__nd$0$i$i + 4 | 0;
    $87 = HEAP32[$86 >> 2] | 0;
    if (!$87) {
     $$lcssa = $86;
     $__nd$0$i$i$lcssa46 = $__nd$0$i$i;
     label = 33;
     break;
    } else $__nd$0$be$in$i$i = $87;
   }
   $__nd$0$i$i = $__nd$0$be$in$i$i;
  }
  if ((label | 0) == 29) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa47;
   $$0$i17$i = $$lcssa48;
   $108 = $__nd$0$i$i$lcssa47;
   label = 36;
   break;
  } else if ((label | 0) == 33) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa46;
   $$0$i17$i = $$lcssa;
   $108 = $__nd$0$i$i$lcssa46;
   label = 36;
   break;
  } else if ((label | 0) == 35) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
   if (!$__nd$0$i$i$lcssa) {
    $$0$i17$i = $__parent$i;
    $108 = $__nd$0$i$i$lcssa;
    label = 36;
    break;
   } else {
    $__r$0$i = $__nd$0$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 36) {
  $93 = __Znwj(64) | 0;
  $95 = $56;
  $100 = HEAP32[$95 + 4 >> 2] | 0;
  $101 = $93 + 16 | 0;
  HEAP32[$101 >> 2] = HEAP32[$95 >> 2];
  HEAP32[$101 + 4 >> 2] = $100;
  dest = $93 + 24 | 0;
  stop = dest + 36 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP32[$93 >> 2] = 0;
  HEAP32[$93 + 4 >> 2] = 0;
  HEAP32[$93 + 8 >> 2] = $108;
  HEAP32[$$0$i17$i >> 2] = $93;
  $110 = HEAP32[HEAP32[$55 >> 2] >> 2] | 0;
  if (!$110) $115 = $93; else {
   HEAP32[$55 >> 2] = $110;
   $115 = HEAP32[$$0$i17$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$53 + 24 >> 2] | 0, $115);
  $116 = $53 + 28 | 0;
  HEAP32[$116 >> 2] = (HEAP32[$116 >> 2] | 0) + 1;
  $__r$0$i = $93;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($__r$0$i + 24 | 0, $spec) | 0;
 $121 = $spec + 12 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($__r$0$i + 36 | 0, $121) | 0;
 $123 = $spec + 24 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($__r$0$i + 48 | 0, $123) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($121);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($spec);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $102 = 0, $105 = 0, $117 = 0, $12 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $78 = 0, $8 = 0, $85 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $__atoms = sp + 208 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i3) {
   $$pre$i$i$i = 0;
   $130 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0; else $$0$i$i$i$i1 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
    $130 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i7 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($130) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre21 = HEAP32[$__g_end >> 2] | 0;
 if (!((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $102 = $$pre21; else if (($$pre21 - $__g | 0) < 160) {
  $98 = HEAP32[$__dc >> 2] | 0;
  $99 = $$pre21 + 4 | 0;
  HEAP32[$__g_end >> 2] = $99;
  HEAP32[$$pre21 >> 2] = $98;
  $102 = $99;
 } else $102 = $$pre21;
 HEAP16[$__v >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $102, $__err);
 if (!$$pre$i$i$i$lcssa) $132 = 1; else {
  $105 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($105 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$105 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $132 = 1;
  } else $132 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $117 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($117 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$117 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($132) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($132) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $129 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $129 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $102 = 0, $105 = 0, $117 = 0, $12 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $78 = 0, $8 = 0, $85 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $__atoms = sp + 208 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i3) {
   $$pre$i$i$i = 0;
   $130 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0; else $$0$i$i$i$i1 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
    $130 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i7 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($130) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre21 = HEAP32[$__g_end >> 2] | 0;
 if (!((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $102 = $$pre21; else if (($$pre21 - $__g | 0) < 160) {
  $98 = HEAP32[$__dc >> 2] | 0;
  $99 = $$pre21 + 4 | 0;
  HEAP32[$__g_end >> 2] = $99;
  HEAP32[$$pre21 >> 2] = $98;
  $102 = $99;
 } else $102 = $$pre21;
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $102, $__err);
 if (!$$pre$i$i$i$lcssa) $132 = 1; else {
  $105 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($105 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$105 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $132 = 1;
  } else $132 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $117 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($117 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$117 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($132) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($132) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $129 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $129 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $102 = 0, $105 = 0, $117 = 0, $12 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $78 = 0, $8 = 0, $85 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $__atoms = sp + 208 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i3) {
   $$pre$i$i$i = 0;
   $130 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0; else $$0$i$i$i$i1 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
    $130 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i7 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($130) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre21 = HEAP32[$__g_end >> 2] | 0;
 if (!((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $102 = $$pre21; else if (($$pre21 - $__g | 0) < 160) {
  $98 = HEAP32[$__dc >> 2] | 0;
  $99 = $$pre21 + 4 | 0;
  HEAP32[$__g_end >> 2] = $99;
  HEAP32[$$pre21 >> 2] = $98;
  $102 = $99;
 } else $102 = $$pre21;
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $102, $__err);
 if (!$$pre$i$i$i$lcssa) $132 = 1; else {
  $105 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($105 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$105 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $132 = 1;
  } else $132 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $117 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($117 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$117 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($132) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($132) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $129 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $129 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i = 0, $$pre21 = 0, $0 = 0, $102 = 0, $105 = 0, $117 = 0, $12 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $30 = 0, $33 = 0, $44 = 0, $50 = 0, $59 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $78 = 0, $8 = 0, $85 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $__atoms = sp + 208 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP32[$__thousands_sep >> 2] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i3) {
   $$pre$i$i$i = 0;
   $130 = 1;
  } else {
   $20 = HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0; else $$0$i$i$i$i1 = HEAP32[$20 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i3;
    $130 = 0;
   }
  }
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 16; else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i1$i$i7 = HEAP32[$33 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($130) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $44 = HEAP8[$__buf >> 0] | 0;
  $50 = ($44 & 1) == 0 ? ($44 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $50 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $50 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $59 = 10; else $59 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $59, 0);
   $64 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $64 + $50;
   $__a$1 = $64;
  } else $__a$1 = $__a$0;
  $66 = $$pre$i$i$i + 12 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $$pre$i$i$i + 16 | 0;
  if (($67 | 0) == (HEAP32[$68 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$67 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $78 = HEAP32[$66 >> 2] | 0;
  if (($78 | 0) == (HEAP32[$68 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$66 >> 2] = $78 + 4;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $85 = HEAP8[$__grouping >> 0] | 0;
 $$pre21 = HEAP32[$__g_end >> 2] | 0;
 if (!((($85 & 1) == 0 ? ($85 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $102 = $$pre21; else if (($$pre21 - $__g | 0) < 160) {
  $98 = HEAP32[$__dc >> 2] | 0;
  $99 = $$pre21 + 4 | 0;
  HEAP32[$__g_end >> 2] = $99;
  HEAP32[$$pre21 >> 2] = $98;
  $102 = $99;
 } else $102 = $$pre21;
 HEAP32[$__v >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $102, $__err);
 if (!$$pre$i$i$i$lcssa) $132 = 1; else {
  $105 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($105 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$105 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $132 = 1;
  } else $132 = 0;
 }
 do if (!$$pre$i3$i$i) label = 44; else {
  $117 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($117 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$117 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 44;
   break;
  } else if ($132) break; else {
   label = 46;
   break;
  }
 } while (0);
 if ((label | 0) == 44) if ($132) label = 46;
 if ((label | 0) == 46) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $129 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $129 | 0;
}

function __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($agg$result, $this, $__x) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$lcssa$i$i$i = 0, $$03$i$i$i = 0, $$lcssa = 0, $0 = 0, $101 = 0.0, $11 = 0, $110 = 0, $112 = 0, $115 = 0, $118 = 0, $119 = 0, $125 = 0, $126 = 0, $129 = 0, $132 = 0, $133 = 0, $14 = 0, $140 = 0, $144 = 0, $145 = 0, $146 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $51 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $62 = 0, $66 = 0, $67 = 0, $68 = 0, $70 = 0, $80 = 0, $91 = 0, $93 = 0, $95 = 0, $98 = 0.0, $__bc$0 = 0, $__chash$0 = 0, $__chash$1 = 0, $__data$0$lcssa$i$i$i = 0, $__data$02$i$i$i = 0, $__h$0$lcssa$i$i$i = 0, $__h$01$i$i$i = 0, $__h$1$i$i$i = 0, $__h$2$i$i$i = 0, $__h$3$i$i$i = 0, $__lhs_sz$05$i$i = 0, $__lp$03$i$i = 0, $__nd$022 = 0, $__nd$023 = 0, $__nd$1 = 0, $__rp$04$i$i = 0, label = 0;
 $0 = HEAP8[$__x >> 0] | 0;
 $2 = ($0 & 1) == 0;
 $6 = $2 ? $__x + 1 | 0 : HEAP32[$__x + 8 >> 2] | 0;
 $11 = $2 ? ($0 & 255) >>> 1 : HEAP32[$__x + 4 >> 2] | 0;
 if ($11 >>> 0 > 3) {
  $$03$i$i$i = $11;
  $__data$02$i$i$i = $6;
  $__h$01$i$i$i = $11;
  while (1) {
   $14 = Math_imul(HEAPU8[$__data$02$i$i$i >> 0] | HEAPU8[$__data$02$i$i$i + 1 >> 0] << 8 | HEAPU8[$__data$02$i$i$i + 2 >> 0] << 16 | HEAPU8[$__data$02$i$i$i + 3 >> 0] << 24, 1540483477) | 0;
   $19 = (Math_imul($14 >>> 24 ^ $14, 1540483477) | 0) ^ (Math_imul($__h$01$i$i$i, 1540483477) | 0);
   $$03$i$i$i = $$03$i$i$i + -4 | 0;
   if ($$03$i$i$i >>> 0 <= 3) {
    $$lcssa = $19;
    break;
   } else {
    $__data$02$i$i$i = $__data$02$i$i$i + 4 | 0;
    $__h$01$i$i$i = $19;
   }
  }
  $23 = $11 + -4 | 0;
  $24 = $23 & -4;
  $$0$lcssa$i$i$i = $23 - $24 | 0;
  $__data$0$lcssa$i$i$i = $6 + ($24 + 4) | 0;
  $__h$0$lcssa$i$i$i = $$lcssa;
 } else {
  $$0$lcssa$i$i$i = $11;
  $__data$0$lcssa$i$i$i = $6;
  $__h$0$lcssa$i$i$i = $11;
 }
 switch ($$0$lcssa$i$i$i | 0) {
 case 3:
  {
   $__h$1$i$i$i = HEAPU8[$__data$0$lcssa$i$i$i + 2 >> 0] << 16 ^ $__h$0$lcssa$i$i$i;
   label = 6;
   break;
  }
 case 2:
  {
   $__h$1$i$i$i = $__h$0$lcssa$i$i$i;
   label = 6;
   break;
  }
 case 1:
  {
   $__h$2$i$i$i = $__h$0$lcssa$i$i$i;
   label = 7;
   break;
  }
 default:
  $__h$3$i$i$i = $__h$0$lcssa$i$i$i;
 }
 if ((label | 0) == 6) {
  $__h$2$i$i$i = HEAPU8[$__data$0$lcssa$i$i$i + 1 >> 0] << 8 ^ $__h$1$i$i$i;
  label = 7;
 }
 if ((label | 0) == 7) $__h$3$i$i$i = Math_imul(HEAPU8[$__data$0$lcssa$i$i$i >> 0] ^ $__h$2$i$i$i, 1540483477) | 0;
 $43 = Math_imul($__h$3$i$i$i >>> 13 ^ $__h$3$i$i$i, 1540483477) | 0;
 $45 = $43 >>> 15 ^ $43;
 $46 = $this + 4 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 $48 = ($47 | 0) == 0;
 L13 : do if ($48) $__chash$0 = 0; else {
  $49 = $47 + -1 | 0;
  $51 = ($49 & $47 | 0) == 0;
  if ($51) $56 = $45 & $49; else $56 = ($45 >>> 0) % ($47 >>> 0) | 0;
  $57 = HEAP32[(HEAP32[$this >> 2] | 0) + ($56 << 2) >> 2] | 0;
  if (!$57) $__chash$0 = $56; else {
   $__nd$022 = HEAP32[$57 >> 2] | 0;
   if (!$__nd$022) $__chash$0 = $56; else {
    $60 = ($11 | 0) == 0;
    $__nd$023 = $__nd$022;
    L21 : while (1) {
     $62 = HEAP32[$__nd$023 + 4 >> 2] | 0;
     if ($51) $66 = $62 & $49; else $66 = ($62 >>> 0) % ($47 >>> 0) | 0;
     if (($66 | 0) != ($56 | 0)) {
      $__chash$0 = $56;
      break L13;
     }
     $67 = $__nd$023 + 8 | 0;
     $68 = HEAP8[$67 >> 0] | 0;
     $70 = ($68 & 1) == 0;
     L28 : do if ((($70 ? ($68 & 255) >>> 1 : HEAP32[$__nd$023 + 12 >> 2] | 0) | 0) == ($11 | 0)) {
      $80 = $70 ? $67 + 1 | 0 : HEAP32[$__nd$023 + 16 >> 2] | 0;
      if (!$70) if (!(_memcmp($80, $6, $11) | 0)) {
       $146 = 0;
       $__nd$1 = $__nd$023;
       label = 40;
       break L21;
      } else break;
      if ($60) {
       $146 = 0;
       $__nd$1 = $__nd$023;
       label = 40;
       break L21;
      } else {
       $__lhs_sz$05$i$i = $11;
       $__lp$03$i$i = $80;
       $__rp$04$i$i = $6;
      }
      while (1) {
       if ((HEAP8[$__lp$03$i$i >> 0] | 0) != (HEAP8[$__rp$04$i$i >> 0] | 0)) break L28;
       $__lhs_sz$05$i$i = $__lhs_sz$05$i$i + -1 | 0;
       if (!$__lhs_sz$05$i$i) {
        $146 = 0;
        $__nd$1 = $__nd$023;
        label = 40;
        break L21;
       } else {
        $__lp$03$i$i = $__lp$03$i$i + 1 | 0;
        $__rp$04$i$i = $__rp$04$i$i + 1 | 0;
       }
      }
     } while (0);
     $__nd$023 = HEAP32[$__nd$023 >> 2] | 0;
     if (!$__nd$023) {
      $__chash$0 = $56;
      break L13;
     }
    }
    if ((label | 0) == 40) {
     $144 = $__nd$1;
     HEAP32[$agg$result >> 2] = $144;
     $145 = $agg$result + 4 | 0;
     HEAP8[$145 >> 0] = $146;
     return;
    }
   }
  }
 } while (0);
 $91 = __Znwj(20) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($91 + 8 | 0, $__x);
 $93 = $this + 8 | 0;
 HEAP32[$91 + 4 >> 2] = $45;
 HEAP32[$91 >> 2] = 0;
 $95 = $this + 12 | 0;
 $98 = +(((HEAP32[$95 >> 2] | 0) + 1 | 0) >>> 0);
 $101 = +HEAPF32[$this + 16 >> 2];
 do if ($48 | $98 > +($47 >>> 0) * $101) {
  if ($47 >>> 0 > 2) $110 = ($47 + -1 & $47 | 0) == 0; else $110 = 0;
  $112 = ($110 & 1 | $47 << 1) ^ 1;
  $115 = ~~+Math_ceil(+($98 / $101)) >>> 0;
  __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEj($this, $112 >>> 0 < $115 >>> 0 ? $115 : $112);
  $118 = HEAP32[$46 >> 2] | 0;
  $119 = $118 + -1 | 0;
  if (!($119 & $118)) {
   $__bc$0 = $118;
   $__chash$1 = $119 & $45;
   break;
  } else {
   $__bc$0 = $118;
   $__chash$1 = ($45 >>> 0) % ($118 >>> 0) | 0;
   break;
  }
 } else {
  $__bc$0 = $47;
  $__chash$1 = $__chash$0;
 } while (0);
 $125 = (HEAP32[$this >> 2] | 0) + ($__chash$1 << 2) | 0;
 $126 = HEAP32[$125 >> 2] | 0;
 if (!$126) {
  HEAP32[$91 >> 2] = HEAP32[$93 >> 2];
  HEAP32[$93 >> 2] = $91;
  HEAP32[$125 >> 2] = $93;
  $129 = HEAP32[$91 >> 2] | 0;
  if ($129) {
   $132 = HEAP32[$129 + 4 >> 2] | 0;
   $133 = $__bc$0 + -1 | 0;
   if (!($133 & $__bc$0)) $140 = $132 & $133; else $140 = ($132 >>> 0) % ($__bc$0 >>> 0) | 0;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($140 << 2) >> 2] = $91;
  }
 } else {
  HEAP32[$91 >> 2] = HEAP32[$126 >> 2];
  HEAP32[$126 >> 2] = $91;
 }
 HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 1;
 $146 = 1;
 $__nd$1 = $91;
 $144 = $__nd$1;
 HEAP32[$agg$result >> 2] = $144;
 $145 = $agg$result + 4 | 0;
 HEAP8[$145 >> 0] = $146;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $117 = 0, $118 = 0, $13 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $79 = 0, $86 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 203 | 0;
 $__thousands_sep = sp + 202 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 201 | 0;
 $__exp = sp + 200 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $7, 0);
 $11 = $__buf + 8 | 0;
 $13 = $__buf + 1 | 0;
 $14 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $14;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units >> 0] = 1;
 HEAP8[$__exp >> 0] = 69;
 $15 = $__buf + 4 | 0;
 $16 = HEAP8[$__decimal_point >> 0] | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $14;
 L4 : while (1) {
  if (!$$pre$i$i$i3) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i3; else $$pre$i$i$i = $$pre$i$i$i3;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $133 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$15 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $16, $17, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $133;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre19 = HEAP32[$__g_end >> 2] | 0;
 if ((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0) $105 = $$pre19; else if (($$pre19 - $__g | 0) < 160) {
  $101 = HEAP32[$__dc >> 2] | 0;
  $102 = $$pre19 + 4 | 0;
  HEAP32[$__g_end >> 2] = $102;
  HEAP32[$$pre19 >> 2] = $101;
  $105 = $102;
 } else $105 = $$pre19;
 HEAPF32[$__v >> 2] = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2, HEAP32[$__a_end >> 2] | 0, $__err);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $105, $__err);
 if (!$$pre$i$i$i$lcssa) $118 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $118 = 0;
 } else $118 = $$pre$i$i$i$lcssa; else $118 = $$pre$i$i$i$lcssa;
 $117 = ($118 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$117) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($117) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $132 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $132 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $117 = 0, $118 = 0, $13 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $79 = 0, $86 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 203 | 0;
 $__thousands_sep = sp + 202 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 201 | 0;
 $__exp = sp + 200 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $7, 0);
 $11 = $__buf + 8 | 0;
 $13 = $__buf + 1 | 0;
 $14 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $14;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units >> 0] = 1;
 HEAP8[$__exp >> 0] = 69;
 $15 = $__buf + 4 | 0;
 $16 = HEAP8[$__decimal_point >> 0] | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $14;
 L4 : while (1) {
  if (!$$pre$i$i$i3) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i3; else $$pre$i$i$i = $$pre$i$i$i3;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $133 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$15 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $16, $17, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $133;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre19 = HEAP32[$__g_end >> 2] | 0;
 if ((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0) $105 = $$pre19; else if (($$pre19 - $__g | 0) < 160) {
  $101 = HEAP32[$__dc >> 2] | 0;
  $102 = $$pre19 + 4 | 0;
  HEAP32[$__g_end >> 2] = $102;
  HEAP32[$$pre19 >> 2] = $101;
  $105 = $102;
 } else $105 = $$pre19;
 HEAPF64[$__v >> 3] = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2, HEAP32[$__a_end >> 2] | 0, $__err);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $105, $__err);
 if (!$$pre$i$i$i$lcssa) $118 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $118 = 0;
 } else $118 = $$pre$i$i$i$lcssa; else $118 = $$pre$i$i$i$lcssa;
 $117 = ($118 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$117) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($117) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $132 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $132 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i = 0, $$pre19 = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $117 = 0, $118 = 0, $13 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $79 = 0, $86 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 203 | 0;
 $__thousands_sep = sp + 202 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 201 | 0;
 $__exp = sp + 200 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $7, 0);
 $11 = $__buf + 8 | 0;
 $13 = $__buf + 1 | 0;
 $14 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $14;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 HEAP8[$__in_units >> 0] = 1;
 HEAP8[$__exp >> 0] = 69;
 $15 = $__buf + 4 | 0;
 $16 = HEAP8[$__decimal_point >> 0] | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i3 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $14;
 L4 : while (1) {
  if (!$$pre$i$i$i3) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i3; else $$pre$i$i$i = $$pre$i$i$i3;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $133 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $133 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$15 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $13 : HEAP32[$11 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $16, $17, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $133;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i3 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre19 = HEAP32[$__g_end >> 2] | 0;
 if ((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0) $105 = $$pre19; else if (($$pre19 - $__g | 0) < 160) {
  $101 = HEAP32[$__dc >> 2] | 0;
  $102 = $$pre19 + 4 | 0;
  HEAP32[$__g_end >> 2] = $102;
  HEAP32[$$pre19 >> 2] = $101;
  $105 = $102;
 } else $105 = $$pre19;
 HEAPF64[$__v >> 3] = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2, HEAP32[$__a_end >> 2] | 0, $__err);
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $105, $__err);
 if (!$$pre$i$i$i$lcssa) $118 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $118 = 0;
 } else $118 = $$pre$i$i$i$lcssa; else $118 = $$pre$i$i$i$lcssa;
 $117 = ($118 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$117) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($117) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $132 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $132 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $100 = 0, $105 = 0, $117 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $15 = 0, $19 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $50 = 0, $56 = 0, $65 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $84 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $__buf = sp + 16 | 0;
 $__a_end = sp + 12 | 0;
 $__g = sp + 48 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 HEAP32[$__grouping >> 2] = 0;
 HEAP32[$__grouping + 4 >> 2] = 0;
 HEAP32[$__grouping + 8 >> 2] = 0;
 $3 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $3;
 $4 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9444) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 48 >> 2] & 31]($4, 28892, 28918, $__atoms) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $15 = 10; else $15 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $15, 0);
 $19 = $__buf + 8 | 0;
 $21 = $__buf + 1 | 0;
 $22 = (HEAP8[$__buf >> 0] & 1) == 0 ? $21 : HEAP32[$19 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $22;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $23 = $__buf + 4 | 0;
 $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $22;
 L4 : while (1) {
  if (!$$pre$i$i$i6) {
   $$pre$i$i$i = 0;
   $130 = 1;
  } else {
   $26 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
   if (($26 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) $$0$i$i$i$i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i6) | 0; else $$0$i$i$i$i4 = HEAP32[$26 >> 2] | 0;
   if (($$0$i$i$i$i4 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $$pre$i$i$i = 0;
    $130 = 1;
   } else {
    $$pre$i$i$i = $$pre$i$i$i6;
    $130 = 0;
   }
  }
  $36 = HEAP32[$__e >> 2] | 0;
  do if (!$36) label = 16; else {
   $39 = HEAP32[$36 + 12 >> 2] | 0;
   if (($39 | 0) == (HEAP32[$36 + 16 >> 2] | 0)) $$0$i$i1$i$i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] & 127]($36) | 0; else $$0$i$i1$i$i10 = HEAP32[$39 >> 2] | 0;
   if (($$0$i$i1$i$i10 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 16;
    break;
   } else if ($130) {
    $131 = $36;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $36;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   if ($130) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $50 = HEAP8[$__buf >> 0] | 0;
  $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$23 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $56 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $65, 0);
   $70 = (HEAP8[$__buf >> 0] & 1) == 0 ? $21 : HEAP32[$19 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $70 + $56;
   $__a$1 = $70;
  } else $__a$1 = $__a$0;
  $72 = $$pre$i$i$i + 12 | 0;
  $73 = HEAP32[$72 >> 2] | 0;
  $74 = $$pre$i$i$i + 16 | 0;
  if (($73 | 0) == (HEAP32[$74 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAP32[$73 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i3$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $84 = HEAP32[$72 >> 2] | 0;
  if (($84 | 0) == (HEAP32[$74 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i6 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$72 >> 2] = $84 + 4;
   $$pre$i$i$i6 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
 $99 = (HEAP8[$__buf >> 0] & 1) == 0 ? $21 : HEAP32[$19 >> 2] | 0;
 $100 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $__v;
 if ((__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($99, $100, 30276, $vararg_buffer) | 0) != 1) HEAP32[$__err >> 2] = 4;
 if (!$$pre$i$i$i$lcssa) $132 = 1; else {
  $105 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
  if (($105 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0; else $$0$i$i$i$i = HEAP32[$105 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $132 = 1;
  } else $132 = 0;
 }
 do if (!$$pre$i3$i$i) label = 43; else {
  $117 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
  if (($117 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i) | 0; else $$0$i$i1$i$i = HEAP32[$117 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 43;
   break;
  } else if ($132) break; else {
   label = 45;
   break;
  }
 } while (0);
 if ((label | 0) == 43) if ($132) label = 45;
 if ((label | 0) == 45) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $129 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $129 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first, $last, $op, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $op = $op | 0;
 $db = $db | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $118 = 0, $119 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $53 = 0, $56 = 0, $58 = 0, $6 = 0, $65 = 0, $68 = 0, $71 = 0, $73 = 0, $8 = 0, $83 = 0, $86 = 0, $89 = 0, $91 = 0, $op1 = 0, $op2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $op2 = sp + 84 | 0;
 $op1 = sp + 72 | 0;
 $0 = sp + 60 | 0;
 $1 = sp + 48 | 0;
 $2 = sp + 36 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 $6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
 L1 : do if (($6 | 0) == ($first | 0)) $$0 = $first; else {
  $8 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($6, $last, $db) | 0;
  $10 = $db + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (($8 | 0) == ($6 | 0)) {
   $117 = $11 + -24 | 0;
   $119 = $11;
   while (1) {
    $118 = $119 + -24 | 0;
    HEAP32[$10 >> 2] = $118;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($118);
    $119 = HEAP32[$10 >> 2] | 0;
    if (($119 | 0) == ($117 | 0)) {
     $$0 = $first;
     break L1;
    }
   }
  }
  if ((($11 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$0 = $first; else {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2, $11 + -24 | 0);
   $19 = HEAP32[$10 >> 2] | 0;
   $20 = $19 + -24 | 0;
   $22 = $19;
   do {
    $21 = $22 + -24 | 0;
    HEAP32[$10 >> 2] = $21;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
    $22 = HEAP32[$10 >> 2] | 0;
   } while (($22 | 0) != ($20 | 0));
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op1, $19 + -48 | 0);
   $25 = HEAP32[$10 >> 2] | 0;
   $26 = $25 + -24 | 0;
   if (!(HEAP8[$26 >> 0] & 1)) {
    HEAP8[$26 + 1 >> 0] = 0;
    HEAP8[$26 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$25 + -16 >> 2] >> 0] = 0;
    HEAP32[$25 + -20 >> 2] = 0;
   }
   $34 = HEAP8[$op >> 0] | 0;
   $36 = ($34 & 1) == 0;
   $37 = $op + 4 | 0;
   $41 = $36 ? ($34 & 255) >>> 1 : HEAP32[$37 >> 2] | 0;
   $42 = $op + 8 | 0;
   $44 = $op + 1 | 0;
   $46 = $41 >>> 0 > 1;
   $48 = _memcmp($36 ? $44 : HEAP32[$42 >> 2] | 0, 25637, $46 ? 1 : $41) | 0;
   if (!((($48 | 0) == 0 ? (($41 | 0) == 0 ? -1 : $46 & 1) : $48) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($26, 40);
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 25573, $op1);
   $53 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 26849) | 0;
   HEAP32[$4 >> 2] = HEAP32[$53 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$53 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$53 + 8 >> 2];
   HEAP32[$53 >> 2] = 0;
   HEAP32[$53 + 4 >> 2] = 0;
   HEAP32[$53 + 8 >> 2] = 0;
   $56 = HEAP8[$op >> 0] | 0;
   $58 = ($56 & 1) == 0;
   $65 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4, $58 ? $44 : HEAP32[$42 >> 2] | 0, $58 ? ($56 & 255) >>> 1 : HEAP32[$37 >> 2] | 0) | 0;
   HEAP32[$3 >> 2] = HEAP32[$65 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
   HEAP32[$65 >> 2] = 0;
   HEAP32[$65 + 4 >> 2] = 0;
   HEAP32[$65 + 8 >> 2] = 0;
   $68 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 25475) | 0;
   HEAP32[$2 >> 2] = HEAP32[$68 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
   HEAP32[$68 >> 2] = 0;
   HEAP32[$68 + 4 >> 2] = 0;
   HEAP32[$68 + 8 >> 2] = 0;
   $71 = HEAP8[$op2 >> 0] | 0;
   $73 = ($71 & 1) == 0;
   $83 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2, $73 ? $op2 + 1 | 0 : HEAP32[$op2 + 8 >> 2] | 0, $73 ? ($71 & 255) >>> 1 : HEAP32[$op2 + 4 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = HEAP32[$83 >> 2];
   HEAP32[$1 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
   HEAP32[$1 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
   HEAP32[$83 >> 2] = 0;
   HEAP32[$83 + 4 >> 2] = 0;
   HEAP32[$83 + 8 >> 2] = 0;
   $86 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25478) | 0;
   HEAP32[$0 >> 2] = HEAP32[$86 >> 2];
   HEAP32[$0 + 4 >> 2] = HEAP32[$86 + 4 >> 2];
   HEAP32[$0 + 8 >> 2] = HEAP32[$86 + 8 >> 2];
   HEAP32[$86 >> 2] = 0;
   HEAP32[$86 + 4 >> 2] = 0;
   HEAP32[$86 + 8 >> 2] = 0;
   $89 = HEAP8[$0 >> 0] | 0;
   $91 = ($89 & 1) == 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($26, $91 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $91 ? ($89 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   $101 = HEAP8[$op >> 0] | 0;
   $103 = ($101 & 1) == 0;
   $107 = $103 ? ($101 & 255) >>> 1 : HEAP32[$37 >> 2] | 0;
   $110 = $107 >>> 0 > 1;
   $112 = _memcmp($103 ? $44 : HEAP32[$42 >> 2] | 0, 25637, $110 ? 1 : $107) | 0;
   if (!((($112 | 0) == 0 ? (($107 | 0) == 0 ? -1 : $110 & 1) : $112) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($26, 41);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op1);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($op2);
   $$0 = $8;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__insertion_sort_incompleteIRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEbT0_SB_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $$lcssa = 0, $100 = 0, $101 = 0, $105 = 0, $108 = 0, $11 = 0, $112 = 0, $12 = 0, $16 = 0, $20 = 0, $21 = 0, $27 = 0, $29 = 0, $35 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $48 = 0, $5 = 0, $54 = 0, $55 = 0, $60 = 0, $61 = 0, $66 = 0, $68 = 0, $69 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $84 = 0, $86 = 0, $9 = 0, $92 = 0, $94 = 0, $__count$06 = 0, $__count$1 = 0, $__i$07 = 0, $__i$07$lcssa = 0, $__j$05 = 0, $__j$05$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0, label = 0;
 switch ($__last - $__first >> 2 | 0) {
 case 2:
  {
   $5 = $__last + -4 | 0;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$5 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $9 = HEAP32[$__first >> 2] | 0;
   HEAP32[$__first >> 2] = HEAP32[$5 >> 2];
   HEAP32[$5 >> 2] = $9;
   $$0 = 1;
   return $$0 | 0;
  }
 case 3:
  {
   $11 = $__first + 4 | 0;
   $12 = $__last + -4 | 0;
   $16 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
   $20 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$12 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
   if (!$16) {
    if (!$20) {
     $$0 = 1;
     return $$0 | 0;
    }
    $21 = HEAP32[$11 >> 2] | 0;
    HEAP32[$11 >> 2] = HEAP32[$12 >> 2];
    HEAP32[$12 >> 2] = $21;
    if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0)) {
     $$0 = 1;
     return $$0 | 0;
    }
    $27 = HEAP32[$__first >> 2] | 0;
    HEAP32[$__first >> 2] = HEAP32[$11 >> 2];
    HEAP32[$11 >> 2] = $27;
    $$0 = 1;
    return $$0 | 0;
   }
   $29 = HEAP32[$__first >> 2] | 0;
   if ($20) {
    HEAP32[$__first >> 2] = HEAP32[$12 >> 2];
    HEAP32[$12 >> 2] = $29;
    $$0 = 1;
    return $$0 | 0;
   }
   HEAP32[$__first >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = $29;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$12 >> 2] | 0, $29) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $35 = HEAP32[$11 >> 2] | 0;
   HEAP32[$11 >> 2] = HEAP32[$12 >> 2];
   HEAP32[$12 >> 2] = $35;
   $$0 = 1;
   return $$0 | 0;
  }
 case 4:
  {
   __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEjT0_SB_SB_SB_T_($__first, $__first + 4 | 0, $__first + 8 | 0, $__last + -4 | 0, $__comp) | 0;
   $$0 = 1;
   return $$0 | 0;
  }
 case 5:
  {
   $40 = $__first + 4 | 0;
   $41 = $__first + 8 | 0;
   $42 = $__first + 12 | 0;
   $43 = $__last + -4 | 0;
   __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEjT0_SB_SB_SB_T_($__first, $40, $41, $42, $__comp) | 0;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$43 >> 2] | 0, HEAP32[$42 >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $48 = HEAP32[$42 >> 2] | 0;
   HEAP32[$42 >> 2] = HEAP32[$43 >> 2];
   HEAP32[$43 >> 2] = $48;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$42 >> 2] | 0, HEAP32[$41 >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $54 = HEAP32[$41 >> 2] | 0;
   $55 = HEAP32[$42 >> 2] | 0;
   HEAP32[$41 >> 2] = $55;
   HEAP32[$42 >> 2] = $54;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($55, HEAP32[$40 >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $60 = HEAP32[$40 >> 2] | 0;
   $61 = HEAP32[$41 >> 2] | 0;
   HEAP32[$40 >> 2] = $61;
   HEAP32[$41 >> 2] = $60;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($61, HEAP32[$__first >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $66 = HEAP32[$__first >> 2] | 0;
   HEAP32[$__first >> 2] = HEAP32[$40 >> 2];
   HEAP32[$40 >> 2] = $66;
   $$0 = 1;
   return $$0 | 0;
  }
 case 1:
 case 0:
  {
   $$0 = 1;
   return $$0 | 0;
  }
 default:
  {
   $68 = $__first + 8 | 0;
   $69 = $__first + 4 | 0;
   $73 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$69 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
   $77 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$69 >> 2] | 0) | 0;
   do if ($73) {
    $86 = HEAP32[$__first >> 2] | 0;
    if ($77) {
     HEAP32[$__first >> 2] = HEAP32[$68 >> 2];
     HEAP32[$68 >> 2] = $86;
     break;
    }
    HEAP32[$__first >> 2] = HEAP32[$69 >> 2];
    HEAP32[$69 >> 2] = $86;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, $86) | 0) {
     $92 = HEAP32[$69 >> 2] | 0;
     HEAP32[$69 >> 2] = HEAP32[$68 >> 2];
     HEAP32[$68 >> 2] = $92;
    }
   } else if ($77) {
    $78 = HEAP32[$69 >> 2] | 0;
    $79 = HEAP32[$68 >> 2] | 0;
    HEAP32[$69 >> 2] = $79;
    HEAP32[$68 >> 2] = $78;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($79, HEAP32[$__first >> 2] | 0) | 0) {
     $84 = HEAP32[$__first >> 2] | 0;
     HEAP32[$__first >> 2] = HEAP32[$69 >> 2];
     HEAP32[$69 >> 2] = $84;
    }
   } while (0);
   $94 = $__first + 12 | 0;
   if (($94 | 0) == ($__last | 0)) {
    $$0 = 1;
    return $$0 | 0;
   } else {
    $__count$06 = 0;
    $__i$07 = $94;
    $__j$05 = $68;
   }
   while (1) {
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__i$07 >> 2] | 0, HEAP32[$__j$05 >> 2] | 0) | 0) {
     $100 = HEAP32[$__i$07 >> 2] | 0;
     $101 = $100;
     $__j$1 = $__i$07;
     $__k$0 = $__j$05;
     while (1) {
      HEAP32[$__j$1 >> 2] = HEAP32[$__k$0 >> 2];
      if (($__k$0 | 0) == ($__first | 0)) {
       $$lcssa = $__k$0;
       break;
      }
      $105 = $__k$0 + -4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($101, HEAP32[$105 >> 2] | 0) | 0) {
       $__j$1$phi = $__k$0;
       $__k$0 = $105;
       $__j$1 = $__j$1$phi;
      } else {
       $$lcssa = $__k$0;
       break;
      }
     }
     HEAP32[$$lcssa >> 2] = $100;
     $108 = $__count$06 + 1 | 0;
     if (($108 | 0) == 8) {
      $__i$07$lcssa = $__i$07;
      break;
     } else $__count$1 = $108;
    } else $__count$1 = $__count$06;
    $112 = $__i$07 + 4 | 0;
    if (($112 | 0) == ($__last | 0)) {
     $$0 = 1;
     label = 34;
     break;
    } else {
     $__j$05$phi = $__i$07;
     $__count$06 = $__count$1;
     $__i$07 = $112;
     $__j$05 = $__j$05$phi;
    }
   }
   if ((label | 0) == 34) return $$0 | 0;
   $$0 = ($__i$07$lcssa + 4 | 0) == ($__last | 0);
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE12__find_equalISG_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISG_PNS_11__tree_nodeISG_SO_EEiEESR_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa65 = 0, $$lcssa68 = 0, $$lcssa69 = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $116 = 0, $122 = 0, $129 = 0, $13 = 0, $130 = 0, $16 = 0, $24 = 0, $27 = 0, $3 = 0, $30 = 0, $35 = 0, $40 = 0, $41 = 0, $43 = 0, $46 = 0, $5 = 0, $54 = 0, $55 = 0, $57 = 0, $60 = 0, $62 = 0, $65 = 0, $7 = 0, $71 = 0, $78 = 0, $79 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $92 = 0, $97 = 0, $__nd$0$be$in$i = 0, $__nd$0$be$in$i3 = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa66 = 0, $__nd$0$i$lcssa67 = 0, $__nd$0$i2 = 0, $__nd$0$i2$lcssa = 0, $__nd$0$i2$lcssa63 = 0, $__nd$0$i2$lcssa64 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 $3 = $1;
 if (($1 | 0) != ($0 | 0)) {
  $5 = $__v;
  $7 = HEAP32[$5 >> 2] | 0;
  $10 = HEAP32[$5 + 4 >> 2] | 0;
  $11 = $1 + 16 | 0;
  $13 = HEAP32[$11 >> 2] | 0;
  $16 = HEAP32[$11 + 4 >> 2] | 0;
  if (!($10 >>> 0 < $16 >>> 0 | ($10 | 0) == ($16 | 0) & $7 >>> 0 < $13 >>> 0)) {
   if (!($16 >>> 0 < $10 >>> 0 | ($16 | 0) == ($10 | 0) & $13 >>> 0 < $7 >>> 0)) {
    HEAP32[$__parent >> 2] = $3;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $86 = $1 + 4 | 0;
   $87 = HEAP32[$86 >> 2] | 0;
   $88 = ($87 | 0) == 0;
   if ($88) {
    $$01$i$i$i$i$i = $1;
    while (1) {
     $92 = HEAP32[$$01$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$92 >> 2] | 0) == ($$01$i$i$i$i$i | 0)) {
      $$0$i$i$i$i$i = $92;
      break;
     } else $$01$i$i$i$i$i = $92;
    }
   } else {
    $$0$i$i$i$i$i$i = $87;
    while (1) {
     $89 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$89) {
      $$0$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $89;
    }
   }
   if (($$0$i$i$i$i$i | 0) != ($0 | 0)) {
    $97 = $$0$i$i$i$i$i + 16 | 0;
    $102 = HEAP32[$97 + 4 >> 2] | 0;
    if (!($10 >>> 0 < $102 >>> 0 | (($10 | 0) == ($102 | 0) ? $7 >>> 0 < (HEAP32[$97 >> 2] | 0) >>> 0 : 0))) {
     $108 = HEAP32[$0 >> 2] | 0;
     if (!$108) {
      HEAP32[$__parent >> 2] = $0;
      $$0 = $0;
      return $$0 | 0;
     } else $__nd$0$i = $108;
     while (1) {
      $111 = $__nd$0$i + 16 | 0;
      $113 = HEAP32[$111 >> 2] | 0;
      $116 = HEAP32[$111 + 4 >> 2] | 0;
      if ($10 >>> 0 < $116 >>> 0 | ($10 | 0) == ($116 | 0) & $7 >>> 0 < $113 >>> 0) {
       $122 = HEAP32[$__nd$0$i >> 2] | 0;
       if (!$122) {
        $$lcssa69 = $__nd$0$i;
        $__nd$0$i$lcssa67 = $__nd$0$i;
        label = 33;
        break;
       } else $__nd$0$be$in$i = $122;
      } else {
       if (!($116 >>> 0 < $10 >>> 0 | ($116 | 0) == ($10 | 0) & $113 >>> 0 < $7 >>> 0)) {
        $__nd$0$i$lcssa = $__nd$0$i;
        label = 38;
        break;
       }
       $129 = $__nd$0$i + 4 | 0;
       $130 = HEAP32[$129 >> 2] | 0;
       if (!$130) {
        $$lcssa68 = $129;
        $__nd$0$i$lcssa66 = $__nd$0$i;
        label = 37;
        break;
       } else $__nd$0$be$in$i = $130;
      }
      $__nd$0$i = $__nd$0$be$in$i;
     }
     if ((label | 0) == 33) {
      HEAP32[$__parent >> 2] = $__nd$0$i$lcssa67;
      $$0 = $$lcssa69;
      return $$0 | 0;
     } else if ((label | 0) == 37) {
      HEAP32[$__parent >> 2] = $__nd$0$i$lcssa66;
      $$0 = $$lcssa68;
      return $$0 | 0;
     } else if ((label | 0) == 38) {
      HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
      $$0 = $__parent;
      return $$0 | 0;
     }
    }
   }
   if ($88) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $86;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$0$i$i$i$i$i;
    $$0 = $$0$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $55 = $3; else {
  $24 = HEAP32[$1 >> 2] | 0;
  if (!$24) {
   $$01$i$i = $1;
   while (1) {
    $30 = HEAP32[$$01$i$i + 8 >> 2] | 0;
    if ((HEAP32[$30 >> 2] | 0) == ($$01$i$i | 0)) $$01$i$i = $30; else {
     $$0$i$i = $30;
     break;
    }
   }
  } else {
   $$0$i$i$i = $24;
   while (1) {
    $27 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$27) {
     $$0$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $27;
   }
  }
  $35 = $$0$i$i + 16 | 0;
  $40 = HEAP32[$35 + 4 >> 2] | 0;
  $41 = $__v;
  $43 = HEAP32[$41 >> 2] | 0;
  $46 = HEAP32[$41 + 4 >> 2] | 0;
  if ($40 >>> 0 < $46 >>> 0 | (($40 | 0) == ($46 | 0) ? (HEAP32[$35 >> 2] | 0) >>> 0 < $43 >>> 0 : 0)) $55 = $$0$i$i; else {
   $57 = HEAP32[$0 >> 2] | 0;
   if (!$57) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    return $$0 | 0;
   } else $__nd$0$i2 = $57;
   while (1) {
    $60 = $__nd$0$i2 + 16 | 0;
    $62 = HEAP32[$60 >> 2] | 0;
    $65 = HEAP32[$60 + 4 >> 2] | 0;
    if ($46 >>> 0 < $65 >>> 0 | ($46 | 0) == ($65 | 0) & $43 >>> 0 < $62 >>> 0) {
     $71 = HEAP32[$__nd$0$i2 >> 2] | 0;
     if (!$71) {
      $$lcssa65 = $__nd$0$i2;
      $__nd$0$i2$lcssa64 = $__nd$0$i2;
      label = 14;
      break;
     } else $__nd$0$be$in$i3 = $71;
    } else {
     if (!($65 >>> 0 < $46 >>> 0 | ($65 | 0) == ($46 | 0) & $62 >>> 0 < $43 >>> 0)) {
      $__nd$0$i2$lcssa = $__nd$0$i2;
      label = 19;
      break;
     }
     $78 = $__nd$0$i2 + 4 | 0;
     $79 = HEAP32[$78 >> 2] | 0;
     if (!$79) {
      $$lcssa = $78;
      $__nd$0$i2$lcssa63 = $__nd$0$i2;
      label = 18;
      break;
     } else $__nd$0$be$in$i3 = $79;
    }
    $__nd$0$i2 = $__nd$0$be$in$i3;
   }
   if ((label | 0) == 14) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa64;
    $$0 = $$lcssa65;
    return $$0 | 0;
   } else if ((label | 0) == 18) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa63;
    $$0 = $$lcssa;
    return $$0 | 0;
   } else if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa;
    $$0 = $__parent;
    return $$0 | 0;
   }
  }
 }
 if (!(HEAP32[$1 >> 2] | 0)) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  $54 = $55;
  HEAP32[$__parent >> 2] = $54;
  $$0 = $54 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__127__insertion_sort_incompleteIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEbT0_SB_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $$lcssa = 0, $100 = 0, $101 = 0, $105 = 0, $108 = 0, $11 = 0, $112 = 0, $12 = 0, $16 = 0, $20 = 0, $21 = 0, $27 = 0, $29 = 0, $35 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $48 = 0, $5 = 0, $54 = 0, $55 = 0, $60 = 0, $61 = 0, $66 = 0, $68 = 0, $69 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $84 = 0, $86 = 0, $9 = 0, $92 = 0, $94 = 0, $__count$06 = 0, $__count$1 = 0, $__i$07 = 0, $__i$07$lcssa = 0, $__j$05 = 0, $__j$05$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0, label = 0;
 switch ($__last - $__first >> 2 | 0) {
 case 2:
  {
   $5 = $__last + -4 | 0;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$5 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $9 = HEAP32[$__first >> 2] | 0;
   HEAP32[$__first >> 2] = HEAP32[$5 >> 2];
   HEAP32[$5 >> 2] = $9;
   $$0 = 1;
   return $$0 | 0;
  }
 case 3:
  {
   $11 = $__first + 4 | 0;
   $12 = $__last + -4 | 0;
   $16 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
   $20 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$12 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0;
   if (!$16) {
    if (!$20) {
     $$0 = 1;
     return $$0 | 0;
    }
    $21 = HEAP32[$11 >> 2] | 0;
    HEAP32[$11 >> 2] = HEAP32[$12 >> 2];
    HEAP32[$12 >> 2] = $21;
    if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$11 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0)) {
     $$0 = 1;
     return $$0 | 0;
    }
    $27 = HEAP32[$__first >> 2] | 0;
    HEAP32[$__first >> 2] = HEAP32[$11 >> 2];
    HEAP32[$11 >> 2] = $27;
    $$0 = 1;
    return $$0 | 0;
   }
   $29 = HEAP32[$__first >> 2] | 0;
   if ($20) {
    HEAP32[$__first >> 2] = HEAP32[$12 >> 2];
    HEAP32[$12 >> 2] = $29;
    $$0 = 1;
    return $$0 | 0;
   }
   HEAP32[$__first >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = $29;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$12 >> 2] | 0, $29) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $35 = HEAP32[$11 >> 2] | 0;
   HEAP32[$11 >> 2] = HEAP32[$12 >> 2];
   HEAP32[$12 >> 2] = $35;
   $$0 = 1;
   return $$0 | 0;
  }
 case 4:
  {
   __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEjT0_SB_SB_SB_T_($__first, $__first + 4 | 0, $__first + 8 | 0, $__last + -4 | 0, $__comp) | 0;
   $$0 = 1;
   return $$0 | 0;
  }
 case 5:
  {
   $40 = $__first + 4 | 0;
   $41 = $__first + 8 | 0;
   $42 = $__first + 12 | 0;
   $43 = $__last + -4 | 0;
   __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEjT0_SB_SB_SB_T_($__first, $40, $41, $42, $__comp) | 0;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$43 >> 2] | 0, HEAP32[$42 >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $48 = HEAP32[$42 >> 2] | 0;
   HEAP32[$42 >> 2] = HEAP32[$43 >> 2];
   HEAP32[$43 >> 2] = $48;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$42 >> 2] | 0, HEAP32[$41 >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $54 = HEAP32[$41 >> 2] | 0;
   $55 = HEAP32[$42 >> 2] | 0;
   HEAP32[$41 >> 2] = $55;
   HEAP32[$42 >> 2] = $54;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($55, HEAP32[$40 >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $60 = HEAP32[$40 >> 2] | 0;
   $61 = HEAP32[$41 >> 2] | 0;
   HEAP32[$40 >> 2] = $61;
   HEAP32[$41 >> 2] = $60;
   if (!(FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($61, HEAP32[$__first >> 2] | 0) | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $66 = HEAP32[$__first >> 2] | 0;
   HEAP32[$__first >> 2] = HEAP32[$40 >> 2];
   HEAP32[$40 >> 2] = $66;
   $$0 = 1;
   return $$0 | 0;
  }
 case 1:
 case 0:
  {
   $$0 = 1;
   return $$0 | 0;
  }
 default:
  {
   $68 = $__first + 8 | 0;
   $69 = $__first + 4 | 0;
   $73 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$69 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
   $77 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, HEAP32[$69 >> 2] | 0) | 0;
   do if ($73) {
    $86 = HEAP32[$__first >> 2] | 0;
    if ($77) {
     HEAP32[$__first >> 2] = HEAP32[$68 >> 2];
     HEAP32[$68 >> 2] = $86;
     break;
    }
    HEAP32[$__first >> 2] = HEAP32[$69 >> 2];
    HEAP32[$69 >> 2] = $86;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$68 >> 2] | 0, $86) | 0) {
     $92 = HEAP32[$69 >> 2] | 0;
     HEAP32[$69 >> 2] = HEAP32[$68 >> 2];
     HEAP32[$68 >> 2] = $92;
    }
   } else if ($77) {
    $78 = HEAP32[$69 >> 2] | 0;
    $79 = HEAP32[$68 >> 2] | 0;
    HEAP32[$69 >> 2] = $79;
    HEAP32[$68 >> 2] = $78;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($79, HEAP32[$__first >> 2] | 0) | 0) {
     $84 = HEAP32[$__first >> 2] | 0;
     HEAP32[$__first >> 2] = HEAP32[$69 >> 2];
     HEAP32[$69 >> 2] = $84;
    }
   } while (0);
   $94 = $__first + 12 | 0;
   if (($94 | 0) == ($__last | 0)) {
    $$0 = 1;
    return $$0 | 0;
   } else {
    $__count$06 = 0;
    $__i$07 = $94;
    $__j$05 = $68;
   }
   while (1) {
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__i$07 >> 2] | 0, HEAP32[$__j$05 >> 2] | 0) | 0) {
     $100 = HEAP32[$__i$07 >> 2] | 0;
     $101 = $100;
     $__j$1 = $__i$07;
     $__k$0 = $__j$05;
     while (1) {
      HEAP32[$__j$1 >> 2] = HEAP32[$__k$0 >> 2];
      if (($__k$0 | 0) == ($__first | 0)) {
       $$lcssa = $__k$0;
       break;
      }
      $105 = $__k$0 + -4 | 0;
      if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($101, HEAP32[$105 >> 2] | 0) | 0) {
       $__j$1$phi = $__k$0;
       $__k$0 = $105;
       $__j$1 = $__j$1$phi;
      } else {
       $$lcssa = $__k$0;
       break;
      }
     }
     HEAP32[$$lcssa >> 2] = $100;
     $108 = $__count$06 + 1 | 0;
     if (($108 | 0) == 8) {
      $__i$07$lcssa = $__i$07;
      break;
     } else $__count$1 = $108;
    } else $__count$1 = $__count$06;
    $112 = $__i$07 + 4 | 0;
    if (($112 | 0) == ($__last | 0)) {
     $$0 = 1;
     label = 34;
     break;
    } else {
     $__j$05$phi = $__i$07;
     $__count$06 = $__count$1;
     $__i$07 = $112;
     $__j$05 = $__j$05$phi;
    }
   }
   if ((label | 0) == 34) return $$0 | 0;
   $$0 = ($__i$07$lcssa + 4 | 0) == ($__last | 0);
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $124 = 0, $13 = 0, $136 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $60 = 0, $63 = 0, $74 = 0, $76 = 0, $86 = 0, $87 = 0, $90 = 0, $92 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $148 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $148 = 1;
   break;
  } else {
   $148 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($148) {
   $149 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($148) label = 16; else {
  $149 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 2048, $$0$i$i) | 0)) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $$01 = 0;
   break;
  }
  $49 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 31]($__ct, $$0$i$i, 0) | 0) << 24 >> 24;
  $50 = HEAP32[$__b >> 2] | 0;
  $51 = $50 + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  if (($52 | 0) == (HEAP32[$50 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$50 >> 2] | 0) + 40 >> 2] & 127]($50) | 0;
   $$0$in = $__n;
   $$pre$i3$i$i10 = $149;
   $74 = $149;
   $__r$0$in = $49;
  } else {
   HEAP32[$51 >> 2] = $52 + 4;
   $$0$in = $__n;
   $$pre$i3$i$i10 = $149;
   $74 = $149;
   $__r$0$in = $49;
  }
  while (1) {
   $__r$0 = $__r$0$in + -48 | 0;
   $$0 = $$0$in + -1 | 0;
   $60 = HEAP32[$__b >> 2] | 0;
   do if (!$60) $86 = 1; else {
    $63 = HEAP32[$60 + 12 >> 2] | 0;
    if (($63 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) $$0$i$i$i$i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0; else $$0$i$i$i$i2 = HEAP32[$63 >> 2] | 0;
    if (($$0$i$i$i$i2 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $86 = 1;
     break;
    } else {
     $86 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$74) {
    $$pre$i3$i$i25 = $$pre$i3$i$i10;
    $150 = 0;
    $87 = 1;
   } else {
    $76 = HEAP32[$74 + 12 >> 2] | 0;
    if (($76 | 0) == (HEAP32[$74 + 16 >> 2] | 0)) $$0$i$i1$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$74 >> 2] | 0) + 36 >> 2] & 127]($74) | 0; else $$0$i$i1$i$i8 = HEAP32[$76 >> 2] | 0;
    if (($$0$i$i1$i$i8 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i25 = 0;
     $150 = 0;
     $87 = 1;
     break;
    } else {
     $$pre$i3$i$i25 = $$pre$i3$i$i10;
     $150 = $$pre$i3$i$i10;
     $87 = ($$pre$i3$i$i10 | 0) == 0;
     break;
    }
   } while (0);
   $90 = HEAP32[$__b >> 2] | 0;
   if (!(($$0$in | 0) > 1 & ($86 ^ $87))) {
    $$lcssa = $90;
    $$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;
    $__r$0$lcssa = $__r$0;
    break;
   }
   $92 = HEAP32[$90 + 12 >> 2] | 0;
   if (($92 | 0) == (HEAP32[$90 + 16 >> 2] | 0)) $$0$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$90 >> 2] | 0) + 36 >> 2] & 127]($90) | 0; else $$0$i$i14 = HEAP32[$92 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 2048, $$0$i$i14) | 0)) {
    $$01 = $__r$0;
    break L22;
   }
   $111 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 31]($__ct, $$0$i$i14, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
   $112 = HEAP32[$__b >> 2] | 0;
   $113 = $112 + 12 | 0;
   $114 = HEAP32[$113 >> 2] | 0;
   if (($114 | 0) == (HEAP32[$112 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$112 >> 2] | 0) + 40 >> 2] & 127]($112) | 0;
    $$0$in = $$0;
    $$pre$i3$i$i10 = $$pre$i3$i$i25;
    $74 = $150;
    $__r$0$in = $111;
    continue;
   } else {
    HEAP32[$113 >> 2] = $114 + 4;
    $$0$in = $$0;
    $$pre$i3$i$i10 = $$pre$i3$i$i25;
    $74 = $150;
    $__r$0$in = $111;
    continue;
   }
  }
  do if (!$$lcssa) $151 = 1; else {
   $124 = HEAP32[$$lcssa + 12 >> 2] | 0;
   if (($124 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0; else $$0$i$i$i$i17 = HEAP32[$124 >> 2] | 0;
   if (($$0$i$i$i$i17 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $151 = 1;
    break;
   } else {
    $151 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i25$lcssa) label = 60; else {
   $136 = HEAP32[$$pre$i3$i$i25$lcssa + 12 >> 2] | 0;
   if (($136 | 0) == (HEAP32[$$pre$i3$i$i25$lcssa + 16 >> 2] | 0)) $$0$i$i1$i$i23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i25$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i25$lcssa) | 0; else $$0$i$i1$i$i23 = HEAP32[$136 >> 2] | 0;
   if (($$0$i$i1$i$i23 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 60;
    break;
   } else if ($151) {
    $$01 = $__r$0$lcssa;
    break L22;
   } else break;
  } while (0);
  if ((label | 0) == 60) if (!$151) {
   $$01 = $__r$0$lcssa;
   break;
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
  $$01 = $__r$0$lcssa;
 } while (0);
 return $$01 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $49 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $64 = 0, $67 = 0, $70 = 0, $77 = 0, $78 = 0, $79 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $59 = HEAP32[$this + 12 >> 2] | 0;
   $60 = $this + 16 + ($59 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this + 16 | 0, $info, $current_ptr, $path_below, $use_strcmp);
   $61 = $this + 24 | 0;
   if (($59 | 0) <= 1) break;
   $64 = HEAP32[$this + 8 >> 2] | 0;
   if (!($64 & 2)) {
    $67 = $info + 36 | 0;
    if ((HEAP32[$67 >> 2] | 0) != 1) {
     if (!($64 & 1)) {
      $79 = $info + 54 | 0;
      $p2$2 = $61;
      while (1) {
       if (HEAP8[$79 >> 0] | 0) break L1;
       if ((HEAP32[$67 >> 2] | 0) == 1) break L1;
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2, $info, $current_ptr, $path_below, $use_strcmp);
       $p2$2 = $p2$2 + 8 | 0;
       if ($p2$2 >>> 0 >= $60 >>> 0) break L1;
      }
     }
     $77 = $info + 24 | 0;
     $78 = $info + 54 | 0;
     $p2$1 = $61;
     while (1) {
      if (HEAP8[$78 >> 0] | 0) break L1;
      if ((HEAP32[$67 >> 2] | 0) == 1) if ((HEAP32[$77 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1, $info, $current_ptr, $path_below, $use_strcmp);
      $p2$1 = $p2$1 + 8 | 0;
      if ($p2$1 >>> 0 >= $60 >>> 0) break L1;
     }
    }
   }
   $70 = $info + 54 | 0;
   $p2$0 = $61;
   while (1) {
    if (HEAP8[$70 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0, $info, $current_ptr, $path_below, $use_strcmp);
    $p2$0 = $p2$0 + 8 | 0;
    if ($p2$0 >>> 0 >= $60 >>> 0) break L1;
   }
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $24 = HEAP32[$this + 12 >> 2] | 0;
    $25 = $this + 16 + ($24 << 3) | 0;
    $26 = $info + 52 | 0;
    $27 = $info + 53 | 0;
    $28 = $info + 54 | 0;
    $29 = $this + 8 | 0;
    $30 = $info + 24 | 0;
    L34 : do if (($24 | 0) > 0) {
     $does_dst_type_point_to_our_static_type$0$off023 = 0;
     $is_dst_type_derived_from_static_type$0$off025 = 0;
     $p$024 = $this + 16 | 0;
     while (1) {
      HEAP8[$26 >> 0] = 0;
      HEAP8[$27 >> 0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
      if (HEAP8[$28 >> 0] | 0) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;
       $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
       label = 20;
       break L34;
      }
      do if (!(HEAP8[$27 >> 0] | 0)) {
       $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;
       $is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
      } else {
       if (!(HEAP8[$26 >> 0] | 0)) if (!(HEAP32[$29 >> 2] & 1)) {
        $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;
        $is_dst_type_derived_from_static_type$2$off0 = 1;
        label = 20;
        break L34;
       } else {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;
        $is_dst_type_derived_from_static_type$1$off0 = 1;
        break;
       }
       if ((HEAP32[$30 >> 2] | 0) == 1) break L34;
       if (!(HEAP32[$29 >> 2] & 2)) break L34; else {
        $does_dst_type_point_to_our_static_type$1$off0 = 1;
        $is_dst_type_derived_from_static_type$1$off0 = 1;
       }
      } while (0);
      $p$024 = $p$024 + 8 | 0;
      if ($p$024 >>> 0 >= $25 >>> 0) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;
       $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
       label = 20;
       break;
      } else {
       $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;
       $is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;
      }
     }
    } else {
     $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;
     $is_dst_type_derived_from_static_type$2$off0 = 0;
     label = 20;
    } while (0);
    do if ((label | 0) == 20) {
     if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) label = 24; else {
      HEAP32[$14 >> 2] = $current_ptr;
      $49 = $info + 40 | 0;
      HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 1;
      if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$30 >> 2] | 0) == 2) {
       HEAP8[$28 >> 0] = 1;
       if ($is_dst_type_derived_from_static_type$2$off0) break;
      } else label = 24; else label = 24;
     }
     if ((label | 0) == 24) if ($is_dst_type_derived_from_static_type$2$off0) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $108 = 0, $12 = 0, $120 = 0, $121 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $79 = 0, $8 = 0, $86 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 202 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i2 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i2) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i2 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i2 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i2) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i2; else $$pre$i$i$i = $$pre$i$i$i2;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $136 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $136 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $136 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $136;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre18 = HEAP32[$__g_end >> 2] | 0;
 if (!((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $108 = $$pre18; else if (($$pre18 - $__g | 0) < 160) {
  $99 = HEAP32[$__dc >> 2] | 0;
  $100 = $$pre18 + 4 | 0;
  HEAP32[$__g_end >> 2] = $100;
  HEAP32[$$pre18 >> 2] = $99;
  $108 = $100;
 } else $108 = $$pre18;
 $102 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 $104 = $__v;
 HEAP32[$104 >> 2] = $102;
 HEAP32[$104 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $108, $__err);
 if (!$$pre$i$i$i$lcssa) $121 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $121 = 0;
 } else $121 = $$pre$i$i$i$lcssa; else $121 = $$pre$i$i$i$lcssa;
 $120 = ($121 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$120) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($120) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $135 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $135 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $108 = 0, $12 = 0, $120 = 0, $121 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $79 = 0, $8 = 0, $86 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 202 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i2 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i2) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i2 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i2 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i2) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i2; else $$pre$i$i$i = $$pre$i$i$i2;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $136 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $136 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $136 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $136;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre18 = HEAP32[$__g_end >> 2] | 0;
 if (!((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $108 = $$pre18; else if (($$pre18 - $__g | 0) < 160) {
  $99 = HEAP32[$__dc >> 2] | 0;
  $100 = $$pre18 + 4 | 0;
  HEAP32[$__g_end >> 2] = $100;
  HEAP32[$$pre18 >> 2] = $99;
  $108 = $100;
 } else $108 = $$pre18;
 $102 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 $104 = $__v;
 HEAP32[$104 >> 2] = $102;
 HEAP32[$104 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $108, $__err);
 if (!$$pre$i$i$i$lcssa) $121 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $121 = 0;
 } else $121 = $$pre$i$i$i$lcssa; else $121 = $$pre$i$i$i$lcssa;
 $120 = ($121 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$120) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($120) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $135 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $135 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($first, $last, $db, $status) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 $status = $status | 0;
 var $$0$i$i$i11 = 0, $$0$i2 = 0, $$03$i = 0, $$lcssa = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $31 = 0, $32 = 0, $41 = 0, $44 = 0, $47 = 0, $49 = 0, $6 = 0, $66 = 0, $67 = 0, $78 = 0, $83 = 0, $95 = 0, $__p$0$i$i$i10 = 0, $__p$0$ph$i$i$i = 0, $i$0$i16 = 0, $t$0 = 0, $t$0$i15 = 0, $t$0$i15$lcssa20 = 0, $t$1$i$ph = 0, $t$1$i12 = 0, $t$2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 L1 : do if ($first >>> 0 < $last >>> 0) {
  L3 : do if ((HEAP8[$first >> 0] | 0) == 95) {
   $6 = $last;
   if (($6 - $first | 0) <= 3) {
    HEAP32[$status >> 2] = -2;
    break L1;
   }
   switch (HEAP8[$first + 1 >> 0] | 0) {
   case 90:
    {
     $12 = $first + 2 | 0;
     $13 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($12, $last, $db) | 0;
     if (($13 | 0) == ($12 | 0) | ($13 | 0) == ($last | 0)) $t$0 = $13; else if ((HEAP8[$13 >> 0] | 0) == 46) {
      $20 = HEAP32[$db + 4 >> 2] | 0;
      if ((HEAP32[$db >> 2] | 0) == ($20 | 0)) $$03$i = $13; else {
       $22 = $20 + -24 | 0;
       $24 = $6 - $13 | 0;
       if ($24 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($2);
       if ($24 >>> 0 < 11) {
        HEAP8[$2 >> 0] = $24 << 1;
        $__p$0$ph$i$i$i = $2 + 1 | 0;
       } else {
        $31 = $24 + 16 & -16;
        $32 = _malloc($31) | 0;
        HEAP32[$2 + 8 >> 2] = $32;
        HEAP32[$2 >> 2] = $31 | 1;
        HEAP32[$2 + 4 >> 2] = $24;
        $__p$0$ph$i$i$i = $32;
       }
       if (($13 | 0) != ($last | 0)) {
        $$0$i$i$i11 = $13;
        $__p$0$i$i$i10 = $__p$0$ph$i$i$i;
        while (1) {
         HEAP8[$__p$0$i$i$i10 >> 0] = HEAP8[$$0$i$i$i11 >> 0] | 0;
         $$0$i$i$i11 = $$0$i$i$i11 + 1 | 0;
         if (($$0$i$i$i11 | 0) == ($last | 0)) break; else $__p$0$i$i$i10 = $__p$0$i$i$i10 + 1 | 0;
        }
       }
       HEAP8[$__p$0$ph$i$i$i + $24 >> 0] = 0;
       $41 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($2, 0, 25475) | 0;
       HEAP32[$1 >> 2] = HEAP32[$41 >> 2];
       HEAP32[$1 + 4 >> 2] = HEAP32[$41 + 4 >> 2];
       HEAP32[$1 + 8 >> 2] = HEAP32[$41 + 8 >> 2];
       HEAP32[$41 >> 2] = 0;
       HEAP32[$41 + 4 >> 2] = 0;
       HEAP32[$41 + 8 >> 2] = 0;
       $44 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25478) | 0;
       HEAP32[$0 >> 2] = HEAP32[$44 >> 2];
       HEAP32[$0 + 4 >> 2] = HEAP32[$44 + 4 >> 2];
       HEAP32[$0 + 8 >> 2] = HEAP32[$44 + 8 >> 2];
       HEAP32[$44 >> 2] = 0;
       HEAP32[$44 + 4 >> 2] = 0;
       HEAP32[$44 + 8 >> 2] = 0;
       $47 = HEAP8[$0 >> 0] | 0;
       $49 = ($47 & 1) == 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($22, $49 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0, $49 ? ($47 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
       $$03$i = $last;
      }
      $t$0 = $$03$i;
     } else $t$0 = $13;
     if (($t$0 | 0) == ($last | 0)) break L3;
     HEAP32[$status >> 2] = -2;
     break L1;
     break;
    }
   case 95:
    {
     label = 20;
     break;
    }
   default:
    {}
   }
   if ((label | 0) == 20) if ((HEAP8[$first + 2 >> 0] | 0) == 95) if ((HEAP8[$first + 3 >> 0] | 0) == 90) {
    $66 = $first + 4 | 0;
    $67 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($66, $last, $db) | 0;
    if (($67 | 0) == ($66 | 0) | ($67 | 0) == ($last | 0)) {
     HEAP32[$status >> 2] = -2;
     break L1;
    }
    L36 : do if (($6 - $67 | 0) > 12) {
     $i$0$i16 = 0;
     $t$0$i15 = $67;
     while (1) {
      if ((HEAP8[$t$0$i15 >> 0] | 0) != (HEAP8[25480 + $i$0$i16 >> 0] | 0)) {
       $$0$i2 = $67;
       break L36;
      }
      $i$0$i16 = $i$0$i16 + 1 | 0;
      $78 = $t$0$i15 + 1 | 0;
      if (($i$0$i16 | 0) >= 13) {
       $$lcssa = $78;
       $t$0$i15$lcssa20 = $t$0$i15;
       break;
      } else $t$0$i15 = $78;
     }
     L41 : do if (($$lcssa | 0) == ($last | 0)) $t$2$i = $last; else {
      if ((HEAP8[$$lcssa >> 0] | 0) == 95) {
       $83 = $t$0$i15$lcssa20 + 2 | 0;
       if (($83 | 0) == ($last | 0)) {
        $$0$i2 = $67;
        break L36;
       }
       if (((HEAP8[$83 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
        $$0$i2 = $67;
        break L36;
       }
       $t$1$i$ph = $t$0$i15$lcssa20 + 3 | 0;
      } else $t$1$i$ph = $$lcssa;
      if (($t$1$i$ph | 0) == ($last | 0)) $t$2$i = $last; else {
       $t$1$i12 = $t$1$i$ph;
       while (1) {
        if (((HEAP8[$t$1$i12 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
         $t$2$i = $t$1$i12;
         break L41;
        }
        $t$1$i12 = $t$1$i12 + 1 | 0;
        if (($t$1$i12 | 0) == ($last | 0)) {
         $t$2$i = $last;
         break;
        }
       }
      }
     } while (0);
     $95 = HEAP32[$db + 4 >> 2] | 0;
     if ((HEAP32[$db >> 2] | 0) == ($95 | 0)) $$0$i2 = $67; else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($95 + -24 | 0, 0, 25494) | 0;
      $$0$i2 = $t$2$i;
     }
    } else $$0$i2 = $67; while (0);
    if (($$0$i2 | 0) == ($last | 0)) break;
    HEAP32[$status >> 2] = -2;
    break L1;
   }
   HEAP32[$status >> 2] = -2;
   break L1;
  } else if ((__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0) != ($last | 0)) {
   HEAP32[$status >> 2] = -2;
   break L1;
  } while (0);
  if (!(HEAP32[$status >> 2] | 0)) if ((HEAP32[$db >> 2] | 0) == (HEAP32[$db + 4 >> 2] | 0)) HEAP32[$status >> 2] = -2;
 } else HEAP32[$status >> 2] = -2; while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $100 = 0, $103 = 0, $115 = 0, $116 = 0, $12 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $79 = 0, $8 = 0, $86 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 202 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i2 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i2) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i2 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i2 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i2) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i2; else $$pre$i$i$i = $$pre$i$i$i2;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre18 = HEAP32[$__g_end >> 2] | 0;
 if (!((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $103 = $$pre18; else if (($$pre18 - $__g | 0) < 160) {
  $99 = HEAP32[$__dc >> 2] | 0;
  $100 = $$pre18 + 4 | 0;
  HEAP32[$__g_end >> 2] = $100;
  HEAP32[$$pre18 >> 2] = $99;
  $103 = $100;
 } else $103 = $$pre18;
 HEAP16[$__v >> 1] = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $103, $__err);
 if (!$$pre$i$i$i$lcssa) $116 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $116 = 0;
 } else $116 = $$pre$i$i$i$lcssa; else $116 = $$pre$i$i$i$lcssa;
 $115 = ($116 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$115) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($115) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $130 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $130 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $100 = 0, $103 = 0, $115 = 0, $116 = 0, $12 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $79 = 0, $8 = 0, $86 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 202 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i2 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i2) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i2 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i2 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i2) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i2; else $$pre$i$i$i = $$pre$i$i$i2;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre18 = HEAP32[$__g_end >> 2] | 0;
 if (!((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $103 = $$pre18; else if (($$pre18 - $__g | 0) < 160) {
  $99 = HEAP32[$__dc >> 2] | 0;
  $100 = $$pre18 + 4 | 0;
  HEAP32[$__g_end >> 2] = $100;
  HEAP32[$$pre18 >> 2] = $99;
  $103 = $100;
 } else $103 = $$pre18;
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $103, $__err);
 if (!$$pre$i$i$i$lcssa) $116 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $116 = 0;
 } else $116 = $$pre$i$i$i$lcssa; else $116 = $$pre$i$i$i$lcssa;
 $115 = ($116 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$115) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($115) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $130 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $130 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $100 = 0, $103 = 0, $115 = 0, $116 = 0, $12 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $79 = 0, $8 = 0, $86 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 202 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i2 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i2) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i2 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i2 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i2) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i2; else $$pre$i$i$i = $$pre$i$i$i2;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre18 = HEAP32[$__g_end >> 2] | 0;
 if (!((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $103 = $$pre18; else if (($$pre18 - $__g | 0) < 160) {
  $99 = HEAP32[$__dc >> 2] | 0;
  $100 = $$pre18 + 4 | 0;
  HEAP32[$__g_end >> 2] = $100;
  HEAP32[$$pre18 >> 2] = $99;
  $103 = $100;
 } else $103 = $$pre18;
 HEAP32[$__v >> 2] = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $103, $__err);
 if (!$$pre$i$i$i$lcssa) $116 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $116 = 0;
 } else $116 = $$pre$i$i$i$lcssa; else $116 = $$pre$i$i$i$lcssa;
 $115 = ($116 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$115) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($115) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $130 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $130 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i = 0, $$pre18 = 0, $0 = 0, $100 = 0, $103 = 0, $115 = 0, $116 = 0, $12 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $29 = 0, $30 = 0, $43 = 0, $49 = 0, $58 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $79 = 0, $8 = 0, $86 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 202 | 0;
 $__thousands_sep = sp + 200 | 0;
 $__grouping = sp + 24 | 0;
 $__buf = sp + 12 | 0;
 $__a_end = sp + 8 | 0;
 $__g = sp + 40 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $8, 0);
 $12 = $__buf + 8 | 0;
 $14 = $__buf + 1 | 0;
 $15 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $15;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $16 = $__buf + 4 | 0;
 $17 = HEAP8[$__thousands_sep >> 0] | 0;
 $$pre$i$i$i2 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $15;
 L4 : while (1) {
  if (!$$pre$i$i$i2) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i2 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i2 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i2) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i2; else $$pre$i$i$i = $$pre$i$i$i2;
  $29 = ($$pre$i$i$i | 0) == 0;
  $30 = HEAP32[$__e >> 2] | 0;
  do if (!$30) label = 13; else {
   if ((HEAP32[$30 + 12 >> 2] | 0) != (HEAP32[$30 + 16 >> 2] | 0)) if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($29) {
    $131 = $30;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $30;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($29) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $43 = HEAP8[$__buf >> 0] | 0;
  $49 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$16 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $49 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $58 = 10; else $58 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $58, 0);
   $63 = (HEAP8[$__buf >> 0] & 1) == 0 ? $14 : HEAP32[$12 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $63 + $49;
   $__a$1 = $63;
  } else $__a$1 = $__a$0;
  $65 = $$pre$i$i$i + 12 | 0;
  $66 = HEAP32[$65 >> 2] | 0;
  $67 = $$pre$i$i$i + 16 | 0;
  if (($66 | 0) == (HEAP32[$67 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$66 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $17, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $79 = HEAP32[$65 >> 2] | 0;
  if (($79 | 0) == (HEAP32[$67 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$65 >> 2] = $79 + 1;
   $$pre$i$i$i2 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 $86 = HEAP8[$__grouping >> 0] | 0;
 $$pre18 = HEAP32[$__g_end >> 2] | 0;
 if (!((($86 & 1) == 0 ? ($86 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $103 = $$pre18; else if (($$pre18 - $__g | 0) < 160) {
  $99 = HEAP32[$__dc >> 2] | 0;
  $100 = $$pre18 + 4 | 0;
  HEAP32[$__g_end >> 2] = $100;
  HEAP32[$$pre18 >> 2] = $99;
  $103 = $100;
 } else $103 = $$pre18;
 HEAP32[$__v >> 2] = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2, HEAP32[$__a_end >> 2] | 0, $__err, $0) | 0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $103, $__err);
 if (!$$pre$i$i$i$lcssa) $116 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $116 = 0;
 } else $116 = $$pre$i$i$i$lcssa; else $116 = $$pre$i$i$i$lcssa;
 $115 = ($116 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 38; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if (!$115) label = 39;
 } while (0);
 if ((label | 0) == 38) if ($115) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $130 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $130 | 0;
}

function __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEj($this, $__nbc) {
 $this = $this | 0;
 $__nbc = $__nbc | 0;
 var $$lcssa = 0, $$lcssa118 = 0, $0 = 0, $10 = 0, $105 = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $22 = 0, $26 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $53 = 0, $71 = 0, $74 = 0, $75 = 0, $84 = 0, $87 = 0, $88 = 0, $89 = 0, $91 = 0, $__cp$0$in3544 = 0, $__cp$0$in38 = 0, $__cp$032 = 0, $__cp$03236 = 0, $__cp$0323641 = 0, $__cp$0323645 = 0, $__cp$03239 = 0, $__cp$033 = 0, $__cp$033$lcssa = 0, $__cp$033$lcssa116 = 0, $__i$046 = 0, $__lhs_sz$05$i$i$us = 0, $__lp$03$i$i$us = 0, $__np$012 = 0, $__np$017 = 0, $__np$017$phi = 0, $__np$017$us = 0, $__np$017$us$phi = 0, $__np$017$us21 = 0, $__np$017$us21$phi = 0, $__phash$0$ph$ph43 = 0, $__pp$0$ph$ph42 = 0, $__pp$0$ph37 = 0, $__pp$0$ph37$lcssa = 0, $__rp$04$i$i$us = 0, label = 0;
 $0 = ($__nbc | 0) != 0;
 if ($0) $4 = __Znwj($__nbc << 2) | 0; else $4 = 0;
 $3 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $4;
 if ($3) __ZdlPv($3);
 HEAP32[$this + 4 >> 2] = $__nbc;
 if ($0) $__i$046 = 0; else return;
 do {
  HEAP32[(HEAP32[$this >> 2] | 0) + ($__i$046 << 2) >> 2] = 0;
  $__i$046 = $__i$046 + 1 | 0;
 } while (($__i$046 | 0) != ($__nbc | 0));
 $10 = $this + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (!$11) return;
 $14 = HEAP32[$11 + 4 >> 2] | 0;
 $15 = $__nbc + -1 | 0;
 $17 = ($15 & $__nbc | 0) == 0;
 if ($17) $22 = $14 & $15; else $22 = ($14 >>> 0) % ($__nbc >>> 0) | 0;
 HEAP32[(HEAP32[$this >> 2] | 0) + ($22 << 2) >> 2] = $10;
 $__cp$0323641 = HEAP32[$11 >> 2] | 0;
 if (!$__cp$0323641) return; else {
  $__cp$0$in3544 = $11;
  $__cp$0323645 = $__cp$0323641;
  $__phash$0$ph$ph43 = $22;
  $__pp$0$ph$ph42 = $11;
 }
 L21 : while (1) {
  $__cp$0$in38 = $__cp$0$in3544;
  $__cp$03239 = $__cp$0323645;
  $__pp$0$ph37 = $__pp$0$ph$ph42;
  L23 : while (1) {
   $__cp$033 = $__cp$03239;
   while (1) {
    $26 = HEAP32[$__cp$033 + 4 >> 2] | 0;
    if ($17) $30 = $26 & $15; else $30 = ($26 >>> 0) % ($__nbc >>> 0) | 0;
    if (($30 | 0) == ($__phash$0$ph$ph43 | 0)) {
     $__cp$033$lcssa = $__cp$033;
     break;
    }
    $32 = (HEAP32[$this >> 2] | 0) + ($30 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     $$lcssa = $32;
     $$lcssa118 = $30;
     $__cp$033$lcssa116 = $__cp$033;
     $__pp$0$ph37$lcssa = $__pp$0$ph37;
     break L23;
    }
    $35 = HEAP32[$__cp$033 >> 2] | 0;
    L33 : do if (!$35) $__np$012 = $__cp$033; else {
     $37 = $__cp$033 + 8 | 0;
     $38 = HEAP8[$37 >> 0] | 0;
     $40 = ($38 & 1) == 0;
     $45 = $40 ? ($38 & 255) >>> 1 : HEAP32[$__cp$033 + 12 >> 2] | 0;
     $46 = $__cp$033 + 16 | 0;
     $47 = $37 + 1 | 0;
     $48 = ($45 | 0) == 0;
     if ($40) {
      $50 = $35;
      $__np$017$us = $__cp$033;
      while (1) {
       $49 = $50 + 8 | 0;
       $51 = HEAP8[$49 >> 0] | 0;
       $53 = ($51 & 1) == 0;
       if (($45 | 0) != (($53 ? ($51 & 255) >>> 1 : HEAP32[$50 + 12 >> 2] | 0) | 0)) {
        $__np$012 = $__np$017$us;
        break L33;
       }
       if (!$48) {
        $__lhs_sz$05$i$i$us = $45;
        $__lp$03$i$i$us = $47;
        $__rp$04$i$i$us = $53 ? $49 + 1 | 0 : HEAP32[$50 + 16 >> 2] | 0;
        while (1) {
         if ((HEAP8[$__lp$03$i$i$us >> 0] | 0) != (HEAP8[$__rp$04$i$i$us >> 0] | 0)) {
          $__np$012 = $__np$017$us;
          break L33;
         }
         $__lhs_sz$05$i$i$us = $__lhs_sz$05$i$i$us + -1 | 0;
         if (!$__lhs_sz$05$i$i$us) break; else {
          $__lp$03$i$i$us = $__lp$03$i$i$us + 1 | 0;
          $__rp$04$i$i$us = $__rp$04$i$i$us + 1 | 0;
         }
        }
       }
       $71 = HEAP32[$50 >> 2] | 0;
       if (!$71) {
        $__np$012 = $50;
        break;
       } else {
        $__np$017$us$phi = $50;
        $50 = $71;
        $__np$017$us = $__np$017$us$phi;
       }
      }
     } else {
      if ($48) {
       $74 = $35;
       $__np$017$us21 = $__cp$033;
       while (1) {
        $75 = HEAP8[$74 + 8 >> 0] | 0;
        if ((($75 & 1) == 0 ? ($75 & 255) >>> 1 : HEAP32[$74 + 12 >> 2] | 0) | 0) {
         $__np$012 = $__np$017$us21;
         break L33;
        }
        $84 = HEAP32[$74 >> 2] | 0;
        if (!$84) {
         $__np$012 = $74;
         break L33;
        } else {
         $__np$017$us21$phi = $74;
         $74 = $84;
         $__np$017$us21 = $__np$017$us21$phi;
        }
       }
      } else {
       $88 = $35;
       $__np$017 = $__cp$033;
      }
      while (1) {
       $87 = $88 + 8 | 0;
       $89 = HEAP8[$87 >> 0] | 0;
       $91 = ($89 & 1) == 0;
       if (($45 | 0) != (($91 ? ($89 & 255) >>> 1 : HEAP32[$88 + 12 >> 2] | 0) | 0)) {
        $__np$012 = $__np$017;
        break L33;
       }
       if (_memcmp(HEAP32[$46 >> 2] | 0, $91 ? $87 + 1 | 0 : HEAP32[$88 + 16 >> 2] | 0, $45) | 0) {
        $__np$012 = $__np$017;
        break L33;
       }
       $105 = HEAP32[$88 >> 2] | 0;
       if (!$105) {
        $__np$012 = $88;
        break;
       } else {
        $__np$017$phi = $88;
        $88 = $105;
        $__np$017 = $__np$017$phi;
       }
      }
     }
    } while (0);
    HEAP32[$__pp$0$ph37 >> 2] = HEAP32[$__np$012 >> 2];
    HEAP32[$__np$012 >> 2] = HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($30 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($30 << 2) >> 2] >> 2] = $__cp$033;
    $__cp$033 = HEAP32[$__cp$0$in38 >> 2] | 0;
    if (!$__cp$033) {
     label = 36;
     break L21;
    }
   }
   $__cp$032 = HEAP32[$__cp$033$lcssa >> 2] | 0;
   if (!$__cp$032) {
    label = 36;
    break L21;
   } else {
    $__cp$0$in38 = $__cp$033$lcssa;
    $__cp$03239 = $__cp$032;
    $__pp$0$ph37 = $__cp$033$lcssa;
   }
  }
  HEAP32[$$lcssa >> 2] = $__pp$0$ph37$lcssa;
  $__cp$03236 = HEAP32[$__cp$033$lcssa116 >> 2] | 0;
  if (!$__cp$03236) {
   label = 36;
   break;
  } else {
   $__cp$0$in3544 = $__cp$033$lcssa116;
   $__cp$0323645 = $__cp$03236;
   $__phash$0$ph$ph43 = $$lcssa118;
   $__pp$0$ph$ph42 = $__cp$033$lcssa116;
  }
 }
 if ((label | 0) == 36) return;
}

function __ZN15google_breakpad13StabsToModule8FinalizeEv($this) {
 $this = $this | 0;
 var $$02$i$i = 0, $$02$i$i$lcssa = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$in = 0, $$lcssa54 = 0, $$lcssa57 = 0, $$sink26 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $120 = 0, $125 = 0, $13 = 0, $131 = 0, $137 = 0, $139 = 0, $14 = 0, $145 = 0, $148 = 0, $153 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $41 = 0, $47 = 0, $5 = 0, $52 = 0, $53 = 0, $59 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $70 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $9 = 0, $91 = 0, $93 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__len$0$be$i$i$i = 0, $__len$03$i$i$i = 0, label = 0, sp = 0, $108$looptemp = 0, $115$looptemp = 0, $116$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy3 = sp;
 $$byval_copy2 = sp + 24 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp + 20 | 0;
 $4 = sp + 16 | 0;
 $5 = $this + 20 | 0;
 $7 = $this + 24 | 0;
 __ZNSt3__16__sortIRNS_6__lessIyyEEPyEEvT0_S5_T_(HEAP32[$5 >> 2] | 0, HEAP32[$7 >> 2] | 0, $$byval_copy3);
 $9 = $this + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $this + 12 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 HEAP32[$$byval_copy3 >> 2] = 26;
 __ZNSt3__16__sortIRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEvT0_SB_T_($10, $12, $$byval_copy3);
 $13 = HEAP32[$9 >> 2] | 0;
 $14 = HEAP32[$11 >> 2] | 0;
 if (($13 | 0) == ($14 | 0)) {
  $$in = $14;
  $158 = $13;
 } else {
  $$sink26 = $13;
  do {
   $17 = HEAP32[$$sink26 >> 2] | 0;
   $18 = HEAP32[$5 >> 2] | 0;
   $19 = $18;
   $20 = HEAP32[$7 >> 2] | 0;
   $22 = $17 + 16 | 0;
   $24 = $20 - $19 >> 3;
   if (!$24) $52 = $18; else {
    $26 = $22;
    $28 = HEAP32[$26 >> 2] | 0;
    $31 = HEAP32[$26 + 4 >> 2] | 0;
    $166 = $18;
    $34 = $19;
    $__len$03$i$i$i = $24;
    while (1) {
     $32 = ($__len$03$i$i$i | 0) / 2 | 0;
     $33 = $34;
     $36 = $33 + ($32 << 3) | 0;
     $41 = HEAP32[$36 + 4 >> 2] | 0;
     if ($31 >>> 0 < $41 >>> 0 | (($31 | 0) == ($41 | 0) ? $28 >>> 0 < (HEAP32[$36 >> 2] | 0) >>> 0 : 0)) {
      $167 = $166;
      $168 = $34;
      $__len$0$be$i$i$i = $32;
     } else {
      $47 = $33 + ($32 + 1 << 3) | 0;
      $167 = $47;
      $168 = $47;
      $__len$0$be$i$i$i = $__len$03$i$i$i + -1 - $32 | 0;
     }
     if (!$__len$0$be$i$i$i) {
      $52 = $167;
      break;
     } else {
      $166 = $167;
      $34 = $168;
      $__len$03$i$i$i = $__len$0$be$i$i$i;
     }
    }
   }
   if (($52 | 0) == ($20 | 0)) {
    $70 = 268435456;
    $73 = 0;
   } else {
    $53 = $52;
    $59 = $22;
    $65 = _i64Subtract(HEAP32[$53 >> 2] | 0, HEAP32[$53 + 4 >> 2] | 0, HEAP32[$59 >> 2] | 0, HEAP32[$59 + 4 >> 2] | 0) | 0;
    $70 = $65;
    $73 = tempRet0;
   }
   $67 = $17 + 24 | 0;
   $68 = $67;
   HEAP32[$68 >> 2] = $70;
   HEAP32[$68 + 4 >> 2] = $73;
   $74 = $17 + 40 | 0;
   $75 = HEAP32[$74 >> 2] | 0;
   $76 = $17 + 44 | 0;
   $77 = HEAP32[$76 >> 2] | 0;
   if (($75 | 0) != ($77 | 0)) {
    HEAP32[$0 >> 2] = 27;
    $79 = $77;
    $80 = $75;
    $81 = $79 - $80 | 0;
    $82 = ($81 | 0) / 24 | 0;
    if (($81 | 0) > 3072) {
     $$02$i$i = $82;
     while (1) {
      $85 = __ZnwjRKSt9nothrow_t($$02$i$i * 24 | 0, 25108) | 0;
      if ($85) {
       $$02$i$i$lcssa = $$02$i$i;
       $$lcssa54 = $85;
       label = 14;
       break;
      }
      if (($$02$i$i | 0) > 1) $$02$i$i = ($$02$i$i | 0) / 2 | 0; else {
       $169 = 0;
       $91 = 0;
       break;
      }
     }
     if ((label | 0) == 14) {
      label = 0;
      $169 = $$02$i$i$lcssa;
      $91 = $$lcssa54;
     }
     $93 = $91;
     $94 = $169;
     $96 = $91;
    } else {
     $93 = 0;
     $94 = 0;
     $96 = 0;
    }
    HEAP32[$1 >> 2] = $80;
    HEAP32[$2 >> 2] = $79;
    HEAP32[$$byval_copy2 >> 2] = HEAP32[$1 >> 2];
    HEAP32[$$byval_copy3 >> 2] = HEAP32[$2 >> 2];
    __ZNSt3__113__stable_sortIRPFbRKN15google_breakpad6Module4LineES5_ENS_11__wrap_iterIPS3_EEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEi($$byval_copy2, $$byval_copy3, $0, $82, $93, $94);
    if ($96) __ZdlPv($96);
    $97 = HEAP32[$76 >> 2] | 0;
    $98 = $97 + -24 | 0;
    $99 = HEAP32[$74 >> 2] | 0;
    if (($99 | 0) != ($98 | 0)) {
     $101 = $99;
     $108 = $99;
     $115 = HEAP32[$101 >> 2] | 0;
     $116 = HEAP32[$101 + 4 >> 2] | 0;
     do {
      $108$looptemp = $108;
      $108 = $108 + 24 | 0;
      $109 = $108;
      $115$looptemp = $115;
      $115 = HEAP32[$109 >> 2] | 0;
      $116$looptemp = $116;
      $116 = HEAP32[$109 + 4 >> 2] | 0;
      $117 = _i64Subtract($115 | 0, $116 | 0, $115$looptemp | 0, $116$looptemp | 0) | 0;
      $120 = $108$looptemp + 8 | 0;
      HEAP32[$120 >> 2] = $117;
      HEAP32[$120 + 4 >> 2] = tempRet0;
     } while (($108 | 0) != ($98 | 0));
    }
    $125 = $22;
    $131 = $67;
    $137 = _i64Add(HEAP32[$131 >> 2] | 0, HEAP32[$131 + 4 >> 2] | 0, HEAP32[$125 >> 2] | 0, HEAP32[$125 + 4 >> 2] | 0) | 0;
    $139 = $98;
    $145 = _i64Subtract($137 | 0, tempRet0 | 0, HEAP32[$139 >> 2] | 0, HEAP32[$139 + 4 >> 2] | 0) | 0;
    $148 = $97 + -16 | 0;
    HEAP32[$148 >> 2] = $145;
    HEAP32[$148 + 4 >> 2] = tempRet0;
   }
   $$sink26 = $$sink26 + 4 | 0;
   $153 = HEAP32[$11 >> 2] | 0;
  } while (($$sink26 | 0) != ($153 | 0));
  $$lcssa57 = $153;
  $$in = $$lcssa57;
  $158 = HEAP32[$9 >> 2] | 0;
 }
 $157 = HEAP32[$this + 4 >> 2] | 0;
 HEAP32[$3 >> 2] = $158;
 HEAP32[$4 >> 2] = $$in;
 HEAP32[$$byval_copy2 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy3 >> 2] = HEAP32[$4 >> 2];
 __ZN15google_breakpad6Module12AddFunctionsENSt3__111__wrap_iterIPPNS0_8FunctionEEES6_($157, $$byval_copy2, $$byval_copy3);
 $159 = HEAP32[$9 >> 2] | 0;
 $160 = HEAP32[$11 >> 2] | 0;
 if (($160 | 0) == ($159 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$11 >> 2] = $160 + (~(($160 + -4 - $159 | 0) >>> 2) << 2);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $100 = 0, $101 = 0, $115 = 0, $116 = 0, $130 = 0, $131 = 0, $15 = 0, $19 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $49 = 0, $55 = 0, $64 = 0, $69 = 0, $71 = 0, $72 = 0, $73 = 0, $85 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $__buf = sp + 16 | 0;
 $__a_end = sp + 12 | 0;
 $__g = sp + 48 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 HEAP32[$__grouping >> 2] = 0;
 HEAP32[$__grouping + 4 >> 2] = 0;
 HEAP32[$__grouping + 8 >> 2] = 0;
 $3 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $3;
 $4 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 32 >> 2] & 31]($4, 28892, 28918, $__atoms) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $15 = 10; else $15 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $15, 0);
 $19 = $__buf + 8 | 0;
 $21 = $__buf + 1 | 0;
 $22 = (HEAP8[$__buf >> 0] & 1) == 0 ? $21 : HEAP32[$19 >> 2] | 0;
 HEAP32[$__a_end >> 2] = $22;
 HEAP32[$__g_end >> 2] = $__g;
 HEAP32[$__dc >> 2] = 0;
 $23 = $__buf + 4 | 0;
 $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
 $__a$0 = $22;
 L4 : while (1) {
  if (!$$pre$i$i$i5) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i5) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $$pre$i$i$i = 0;
  } else $$pre$i$i$i = $$pre$i$i$i5; else $$pre$i$i$i = $$pre$i$i$i5;
  $35 = ($$pre$i$i$i | 0) == 0;
  $36 = HEAP32[$__e >> 2] | 0;
  do if (!$36) label = 13; else {
   if ((HEAP32[$36 + 12 >> 2] | 0) != (HEAP32[$36 + 16 >> 2] | 0)) if ($35) {
    $131 = $36;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $36;
    $__a$2 = $__a$0;
    break L4;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] & 127]($36) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 13;
    break;
   } else if ($35) {
    $131 = $36;
    break;
   } else {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $36;
    $__a$2 = $__a$0;
    break L4;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   if ($35) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = 0;
    $__a$2 = $__a$0;
    break;
   } else $131 = 0;
  }
  $49 = HEAP8[$__buf >> 0] | 0;
  $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$23 >> 2] | 0;
  if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $55 << 1, 0);
   if (!(HEAP8[$__buf >> 0] & 1)) $64 = 10; else $64 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, $64, 0);
   $69 = (HEAP8[$__buf >> 0] & 1) == 0 ? $21 : HEAP32[$19 >> 2] | 0;
   HEAP32[$__a_end >> 2] = $69 + $55;
   $__a$1 = $69;
  } else $__a$1 = $__a$0;
  $71 = $$pre$i$i$i + 12 | 0;
  $72 = HEAP32[$71 >> 2] | 0;
  $73 = $$pre$i$i$i + 16 | 0;
  if (($72 | 0) == (HEAP32[$73 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0; else $$0$i$i = HEAPU8[$72 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
   $$pre$i$i$i$lcssa = $$pre$i$i$i;
   $$pre$i2$i$i = $131;
   $__a$2 = $__a$1;
   break;
  }
  $85 = HEAP32[$71 >> 2] | 0;
  if (($85 | 0) == (HEAP32[$73 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] & 127]($$pre$i$i$i) | 0;
   $$pre$i$i$i5 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  } else {
   HEAP32[$71 >> 2] = $85 + 1;
   $$pre$i$i$i5 = $$pre$i$i$i;
   $__a$0 = $__a$1;
   continue;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
 $100 = (HEAP8[$__buf >> 0] & 1) == 0 ? $21 : HEAP32[$19 >> 2] | 0;
 $101 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $__v;
 if ((__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($100, $101, 30276, $vararg_buffer) | 0) != 1) HEAP32[$__err >> 2] = 4;
 if (!$$pre$i$i$i$lcssa) $116 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i$lcssa) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $116 = 0;
 } else $116 = $$pre$i$i$i$lcssa; else $116 = $$pre$i$i$i$lcssa;
 $115 = ($116 | 0) == 0;
 do if (!$$pre$i2$i$i) label = 37; else {
  if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 37;
   break;
  }
  if (!$115) label = 38;
 } while (0);
 if ((label | 0) == 37) if ($115) label = 38;
 if ((label | 0) == 38) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $130 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return $130 | 0;
}

function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $124 = 0, $125 = 0, $134 = 0, $139 = 0, $143 = 0, $149 = 0, $159 = 0, $168 = 0, $2 = 0, $20 = 0, $3 = 0, $33 = 0, $35 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $91 = 0, $96 = 0, $98 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $newp$0 = 0, $storemerge = 0, $storemerge21 = 0;
 $0 = $p + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 & -8;
 $3 = $p + $2 | 0;
 $4 = HEAP32[1473] | 0;
 $5 = $1 & 3;
 if (!(($5 | 0) != 1 & $p >>> 0 >= $4 >>> 0 & $p >>> 0 < $3 >>> 0)) _abort();
 $7 = $p + ($2 | 4) | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!($8 & 1)) _abort();
 if (!$5) {
  if ($nb >>> 0 < 256) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  if ($2 >>> 0 >= ($nb + 4 | 0) >>> 0) if (($2 - $nb | 0) >>> 0 <= HEAP32[1589] << 1 >>> 0) {
   $newp$0 = $p;
   return $newp$0 | 0;
  }
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 if ($2 >>> 0 >= $nb >>> 0) {
  $20 = $2 - $nb | 0;
  if ($20 >>> 0 <= 15) {
   $newp$0 = $p;
   return $newp$0 | 0;
  }
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $20 | 3;
  HEAP32[$7 >> 2] = HEAP32[$7 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $20);
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[1475] | 0)) {
  $33 = (HEAP32[1472] | 0) + $2 | 0;
  if ($33 >>> 0 <= $nb >>> 0) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  $35 = $33 - $nb | 0;
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $35 | 1;
  HEAP32[1475] = $p + $nb;
  HEAP32[1472] = $35;
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[1474] | 0)) {
  $45 = (HEAP32[1471] | 0) + $2 | 0;
  if ($45 >>> 0 < $nb >>> 0) {
   $newp$0 = 0;
   return $newp$0 | 0;
  }
  $47 = $45 - $nb | 0;
  if ($47 >>> 0 > 15) {
   HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
   HEAP32[$p + ($nb + 4) >> 2] = $47 | 1;
   HEAP32[$p + $45 >> 2] = $47;
   $56 = $p + ($45 + 4) | 0;
   HEAP32[$56 >> 2] = HEAP32[$56 >> 2] & -2;
   $storemerge = $p + $nb | 0;
   $storemerge21 = $47;
  } else {
   HEAP32[$0 >> 2] = $1 & 1 | $45 | 2;
   $62 = $p + ($45 + 4) | 0;
   HEAP32[$62 >> 2] = HEAP32[$62 >> 2] | 1;
   $storemerge = 0;
   $storemerge21 = 0;
  }
  HEAP32[1471] = $storemerge21;
  HEAP32[1474] = $storemerge;
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 if ($8 & 2) {
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 $68 = ($8 & -8) + $2 | 0;
 if ($68 >>> 0 < $nb >>> 0) {
  $newp$0 = 0;
  return $newp$0 | 0;
 }
 $70 = $68 - $nb | 0;
 $71 = $8 >>> 3;
 do if ($8 >>> 0 < 256) {
  $74 = HEAP32[$p + ($2 + 8) >> 2] | 0;
  $76 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  $78 = 5916 + ($71 << 1 << 2) | 0;
  if (($74 | 0) != ($78 | 0)) {
   if ($74 >>> 0 < $4 >>> 0) _abort();
   if ((HEAP32[$74 + 12 >> 2] | 0) != ($3 | 0)) _abort();
  }
  if (($76 | 0) == ($74 | 0)) {
   HEAP32[1469] = HEAP32[1469] & ~(1 << $71);
   break;
  }
  if (($76 | 0) == ($78 | 0)) $$pre$phiZ2D = $76 + 8 | 0; else {
   if ($76 >>> 0 < $4 >>> 0) _abort();
   $91 = $76 + 8 | 0;
   if ((HEAP32[$91 >> 2] | 0) == ($3 | 0)) $$pre$phiZ2D = $91; else _abort();
  }
  HEAP32[$74 + 12 >> 2] = $76;
  HEAP32[$$pre$phiZ2D >> 2] = $74;
 } else {
  $96 = HEAP32[$p + ($2 + 24) >> 2] | 0;
  $98 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  do if (($98 | 0) == ($3 | 0)) {
   $109 = $p + ($2 + 20) | 0;
   $110 = HEAP32[$109 >> 2] | 0;
   if (!$110) {
    $112 = $p + ($2 + 16) | 0;
    $113 = HEAP32[$112 >> 2] | 0;
    if (!$113) {
     $R$1 = 0;
     break;
    } else {
     $R$0 = $113;
     $RP$0 = $112;
    }
   } else {
    $R$0 = $110;
    $RP$0 = $109;
   }
   while (1) {
    $115 = $R$0 + 20 | 0;
    $116 = HEAP32[$115 >> 2] | 0;
    if ($116) {
     $R$0 = $116;
     $RP$0 = $115;
     continue;
    }
    $118 = $R$0 + 16 | 0;
    $119 = HEAP32[$118 >> 2] | 0;
    if (!$119) {
     $R$0$lcssa = $R$0;
     $RP$0$lcssa = $RP$0;
     break;
    } else {
     $R$0 = $119;
     $RP$0 = $118;
    }
   }
   if ($RP$0$lcssa >>> 0 < $4 >>> 0) _abort(); else {
    HEAP32[$RP$0$lcssa >> 2] = 0;
    $R$1 = $R$0$lcssa;
    break;
   }
  } else {
   $101 = HEAP32[$p + ($2 + 8) >> 2] | 0;
   if ($101 >>> 0 < $4 >>> 0) _abort();
   $103 = $101 + 12 | 0;
   if ((HEAP32[$103 >> 2] | 0) != ($3 | 0)) _abort();
   $106 = $98 + 8 | 0;
   if ((HEAP32[$106 >> 2] | 0) == ($3 | 0)) {
    HEAP32[$103 >> 2] = $98;
    HEAP32[$106 >> 2] = $101;
    $R$1 = $98;
    break;
   } else _abort();
  } while (0);
  if ($96) {
   $124 = HEAP32[$p + ($2 + 28) >> 2] | 0;
   $125 = 6180 + ($124 << 2) | 0;
   if (($3 | 0) == (HEAP32[$125 >> 2] | 0)) {
    HEAP32[$125 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[1470] = HEAP32[1470] & ~(1 << $124);
     break;
    }
   } else {
    if ($96 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort();
    $134 = $96 + 16 | 0;
    if ((HEAP32[$134 >> 2] | 0) == ($3 | 0)) HEAP32[$134 >> 2] = $R$1; else HEAP32[$96 + 20 >> 2] = $R$1;
    if (!$R$1) break;
   }
   $139 = HEAP32[1473] | 0;
   if ($R$1 >>> 0 < $139 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $96;
   $143 = HEAP32[$p + ($2 + 16) >> 2] | 0;
   do if ($143) if ($143 >>> 0 < $139 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $143;
    HEAP32[$143 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $149 = HEAP32[$p + ($2 + 20) >> 2] | 0;
   if ($149) if ($149 >>> 0 < (HEAP32[1473] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $149;
    HEAP32[$149 + 24 >> 2] = $R$1;
    break;
   }
  }
 } while (0);
 if ($70 >>> 0 < 16) {
  HEAP32[$0 >> 2] = $68 | $1 & 1 | 2;
  $159 = $p + ($68 | 4) | 0;
  HEAP32[$159 >> 2] = HEAP32[$159 >> 2] | 1;
  $newp$0 = $p;
  return $newp$0 | 0;
 } else {
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $70 | 3;
  $168 = $p + ($68 | 4) | 0;
  HEAP32[$168 >> 2] = HEAP32[$168 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $70);
  $newp$0 = $p;
  return $newp$0 | 0;
 }
 return 0;
}

function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $107 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $142 = 0, $143 = 0, $157 = 0, $28 = 0, $30 = 0, $40 = 0, $42 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $65 = 0, $77 = 0, $78 = 0, $80 = 0, $92 = 0, $95 = 0, $97 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $13 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $13 = 0;
  break;
 } else {
  $13 = HEAP32[$__b >> 2] | 0;
  break;
 } else $13 = $0; while (0);
 $12 = ($13 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($12) {
   $157 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($12) label = 12; else {
  $157 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  $40 = $$0$i$i & 255;
  if ($40 << 24 >> 24 > -1) {
   $42 = $__ct + 8 | 0;
   if (HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
    $54 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 31]($__ct, $40, 0) | 0) << 24 >> 24;
    $55 = HEAP32[$__b >> 2] | 0;
    $56 = $55 + 12 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (($57 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 40 >> 2] & 127]($55) | 0;
     $$0$in = $__n;
     $$pre$i2$i$i7 = $157;
     $80 = $157;
     $__r$0$in = $54;
    } else {
     HEAP32[$56 >> 2] = $57 + 1;
     $$0$in = $__n;
     $$pre$i2$i$i7 = $157;
     $80 = $157;
     $__r$0$in = $54;
    }
    while (1) {
     $__r$0 = $__r$0$in + -48 | 0;
     $$0 = $$0$in + -1 | 0;
     $65 = HEAP32[$__b >> 2] | 0;
     do if (!$65) $78 = 0; else if ((HEAP32[$65 + 12 >> 2] | 0) == (HEAP32[$65 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 127]($65) | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $78 = 0;
      break;
     } else {
      $78 = HEAP32[$__b >> 2] | 0;
      break;
     } else $78 = $65; while (0);
     $77 = ($78 | 0) == 0;
     if (!$80) {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $92 = 0;
     } else if ((HEAP32[$80 + 12 >> 2] | 0) == (HEAP32[$80 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i2$i$i20 = 0;
      $92 = 0;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $92 = $$pre$i2$i$i7;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $92 = $80;
     }
     $95 = HEAP32[$__b >> 2] | 0;
     if (!(($$0$in | 0) > 1 & ($77 ^ ($92 | 0) == 0))) {
      $$lcssa = $95;
      $$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;
      $__r$0$lcssa = $__r$0;
      break;
     }
     $97 = HEAP32[$95 + 12 >> 2] | 0;
     if (($97 | 0) == (HEAP32[$95 + 16 >> 2] | 0)) $$0$i$i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 127]($95) | 0; else $$0$i$i10 = HEAPU8[$97 >> 0] | 0;
     $107 = $$0$i$i10 & 255;
     if ($107 << 24 >> 24 <= -1) {
      $$01 = $__r$0;
      break L16;
     }
     if (!(HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i10 << 24 >> 24 << 1) >> 1] & 2048)) {
      $$01 = $__r$0;
      break L16;
     }
     $120 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 31]($__ct, $107, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
     $121 = HEAP32[$__b >> 2] | 0;
     $122 = $121 + 12 | 0;
     $123 = HEAP32[$122 >> 2] | 0;
     if (($123 | 0) == (HEAP32[$121 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$121 >> 2] | 0) + 40 >> 2] & 127]($121) | 0;
      $$0$in = $$0;
      $$pre$i2$i$i7 = $$pre$i2$i$i20;
      $80 = $92;
      $__r$0$in = $120;
      continue;
     } else {
      HEAP32[$122 >> 2] = $123 + 1;
      $$0$in = $$0;
      $$pre$i2$i$i7 = $$pre$i2$i$i20;
      $80 = $92;
      $__r$0$in = $120;
      continue;
     }
    }
    do if (!$$lcssa) $143 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $143 = 0;
     break;
    } else {
     $143 = HEAP32[$__b >> 2] | 0;
     break;
    } else $143 = $$lcssa; while (0);
    $142 = ($143 | 0) == 0;
    do if (!$$pre$i2$i$i20$lcssa) label = 50; else {
     if ((HEAP32[$$pre$i2$i$i20$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i20$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i20$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i20$lcssa) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 50;
      break;
     }
     if ($142) {
      $$01 = $__r$0$lcssa;
      break L16;
     }
    } while (0);
    if ((label | 0) == 50) if (!$142) {
     $$01 = $__r$0$lcssa;
     break;
    }
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$01 = $__r$0$lcssa;
    break;
   }
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$01 = 0;
 } while (0);
 return $$01 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first, $last, $lit, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $lit = $lit | 0;
 $db = $db | 0;
 var $$0$i$i$i = 0, $$0$i$i$i5 = 0, $$02 = 0, $$1 = 0, $0 = 0, $1 = 0, $11 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $48 = 0, $52 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $72 = 0, $73 = 0, $76 = 0, $8 = 0, $82 = 0, $88 = 0, $90 = 0, $94 = 0, $__v$i$i4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $__v$i$i4 = sp + 48 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 $3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first, $last) | 0;
 if (($3 | 0) == ($first | 0) | ($3 | 0) == ($last | 0)) $$1 = $first; else if ((HEAP8[$3 >> 0] | 0) == 69) {
  $8 = HEAP8[$lit >> 0] | 0;
  $11 = $lit + 4 | 0;
  do if ((($8 & 1) == 0 ? ($8 & 255) >>> 1 : HEAP32[$11 >> 2] | 0) >>> 0 > 3) {
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($2, 25573, $lit);
   $17 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25478) | 0;
   HEAP32[$1 >> 2] = HEAP32[$17 >> 2];
   HEAP32[$1 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
   HEAP32[$1 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
   HEAP32[$17 >> 2] = 0;
   HEAP32[$17 + 4 >> 2] = 0;
   HEAP32[$17 + 8 >> 2] = 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
   $20 = $db + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   $23 = HEAP32[$db + 8 >> 2] | 0;
   if ($21 >>> 0 < $23 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($21, $0);
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 24;
   } else {
    $30 = HEAP32[$db >> 2] | 0;
    $31 = $21 - $30 | 0;
    $32 = ($31 | 0) / 24 | 0;
    $33 = $32 + 1 | 0;
    if (($31 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
    $37 = ($23 - $30 | 0) / 24 | 0;
    if ($37 >>> 0 < 1073741823) {
     $39 = $37 << 1;
     $$0$i$i$i = $39 >>> 0 < $33 >>> 0 ? $33 : $39;
    } else $$0$i$i$i = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i4, $$0$i$i$i, $32, $db + 12 | 0);
    $42 = $__v$i$i4 + 8 | 0;
    $43 = HEAP32[$42 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($43, $0);
    HEAP32[$42 >> 2] = $43 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i4);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i4);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
  } else {
   $45 = $db + 4 | 0;
   $46 = HEAP32[$45 >> 2] | 0;
   $48 = HEAP32[$db + 8 >> 2] | 0;
   if ($46 >>> 0 < $48 >>> 0) {
    HEAP32[$46 >> 2] = 0;
    HEAP32[$46 + 4 >> 2] = 0;
    HEAP32[$46 + 8 >> 2] = 0;
    HEAP32[$46 + 12 >> 2] = 0;
    HEAP32[$46 + 16 >> 2] = 0;
    HEAP32[$46 + 20 >> 2] = 0;
    HEAP32[$46 >> 2] = 0;
    HEAP32[$46 + 4 >> 2] = 0;
    HEAP32[$46 + 8 >> 2] = 0;
    $52 = $46 + 12 | 0;
    HEAP32[$52 >> 2] = 0;
    HEAP32[$52 + 4 >> 2] = 0;
    HEAP32[$52 + 8 >> 2] = 0;
    HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 24;
    break;
   }
   $60 = HEAP32[$db >> 2] | 0;
   $61 = $46 - $60 | 0;
   $62 = ($61 | 0) / 24 | 0;
   $63 = $62 + 1 | 0;
   if (($61 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($db);
   $67 = ($48 - $60 | 0) / 24 | 0;
   if ($67 >>> 0 < 1073741823) {
    $69 = $67 << 1;
    $$0$i$i$i5 = $69 >>> 0 < $63 >>> 0 ? $63 : $69;
   } else $$0$i$i$i5 = 2147483647;
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i4, $$0$i$i$i5, $62, $db + 12 | 0);
   $72 = $__v$i$i4 + 8 | 0;
   $73 = HEAP32[$72 >> 2] | 0;
   HEAP32[$73 >> 2] = 0;
   HEAP32[$73 + 4 >> 2] = 0;
   HEAP32[$73 + 8 >> 2] = 0;
   HEAP32[$73 + 12 >> 2] = 0;
   HEAP32[$73 + 16 >> 2] = 0;
   HEAP32[$73 + 20 >> 2] = 0;
   HEAP32[$73 >> 2] = 0;
   HEAP32[$73 + 4 >> 2] = 0;
   HEAP32[$73 + 8 >> 2] = 0;
   $76 = $73 + 12 | 0;
   HEAP32[$76 >> 2] = 0;
   HEAP32[$76 + 4 >> 2] = 0;
   HEAP32[$76 + 8 >> 2] = 0;
   HEAP32[$72 >> 2] = $73 + 24;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db, $__v$i$i4);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i4);
  } while (0);
  $82 = $db + 4 | 0;
  if ((HEAP8[$first >> 0] | 0) == 110) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$82 >> 2] | 0) + -24 | 0, 45);
   $$02 = $first + 1 | 0;
  } else $$02 = $first;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_((HEAP32[$82 >> 2] | 0) + -24 | 0, $$02, $3);
  $88 = HEAP8[$lit >> 0] | 0;
  $90 = ($88 & 1) == 0;
  $94 = $90 ? ($88 & 255) >>> 1 : HEAP32[$11 >> 2] | 0;
  if ($94 >>> 0 < 4) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$82 >> 2] | 0) + -24 | 0, $90 ? $lit + 1 | 0 : HEAP32[$lit + 8 >> 2] | 0, $94) | 0;
  $$1 = $3 + 1 | 0;
 } else $$1 = $first;
 STACKTOP = sp;
 return $$1 | 0;
}

function ___cxa_demangle($mangled_name, $buf, $n, $status) {
 $mangled_name = $mangled_name | 0;
 $buf = $buf | 0;
 $n = $n | 0;
 $status = $status | 0;
 var $$0 = 0, $$028 = 0, $$1 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $109 = 0, $11 = 0, $112 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $31 = 0, $35 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $7 = 0, $70 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $82 = 0, $83 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $__v$i$i = 0, $a = 0, $db = 0, $internal_status = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4208 | 0;
 $__v$i$i = sp + 4184 | 0;
 $a = sp;
 $db = sp + 4120 | 0;
 $internal_status = sp + 4112 | 0;
 if (!$mangled_name) label = 3; else {
  $1 = ($buf | 0) != 0;
  $2 = ($n | 0) == 0;
  if ($1 & $2) label = 3; else {
   if ($1) $82 = HEAP32[$n >> 2] | 0; else $82 = 0;
   HEAP32[$a + 4096 >> 2] = $a;
   $6 = $a;
   HEAP32[$db >> 2] = 0;
   $7 = $db + 4 | 0;
   HEAP32[$7 >> 2] = 0;
   HEAP32[$db + 8 >> 2] = 0;
   HEAP32[$db + 12 >> 2] = $6;
   $10 = $db + 16 | 0;
   HEAP32[$10 >> 2] = 0;
   $11 = $db + 20 | 0;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$db + 24 >> 2] = 0;
   HEAP32[$db + 28 >> 2] = $6;
   HEAP32[$db + 32 >> 2] = 0;
   $15 = $db + 36 | 0;
   HEAP32[$15 >> 2] = 0;
   HEAP32[$db + 40 >> 2] = 0;
   $17 = $db + 44 | 0;
   HEAP32[$17 >> 2] = $6;
   $18 = $db + 48 | 0;
   $19 = $db + 61 | 0;
   HEAP32[$18 >> 2] = 0;
   HEAP32[$18 + 4 >> 2] = 0;
   HEAP32[$18 + 8 >> 2] = 0;
   HEAP8[$18 + 12 >> 0] = 0;
   HEAP8[$19 >> 0] = 1;
   $20 = $db + 32 | 0;
   __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($__v$i$i, 1, 0, $17);
   $21 = $__v$i$i + 8 | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   HEAP32[$22 >> 2] = 0;
   HEAP32[$22 + 4 >> 2] = 0;
   HEAP32[$22 + 8 >> 2] = 0;
   HEAP32[$22 + 12 >> 2] = $6;
   HEAP32[$21 >> 2] = $22 + 16;
   __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($20, $__v$i$i);
   __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v$i$i);
   $27 = $db + 62 | 0;
   HEAP8[$27 >> 0] = 0;
   HEAP8[$db + 63 >> 0] = 1;
   HEAP32[$internal_status >> 2] = 0;
   $30 = $mangled_name + (_strlen($mangled_name | 0) | 0) | 0;
   __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($mangled_name, $30, $db, $internal_status);
   $31 = HEAP32[$internal_status >> 2] | 0;
   do if (($31 | 0) != 0 | (HEAP8[$27 >> 0] | 0) == 0) {
    $59 = $31;
    label = 17;
   } else {
    $35 = HEAP32[$20 >> 2] | 0;
    if (($35 | 0) == (HEAP32[$15 >> 2] | 0)) label = 18; else if ((HEAP32[$35 >> 2] | 0) == (HEAP32[$35 + 4 >> 2] | 0)) label = 18; else {
     HEAP8[$27 >> 0] = 0;
     HEAP8[$19 >> 0] = 0;
     $42 = HEAP32[$db >> 2] | 0;
     $43 = HEAP32[$7 >> 2] | 0;
     if (($43 | 0) != ($42 | 0)) {
      $46 = $43;
      do {
       $45 = $46 + -24 | 0;
       HEAP32[$7 >> 2] = $45;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($45);
       $46 = HEAP32[$7 >> 2] | 0;
      } while (($46 | 0) != ($42 | 0));
     }
     $49 = HEAP32[$10 >> 2] | 0;
     $50 = HEAP32[$11 >> 2] | 0;
     if (($50 | 0) != ($49 | 0)) {
      $53 = $50;
      do {
       $52 = $53 + -16 | 0;
       HEAP32[$11 >> 2] = $52;
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($52);
       $53 = HEAP32[$11 >> 2] | 0;
      } while (($53 | 0) != ($49 | 0));
     }
     __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($mangled_name, $30, $db, $internal_status);
     if (!(HEAP8[$27 >> 0] | 0)) {
      $59 = HEAP32[$internal_status >> 2] | 0;
      label = 17;
      break;
     } else {
      HEAP32[$internal_status >> 2] = -2;
      $$1 = 0;
      $112 = -2;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 17) if (!$59) label = 18; else {
    $$1 = 0;
    $112 = $59;
   }
   do if ((label | 0) == 18) {
    $60 = HEAP32[$7 >> 2] | 0;
    $62 = HEAP8[$60 + -24 >> 0] | 0;
    if (!($62 & 1)) $79 = ($62 & 255) >>> 1; else $79 = HEAP32[$60 + -20 >> 2] | 0;
    $70 = HEAP8[$60 + -12 >> 0] | 0;
    if (!($70 & 1)) $78 = ($70 & 255) >>> 1; else $78 = HEAP32[$60 + -8 >> 2] | 0;
    $77 = $78 + $79 | 0;
    $80 = $77 + 1 | 0;
    if ($80 >>> 0 > $82 >>> 0) {
     $83 = _realloc($buf, $80) | 0;
     if (!$83) {
      HEAP32[$internal_status >> 2] = -1;
      $$1 = 0;
      $112 = -1;
      break;
     }
     if ($2) $$028 = $83; else {
      HEAP32[$n >> 2] = $80;
      $$028 = $83;
     }
    } else if (!$buf) {
     $$1 = 0;
     $112 = 0;
     break;
    } else $$028 = $buf;
    $86 = HEAP32[$7 >> 2] | 0;
    $88 = $86 + -12 | 0;
    $89 = HEAP8[$88 >> 0] | 0;
    $91 = ($89 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($86 + -24 | 0, $91 ? $88 + 1 | 0 : HEAP32[$86 + -4 >> 2] | 0, $91 ? ($89 & 255) >>> 1 : HEAP32[$86 + -8 >> 2] | 0) | 0;
    $101 = HEAP32[$7 >> 2] | 0;
    $102 = $101 + -24 | 0;
    if (!(HEAP8[$102 >> 0] & 1)) $109 = $102 + 1 | 0; else $109 = HEAP32[$101 + -16 >> 2] | 0;
    _memcpy($$028 | 0, $109 | 0, $77 | 0) | 0;
    HEAP8[$$028 + $77 >> 0] = 0;
    $$1 = $$028;
    $112 = 0;
   } while (0);
   if ($status) HEAP32[$status >> 2] = $112;
   __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($db);
   $$0 = $$1;
  }
 }
 if ((label | 0) == 3) if (!$status) $$0 = 0; else {
  HEAP32[$status >> 2] = -3;
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12dwarf2reader15CompilationUnit11ProcessDIEsEv($this) {
 $this = $this | 0;
 var $$ = 0, $$0$i = 0, $$01$i = 0, $$01$i2 = 0, $$lcssa = 0, $1 = 0, $101 = 0, $104 = 0, $112 = 0, $116 = 0, $117 = 0, $119 = 0, $120 = 0, $122 = 0, $124 = 0, $130 = 0, $134 = 0, $142 = 0, $143 = 0, $151 = 0, $152 = 0, $154 = 0, $155 = 0, $156 = 0, $159 = 0, $163 = 0, $168 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $34 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $70 = 0, $72 = 0, $75 = 0, $76 = 0, $89 = 0, $9 = 0, $die_stack = 0, $dieptr$0$be = 0, $dieptr$016 = 0, $dieptr$1 = 0, $num_read$0$i = 0, $shift$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $die_stack = sp;
 $1 = HEAP32[$this + 64 >> 2] | 0;
 $2 = $this + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $$ = (HEAP8[(HEAP32[$this + 68 >> 2] | 0) + 25 >> 0] | 0) == 8 ? 12 : 4;
 HEAP32[$die_stack >> 2] = 0;
 HEAP32[$die_stack + 4 >> 2] = 0;
 HEAP32[$die_stack + 8 >> 2] = 0;
 HEAP32[$die_stack + 12 >> 2] = 0;
 HEAP32[$die_stack + 16 >> 2] = 0;
 HEAP32[$die_stack + 20 >> 2] = 0;
 $9 = $this + 8 | 0;
 if ($1 >>> 0 >= ($3 + ((HEAP32[$9 >> 2] | 0) + $$) | 0) >>> 0) {
  __ZNSt3__15stackIyNS_5dequeIyNS_9allocatorIyEEEEED2Ev($die_stack);
  STACKTOP = sp;
  return;
 }
 $18 = $this + 40 | 0;
 $19 = $die_stack + 20 | 0;
 $20 = $die_stack + 16 | 0;
 $21 = $die_stack + 4 | 0;
 $22 = $die_stack + 8 | 0;
 $23 = $this + 76 | 0;
 $24 = $this + 80 | 0;
 $27 = $3;
 $dieptr$016 = $1;
 L4 : while (1) {
  $28 = $dieptr$016 - $27 | 0;
  $29 = $18;
  $31 = HEAP32[$29 >> 2] | 0;
  $34 = HEAP32[$29 + 4 >> 2] | 0;
  $$0$i = $dieptr$016;
  $43 = 0;
  $45 = 0;
  $num_read$0$i = 0;
  $shift$0$i = 0;
  while (1) {
   $37 = $num_read$0$i + 1 | 0;
   $38 = HEAPU8[$$0$i >> 0] | 0;
   $40 = _bitshift64Shl($38 & 127 | 0, 0, $shift$0$i | 0) | 0;
   $42 = $40 | $43;
   $44 = tempRet0 | $45;
   if (!($38 & 128)) {
    $$lcssa = $37;
    $55 = $42;
    $57 = $44;
    break;
   } else {
    $$0$i = $$0$i + 1 | 0;
    $43 = $42;
    $45 = $44;
    $num_read$0$i = $37;
    $shift$0$i = $shift$0$i + 7 | 0;
   }
  }
  $51 = _i64Add($28 | 0, (($28 | 0) < 0) << 31 >> 31 | 0, $31 | 0, $34 | 0) | 0;
  $52 = tempRet0;
  $53 = $dieptr$016 + $$lcssa | 0;
  do if (($55 | 0) == 0 & ($57 | 0) == 0) {
   $59 = HEAP32[$19 >> 2] | 0;
   if (!$59) {
    label = 24;
    break L4;
   }
   $61 = HEAP32[$20 >> 2] | 0;
   $62 = $59 + -1 | 0;
   $63 = $61 + $62 | 0;
   $64 = HEAP32[$21 >> 2] | 0;
   $70 = (HEAP32[$64 + ($63 >>> 9 << 2) >> 2] | 0) + (($63 & 511) << 3) | 0;
   $72 = HEAP32[$70 >> 2] | 0;
   $75 = HEAP32[$70 + 4 >> 2] | 0;
   HEAP32[$19 >> 2] = $62;
   $76 = HEAP32[$22 >> 2] | 0;
   if ((1 - $59 - $61 + (($76 | 0) == ($64 | 0) ? 0 : ($76 - $64 << 7) + -1 | 0) | 0) >>> 0 > 1023) {
    __ZdlPv(HEAP32[$76 + -4 >> 2] | 0);
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + -4;
   }
   $89 = HEAP32[$23 >> 2] | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$89 >> 2] | 0) + 40 >> 2] & 15]($89, $72, $75);
   $dieptr$0$be = $53;
  } else {
   $101 = HEAP32[$24 >> 2] | 0;
   $104 = HEAP32[$101 >> 2] | 0;
   if ((HEAP32[$101 + 4 >> 2] | 0) - $104 >> 5 >>> 0 <= $55 >>> 0) {
    label = 13;
    break L4;
   }
   $112 = HEAP32[$23 >> 2] | 0;
   $116 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$112 >> 2] | 0) + 12 >> 2] & 31]($112, $51, $52, HEAP32[$104 + ($55 << 5) + 8 >> 2] | 0) | 0;
   $117 = $104 + ($55 << 5) + 16 | 0;
   $119 = HEAP32[$104 + ($55 << 5) + 20 >> 2] | 0;
   $120 = ($119 | 0) == ($117 | 0);
   if ($116) if ($120) $dieptr$1 = $53; else {
    $$01$i = $53;
    $130 = $119;
    while (1) {
     $134 = __ZN12dwarf2reader15CompilationUnit16ProcessAttributeEyPKcNS_14DwarfAttributeENS_9DwarfFormE($this, $51, $52, $$01$i, HEAP32[$130 + 8 >> 2] | 0, HEAP32[$130 + 12 >> 2] | 0) | 0;
     $130 = HEAP32[$130 + 4 >> 2] | 0;
     if (($130 | 0) == ($117 | 0)) {
      $dieptr$1 = $134;
      break;
     } else $$01$i = $134;
    }
   } else if ($120) $dieptr$1 = $53; else {
    $$01$i2 = $53;
    $122 = $119;
    while (1) {
     $124 = __ZN12dwarf2reader15CompilationUnit13SkipAttributeEPKcNS_9DwarfFormE($this, $$01$i2, HEAP32[$122 + 12 >> 2] | 0) | 0;
     $122 = HEAP32[$122 + 4 >> 2] | 0;
     if (($122 | 0) == ($117 | 0)) {
      $dieptr$1 = $124;
      break;
     } else $$01$i2 = $124;
    }
   }
   if (!(HEAP8[$104 + ($55 << 5) + 12 >> 0] | 0)) {
    $168 = HEAP32[$23 >> 2] | 0;
    FUNCTION_TABLE_viii[HEAP32[(HEAP32[$168 >> 2] | 0) + 40 >> 2] & 15]($168, $51, $52);
    $dieptr$0$be = $dieptr$1;
    break;
   }
   $142 = HEAP32[$22 >> 2] | 0;
   $143 = HEAP32[$21 >> 2] | 0;
   $151 = HEAP32[$20 >> 2] | 0;
   $152 = HEAP32[$19 >> 2] | 0;
   if (((($142 | 0) == ($143 | 0) ? 0 : ($142 - $143 << 7) + -1 | 0) | 0) == ($152 + $151 | 0)) {
    __ZNSt3__15dequeIyNS_9allocatorIyEEE19__add_back_capacityEv($die_stack);
    $155 = HEAP32[$19 >> 2] | 0;
    $156 = HEAP32[$20 >> 2] | 0;
    $159 = HEAP32[$21 >> 2] | 0;
   } else {
    $155 = $152;
    $156 = $151;
    $159 = $143;
   }
   $154 = $155 + $156 | 0;
   $163 = (HEAP32[$159 + ($154 >>> 9 << 2) >> 2] | 0) + (($154 & 511) << 3) | 0;
   HEAP32[$163 >> 2] = $51;
   HEAP32[$163 + 4 >> 2] = $52;
   HEAP32[$19 >> 2] = $155 + 1;
   $dieptr$0$be = $dieptr$1;
  } while (0);
  if ($dieptr$0$be >>> 0 >= ($3 + ((HEAP32[$9 >> 2] | 0) + $$) | 0) >>> 0) {
   label = 24;
   break;
  }
  $27 = HEAP32[$2 >> 2] | 0;
  $dieptr$016 = $dieptr$0$be;
 }
 if ((label | 0) == 13) __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($101); else if ((label | 0) == 24) {
  __ZNSt3__15stackIyNS_5dequeIyNS_9allocatorIyEEEEED2Ev($die_stack);
  STACKTOP = sp;
  return;
 }
}

function __ZN15google_breakpad11DumpSymbols14ReadSymbolDataEPPNS_6ModuleE($this, $out_module) {
 $this = $this | 0;
 $out_module = $out_module | 0;
 var $$ = 0, $$113 = 0, $$214 = 0, $$315 = 0, $$pre$phi27Z2D = 0, $0 = 0, $1 = 0, $109 = 0, $111 = 0, $119 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $3 = 0, $32 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $48 = 0, $50 = 0, $55 = 0, $56 = 0, $6 = 0, $70 = 0, $79 = 0, $8 = 0, $81 = 0, $87 = 0, $89 = 0, $9 = 0, $identifier = 0, $load_command_dumper = 0, $module_name = 0, $reader = 0, $reporter = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $vararg_buffer = sp;
 $0 = sp + 140 | 0;
 $module_name = sp + 84 | 0;
 $identifier = sp + 72 | 0;
 $1 = sp + 60 | 0;
 $2 = sp + 48 | 0;
 $reporter = sp + 32 | 0;
 $reader = sp + 96 | 0;
 $load_command_dumper = sp + 8 | 0;
 $3 = $this + 48 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = $this + 40 | 0;
 do if (!$4) {
  $8 = $this + 36 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  if (((HEAP32[$6 >> 2] | 0) - $9 | 0) == 32) {
   HEAP32[$3 >> 2] = $9;
   if ($9) {
    $$pre$phi27Z2D = $8;
    $32 = $9;
    break;
   }
   ___assert_fail(22396, 21646, 557, 22418);
  }
  $14 = _NXGetLocalArchInfo() | 0;
  $19 = __ZN15google_breakpad11DumpSymbols28FindBestMatchForArchitectureEii($this, HEAP32[$14 + 4 >> 2] | 0, HEAP32[$14 + 8 >> 2] | 0) | 0;
  if ($19) {
   HEAP32[$3 >> 2] = $19;
   $$pre$phi27Z2D = $8;
   $32 = $19;
   break;
  }
  $21 = HEAP32[_stderr >> 2] | 0;
  $22 = $this + 20 | 0;
  if (!(HEAP8[$22 >> 0] & 1)) $29 = $22 + 1 | 0; else $29 = HEAP32[$this + 28 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $29;
  _fprintf($21 | 0, 22221, $vararg_buffer | 0) | 0;
  $$315 = 0;
  STACKTOP = sp;
  return $$315 | 0;
 } else {
  $$pre$phi27Z2D = $this + 36 | 0;
  $32 = $4;
 } while (0);
 $36 = HEAP32[(__ZN15google_breakpad30BreakpadGetArchInfoFromCpuTypeEii(HEAP32[$32 >> 2] | 0, HEAP32[$32 + 4 >> 2] | 0) | 0) >> 2] | 0;
 $38 = (_strcmp($36, 22433) | 0) == 0;
 $$ = $38 ? 22438 : $36;
 $39 = $this + 52 | 0;
 $40 = $this + 20 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($39, $40) | 0;
 if ((HEAP32[$6 >> 2] | 0) - (HEAP32[$$pre$phi27Z2D >> 2] | 0) >> 5 >>> 0 > 1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($39, 22442) | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $48 = HEAP8[$39 >> 0] | 0;
  $50 = ($48 & 1) == 0;
  $55 = $50 ? ($48 & 255) >>> 1 : HEAP32[$this + 56 >> 2] | 0;
  $56 = _strlen($$ | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($0, $50 ? $39 + 1 | 0 : HEAP32[$this + 60 >> 2] | 0, $55, $55 + $56 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $$, $56) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($module_name, $40);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($module_name, _basename(((HEAP8[$module_name >> 0] & 1) == 0 ? $module_name + 1 | 0 : HEAP32[$module_name + 8 >> 2] | 0) | 0) | 0) | 0;
 __ZN15google_breakpad11DumpSymbols10IdentifierEv($identifier, $this);
 $70 = HEAP8[$identifier >> 0] | 0;
 if (!((($70 & 1) == 0 ? ($70 & 255) >>> 1 : HEAP32[$identifier + 4 >> 2] | 0) | 0)) $$214 = 0; else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($identifier, 22458) | 0;
  $79 = __Znwj(104) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 22460, 3);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, $$, _strlen($$ | 0) | 0);
  __ZN15google_breakpad6ModuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_($79, $module_name, $1, $2, $identifier);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  HEAP32[$reporter >> 2] = 5264;
  $81 = $reporter + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($81, $39);
  HEAP32[$reader >> 2] = $reporter;
  HEAP32[$reader + 4 >> 2] = 0;
  HEAP32[$reader + 8 >> 2] = 0;
  HEAP32[$reader + 28 >> 2] = 0;
  HEAP32[$reader + 32 >> 2] = 0;
  $87 = HEAP32[$this + 32 >> 2] | 0;
  if (!$87) ___assert_fail(21502, 21517, 221, 26009);
  $89 = HEAP32[$3 >> 2] | 0;
  if (__ZN15google_breakpad6mach_o6Reader4ReadEPKhjii($reader, $87 + (HEAP32[$89 + 8 >> 2] | 0) | 0, HEAP32[$89 + 16 >> 2] | 0, HEAP32[$89 >> 2] | 0, HEAP32[$89 + 4 >> 2] | 0) | 0) {
   $109 = HEAP32[$this >> 2] | 0;
   $111 = HEAP8[$this + 4 >> 0] | 0;
   HEAP32[$load_command_dumper >> 2] = 5184;
   HEAP32[$load_command_dumper + 4 >> 2] = $this;
   HEAP32[$load_command_dumper + 8 >> 2] = $79;
   HEAP32[$load_command_dumper + 12 >> 2] = $reader;
   HEAP32[$load_command_dumper + 16 >> 2] = $109;
   HEAP8[$load_command_dumper + 20 >> 0] = $111;
   if (__ZNK15google_breakpad6mach_o6Reader16WalkLoadCommandsEPNS1_18LoadCommandHandlerE($reader, $load_command_dumper) | 0) {
    HEAP32[$out_module >> 2] = $79;
    $$113 = 1;
    $119 = 0;
   } else {
    $$113 = 0;
    $119 = $79;
   }
  } else {
   $$113 = 0;
   $119 = $79;
  }
  HEAP32[$reporter >> 2] = 5264;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
  if (!$119) $$214 = $$113; else {
   __ZN15google_breakpad6ModuleD2Ev($119);
   __ZdlPv($119);
   $$214 = $$113;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($identifier);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($module_name);
 $$315 = $$214;
 STACKTOP = sp;
 return $$315 | 0;
}

function _fmod($x, $y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $106 = 0, $107 = 0, $11 = 0, $112 = 0, $114 = 0, $116 = 0, $119 = 0, $12 = 0, $121 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $146 = 0, $149 = 0, $150 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $2 = 0, $23 = 0.0, $25 = 0, $26 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $45 = 0, $46 = 0, $55 = 0, $6 = 0, $60 = 0, $61 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $78 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $93 = 0, $95 = 0, $97 = 0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $6 = $4 & 2047;
 $7 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
 $12 = tempRet0;
 if (!(($11 | 0) == 0 & ($12 | 0) == 0)) {
  $16 = $3 & 2147483647;
  if (!($16 >>> 0 > 2146435072 | ($16 | 0) == 2146435072 & $2 >>> 0 > 0 | ($6 | 0) == 2047)) {
   $25 = _bitshift64Shl($0 | 0, $1 | 0, 1) | 0;
   $26 = tempRet0;
   if (!($26 >>> 0 > $12 >>> 0 | ($26 | 0) == ($12 | 0) & $25 >>> 0 > $11 >>> 0)) return +(($25 | 0) == ($11 | 0) & ($26 | 0) == ($12 | 0) ? $x * 0.0 : $x);
   if (!$6) {
    $37 = _bitshift64Shl($0 | 0, $1 | 0, 12) | 0;
    $38 = tempRet0;
    if (($38 | 0) > -1 | ($38 | 0) == -1 & $37 >>> 0 > 4294967295) {
     $45 = $37;
     $46 = $38;
     $ex$026 = 0;
     while (1) {
      $44 = $ex$026 + -1 | 0;
      $45 = _bitshift64Shl($45 | 0, $46 | 0, 1) | 0;
      $46 = tempRet0;
      if (!(($46 | 0) > -1 | ($46 | 0) == -1 & $45 >>> 0 > 4294967295)) {
       $ex$0$lcssa = $44;
       break;
      } else $ex$026 = $44;
     }
    } else $ex$0$lcssa = 0;
    $55 = _bitshift64Shl($0 | 0, $1 | 0, 1 - $ex$0$lcssa | 0) | 0;
    $83 = $55;
    $84 = tempRet0;
    $ex$1 = $ex$0$lcssa;
   } else {
    $83 = $0;
    $84 = $1 & 1048575 | 1048576;
    $ex$1 = $6;
   }
   if (!$9) {
    $60 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $61 = tempRet0;
    if (($61 | 0) > -1 | ($61 | 0) == -1 & $60 >>> 0 > 4294967295) {
     $68 = $60;
     $69 = $61;
     $ey$020 = 0;
     while (1) {
      $67 = $ey$020 + -1 | 0;
      $68 = _bitshift64Shl($68 | 0, $69 | 0, 1) | 0;
      $69 = tempRet0;
      if (!(($69 | 0) > -1 | ($69 | 0) == -1 & $68 >>> 0 > 4294967295)) {
       $ey$0$lcssa = $67;
       break;
      } else $ey$020 = $67;
     }
    } else $ey$0$lcssa = 0;
    $78 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $ey$0$lcssa | 0) | 0;
    $85 = $78;
    $86 = tempRet0;
    $ey$1$ph = $ey$0$lcssa;
   } else {
    $85 = $2;
    $86 = $3 & 1048575 | 1048576;
    $ey$1$ph = $9;
   }
   $87 = _i64Subtract($83 | 0, $84 | 0, $85 | 0, $86 | 0) | 0;
   $88 = tempRet0;
   $93 = ($88 | 0) > -1 | ($88 | 0) == -1 & $87 >>> 0 > 4294967295;
   L23 : do if (($ex$1 | 0) > ($ey$1$ph | 0)) {
    $152 = $93;
    $153 = $87;
    $154 = $88;
    $95 = $83;
    $97 = $84;
    $ex$212 = $ex$1;
    while (1) {
     if ($152) if (($95 | 0) == ($85 | 0) & ($97 | 0) == ($86 | 0)) break; else {
      $100 = $153;
      $101 = $154;
     } else {
      $100 = $95;
      $101 = $97;
     }
     $102 = _bitshift64Shl($100 | 0, $101 | 0, 1) | 0;
     $103 = tempRet0;
     $104 = $ex$212 + -1 | 0;
     $106 = _i64Subtract($102 | 0, $103 | 0, $85 | 0, $86 | 0) | 0;
     $107 = tempRet0;
     $112 = ($107 | 0) > -1 | ($107 | 0) == -1 & $106 >>> 0 > 4294967295;
     if (($104 | 0) > ($ey$1$ph | 0)) {
      $152 = $112;
      $153 = $106;
      $154 = $107;
      $95 = $102;
      $97 = $103;
      $ex$212 = $104;
     } else {
      $$lcssa7 = $112;
      $114 = $102;
      $116 = $103;
      $155 = $106;
      $156 = $107;
      $ex$2$lcssa = $104;
      break L23;
     }
    }
    $$0 = $x * 0.0;
    return +$$0;
   } else {
    $$lcssa7 = $93;
    $114 = $83;
    $116 = $84;
    $155 = $87;
    $156 = $88;
    $ex$2$lcssa = $ex$1;
   } while (0);
   if ($$lcssa7) if (($114 | 0) == ($85 | 0) & ($116 | 0) == ($86 | 0)) {
    $$0 = $x * 0.0;
    return +$$0;
   } else {
    $119 = $156;
    $121 = $155;
   } else {
    $119 = $116;
    $121 = $114;
   }
   if ($119 >>> 0 < 1048576 | ($119 | 0) == 1048576 & $121 >>> 0 < 0) {
    $126 = $121;
    $127 = $119;
    $ex$39 = $ex$2$lcssa;
    while (1) {
     $128 = _bitshift64Shl($126 | 0, $127 | 0, 1) | 0;
     $129 = tempRet0;
     $130 = $ex$39 + -1 | 0;
     if ($129 >>> 0 < 1048576 | ($129 | 0) == 1048576 & $128 >>> 0 < 0) {
      $126 = $128;
      $127 = $129;
      $ex$39 = $130;
     } else {
      $137 = $128;
      $138 = $129;
      $ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $121;
    $138 = $119;
    $ex$3$lcssa = $ex$2$lcssa;
   }
   if (($ex$3$lcssa | 0) > 0) {
    $139 = _i64Add($137 | 0, $138 | 0, 0, -1048576) | 0;
    $140 = tempRet0;
    $141 = _bitshift64Shl($ex$3$lcssa | 0, 0, 52) | 0;
    $149 = $140 | tempRet0;
    $150 = $139 | $141;
   } else {
    $146 = _bitshift64Lshr($137 | 0, $138 | 0, 1 - $ex$3$lcssa | 0) | 0;
    $149 = tempRet0;
    $150 = $146;
   }
   HEAP32[tempDoublePtr >> 2] = $150;
   HEAP32[tempDoublePtr + 4 >> 2] = $149 | $10;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
   return +$$0;
  }
 }
 $23 = $x * $y;
 $$0 = $23 / $23;
 return +$$0;
}

function __ZNK12dwarf2reader13CallFrameInfo7RuleMap18HandleTransitionToEPNS0_7HandlerEyRKS1_($this, $handler, $0, $1, $new_rules) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $new_rules = $new_rules | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i15 = 0, $$0$i$i$i$i$i24 = 0, $$0$i$i$i$i$i6 = 0, $$0$i$i$i$i11 = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i29 = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i17 = 0, $$01$i$i$i$i26 = 0, $$01$i$i$i$i8 = 0, $$lcssa = 0, $$lcssa175 = 0, $$lcssa178 = 0, $$lcssa181 = 0, $$ph39$lcssa = 0, $$ph3966 = 0, $$ph65 = 0, $$pre = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $52 = 0, $59 = 0, $61 = 0, $64 = 0, $68 = 0, $70 = 0, $73 = 0, $81 = 0, $85 = 0, $87 = 0, $9 = 0, $90 = 0, label = 0;
 $2 = HEAP32[$this >> 2] | 0;
 $$pre = HEAP32[$new_rules >> 2] | 0;
 $4 = ($$pre | 0) == 0;
 if (!$2) {
  if (!$4) ___assert_fail(22458, 18044, 1141, 18930);
 } else if (!$4) if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2 >> 2] | 0) + 12 >> 2] & 31]($2, $$pre) | 0)) {
  $9 = HEAP32[$new_rules >> 2] | 0;
  if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 63]($9, $handler, $0, $1, -1) | 0)) {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 $15 = HEAP32[$this + 4 >> 2] | 0;
 $17 = HEAP32[$new_rules + 4 >> 2] | 0;
 $18 = $this + 8 | 0;
 L9 : do if (($15 | 0) == ($18 | 0)) {
  $$lcssa = $15;
  $$ph39$lcssa = $17;
 } else {
  $20 = $new_rules + 8 | 0;
  $$ph3966 = $17;
  $$ph65 = $15;
  L11 : while (1) {
   $22 = $$ph3966 + 16 | 0;
   if (($$ph3966 | 0) == ($20 | 0)) {
    $$lcssa = $$ph65;
    $$ph39$lcssa = $20;
    break L9;
   } else $25 = $$ph65;
   while (1) {
    $26 = HEAP32[$25 + 16 >> 2] | 0;
    $27 = HEAP32[$22 >> 2] | 0;
    if (($26 | 0) >= ($27 | 0)) {
     $$lcssa175 = $25;
     $$lcssa178 = $26;
     $$lcssa181 = $27;
     break;
    }
    if (!(FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 16 >> 2] & 31]($handler, $0, $1, $26) | 0)) {
     $$0 = 0;
     label = 40;
     break L11;
    }
    $34 = HEAP32[$25 + 4 >> 2] | 0;
    if (!$34) {
     $$01$i$i$i$i26 = $25;
     while (1) {
      $39 = HEAP32[$$01$i$i$i$i26 + 8 >> 2] | 0;
      if ((HEAP32[$39 >> 2] | 0) == ($$01$i$i$i$i26 | 0)) {
       $$0$i$i$i$i29 = $39;
       break;
      } else $$01$i$i$i$i26 = $39;
     }
    } else {
     $$0$i$i$i$i$i24 = $34;
     while (1) {
      $36 = HEAP32[$$0$i$i$i$i$i24 >> 2] | 0;
      if (!$36) {
       $$0$i$i$i$i29 = $$0$i$i$i$i$i24;
       break;
      } else $$0$i$i$i$i$i24 = $36;
     }
    }
    if (($$0$i$i$i$i29 | 0) == ($18 | 0)) {
     $$lcssa = $$0$i$i$i$i29;
     $$ph39$lcssa = $$ph3966;
     break L9;
    } else $25 = $$0$i$i$i$i29;
   }
   if (($$lcssa178 | 0) > ($$lcssa181 | 0)) {
    label = 20;
    break;
   }
   $45 = HEAP32[$$lcssa175 + 20 >> 2] | 0;
   $46 = $$ph3966 + 20 | 0;
   if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$45 >> 2] | 0) + 12 >> 2] & 31]($45, HEAP32[$46 >> 2] | 0) | 0)) {
    $52 = HEAP32[$46 >> 2] | 0;
    if (!(FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$52 >> 2] | 0) + 8 >> 2] & 63]($52, $handler, $0, $1, HEAP32[$22 >> 2] | 0) | 0)) {
     $$0 = 0;
     label = 40;
     break;
    }
   }
   $59 = HEAP32[$$ph3966 + 4 >> 2] | 0;
   if (!$59) {
    $$01$i$i$i$i17 = $$ph3966;
    while (1) {
     $64 = HEAP32[$$01$i$i$i$i17 + 8 >> 2] | 0;
     if ((HEAP32[$64 >> 2] | 0) == ($$01$i$i$i$i17 | 0)) {
      $$0$i$i$i$i20 = $64;
      break;
     } else $$01$i$i$i$i17 = $64;
    }
   } else {
    $$0$i$i$i$i$i15 = $59;
    while (1) {
     $61 = HEAP32[$$0$i$i$i$i$i15 >> 2] | 0;
     if (!$61) {
      $$0$i$i$i$i20 = $$0$i$i$i$i$i15;
      break;
     } else $$0$i$i$i$i$i15 = $61;
    }
   }
   $68 = HEAP32[$$lcssa175 + 4 >> 2] | 0;
   if (!$68) {
    $$01$i$i$i$i8 = $$lcssa175;
    while (1) {
     $73 = HEAP32[$$01$i$i$i$i8 + 8 >> 2] | 0;
     if ((HEAP32[$73 >> 2] | 0) == ($$01$i$i$i$i8 | 0)) {
      $$0$i$i$i$i11 = $73;
      break;
     } else $$01$i$i$i$i8 = $73;
    }
   } else {
    $$0$i$i$i$i$i6 = $68;
    while (1) {
     $70 = HEAP32[$$0$i$i$i$i$i6 >> 2] | 0;
     if (!$70) {
      $$0$i$i$i$i11 = $$0$i$i$i$i$i6;
      break;
     } else $$0$i$i$i$i$i6 = $70;
    }
   }
   if (($$0$i$i$i$i11 | 0) == ($18 | 0)) {
    $$lcssa = $$0$i$i$i$i11;
    $$ph39$lcssa = $$0$i$i$i$i20;
    break L9;
   } else {
    $$ph3966 = $$0$i$i$i$i20;
    $$ph65 = $$0$i$i$i$i11;
   }
  }
  if ((label | 0) == 20) ___assert_fail(22458, 18044, 1166, 18930); else if ((label | 0) == 40) return $$0 | 0;
 } while (0);
 L48 : do if (($$lcssa | 0) != ($18 | 0)) {
  $81 = $$lcssa;
  while (1) {
   if (!(FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 16 >> 2] & 31]($handler, $0, $1, HEAP32[$81 + 16 >> 2] | 0) | 0)) {
    $$0 = 0;
    break;
   }
   $85 = HEAP32[$81 + 4 >> 2] | 0;
   if (!$85) {
    $$01$i$i$i$i = $81;
    while (1) {
     $90 = HEAP32[$$01$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$90 >> 2] | 0) == ($$01$i$i$i$i | 0)) {
      $$0$i$i$i$i = $90;
      break;
     } else $$01$i$i$i$i = $90;
    }
   } else {
    $$0$i$i$i$i$i = $85;
    while (1) {
     $87 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
     if (!$87) {
      $$0$i$i$i$i = $$0$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i = $87;
    }
   }
   if (($$0$i$i$i$i | 0) == ($18 | 0)) break L48; else $81 = $$0$i$i$i$i;
  }
  return $$0 | 0;
 } while (0);
 if (($$ph39$lcssa | 0) == ($new_rules + 8 | 0)) {
  $$0 = 1;
  return $$0 | 0;
 } else ___assert_fail(18949, 18044, 1185, 18930);
 return 0;
}

function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $77 = 0, $79 = 0, $81 = 0, $93 = 0, $96 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 L7 : do if (($mx | 0) != 0 & $frm_nxt$1$ph >>> 0 < $frm_end >>> 0) {
  $frm_nxt$150 = $frm_nxt$1$ph;
  $nchar16_t$049 = 0;
  L8 : while (1) {
   $16 = HEAP8[$frm_nxt$150 >> 0] | 0;
   $17 = $16 & 255;
   if ($17 >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$150;
    label = 42;
    break L7;
   }
   do if ($16 << 24 >> 24 > -1) {
    $frm_nxt$2 = $frm_nxt$150 + 1 | 0;
    $nchar16_t$1 = $nchar16_t$049;
   } else {
    if (($16 & 255) < 194) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    if (($16 & 255) < 224) {
     if (($$pre - $frm_nxt$150 | 0) < 2) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $28 = HEAPU8[$frm_nxt$150 + 1 >> 0] | 0;
     if (($28 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$150 + 2 | 0;
     $nchar16_t$1 = $nchar16_t$049;
     break;
    }
    if (($16 & 255) < 240) {
     $38 = $frm_nxt$150;
     if (($$pre - $38 | 0) < 3) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $42 = HEAP8[$frm_nxt$150 + 1 >> 0] | 0;
     $44 = HEAP8[$frm_nxt$150 + 2 >> 0] | 0;
     switch ($17 | 0) {
     case 224:
      {
       if (($42 & -32) << 24 >> 24 != -96) {
        $$lcssa85 = $38;
        label = 20;
        break L8;
       }
       break;
      }
     case 237:
      {
       if (($42 & -32) << 24 >> 24 != -128) {
        $$lcssa84 = $38;
        label = 22;
        break L8;
       }
       break;
      }
     default:
      if (($42 & -64) << 24 >> 24 != -128) {
       $$lcssa86 = $38;
       label = 24;
       break L8;
      }
     }
     $57 = $44 & 255;
     if (($57 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$150 + 3 | 0;
     $nchar16_t$1 = $nchar16_t$049;
     break;
    }
    if (($16 & 255) >= 245) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $71 = $frm_nxt$150;
    if (($mx - $nchar16_t$049 | 0) >>> 0 < 2 | ($$pre - $71 | 0) < 4) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $77 = HEAP8[$frm_nxt$150 + 1 >> 0] | 0;
    $79 = HEAP8[$frm_nxt$150 + 2 >> 0] | 0;
    $81 = HEAP8[$frm_nxt$150 + 3 >> 0] | 0;
    switch ($17 | 0) {
    case 240:
     {
      if (($77 + 112 & 255) >= 48) {
       $$lcssa82 = $71;
       label = 32;
       break L8;
      }
      break;
     }
    case 244:
     {
      if (($77 & -16) << 24 >> 24 != -128) {
       $$lcssa = $71;
       label = 34;
       break L8;
      }
      break;
     }
    default:
     if (($77 & -64) << 24 >> 24 != -128) {
      $$lcssa83 = $71;
      label = 36;
      break L8;
     }
    }
    $93 = $79 & 255;
    if (($93 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $96 = $81 & 255;
    if (($96 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    if ((($77 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $93 << 6 & 4032 | $96 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$150 + 4 | 0;
    $nchar16_t$1 = $nchar16_t$049 + 1 | 0;
   } while (0);
   $nchar16_t$049 = $nchar16_t$1 + 1 | 0;
   if (!($nchar16_t$049 >>> 0 < $mx >>> 0 & $frm_nxt$2 >>> 0 < $frm_end >>> 0)) {
    $frm_nxt$1$lcssa = $frm_nxt$2;
    label = 42;
    break L7;
   } else $frm_nxt$150 = $frm_nxt$2;
  }
  if ((label | 0) == 20) {
   $$0 = $$lcssa85 - $frm | 0;
   break;
  } else if ((label | 0) == 22) {
   $$0 = $$lcssa84 - $frm | 0;
   break;
  } else if ((label | 0) == 24) {
   $$0 = $$lcssa86 - $frm | 0;
   break;
  } else if ((label | 0) == 32) {
   $$0 = $$lcssa82 - $frm | 0;
   break;
  } else if ((label | 0) == 34) {
   $$0 = $$lcssa - $frm | 0;
   break;
  } else if ((label | 0) == 36) {
   $$0 = $$lcssa83 - $frm | 0;
   break;
  }
 } else {
  $frm_nxt$1$lcssa = $frm_nxt$1$ph;
  label = 42;
 } while (0);
 if ((label | 0) == 42) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZN15google_breakpad6ModuleD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i14 = 0, $$0$i$i$i15 = 0, $$0$i$i20 = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i17 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $38 = 0, $40 = 0, $43 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $6 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $69 = 0, $70 = 0, $74 = 0, $76 = 0, $79 = 0, $84 = 0, $86 = 0, $87 = 0, $9 = 0, $98 = 0;
 $0 = $this + 56 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 60 | 0;
 if (($1 | 0) != ($2 | 0)) {
  $5 = $1;
  while (1) {
   $6 = HEAP32[$5 + 20 >> 2] | 0;
   if ($6) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZdlPv($6);
   }
   $9 = HEAP32[$5 + 4 >> 2] | 0;
   if (!$9) {
    $$01$i$i$i = $5;
    while (1) {
     $14 = HEAP32[$$01$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$14 >> 2] | 0) == ($$01$i$i$i | 0)) {
      $$0$i$i$i = $14;
      break;
     } else $$01$i$i$i = $14;
    }
   } else {
    $$0$i$i$i$i = $9;
    while (1) {
     $11 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$11) {
      $$0$i$i$i = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $11;
    }
   }
   if (($$0$i$i$i | 0) == ($2 | 0)) break; else $5 = $$0$i$i$i;
  }
 }
 $18 = $this + 68 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = $this + 72 | 0;
 if (($19 | 0) != ($20 | 0)) {
  $23 = $19;
  while (1) {
   $24 = HEAP32[$23 + 16 >> 2] | 0;
   if ($24) {
    $27 = HEAP32[$24 + 40 >> 2] | 0;
    $29 = $27;
    if ($27) {
     $30 = $24 + 44 | 0;
     $31 = HEAP32[$30 >> 2] | 0;
     if (($31 | 0) != ($27 | 0)) HEAP32[$30 >> 2] = $31 + (~((($31 + -24 - $29 | 0) >>> 0) / 24 | 0) * 24 | 0);
     __ZdlPv($27);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    __ZdlPv($24);
   }
   $38 = HEAP32[$23 + 4 >> 2] | 0;
   if (!$38) {
    $$01$i$i = $23;
    while (1) {
     $43 = HEAP32[$$01$i$i + 8 >> 2] | 0;
     if ((HEAP32[$43 >> 2] | 0) == ($$01$i$i | 0)) {
      $$0$i$i = $43;
      break;
     } else $$01$i$i = $43;
    }
   } else {
    $$0$i$i$i14 = $38;
    while (1) {
     $40 = HEAP32[$$0$i$i$i14 >> 2] | 0;
     if (!$40) {
      $$0$i$i = $$0$i$i$i14;
      break;
     } else $$0$i$i$i14 = $40;
    }
   }
   if (($$0$i$i | 0) == ($20 | 0)) break; else $23 = $$0$i$i;
  }
 }
 $47 = $this + 80 | 0;
 $48 = HEAP32[$47 >> 2] | 0;
 $49 = $this + 84 | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 if (($48 | 0) != ($50 | 0)) {
  $53 = $48;
  $98 = $50;
  while (1) {
   $52 = HEAP32[$53 >> 2] | 0;
   if (!$52) $63 = $98; else {
    __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE($52 + 28 | 0, HEAP32[$52 + 32 >> 2] | 0);
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($52 + 16 | 0, HEAP32[$52 + 20 >> 2] | 0);
    __ZdlPv($52);
    $63 = HEAP32[$49 >> 2] | 0;
   }
   $53 = $53 + 4 | 0;
   if (($53 | 0) == ($63 | 0)) break; else $98 = $63;
  }
 }
 $64 = $this + 92 | 0;
 $65 = HEAP32[$64 >> 2] | 0;
 $66 = $this + 96 | 0;
 if (($65 | 0) != ($66 | 0)) {
  $69 = $65;
  while (1) {
   $70 = HEAP32[$69 + 16 >> 2] | 0;
   if ($70) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70 + 8 | 0);
    __ZdlPv($70);
   }
   $74 = HEAP32[$69 + 4 >> 2] | 0;
   if (!$74) {
    $$01$i$i17 = $69;
    while (1) {
     $79 = HEAP32[$$01$i$i17 + 8 >> 2] | 0;
     if ((HEAP32[$79 >> 2] | 0) == ($$01$i$i17 | 0)) {
      $$0$i$i20 = $79;
      break;
     } else $$01$i$i17 = $79;
    }
   } else {
    $$0$i$i$i15 = $74;
    while (1) {
     $76 = HEAP32[$$0$i$i$i15 >> 2] | 0;
     if (!$76) {
      $$0$i$i20 = $$0$i$i$i15;
      break;
     } else $$0$i$i$i15 = $76;
    }
   }
   if (($$0$i$i20 | 0) == ($66 | 0)) break; else $69 = $$0$i$i20;
  }
 }
 __ZNSt3__16__treeIPN15google_breakpad6Module6ExternENS2_13ExternCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($64, HEAP32[$66 >> 2] | 0);
 $84 = HEAP32[$47 >> 2] | 0;
 $86 = $84;
 if ($84) {
  $87 = HEAP32[$49 >> 2] | 0;
  if (($87 | 0) != ($84 | 0)) HEAP32[$49 >> 2] = $87 + (~(($87 + -4 - $86 | 0) >>> 2) << 2);
  __ZdlPv($84);
 }
 __ZNSt3__16__treeIPN15google_breakpad6Module8FunctionENS2_15FunctionCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($18, HEAP32[$20 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE($0, HEAP32[$2 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 36 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 return;
}

function __ZN15google_breakpad17DwarfLineToModule10DefineFileERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEijyy($this, $name, $file_num, $dir_num, $0, $1, $2, $3) {
 $this = $this | 0;
 $name = $name | 0;
 $file_num = $file_num | 0;
 $dir_num = $dir_num | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i12$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph7$i$i$i = 0, $$01$ph6$i$i$i = 0, $$014$i$i$i = 0, $$014$i$i$i$lcssa = 0, $$02 = 0, $$lcssa = 0, $$lcssa38 = 0, $11 = 0, $12 = 0, $28 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $46 = 0, $47 = 0, $5 = 0, $53 = 0, $58 = 0, $6 = 0, $60 = 0, $65 = 0, $66 = 0, $69 = 0, $7 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa36 = 0, $__nd$0$i$i$lcssa37 = 0, $__parent$i = 0, $__r$0$i = 0, $dir_name = 0, $full_name = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__parent$i = sp + 24 | 0;
 $dir_name = sp + 12 | 0;
 $full_name = sp;
 $5 = $this + 48 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($file_num | 0) == -1) {
  $7 = $6 + 1 | 0;
  HEAP32[$5 >> 2] = $7;
  $$02 = $7;
 } else if (($6 | 0) < ($file_num | 0)) {
  HEAP32[$5 >> 2] = $file_num;
  $$02 = $file_num;
 } else $$02 = $file_num;
 HEAP32[$dir_name >> 2] = 0;
 HEAP32[$dir_name + 4 >> 2] = 0;
 HEAP32[$dir_name + 8 >> 2] = 0;
 do if (!$dir_num) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($dir_name, $this + 8 | 0) | 0; else {
  $11 = $this + 28 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if ($12) {
   $$0$ph7$i$i$i = $11;
   $$01$ph6$i$i$i = $12;
   L10 : while (1) {
    $$014$i$i$i = $$01$ph6$i$i$i;
    while (1) {
     if ((HEAP32[$$014$i$i$i + 16 >> 2] | 0) >>> 0 >= $dir_num >>> 0) {
      $$014$i$i$i$lcssa = $$014$i$i$i;
      break;
     }
     $$014$i$i$i = HEAP32[$$014$i$i$i + 4 >> 2] | 0;
     if (!$$014$i$i$i) {
      $$0$ph$lcssa$i$i$i = $$0$ph7$i$i$i;
      break L10;
     }
    }
    $$01$ph6$i$i$i = HEAP32[$$014$i$i$i$lcssa >> 2] | 0;
    if (!$$01$ph6$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$014$i$i$i$lcssa;
     break;
    } else $$0$ph7$i$i$i = $$014$i$i$i$lcssa;
   }
   if (($$0$ph$lcssa$i$i$i | 0) != ($11 | 0)) if (!(($$0$ph$lcssa$i$i$i | 0) == ($11 | 0) ? 1 : (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 > $dir_num >>> 0)) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($dir_name, $$0$ph$lcssa$i$i$i + 20 | 0) | 0;
    break;
   }
  }
  $28 = $this + 65 | 0;
  if (!(HEAP8[$28 >> 0] | 0)) {
   _fwrite(16278, 70, 1, HEAP32[_stderr >> 2] | 0) | 0;
   HEAP8[$28 >> 0] = 1;
  }
 } while (0);
 __ZL10ExpandPathRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_($full_name, $name, $dir_name);
 $34 = __ZN15google_breakpad6Module8FindFileERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(HEAP32[$this + 4 >> 2] | 0, $full_name) | 0;
 $35 = $this + 36 | 0;
 $36 = $this + 40 | 0;
 $37 = HEAP32[$36 >> 2] | 0;
 do if (!$37) {
  HEAP32[$__parent$i >> 2] = $36;
  $$0$i12$i = $36;
  $58 = $36;
 } else {
  $__nd$0$i$i = $37;
  while (1) {
   $40 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
   if ($$02 >>> 0 < $40 >>> 0) {
    $42 = HEAP32[$__nd$0$i$i >> 2] | 0;
    if (!$42) {
     $$lcssa38 = $__nd$0$i$i;
     $__nd$0$i$i$lcssa37 = $__nd$0$i$i;
     label = 20;
     break;
    } else $__nd$0$be$in$i$i = $42;
   } else {
    if ($40 >>> 0 >= $$02 >>> 0) {
     $__nd$0$i$i$lcssa = $__nd$0$i$i;
     label = 26;
     break;
    }
    $46 = $__nd$0$i$i + 4 | 0;
    $47 = HEAP32[$46 >> 2] | 0;
    if (!$47) {
     $$lcssa = $46;
     $__nd$0$i$i$lcssa36 = $__nd$0$i$i;
     label = 24;
     break;
    } else $__nd$0$be$in$i$i = $47;
   }
   $__nd$0$i$i = $__nd$0$be$in$i$i;
  }
  if ((label | 0) == 20) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa37;
   $$0$i12$i = $$lcssa38;
   $58 = $__nd$0$i$i$lcssa37;
   break;
  } else if ((label | 0) == 24) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa36;
   $$0$i12$i = $$lcssa;
   $58 = $__nd$0$i$i$lcssa36;
   break;
  } else if ((label | 0) == 26) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
   if (!$__nd$0$i$i$lcssa) {
    $$0$i12$i = $__parent$i;
    $58 = $__nd$0$i$i$lcssa;
    break;
   } else $__r$0$i = $__nd$0$i$i$lcssa;
   $69 = $__r$0$i + 20 | 0;
   HEAP32[$69 >> 2] = $34;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($full_name);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir_name);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $53 = __Znwj(24) | 0;
 HEAP32[$53 + 16 >> 2] = $$02;
 HEAP32[$53 + 20 >> 2] = 0;
 HEAP32[$53 >> 2] = 0;
 HEAP32[$53 + 4 >> 2] = 0;
 HEAP32[$53 + 8 >> 2] = $58;
 HEAP32[$$0$i12$i >> 2] = $53;
 $60 = HEAP32[HEAP32[$35 >> 2] >> 2] | 0;
 if (!$60) $65 = $53; else {
  HEAP32[$35 >> 2] = $60;
  $65 = HEAP32[$$0$i12$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 40 >> 2] | 0, $65);
 $66 = $this + 44 | 0;
 HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 1;
 $__r$0$i = $53;
 $69 = $__r$0$i + 20 | 0;
 HEAP32[$69 >> 2] = $34;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($full_name);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir_name);
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo7RuleMapaSERKS1_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i1 = 0, $$0$i12$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa27 = 0, $0 = 0, $10 = 0, $11 = 0, $17 = 0, $19 = 0, $22 = 0, $27 = 0, $28 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $58 = 0, $59 = 0, $6 = 0, $64 = 0, $7 = 0, $70 = 0, $72 = 0, $76 = 0, $81 = 0, $83 = 0, $86 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa25 = 0, $__nd$0$i$i$lcssa26 = 0, $__parent$i = 0, $__r$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i = sp;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0);
 HEAP32[$this >> 2] = 0;
 $5 = $this + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $this + 8 | 0;
 if (($6 | 0) != ($7 | 0)) {
  $10 = $6;
  while (1) {
   $11 = HEAP32[$10 + 20 >> 2] | 0;
   if ($11) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$11 >> 2] | 0) + 4 >> 2] & 255]($11);
   $17 = HEAP32[$10 + 4 >> 2] | 0;
   if (!$17) {
    $$01$i$i$i$i$i = $10;
    while (1) {
     $22 = HEAP32[$$01$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$22 >> 2] | 0) == ($$01$i$i$i$i$i | 0)) {
      $$0$i$i$i$i$i = $22;
      break;
     } else $$01$i$i$i$i$i = $22;
    }
   } else {
    $$0$i$i$i$i$i$i = $17;
    while (1) {
     $19 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$19) {
      $$0$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $19;
    }
   }
   if (($$0$i$i$i$i$i | 0) == ($7 | 0)) break; else $10 = $$0$i$i$i$i$i;
  }
 }
 __ZNSt3__16__treeINS_12__value_typeIiPN12dwarf2reader13CallFrameInfo4RuleEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($5, HEAP32[$7 >> 2] | 0);
 $27 = $this + 12 | 0;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$5 >> 2] = $7;
 HEAP32[$7 >> 2] = 0;
 $28 = HEAP32[$rhs >> 2] | 0;
 if ($28) HEAP32[$this >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 16 >> 2] & 127]($28) | 0;
 $35 = HEAP32[$rhs + 4 >> 2] | 0;
 $36 = $rhs + 8 | 0;
 if (($35 | 0) == ($36 | 0)) {
  STACKTOP = sp;
  return $this | 0;
 }
 $38 = $7;
 $39 = $this + 8 | 0;
 $41 = $35;
 while (1) {
  $42 = HEAP32[$41 + 20 >> 2] | 0;
  $46 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$42 >> 2] | 0) + 16 >> 2] & 127]($42) | 0;
  $47 = $41 + 16 | 0;
  $48 = HEAP32[$7 >> 2] | 0;
  do if (!$48) {
   HEAP32[$__parent$i >> 2] = $7;
   $$0$i12$i = $7;
   $70 = $38;
   label = 27;
  } else {
   $50 = HEAP32[$47 >> 2] | 0;
   $__nd$0$i$i = $48;
   while (1) {
    $52 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
    if (($50 | 0) < ($52 | 0)) {
     $54 = HEAP32[$__nd$0$i$i >> 2] | 0;
     if (!$54) {
      $$lcssa27 = $__nd$0$i$i;
      $__nd$0$i$i$lcssa26 = $__nd$0$i$i;
      label = 20;
      break;
     } else $__nd$0$be$in$i$i = $54;
    } else {
     if (($52 | 0) >= ($50 | 0)) {
      $__nd$0$i$i$lcssa = $__nd$0$i$i;
      label = 26;
      break;
     }
     $58 = $__nd$0$i$i + 4 | 0;
     $59 = HEAP32[$58 >> 2] | 0;
     if (!$59) {
      $$lcssa = $58;
      $__nd$0$i$i$lcssa25 = $__nd$0$i$i;
      label = 24;
      break;
     } else $__nd$0$be$in$i$i = $59;
    }
    $__nd$0$i$i = $__nd$0$be$in$i$i;
   }
   if ((label | 0) == 20) {
    label = 0;
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa26;
    $$0$i12$i = $$lcssa27;
    $70 = $__nd$0$i$i$lcssa26;
    label = 27;
    break;
   } else if ((label | 0) == 24) {
    label = 0;
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa25;
    $$0$i12$i = $$lcssa;
    $70 = $__nd$0$i$i$lcssa25;
    label = 27;
    break;
   } else if ((label | 0) == 26) {
    label = 0;
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
    if (!$__nd$0$i$i$lcssa) {
     $$0$i12$i = $__parent$i;
     $70 = $__nd$0$i$i$lcssa;
     label = 27;
     break;
    } else {
     $__r$0$i = $__nd$0$i$i$lcssa;
     break;
    }
   }
  } while (0);
  if ((label | 0) == 27) {
   label = 0;
   $64 = __Znwj(24) | 0;
   HEAP32[$64 + 16 >> 2] = HEAP32[$47 >> 2];
   HEAP32[$64 + 20 >> 2] = 0;
   HEAP32[$64 >> 2] = 0;
   HEAP32[$64 + 4 >> 2] = 0;
   HEAP32[$64 + 8 >> 2] = $70;
   HEAP32[$$0$i12$i >> 2] = $64;
   $72 = HEAP32[HEAP32[$5 >> 2] >> 2] | 0;
   if (!$72) $76 = $64; else {
    HEAP32[$5 >> 2] = $72;
    $76 = HEAP32[$$0$i12$i >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$39 >> 2] | 0, $76);
   HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 1;
   $__r$0$i = $64;
  }
  HEAP32[$__r$0$i + 20 >> 2] = $46;
  $81 = HEAP32[$41 + 4 >> 2] | 0;
  if (!$81) {
   $$01$i$i$i$i = $41;
   while (1) {
    $86 = HEAP32[$$01$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$86 >> 2] | 0) == ($$01$i$i$i$i | 0)) {
     $$0$i$i$i$i = $86;
     break;
    } else $$01$i$i$i$i = $86;
   }
  } else {
   $$0$i$i$i$i$i1 = $81;
   while (1) {
    $83 = HEAP32[$$0$i$i$i$i$i1 >> 2] | 0;
    if (!$83) {
     $$0$i$i$i$i = $$0$i$i$i$i$i1;
     break;
    } else $$0$i$i$i$i$i1 = $83;
   }
  }
  if (($$0$i$i$i$i | 0) == ($36 | 0)) break; else $41 = $$0$i$i$i$i;
 }
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $75 = 0, $77 = 0, $79 = 0, $91 = 0, $94 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 L7 : do if (($mx | 0) != 0 & $frm_nxt$1$ph >>> 0 < $frm_end >>> 0) {
  $frm_nxt$148 = $frm_nxt$1$ph;
  $nchar32_t$047 = 0;
  L8 : while (1) {
   $16 = HEAP8[$frm_nxt$148 >> 0] | 0;
   $17 = $16 & 255;
   do if ($16 << 24 >> 24 > -1) {
    if ($17 >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$148 + 1 | 0;
   } else {
    if (($16 & 255) < 194) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    if (($16 & 255) < 224) {
     if (($$pre - $frm_nxt$148 | 0) < 2) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $28 = HEAPU8[$frm_nxt$148 + 1 >> 0] | 0;
     if (($28 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$148 + 2 | 0;
     break;
    }
    if (($16 & 255) < 240) {
     $38 = $frm_nxt$148;
     if (($$pre - $38 | 0) < 3) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $42 = HEAP8[$frm_nxt$148 + 1 >> 0] | 0;
     $44 = HEAP8[$frm_nxt$148 + 2 >> 0] | 0;
     switch ($17 | 0) {
     case 224:
      {
       if (($42 & -32) << 24 >> 24 != -96) {
        $$lcssa83 = $38;
        label = 20;
        break L8;
       }
       break;
      }
     case 237:
      {
       if (($42 & -32) << 24 >> 24 != -128) {
        $$lcssa82 = $38;
        label = 22;
        break L8;
       }
       break;
      }
     default:
      if (($42 & -64) << 24 >> 24 != -128) {
       $$lcssa84 = $38;
       label = 24;
       break L8;
      }
     }
     $57 = $44 & 255;
     if (($57 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$148 + 3 | 0;
     break;
    }
    if (($16 & 255) >= 245) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $71 = $frm_nxt$148;
    if (($$pre - $71 | 0) < 4) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $75 = HEAP8[$frm_nxt$148 + 1 >> 0] | 0;
    $77 = HEAP8[$frm_nxt$148 + 2 >> 0] | 0;
    $79 = HEAP8[$frm_nxt$148 + 3 >> 0] | 0;
    switch ($17 | 0) {
    case 240:
     {
      if (($75 + 112 & 255) >= 48) {
       $$lcssa80 = $71;
       label = 32;
       break L8;
      }
      break;
     }
    case 244:
     {
      if (($75 & -16) << 24 >> 24 != -128) {
       $$lcssa = $71;
       label = 34;
       break L8;
      }
      break;
     }
    default:
     if (($75 & -64) << 24 >> 24 != -128) {
      $$lcssa81 = $71;
      label = 36;
      break L8;
     }
    }
    $91 = $77 & 255;
    if (($91 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $94 = $79 & 255;
    if (($94 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    if ((($75 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $91 << 6 & 4032 | $94 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$148 + 4 | 0;
   } while (0);
   $nchar32_t$047 = $nchar32_t$047 + 1 | 0;
   if (!($nchar32_t$047 >>> 0 < $mx >>> 0 & $frm_nxt$2 >>> 0 < $frm_end >>> 0)) {
    $frm_nxt$1$lcssa = $frm_nxt$2;
    label = 42;
    break L7;
   } else $frm_nxt$148 = $frm_nxt$2;
  }
  if ((label | 0) == 20) {
   $$0 = $$lcssa83 - $frm | 0;
   break;
  } else if ((label | 0) == 22) {
   $$0 = $$lcssa82 - $frm | 0;
   break;
  } else if ((label | 0) == 24) {
   $$0 = $$lcssa84 - $frm | 0;
   break;
  } else if ((label | 0) == 32) {
   $$0 = $$lcssa80 - $frm | 0;
   break;
  } else if ((label | 0) == 34) {
   $$0 = $$lcssa - $frm | 0;
   break;
  } else if ((label | 0) == 36) {
   $$0 = $$lcssa81 - $frm | 0;
   break;
  }
 } else {
  $frm_nxt$1$lcssa = $frm_nxt$1$ph;
  label = 42;
 } while (0);
 if ((label | 0) == 42) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZN15google_breakpad6Module8FindFileERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $$0$ph$lcssa$i$i$i = 0, $$0$ph7$i$i$i = 0, $$01$ph6$i$i$i = 0, $$014$i$i$i = 0, $$014$i$i$i$lcssa = 0, $$byval_copy = 0, $0 = 0, $1 = 0, $100 = 0, $104 = 0, $109 = 0, $110 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $28 = 0, $3 = 0, $35 = 0, $4 = 0, $45 = 0, $48 = 0, $49 = 0, $51 = 0, $56 = 0, $57 = 0, $59 = 0, $69 = 0, $7 = 0, $73 = 0, $83 = 0, $85 = 0, $86 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, $__lhs_sz$05$i$i = 0, $__lp$03$i$i = 0, $__parent$i$i = 0, $__r$0$i$i = 0, $__rp$04$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $__parent$i$i = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = $this + 56 | 0;
 $3 = $this + 60 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 L1 : do if (!$4) $90 = $3; else {
  $7 = HEAP8[$name >> 0] | 0;
  $9 = ($7 & 1) == 0;
  $14 = $9 ? ($7 & 255) >>> 1 : HEAP32[$name + 4 >> 2] | 0;
  $18 = $9 ? $name + 1 | 0 : HEAP32[$name + 8 >> 2] | 0;
  $$0$ph7$i$i$i = $3;
  $$01$ph6$i$i$i = $4;
  L4 : while (1) {
   $$014$i$i$i = $$01$ph6$i$i$i;
   while (1) {
    $20 = HEAP32[$$014$i$i$i + 16 >> 2] | 0;
    $21 = HEAP8[$20 >> 0] | 0;
    $23 = ($21 & 1) == 0;
    $28 = $23 ? ($21 & 255) >>> 1 : HEAP32[$20 + 4 >> 2] | 0;
    $35 = _memcmp($23 ? $20 + 1 | 0 : HEAP32[$20 + 8 >> 2] | 0, $18, $14 >>> 0 < $28 >>> 0 ? $14 : $28) | 0;
    if (((($35 | 0) == 0 ? ($28 >>> 0 < $14 >>> 0 ? -2147483648 : 0) : $35) | 0) >= 0) {
     $$014$i$i$i$lcssa = $$014$i$i$i;
     break;
    }
    $$014$i$i$i = HEAP32[$$014$i$i$i + 4 >> 2] | 0;
    if (!$$014$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$0$ph7$i$i$i;
     break L4;
    }
   }
   $$01$ph6$i$i$i = HEAP32[$$014$i$i$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i$i$i) {
    $$0$ph$lcssa$i$i$i = $$014$i$i$i$lcssa;
    break;
   } else $$0$ph7$i$i$i = $$014$i$i$i$lcssa;
  }
  $45 = $$0$ph$lcssa$i$i$i;
  if (($$0$ph$lcssa$i$i$i | 0) == ($3 | 0)) $90 = $45; else {
   $48 = HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0;
   $49 = HEAP8[$48 >> 0] | 0;
   $51 = ($49 & 1) == 0;
   $56 = $51 ? ($49 & 255) >>> 1 : HEAP32[$48 + 4 >> 2] | 0;
   $57 = HEAP8[$name >> 0] | 0;
   $59 = ($57 & 1) == 0;
   if (($56 | 0) == (($59 ? ($57 & 255) >>> 1 : HEAP32[$name + 4 >> 2] | 0) | 0)) {
    $69 = $51 ? $48 + 1 | 0 : HEAP32[$48 + 8 >> 2] | 0;
    $73 = $59 ? $name + 1 | 0 : HEAP32[$name + 8 >> 2] | 0;
    if (!$51) {
     if (!(_memcmp($69, $73, $56) | 0)) $115 = $45; else {
      $90 = $45;
      break;
     }
     $114 = $115;
     $116 = $114 + 20 | 0;
     $117 = HEAP32[$116 >> 2] | 0;
     STACKTOP = sp;
     return $117 | 0;
    }
    if (!$56) {
     $115 = $45;
     $114 = $115;
     $116 = $114 + 20 | 0;
     $117 = HEAP32[$116 >> 2] | 0;
     STACKTOP = sp;
     return $117 | 0;
    } else {
     $__lhs_sz$05$i$i = $56;
     $__lp$03$i$i = $69;
     $__rp$04$i$i = $73;
    }
    while (1) {
     if ((HEAP8[$__lp$03$i$i >> 0] | 0) != (HEAP8[$__rp$04$i$i >> 0] | 0)) {
      $90 = $45;
      break L1;
     }
     $__lhs_sz$05$i$i = $__lhs_sz$05$i$i + -1 | 0;
     if (!$__lhs_sz$05$i$i) {
      $115 = $45;
      break;
     } else {
      $__lp$03$i$i = $__lp$03$i$i + 1 | 0;
      $__rp$04$i$i = $__rp$04$i$i + 1 | 0;
     }
    }
    $114 = $115;
    $116 = $114 + 20 | 0;
    $117 = HEAP32[$116 >> 2] | 0;
    STACKTOP = sp;
    return $117 | 0;
   } else $90 = $45;
  }
 } while (0);
 $83 = __Znwj(16) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($83, $name);
 $85 = $83;
 HEAP32[$83 + 12 >> 2] = -1;
 $86 = $1;
 HEAP32[$86 >> 2] = $85;
 HEAP32[$86 + 4 >> 2] = $85;
 HEAP32[$0 >> 2] = $90;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $91 = __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE12__find_equalISE_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_SM_EEiEESP_RKT_($2, $$byval_copy, $__parent$i$i, $1) | 0;
 $92 = HEAP32[$91 >> 2] | 0;
 if (!$92) {
  $94 = __Znwj(24) | 0;
  $96 = $94 + 16 | 0;
  HEAP32[$96 >> 2] = $85;
  HEAP32[$96 + 4 >> 2] = $85;
  $100 = HEAP32[$__parent$i$i >> 2] | 0;
  HEAP32[$94 >> 2] = 0;
  HEAP32[$94 + 4 >> 2] = 0;
  HEAP32[$94 + 8 >> 2] = $100;
  HEAP32[$91 >> 2] = $94;
  $104 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
  if (!$104) $109 = $94; else {
   HEAP32[$2 >> 2] = $104;
   $109 = HEAP32[$91 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 60 >> 2] | 0, $109);
  $110 = $this + 64 | 0;
  HEAP32[$110 >> 2] = (HEAP32[$110 >> 2] | 0) + 1;
  $__r$0$i$i = $94;
 } else $__r$0$i$i = $92;
 $115 = $__r$0$i$i;
 $114 = $115;
 $116 = $114 + 20 | 0;
 $117 = HEAP32[$116 >> 2] | 0;
 STACKTOP = sp;
 return $117 | 0;
}

function __ZN15google_breakpad17DwarfLineToModule7AddLineEyyjjj($this, $0, $1, $2, $3, $file_num, $line_num, $column_num) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $file_num = $file_num | 0;
 $line_num = $line_num | 0;
 $column_num = $column_num | 0;
 var $$0$i12$i = 0, $$lcssa = 0, $$lcssa18 = 0, $$pre = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $30 = 0, $32 = 0, $36 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $51 = 0, $52 = 0, $58 = 0, $63 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $75 = 0, $77 = 0, $8 = 0, $81 = 0, $86 = 0, $93 = 0, $94 = 0, $95 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa16 = 0, $__nd$0$i$i$lcssa17 = 0, $__parent$i = 0, $__r$0$i = 0, $line = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__parent$i = sp + 24 | 0;
 $line = sp;
 if (($2 | 0) == 0 & ($3 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $7 = _i64Add($2 | 0, $3 | 0, $0 | 0, $1 | 0) | 0;
 $8 = tempRet0;
 $13 = $8 >>> 0 < $1 >>> 0 | ($8 | 0) == ($1 | 0) & $7 >>> 0 < $0 >>> 0;
 $14 = _i64Subtract(0, 0, $0 | 0, $1 | 0) | 0;
 $16 = $13 ? $14 : $2;
 $17 = $13 ? tempRet0 : $3;
 $$pre = $this + 56 | 0;
 if (!(($0 | 0) == 0 & ($1 | 0) == 0)) {
  $21 = $$pre;
  if (!((HEAP32[$21 >> 2] | 0) == ($0 | 0) ? (HEAP32[$21 + 4 >> 2] | 0) == ($1 | 0) : 0)) {
   $36 = $$pre;
   HEAP32[$36 >> 2] = 0;
   HEAP32[$36 + 4 >> 2] = 0;
   $40 = $this + 36 | 0;
   $41 = $this + 40 | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   do if (!$42) {
    HEAP32[$__parent$i >> 2] = $41;
    $$0$i12$i = $41;
    $63 = $41;
    label = 15;
   } else {
    $__nd$0$i$i = $42;
    while (1) {
     $45 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
     if ($45 >>> 0 > $file_num >>> 0) {
      $47 = HEAP32[$__nd$0$i$i >> 2] | 0;
      if (!$47) {
       $$lcssa18 = $__nd$0$i$i;
       $__nd$0$i$i$lcssa17 = $__nd$0$i$i;
       label = 8;
       break;
      } else $__nd$0$be$in$i$i = $47;
     } else {
      if ($45 >>> 0 >= $file_num >>> 0) {
       $__nd$0$i$i$lcssa = $__nd$0$i$i;
       label = 14;
       break;
      }
      $51 = $__nd$0$i$i + 4 | 0;
      $52 = HEAP32[$51 >> 2] | 0;
      if (!$52) {
       $$lcssa = $51;
       $__nd$0$i$i$lcssa16 = $__nd$0$i$i;
       label = 12;
       break;
      } else $__nd$0$be$in$i$i = $52;
     }
     $__nd$0$i$i = $__nd$0$be$in$i$i;
    }
    if ((label | 0) == 8) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa17;
     $$0$i12$i = $$lcssa18;
     $63 = $__nd$0$i$i$lcssa17;
     label = 15;
     break;
    } else if ((label | 0) == 12) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa16;
     $$0$i12$i = $$lcssa;
     $63 = $__nd$0$i$i$lcssa16;
     label = 15;
     break;
    } else if ((label | 0) == 14) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
     if (!$__nd$0$i$i$lcssa) {
      $$0$i12$i = $__parent$i;
      $63 = $__nd$0$i$i$lcssa;
      label = 15;
      break;
     } else {
      $__r$0$i = $__nd$0$i$i$lcssa;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 15) {
    $58 = __Znwj(24) | 0;
    HEAP32[$58 + 16 >> 2] = $file_num;
    HEAP32[$58 + 20 >> 2] = 0;
    HEAP32[$58 >> 2] = 0;
    HEAP32[$58 + 4 >> 2] = 0;
    HEAP32[$58 + 8 >> 2] = $63;
    HEAP32[$$0$i12$i >> 2] = $58;
    $65 = HEAP32[HEAP32[$40 >> 2] >> 2] | 0;
    if (!$65) $70 = $58; else {
     HEAP32[$40 >> 2] = $65;
     $70 = HEAP32[$$0$i12$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 40 >> 2] | 0, $70);
    $71 = $this + 44 | 0;
    HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 1;
    $__r$0$i = $58;
   }
   $75 = HEAP32[$__r$0$i + 20 >> 2] | 0;
   if (!$75) {
    $77 = $this + 64 | 0;
    if (HEAP8[$77 >> 0] | 0) {
     STACKTOP = sp;
     return;
    }
    _fwrite(16349, 65, 1, HEAP32[_stderr >> 2] | 0) | 0;
    HEAP8[$77 >> 0] = 1;
    STACKTOP = sp;
    return;
   }
   $81 = $line;
   HEAP32[$81 >> 2] = $0;
   HEAP32[$81 + 4 >> 2] = $1;
   $86 = $line + 8 | 0;
   HEAP32[$86 >> 2] = $16;
   HEAP32[$86 + 4 >> 2] = $17;
   HEAP32[$line + 16 >> 2] = $75;
   HEAP32[$line + 20 >> 2] = $line_num;
   $93 = HEAP32[$this + 20 >> 2] | 0;
   $94 = $93 + 4 | 0;
   $95 = HEAP32[$94 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$93 + 8 >> 2] | 0)) {
    __ZNSt3__16vectorIN15google_breakpad6Module4LineENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($93, $line);
    STACKTOP = sp;
    return;
   } else {
    HEAP32[$95 >> 2] = HEAP32[$line >> 2];
    HEAP32[$95 + 4 >> 2] = HEAP32[$line + 4 >> 2];
    HEAP32[$95 + 8 >> 2] = HEAP32[$line + 8 >> 2];
    HEAP32[$95 + 12 >> 2] = HEAP32[$line + 12 >> 2];
    HEAP32[$95 + 16 >> 2] = HEAP32[$line + 16 >> 2];
    HEAP32[$95 + 20 >> 2] = HEAP32[$line + 20 >> 2];
    HEAP32[$94 >> 2] = (HEAP32[$94 >> 2] | 0) + 24;
    STACKTOP = sp;
    return;
   }
  }
 }
 $30 = _i64Add($16 | 0, $17 | 0, $0 | 0, $1 | 0) | 0;
 $32 = $$pre;
 HEAP32[$32 >> 2] = $30;
 HEAP32[$32 + 4 >> 2] = tempRet0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$byval_copy = 0, $0 = 0, $104 = 0, $13 = 0, $14 = 0, $17 = 0, $2 = 0, $21 = 0, $27 = 0, $28 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $58 = 0, $68 = 0, $71 = 0, $8 = 0, $83 = 0, $85 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$24 = 0, $__neg = 0, $__w$03 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 $$byval_copy = sp + 424 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 12 | 0;
 $__loc = sp + 8 | 0;
 $__neg = sp + 464 | 0;
 $0 = sp + 4 | 0;
 $__nbuf = sp + 468 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 164;
 HEAP32[$__loc >> 2] = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 HEAP8[$__neg >> 0] = 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 $8 = HEAP32[$__iob + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $$byval_copy, $__intl, $__loc, $8, $__err, $__neg, $5, $__wb, $__wn, $__wbuf + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 48 >> 2] & 31]($5, 30364, 30374, $$byval_copy) | 0;
  $13 = HEAP32[$__wn >> 2] | 0;
  $14 = HEAP32[$__wb >> 2] | 0;
  $17 = $13 - $14 | 0;
  if (($17 | 0) > 392) {
   $21 = _malloc(($17 >> 2) + 2 | 0) | 0;
   if (!$21) __ZSt17__throw_bad_allocv(); else {
    $53 = $21;
    $__nc$0 = $21;
   }
  } else {
   $53 = 0;
   $__nc$0 = $__nbuf;
  }
  if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
   HEAP8[$__nc$0 >> 0] = 45;
   $__nc$1 = $__nc$0 + 1 | 0;
  }
  $27 = $$byval_copy + 40 | 0;
  $28 = $$byval_copy;
  if ($14 >>> 0 < $13 >>> 0) {
   $30 = $$byval_copy + 4 | 0;
   $31 = $30 + 4 | 0;
   $32 = $31 + 4 | 0;
   $33 = $32 + 4 | 0;
   $34 = $33 + 4 | 0;
   $35 = $34 + 4 | 0;
   $36 = $35 + 4 | 0;
   $37 = $36 + 4 | 0;
   $38 = $37 + 4 | 0;
   $__nc$24 = $__nc$1;
   $__w$03 = $14;
   while (1) {
    $39 = HEAP32[$__w$03 >> 2] | 0;
    if ((HEAP32[$$byval_copy >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $$byval_copy; else if ((HEAP32[$30 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $30; else if ((HEAP32[$31 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $31; else if ((HEAP32[$32 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $32; else if ((HEAP32[$33 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $33; else if ((HEAP32[$34 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $34; else if ((HEAP32[$35 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $35; else if ((HEAP32[$36 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $36; else if ((HEAP32[$37 >> 2] | 0) == ($39 | 0)) $$0$lcssa$i = $37; else $$0$lcssa$i = (HEAP32[$38 >> 2] | 0) == ($39 | 0) ? $38 : $27;
    HEAP8[$__nc$24 >> 0] = HEAP8[30364 + ($$0$lcssa$i - $28 >> 2) >> 0] | 0;
    $__w$03 = $__w$03 + 4 | 0;
    $50 = $__nc$24 + 1 | 0;
    if ($__w$03 >>> 0 >= (HEAP32[$__wn >> 2] | 0) >>> 0) {
     $__nc$2$lcssa = $50;
     break;
    } else $__nc$24 = $50;
   }
  } else $__nc$2$lcssa = $__nc$1;
  HEAP8[$__nc$2$lcssa >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $__v;
  _sscanf($__nbuf, 30360, $vararg_buffer) | 0;
  if ($53) _free($53);
 }
 $55 = HEAP32[$__b >> 2] | 0;
 do if (!$55) $104 = 1; else {
  $58 = HEAP32[$55 + 12 >> 2] | 0;
  if (($58 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 127]($55) | 0; else $$0$i$i$i$i = HEAP32[$58 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $104 = 1;
   break;
  } else {
   $104 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $68 = HEAP32[$__e >> 2] | 0;
 do if (!$68) label = 28; else {
  $71 = HEAP32[$68 + 12 >> 2] | 0;
  if (($71 | 0) == (HEAP32[$68 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$68 >> 2] | 0) + 36 >> 2] & 127]($68) | 0; else $$0$i$i1$i$i = HEAP32[$71 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 28;
   break;
  } else if ($104) break; else {
   label = 30;
   break;
  }
 } while (0);
 if ((label | 0) == 28) if ($104) label = 30;
 if ((label | 0) == 30) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $83 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 $85 = HEAP32[$__wb >> 2] | 0;
 HEAP32[$__wb >> 2] = 0;
 if ($85) FUNCTION_TABLE_vi[HEAP32[$2 >> 2] & 255]($85);
 STACKTOP = sp;
 return $83 | 0;
}

function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i110 = 0, $$01$i$i6 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $109 = 0, $117 = 0, $18 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $35 = 0, $40 = 0, $41 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $63 = 0, $64 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $93 = 0, $94 = 0, $__dc$07 = 0, $__dc$1 = 0, $__dg$08 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$09 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9600) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 63]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 $8 = $__grouping + 4 | 0;
 if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, $__nb, $__ne, $__ob) | 0;
  $18 = $__nb;
  $20 = $__ob + ($__ne - $18 << 2) | 0;
  HEAP32[$__oe >> 2] = $20;
  $$pre$phiZ2D = $18;
  $117 = $20;
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $21 = HEAP8[$__nb >> 0] | 0;
  switch ($21 << 24 >> 24) {
  case 43:
  case 45:
   {
    $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, $21) | 0;
    $27 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $27 + 4;
    HEAP32[$27 >> 2] = $26;
    $__nf$0 = $__nb + 1 | 0;
    break;
   }
  default:
   $__nf$0 = $__nb;
  }
  L7 : do if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $35 = $__nf$0 + 1 | 0;
   switch (HEAP8[$35 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $__nf$1 = $__nf$0;
     break L7;
    }
   }
   $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, 48) | 0;
   $41 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $41 + 4;
   HEAP32[$41 >> 2] = $40;
   $48 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, HEAP8[$35 >> 0] | 0) | 0;
   $49 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $49 + 4;
   HEAP32[$49 >> 2] = $48;
   $__nf$1 = $__nf$0 + 2 | 0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0; while (0);
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $52 = $__ne + -1 | 0;
   if ($__nf$1 >>> 0 < $52 >>> 0) {
    $$01$i$i110 = $__nf$1;
    $56 = $52;
    do {
     $54 = HEAP8[$$01$i$i110 >> 0] | 0;
     HEAP8[$$01$i$i110 >> 0] = HEAP8[$56 >> 0] | 0;
     HEAP8[$56 >> 0] = $54;
     $$01$i$i110 = $$01$i$i110 + 1 | 0;
     $56 = $56 + -1 | 0;
    } while ($$01$i$i110 >>> 0 < $56 >>> 0);
   }
  }
  $63 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 127]($1) | 0;
  $64 = $__grouping + 8 | 0;
  $65 = $__grouping + 1 | 0;
  if ($__nf$1 >>> 0 < $__ne >>> 0) {
   $__dc$07 = 0;
   $__dg$08 = 0;
   $__p$09 = $__nf$1;
   while (1) {
    $73 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $65 : HEAP32[$64 >> 2] | 0) + $__dg$08 >> 0] | 0;
    if ($73 << 24 >> 24 != 0 & ($__dc$07 | 0) == ($73 << 24 >> 24 | 0)) {
     $77 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $77 + 4;
     HEAP32[$77 >> 2] = $63;
     $79 = HEAP8[$__grouping >> 0] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$08 >>> 0 < ((($79 & 1) == 0 ? ($79 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$08 | 0;
    } else {
     $__dc$1 = $__dc$07;
     $__dg$1 = $__dg$08;
    }
    $93 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] & 31]($0, HEAP8[$__p$09 >> 0] | 0) | 0;
    $94 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $94 + 4;
    HEAP32[$94 >> 2] = $93;
    $__p$09 = $__p$09 + 1 | 0;
    if ($__p$09 >>> 0 >= $__ne >>> 0) break; else {
     $__dc$07 = $__dc$1 + 1 | 0;
     $__dg$08 = $__dg$1;
    }
   }
  }
  $100 = $__nb;
  $102 = $__ob + ($__nf$1 - $100 << 2) | 0;
  $103 = HEAP32[$__oe >> 2] | 0;
  if (($102 | 0) == ($103 | 0)) {
   $$pre$phiZ2D = $100;
   $117 = $102;
  } else {
   $105 = $103 + -4 | 0;
   if ($102 >>> 0 < $105 >>> 0) {
    $$01$i$i6 = $102;
    $109 = $105;
    do {
     $107 = HEAP32[$$01$i$i6 >> 2] | 0;
     HEAP32[$$01$i$i6 >> 2] = HEAP32[$109 >> 2];
     HEAP32[$109 >> 2] = $107;
     $$01$i$i6 = $$01$i$i6 + 4 | 0;
     $109 = $109 + -4 | 0;
    } while ($$01$i$i6 >>> 0 < $109 >>> 0);
    $$pre$phiZ2D = $100;
    $117 = $103;
   } else {
    $$pre$phiZ2D = $100;
    $117 = $103;
   }
  }
 }
 HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $117 : $__ob + ($__np - $$pre$phiZ2D << 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$01$be = 0, $$0153 = 0, $$0153$lcssa = 0, $$02$be = 0, $$0252 = 0, $$0252$lcssa = 0, $$1$lcssa = 0, $$145 = 0, $$145$lcssa = 0, $$145$lcssa73 = 0, $$2 = 0, $$lcssa = 0, $$pre = 0, $14 = 0, $15 = 0, $19 = 0, $26 = 0, $27 = 0, $34 = 0, $35 = 0, $45 = 0, $5 = 0, $51 = 0, $52 = 0, $58 = 0, $6 = 0, $64 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$057 = 0, $fend$1$be = 0, $fend$154 = 0, $fend$2$lcssa = 0, $fend$246 = 0, $save_state = 0, $storemerge44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 L1 : do if (($frm | 0) == ($frm_end | 0)) $fend$0$lcssa = $frm_end; else {
  $fend$057 = $frm;
  while (1) {
   if (!(HEAP8[$fend$057 >> 0] | 0)) {
    $fend$0$lcssa = $fend$057;
    break L1;
   }
   $fend$057 = $fend$057 + 1 | 0;
   if (($fend$057 | 0) == ($frm_end | 0)) {
    $fend$0$lcssa = $frm_end;
    break;
   }
  }
 } while (0);
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $5 = $to_end;
 $6 = $this + 8 | 0;
 L6 : do if (($to | 0) == ($to_end | 0) | ($frm | 0) == ($frm_end | 0)) {
  $64 = $frm;
  label = 29;
 } else {
  $$0153 = $frm;
  $$0252 = $to;
  $fend$154 = $fend$0$lcssa;
  L7 : while (1) {
   $9 = $st;
   $14 = HEAP32[$9 + 4 >> 2] | 0;
   $15 = $save_state;
   HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$15 + 4 >> 2] = $14;
   $19 = $fend$154;
   $26 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
   $27 = _mbsnrtowcs($$0252, $frm_nxt, $19 - $$0153 | 0, $5 - $$0252 >> 2, $st) | 0;
   if ($26) _uselocale($26 | 0) | 0;
   switch ($27 | 0) {
   case 0:
    {
     $$0 = 2;
     break L6;
     break;
    }
   case -1:
    {
     $$0153$lcssa = $$0153;
     $$0252$lcssa = $$0252;
     $$lcssa = $19;
     break L7;
     break;
    }
   default:
    {}
   }
   $45 = (HEAP32[$to_nxt >> 2] | 0) + ($27 << 2) | 0;
   HEAP32[$to_nxt >> 2] = $45;
   if (($45 | 0) == ($to_end | 0)) {
    label = 19;
    break;
   }
   $$pre = HEAP32[$frm_nxt >> 2] | 0;
   if (($fend$154 | 0) == ($frm_end | 0)) {
    $$01$be = $$pre;
    $$02$be = $45;
    $fend$1$be = $frm_end;
   } else {
    $51 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
    $52 = _mbrtowc($45, $$pre, 1, $st) | 0;
    if ($51) _uselocale($51 | 0) | 0;
    if ($52) {
     $$0 = 2;
     break L6;
    }
    HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
    $58 = (HEAP32[$frm_nxt >> 2] | 0) + 1 | 0;
    HEAP32[$frm_nxt >> 2] = $58;
    L20 : do if (($58 | 0) == ($frm_end | 0)) $fend$2$lcssa = $frm_end; else {
     $fend$246 = $58;
     while (1) {
      if (!(HEAP8[$fend$246 >> 0] | 0)) {
       $fend$2$lcssa = $fend$246;
       break L20;
      }
      $fend$246 = $fend$246 + 1 | 0;
      if (($fend$246 | 0) == ($frm_end | 0)) {
       $fend$2$lcssa = $frm_end;
       break;
      }
     }
    } while (0);
    $$01$be = $58;
    $$02$be = HEAP32[$to_nxt >> 2] | 0;
    $fend$1$be = $fend$2$lcssa;
   }
   if (($$02$be | 0) == ($to_end | 0) | ($$01$be | 0) == ($frm_end | 0)) {
    $64 = $$01$be;
    label = 29;
    break L6;
   } else {
    $$0153 = $$01$be;
    $$0252 = $$02$be;
    $fend$154 = $fend$1$be;
   }
  }
  if ((label | 0) == 19) {
   $64 = HEAP32[$frm_nxt >> 2] | 0;
   label = 29;
   break;
  }
  HEAP32[$to_nxt >> 2] = $$0252$lcssa;
  L29 : do if (($$0153$lcssa | 0) == (HEAP32[$frm_nxt >> 2] | 0)) $$1$lcssa = $$0153$lcssa; else {
   $$145 = $$0153$lcssa;
   $storemerge44 = $$0252$lcssa;
   L30 : while (1) {
    $34 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
    $35 = _mbrtowc($storemerge44, $$145, $$lcssa - $$145 | 0, $save_state) | 0;
    if ($34) _uselocale($34 | 0) | 0;
    switch ($35 | 0) {
    case -1:
     {
      $$145$lcssa = $$145;
      label = 13;
      break L30;
      break;
     }
    case -2:
     {
      $$145$lcssa73 = $$145;
      label = 14;
      break L30;
      break;
     }
    case 0:
     {
      $$2 = $$145 + 1 | 0;
      break;
     }
    default:
     $$2 = $$145 + $35 | 0;
    }
    $storemerge44 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
    HEAP32[$to_nxt >> 2] = $storemerge44;
    if (($$2 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
     $$1$lcssa = $$2;
     break L29;
    } else $$145 = $$2;
   }
   if ((label | 0) == 13) {
    HEAP32[$frm_nxt >> 2] = $$145$lcssa;
    $$0 = 2;
    break L6;
   } else if ((label | 0) == 14) {
    HEAP32[$frm_nxt >> 2] = $$145$lcssa73;
    $$0 = 1;
    break L6;
   }
  } while (0);
  HEAP32[$frm_nxt >> 2] = $$1$lcssa;
  $$0 = ($$1$lcssa | 0) != ($frm_end | 0) & 1;
 } while (0);
 if ((label | 0) == 29) $$0 = ($64 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE12__find_equalISE_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_SM_EEiEESP_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $0 = 0, $1 = 0, $101 = 0, $106 = 0, $107 = 0, $109 = 0, $114 = 0, $121 = 0, $14 = 0, $15 = 0, $17 = 0, $22 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $4 = 0, $40 = 0, $43 = 0, $46 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $68 = 0, $7 = 0, $79 = 0, $86 = 0, $87 = 0, $9 = 0, $91 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 $3 = $1;
 if (($1 | 0) != ($0 | 0)) {
  $4 = HEAP32[$__v >> 2] | 0;
  $6 = HEAP32[$1 + 16 >> 2] | 0;
  $7 = HEAP8[$4 >> 0] | 0;
  $9 = ($7 & 1) == 0;
  $14 = $9 ? ($7 & 255) >>> 1 : HEAP32[$4 + 4 >> 2] | 0;
  $15 = HEAP8[$6 >> 0] | 0;
  $17 = ($15 & 1) == 0;
  $22 = $17 ? ($15 & 255) >>> 1 : HEAP32[$6 + 4 >> 2] | 0;
  $26 = $9 ? $4 + 1 | 0 : HEAP32[$4 + 8 >> 2] | 0;
  $30 = $17 ? $6 + 1 | 0 : HEAP32[$6 + 8 >> 2] | 0;
  $31 = $22 >>> 0 < $14 >>> 0;
  $33 = _memcmp($26, $30, $31 ? $22 : $14) | 0;
  $35 = $14 >>> 0 < $22 >>> 0;
  if (((($33 | 0) == 0 ? ($35 ? -2147483648 : 0) : $33) | 0) >= 0) {
   $91 = _memcmp($30, $26, $35 ? $14 : $22) | 0;
   if (((($91 | 0) == 0 ? ($31 ? -2147483648 : 0) : $91) | 0) >= 0) {
    HEAP32[$__parent >> 2] = $3;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $95 = $1 + 4 | 0;
   $96 = HEAP32[$95 >> 2] | 0;
   $97 = ($96 | 0) == 0;
   if ($97) {
    $$01$i$i$i$i$i = $1;
    while (1) {
     $101 = HEAP32[$$01$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$101 >> 2] | 0) == ($$01$i$i$i$i$i | 0)) {
      $$0$i$i$i$i$i = $101;
      break;
     } else $$01$i$i$i$i$i = $101;
    }
   } else {
    $$0$i$i$i$i$i$i = $96;
    while (1) {
     $98 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$98) {
      $$0$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $98;
    }
   }
   if (($$0$i$i$i$i$i | 0) != ($0 | 0)) {
    $106 = HEAP32[$$0$i$i$i$i$i + 16 >> 2] | 0;
    $107 = HEAP8[$106 >> 0] | 0;
    $109 = ($107 & 1) == 0;
    $114 = $109 ? ($107 & 255) >>> 1 : HEAP32[$106 + 4 >> 2] | 0;
    $121 = _memcmp($26, $109 ? $106 + 1 | 0 : HEAP32[$106 + 8 >> 2] | 0, $114 >>> 0 < $14 >>> 0 ? $114 : $14) | 0;
    if (((($121 | 0) == 0 ? ($14 >>> 0 < $114 >>> 0 ? -2147483648 : 0) : $121) | 0) >= 0) {
     $$0 = __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE12__find_equalISE_EERPNS_16__tree_node_baseIPvEESP_RKT_($this, $__parent, $__v) | 0;
     return $$0 | 0;
    }
   }
   if ($97) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $95;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$0$i$i$i$i$i;
    $$0 = $$0$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $87 = $3; else {
  $40 = HEAP32[$1 >> 2] | 0;
  if (!$40) {
   $$01$i$i = $1;
   while (1) {
    $46 = HEAP32[$$01$i$i + 8 >> 2] | 0;
    if ((HEAP32[$46 >> 2] | 0) == ($$01$i$i | 0)) $$01$i$i = $46; else {
     $$0$i$i = $46;
     break;
    }
   }
  } else {
   $$0$i$i$i = $40;
   while (1) {
    $43 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$43) {
     $$0$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $43;
   }
  }
  $51 = HEAP32[$$0$i$i + 16 >> 2] | 0;
  $52 = HEAP32[$__v >> 2] | 0;
  $53 = HEAP8[$51 >> 0] | 0;
  $55 = ($53 & 1) == 0;
  $60 = $55 ? ($53 & 255) >>> 1 : HEAP32[$51 + 4 >> 2] | 0;
  $61 = HEAP8[$52 >> 0] | 0;
  $63 = ($61 & 1) == 0;
  $68 = $63 ? ($61 & 255) >>> 1 : HEAP32[$52 + 4 >> 2] | 0;
  $79 = _memcmp($55 ? $51 + 1 | 0 : HEAP32[$51 + 8 >> 2] | 0, $63 ? $52 + 1 | 0 : HEAP32[$52 + 8 >> 2] | 0, $68 >>> 0 < $60 >>> 0 ? $68 : $60) | 0;
  if (((($79 | 0) == 0 ? ($60 >>> 0 < $68 >>> 0 ? -2147483648 : 0) : $79) | 0) < 0) $87 = $$0$i$i; else {
   $$0 = __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE12__find_equalISE_EERPNS_16__tree_node_baseIPvEESP_RKT_($this, $__parent, $__v) | 0;
   return $$0 | 0;
  }
 }
 if (!(HEAP32[$1 >> 2] | 0)) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  $86 = $87;
  HEAP32[$__parent >> 2] = $86;
  $$0 = $86 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i111 = 0, $$01$i$i7 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $109 = 0, $117 = 0, $18 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $35 = 0, $40 = 0, $41 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $63 = 0, $64 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $93 = 0, $94 = 0, $__dc$08 = 0, $__dc$1 = 0, $__dg$09 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$010 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9592) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 63]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 $8 = $__grouping + 4 | 0;
 if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] & 31]($0, $__nb, $__ne, $__ob) | 0;
  $18 = $__nb;
  $20 = $__ob + ($__ne - $18) | 0;
  HEAP32[$__oe >> 2] = $20;
  $$pre$phiZ2D = $18;
  $117 = $20;
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $21 = HEAP8[$__nb >> 0] | 0;
  switch ($21 << 24 >> 24) {
  case 43:
  case 45:
   {
    $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, $21) | 0;
    $27 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $26;
    $__nf$0 = $__nb + 1 | 0;
    break;
   }
  default:
   $__nf$0 = $__nb;
  }
  L7 : do if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $35 = $__nf$0 + 1 | 0;
   switch (HEAP8[$35 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $__nf$1 = $__nf$0;
     break L7;
    }
   }
   $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, 48) | 0;
   $41 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $41 + 1;
   HEAP8[$41 >> 0] = $40;
   $48 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP8[$35 >> 0] | 0) | 0;
   $49 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $49 + 1;
   HEAP8[$49 >> 0] = $48;
   $__nf$1 = $__nf$0 + 2 | 0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0; while (0);
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $52 = $__ne + -1 | 0;
   if ($__nf$1 >>> 0 < $52 >>> 0) {
    $$01$i$i111 = $__nf$1;
    $56 = $52;
    do {
     $54 = HEAP8[$$01$i$i111 >> 0] | 0;
     HEAP8[$$01$i$i111 >> 0] = HEAP8[$56 >> 0] | 0;
     HEAP8[$56 >> 0] = $54;
     $$01$i$i111 = $$01$i$i111 + 1 | 0;
     $56 = $56 + -1 | 0;
    } while ($$01$i$i111 >>> 0 < $56 >>> 0);
   }
  }
  $63 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 127]($1) | 0;
  $64 = $__grouping + 8 | 0;
  $65 = $__grouping + 1 | 0;
  if ($__nf$1 >>> 0 < $__ne >>> 0) {
   $__dc$08 = 0;
   $__dg$09 = 0;
   $__p$010 = $__nf$1;
   while (1) {
    $73 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $65 : HEAP32[$64 >> 2] | 0) + $__dg$09 >> 0] | 0;
    if ($73 << 24 >> 24 != 0 & ($__dc$08 | 0) == ($73 << 24 >> 24 | 0)) {
     $77 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $77 + 1;
     HEAP8[$77 >> 0] = $63;
     $79 = HEAP8[$__grouping >> 0] | 0;
     $__dc$1 = 0;
     $__dg$1 = ($__dg$09 >>> 0 < ((($79 & 1) == 0 ? ($79 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$09 | 0;
    } else {
     $__dc$1 = $__dc$08;
     $__dg$1 = $__dg$09;
    }
    $93 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP8[$__p$010 >> 0] | 0) | 0;
    $94 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $94 + 1;
    HEAP8[$94 >> 0] = $93;
    $__p$010 = $__p$010 + 1 | 0;
    if ($__p$010 >>> 0 >= $__ne >>> 0) break; else {
     $__dc$08 = $__dc$1 + 1 | 0;
     $__dg$09 = $__dg$1;
    }
   }
  }
  $100 = $__nb;
  $102 = $__ob + ($__nf$1 - $100) | 0;
  $103 = HEAP32[$__oe >> 2] | 0;
  if (($102 | 0) == ($103 | 0)) {
   $$pre$phiZ2D = $100;
   $117 = $102;
  } else {
   $105 = $103 + -1 | 0;
   if ($102 >>> 0 < $105 >>> 0) {
    $$01$i$i7 = $102;
    $109 = $105;
    do {
     $107 = HEAP8[$$01$i$i7 >> 0] | 0;
     HEAP8[$$01$i$i7 >> 0] = HEAP8[$109 >> 0] | 0;
     HEAP8[$109 >> 0] = $107;
     $$01$i$i7 = $$01$i$i7 + 1 | 0;
     $109 = $109 + -1 | 0;
    } while ($$01$i$i7 >>> 0 < $109 >>> 0);
   }
   $$pre$phiZ2D = $100;
   $117 = HEAP32[$__oe >> 2] | 0;
  }
 }
 HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $117 : $__ob + ($__np - $$pre$phiZ2D) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 STACKTOP = sp;
 return;
}

function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$pre = 0, $$pre$phiZ2D = 0, $100 = 0, $104 = 0, $107 = 0, $128 = 0, $134 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0, $3 = 0, $36 = 0, $42 = 0, $51 = 0, $53 = 0, $60 = 0, $69 = 0, $79 = 0, $81 = 0, $83 = 0, $89 = 0, $92 = 0, $98 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) {
  $$pre = $to;
  $$pre$phiZ2D = $frm_end;
 } else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre = HEAP32[$to_nxt >> 2] | 0;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt >> 2] | 0;
 $18 = $17 >>> 0 < $frm_end >>> 0;
 L9 : do if ($18 & $$pre >>> 0 < $to_end >>> 0) {
  $22 = $17;
  $27 = $$pre;
  while (1) {
   $21 = HEAP8[$22 >> 0] | 0;
   $23 = $21 & 255;
   if ($23 >>> 0 > $Maxcode >>> 0) {
    $$0 = 2;
    break L9;
   }
   do if ($21 << 24 >> 24 > -1) {
    HEAP16[$27 >> 1] = $21 & 255;
    HEAP32[$frm_nxt >> 2] = $22 + 1;
   } else {
    if (($21 & 255) < 194) {
     $$0 = 2;
     break L9;
    }
    if (($21 & 255) < 224) {
     if (($$pre$phiZ2D - $22 | 0) < 2) {
      $$0 = 1;
      break L9;
     }
     $36 = HEAPU8[$22 + 1 >> 0] | 0;
     if (($36 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $42 = $36 & 63 | $23 << 6 & 1984;
     if ($42 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP16[$27 >> 1] = $42;
     HEAP32[$frm_nxt >> 2] = $22 + 2;
     break;
    }
    if (($21 & 255) < 240) {
     if (($$pre$phiZ2D - $22 | 0) < 3) {
      $$0 = 1;
      break L9;
     }
     $51 = HEAP8[$22 + 1 >> 0] | 0;
     $53 = HEAP8[$22 + 2 >> 0] | 0;
     switch ($23 | 0) {
     case 224:
      {
       if (($51 & -32) << 24 >> 24 != -96) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     case 237:
      {
       if (($51 & -32) << 24 >> 24 != -128) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     default:
      if (($51 & -64) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
     }
     $60 = $53 & 255;
     if (($60 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $69 = ($51 & 255) << 6 & 4032 | $23 << 12 | $60 & 63;
     if (($69 & 65535) >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP16[$27 >> 1] = $69;
     HEAP32[$frm_nxt >> 2] = $22 + 3;
     break;
    }
    if (($21 & 255) >= 245) {
     $$0 = 2;
     break L9;
    }
    if (($$pre$phiZ2D - $22 | 0) < 4) {
     $$0 = 1;
     break L9;
    }
    $79 = HEAP8[$22 + 1 >> 0] | 0;
    $81 = HEAP8[$22 + 2 >> 0] | 0;
    $83 = HEAP8[$22 + 3 >> 0] | 0;
    switch ($23 | 0) {
    case 240:
     {
      if (($79 + 112 & 255) >= 48) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    case 244:
     {
      if (($79 & -16) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($79 & -64) << 24 >> 24 != -128) {
      $$0 = 2;
      break L9;
     }
    }
    $89 = $81 & 255;
    if (($89 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    $92 = $83 & 255;
    if (($92 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    if (($16 - $27 | 0) < 4) {
     $$0 = 1;
     break L9;
    }
    $98 = $23 & 7;
    $100 = $79 & 255;
    $104 = $89 << 6;
    $107 = $92 & 63;
    if (($100 << 12 & 258048 | $98 << 18 | $104 & 4032 | $107) >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $100 << 2 & 60 | $89 >>> 4 & 3 | (($100 >>> 4 & 3 | $98 << 2) << 6) + 16320 | 55296;
    $128 = $27 + 2 | 0;
    HEAP32[$to_nxt >> 2] = $128;
    HEAP16[$128 >> 1] = $107 | $104 & 960 | 56320;
    HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 4;
   } while (0);
   $27 = (HEAP32[$to_nxt >> 2] | 0) + 2 | 0;
   HEAP32[$to_nxt >> 2] = $27;
   $22 = HEAP32[$frm_nxt >> 2] | 0;
   $134 = $22 >>> 0 < $frm_end >>> 0;
   if (!($134 & $27 >>> 0 < $to_end >>> 0)) {
    $$lcssa = $134;
    label = 39;
    break;
   }
  }
 } else {
  $$lcssa = $18;
  label = 39;
 } while (0);
 if ((label | 0) == 39) $$0 = $$lcssa & 1;
 return $$0 | 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$lcssa$i = 0, $$byval_copy = 0, $0 = 0, $13 = 0, $14 = 0, $17 = 0, $2 = 0, $20 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $65 = 0, $66 = 0, $67 = 0, $8 = 0, $81 = 0, $83 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$25 = 0, $__neg = 0, $__w$04 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 24 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 12 | 0;
 $__loc = sp + 8 | 0;
 $__neg = sp + 134 | 0;
 $0 = sp + 4 | 0;
 $__atoms = sp + 124 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 164;
 HEAP32[$__loc >> 2] = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 HEAP8[$__neg >> 0] = 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 $8 = HEAP32[$__iob + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $$byval_copy, $__intl, $__loc, $8, $__err, $__neg, $5, $__wb, $__wn, $__wbuf + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] & 31]($5, 30349, 30359, $__atoms) | 0;
  $13 = HEAP32[$__wn >> 2] | 0;
  $14 = HEAP32[$__wb >> 2] | 0;
  $17 = $13 - $14 | 0;
  if (($17 | 0) > 98) {
   $20 = _malloc($17 + 2 | 0) | 0;
   if (!$20) __ZSt17__throw_bad_allocv(); else {
    $51 = $20;
    $__nc$0 = $20;
   }
  } else {
   $51 = 0;
   $__nc$0 = $$byval_copy;
  }
  if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
   HEAP8[$__nc$0 >> 0] = 45;
   $__nc$1 = $__nc$0 + 1 | 0;
  }
  $26 = $__atoms + 10 | 0;
  $27 = $__atoms;
  if ($14 >>> 0 < $13 >>> 0) {
   $29 = $__atoms + 1 | 0;
   $30 = $29 + 1 | 0;
   $31 = $30 + 1 | 0;
   $32 = $31 + 1 | 0;
   $33 = $32 + 1 | 0;
   $34 = $33 + 1 | 0;
   $35 = $34 + 1 | 0;
   $36 = $35 + 1 | 0;
   $37 = $36 + 1 | 0;
   $__nc$25 = $__nc$1;
   $__w$04 = $14;
   while (1) {
    $38 = HEAP8[$__w$04 >> 0] | 0;
    if ((HEAP8[$__atoms >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $__atoms; else if ((HEAP8[$29 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $29; else if ((HEAP8[$30 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $30; else if ((HEAP8[$31 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $31; else if ((HEAP8[$32 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $32; else if ((HEAP8[$33 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $33; else if ((HEAP8[$34 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $34; else if ((HEAP8[$35 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $35; else if ((HEAP8[$36 >> 0] | 0) == $38 << 24 >> 24) $$0$lcssa$i = $36; else $$0$lcssa$i = (HEAP8[$37 >> 0] | 0) == $38 << 24 >> 24 ? $37 : $26;
    HEAP8[$__nc$25 >> 0] = HEAP8[30349 + ($$0$lcssa$i - $27) >> 0] | 0;
    $__w$04 = $__w$04 + 1 | 0;
    $48 = $__nc$25 + 1 | 0;
    if ($__w$04 >>> 0 >= (HEAP32[$__wn >> 2] | 0) >>> 0) {
     $__nc$2$lcssa = $48;
     break;
    } else $__nc$25 = $48;
   }
  } else $__nc$2$lcssa = $__nc$1;
  HEAP8[$__nc$2$lcssa >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $__v;
  _sscanf($$byval_copy, 30360, $vararg_buffer) | 0;
  if ($51) _free($51);
 }
 $53 = HEAP32[$__b >> 2] | 0;
 do if (!$53) $66 = 0; else if ((HEAP32[$53 + 12 >> 2] | 0) == (HEAP32[$53 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 127]($53) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $66 = 0;
  break;
 } else {
  $66 = HEAP32[$__b >> 2] | 0;
  break;
 } else $66 = $53; while (0);
 $65 = ($66 | 0) == 0;
 $67 = HEAP32[$__e >> 2] | 0;
 do if (!$67) label = 25; else {
  if ((HEAP32[$67 + 12 >> 2] | 0) == (HEAP32[$67 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$67 >> 2] | 0) + 36 >> 2] & 127]($67) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 25;
   break;
  }
  if (!$65) label = 26;
 } while (0);
 if ((label | 0) == 25) if ($65) label = 26;
 if ((label | 0) == 26) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $81 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 $83 = HEAP32[$__wb >> 2] | 0;
 HEAP32[$__wb >> 2] = 0;
 if ($83) FUNCTION_TABLE_vi[HEAP32[$2 >> 2] & 255]($83);
 STACKTOP = sp;
 return $81 | 0;
}

function __ZNSt3__16locale5__impC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 9428;
 $2 = $this + 8 | 0;
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($2, 28);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this + 144 | 0, 30279, 1);
 $4 = HEAP32[$2 >> 2] | 0;
 $5 = $this + 12 | 0;
 $$pre$i$i$i = HEAP32[$5 >> 2] | 0;
 if (($$pre$i$i$i | 0) != ($4 | 0)) {
  $8 = $$pre$i$i$i;
  while (1) {
   $7 = $8 + -4 | 0;
   if (($7 | 0) == ($4 | 0)) {
    $$lcssa = $7;
    break;
   } else $8 = $7;
  }
  HEAP32[$5 >> 2] = $$lcssa;
 }
 HEAP32[455] = 0;
 HEAP32[454] = 8356;
 __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this, 1816);
 HEAP32[457] = 0;
 HEAP32[456] = 8396;
 __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this, 1824);
 __ZNSt3__15ctypeIcEC2EPKtbj(1832, 0, 0, 1);
 __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this, 1832);
 HEAP32[463] = 0;
 HEAP32[462] = 9716;
 __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this, 1848);
 HEAP32[465] = 0;
 HEAP32[464] = 9784;
 __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this, 1856);
 HEAP32[467] = 0;
 HEAP32[466] = 9536;
 HEAP32[468] = __ZNSt3__16__clocEv() | 0;
 __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this, 1864);
 HEAP32[471] = 0;
 HEAP32[470] = 9832;
 __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this, 1880);
 HEAP32[473] = 0;
 HEAP32[472] = 9880;
 __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this, 1888);
 __ZNSt3__18numpunctIcEC2Ej(1896, 1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this, 1896);
 __ZNSt3__18numpunctIwEC2Ej(1920, 1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this, 1920);
 HEAP32[489] = 0;
 HEAP32[488] = 8436;
 __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, 1952);
 HEAP32[491] = 0;
 HEAP32[490] = 8508;
 __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, 1960);
 HEAP32[493] = 0;
 HEAP32[492] = 8580;
 __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, 1968);
 HEAP32[495] = 0;
 HEAP32[494] = 8640;
 __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, 1976);
 HEAP32[497] = 0;
 HEAP32[496] = 8948;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this, 1984);
 HEAP32[499] = 0;
 HEAP32[498] = 9012;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this, 1992);
 HEAP32[501] = 0;
 HEAP32[500] = 9076;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this, 2e3);
 HEAP32[503] = 0;
 HEAP32[502] = 9140;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this, 2008);
 HEAP32[505] = 0;
 HEAP32[504] = 9204;
 __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, 2016);
 HEAP32[507] = 0;
 HEAP32[506] = 9240;
 __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, 2024);
 HEAP32[509] = 0;
 HEAP32[508] = 9276;
 __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, 2032);
 HEAP32[511] = 0;
 HEAP32[510] = 9312;
 __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, 2040);
 HEAP32[513] = 0;
 HEAP32[512] = 8700;
 HEAP32[514] = 8748;
 __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, 2048);
 HEAP32[517] = 0;
 HEAP32[516] = 8792;
 HEAP32[518] = 8840;
 __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, 2064);
 HEAP32[521] = 0;
 HEAP32[520] = 9696;
 HEAP32[522] = __ZNSt3__16__clocEv() | 0;
 HEAP32[520] = 8884;
 __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, 2080);
 HEAP32[525] = 0;
 HEAP32[524] = 9696;
 HEAP32[526] = __ZNSt3__16__clocEv() | 0;
 HEAP32[524] = 8916;
 __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, 2096);
 HEAP32[529] = 0;
 HEAP32[528] = 9348;
 __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this, 2112);
 HEAP32[531] = 0;
 HEAP32[530] = 9388;
 __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this, 2120);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($agg$result, $s) {
 $agg$result = $agg$result | 0;
 $s = $s | 0;
 var $$$$i$i$i3 = 0, $$0$i$i27 = 0, $$lcssa = 0, $$lcssa32 = 0, $$lcssa33 = 0, $0 = 0, $12 = 0, $13 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $31 = 0, $33 = 0, $38 = 0, $42 = 0, $46 = 0, $48 = 0, $56 = 0, $63 = 0, $64 = 0, $7 = 0, $__p$0$i$i26 = 0, $__p$0$ph$i$i = 0, $c$0$ph = 0, $p0$0 = 0, $p0$1 = 0, $pe$0 = 0, $pe$0$ph = 0, $pe$1 = 0, $pe$1$pn = 0, label = 0;
 $0 = HEAP8[$s >> 0] | 0;
 $2 = ($0 & 1) == 0;
 $7 = $2 ? ($0 & 255) >>> 1 : HEAP32[$s + 4 >> 2] | 0;
 L1 : do if (!$7) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($agg$result, $s); else {
  $12 = $2 ? $s + 1 | 0 : HEAP32[$s + 8 >> 2] | 0;
  $13 = $7 >>> 0 > 11;
  $15 = _memcmp($12, 25705, $13 ? 11 : $7) | 0;
  if (!((($15 | 0) == 0 ? ($7 >>> 0 < 11 ? -1 : $13 & 1) : $15) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s, 26309, 70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result, 26380, 12);
   break;
  }
  $20 = $7 >>> 0 > 12;
  $21 = $20 ? 12 : $7;
  $22 = _memcmp($12, 25717, $21) | 0;
  $$$$i$i$i3 = $7 >>> 0 < 12 ? -1 : $20 & 1;
  if (!((($22 | 0) == 0 ? $$$$i$i$i3 : $22) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s, 26393, 49);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result, 26443, 13);
   break;
  }
  $27 = _memcmp($12, 25730, $21) | 0;
  if (!((($27 | 0) == 0 ? $$$$i$i$i3 : $27) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s, 26457, 49);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result, 26507, 13);
   break;
  }
  $31 = $7 >>> 0 > 13;
  $33 = _memcmp($12, 25743, $31 ? 13 : $7) | 0;
  if (!((($33 | 0) == 0 ? ($7 >>> 0 < 13 ? -1 : $31 & 1) : $33) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s, 26521, 50);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($agg$result, 26572, 14);
   break;
  }
  $38 = $12 + $7 | 0;
  L16 : do if ((HEAP8[$12 + ($7 + -1) >> 0] | 0) == 62) {
   $c$0$ph = 1;
   $pe$0$ph = $38;
   L17 : while (1) {
    $pe$0 = $pe$0$ph;
    L19 : while (1) {
     $42 = $pe$0 + -1 | 0;
     if (($42 | 0) == ($12 | 0)) break L17;
     $46 = $pe$0 + -2 | 0;
     switch (HEAP8[$46 >> 0] | 0) {
     case 60:
      {
       $$lcssa = $46;
       $$lcssa32 = $42;
       label = 16;
       break L19;
       break;
      }
     case 62:
      {
       $$lcssa33 = $42;
       label = 17;
       break L19;
       break;
      }
     default:
      $pe$0 = $42;
     }
    }
    if ((label | 0) == 16) {
     label = 0;
     $48 = $c$0$ph + -1 | 0;
     if (!$48) {
      $pe$1 = $$lcssa;
      break L16;
     } else {
      $c$0$ph = $48;
      $pe$0$ph = $$lcssa32;
      continue;
     }
    } else if ((label | 0) == 17) {
     label = 0;
     $c$0$ph = $c$0$ph + 1 | 0;
     $pe$0$ph = $$lcssa33;
     continue;
    }
   }
   HEAP32[$agg$result >> 2] = 0;
   HEAP32[$agg$result + 4 >> 2] = 0;
   HEAP32[$agg$result + 8 >> 2] = 0;
   break L1;
  } else $pe$1 = $38; while (0);
  $pe$1$pn = $pe$1;
  while (1) {
   $p0$0 = $pe$1$pn + -1 | 0;
   if (($p0$0 | 0) == ($12 | 0)) {
    $p0$1 = $12;
    break;
   }
   if ((HEAP8[$p0$0 >> 0] | 0) == 58) {
    $p0$1 = $pe$1$pn;
    break;
   } else $pe$1$pn = $p0$0;
  }
  $56 = $pe$1 - $p0$1 | 0;
  if ($56 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
  if ($56 >>> 0 < 11) {
   HEAP8[$agg$result >> 0] = $56 << 1;
   $__p$0$ph$i$i = $agg$result + 1 | 0;
  } else {
   $63 = $56 + 16 & -16;
   $64 = _malloc($63) | 0;
   HEAP32[$agg$result + 8 >> 2] = $64;
   HEAP32[$agg$result >> 2] = $63 | 1;
   HEAP32[$agg$result + 4 >> 2] = $56;
   $__p$0$ph$i$i = $64;
  }
  if (($p0$1 | 0) != ($pe$1 | 0)) {
   $$0$i$i27 = $p0$1;
   $__p$0$i$i26 = $__p$0$ph$i$i;
   while (1) {
    HEAP8[$__p$0$i$i26 >> 0] = HEAP8[$$0$i$i27 >> 0] | 0;
    $$0$i$i27 = $$0$i$i27 + 1 | 0;
    if (($$0$i$i27 | 0) == ($pe$1 | 0)) break; else $__p$0$i$i26 = $__p$0$i$i26 + 1 | 0;
   }
  }
  HEAP8[$__p$0$ph$i$i + $56 >> 0] = 0;
 } while (0);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $104 = 0, $109 = 0, $116 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $38 = 0, $4 = 0, $41 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $56 = 0, $57 = 0, $59 = 0, $64 = 0, $7 = 0, $75 = 0, $82 = 0, $83 = 0, $87 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 $3 = $1;
 if (($1 | 0) != ($0 | 0)) {
  $4 = $1 + 16 | 0;
  $5 = HEAP8[$__v >> 0] | 0;
  $7 = ($5 & 1) == 0;
  $12 = $7 ? ($5 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $13 = HEAP8[$4 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  $20 = $15 ? ($13 & 255) >>> 1 : HEAP32[$1 + 20 >> 2] | 0;
  $24 = $7 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $28 = $15 ? $4 + 1 | 0 : HEAP32[$1 + 24 >> 2] | 0;
  $29 = $20 >>> 0 < $12 >>> 0;
  $31 = _memcmp($24, $28, $29 ? $20 : $12) | 0;
  $33 = $12 >>> 0 < $20 >>> 0;
  if (((($31 | 0) == 0 ? ($33 ? -2147483648 : 0) : $31) | 0) >= 0) {
   $87 = _memcmp($28, $24, $33 ? $12 : $20) | 0;
   if (((($87 | 0) == 0 ? ($29 ? -2147483648 : 0) : $87) | 0) >= 0) {
    HEAP32[$__parent >> 2] = $3;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $91 = $1 + 4 | 0;
   $92 = HEAP32[$91 >> 2] | 0;
   $93 = ($92 | 0) == 0;
   if ($93) {
    $$01$i$i$i$i$i = $1;
    while (1) {
     $97 = HEAP32[$$01$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$97 >> 2] | 0) == ($$01$i$i$i$i$i | 0)) {
      $$0$i$i$i$i$i = $97;
      break;
     } else $$01$i$i$i$i$i = $97;
    }
   } else {
    $$0$i$i$i$i$i$i = $92;
    while (1) {
     $94 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$94) {
      $$0$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $94;
    }
   }
   if (($$0$i$i$i$i$i | 0) != ($0 | 0)) {
    $101 = $$0$i$i$i$i$i + 16 | 0;
    $102 = HEAP8[$101 >> 0] | 0;
    $104 = ($102 & 1) == 0;
    $109 = $104 ? ($102 & 255) >>> 1 : HEAP32[$$0$i$i$i$i$i + 20 >> 2] | 0;
    $116 = _memcmp($24, $104 ? $101 + 1 | 0 : HEAP32[$$0$i$i$i$i$i + 24 >> 2] | 0, $109 >>> 0 < $12 >>> 0 ? $109 : $12) | 0;
    if (((($116 | 0) == 0 ? ($12 >>> 0 < $109 >>> 0 ? -2147483648 : 0) : $116) | 0) >= 0) {
     $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
     return $$0 | 0;
    }
   }
   if ($93) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $91;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$0$i$i$i$i$i;
    $$0 = $$0$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $83 = $3; else {
  $38 = HEAP32[$1 >> 2] | 0;
  if (!$38) {
   $$01$i$i = $1;
   while (1) {
    $44 = HEAP32[$$01$i$i + 8 >> 2] | 0;
    if ((HEAP32[$44 >> 2] | 0) == ($$01$i$i | 0)) $$01$i$i = $44; else {
     $$0$i$i = $44;
     break;
    }
   }
  } else {
   $$0$i$i$i = $38;
   while (1) {
    $41 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$41) {
     $$0$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $41;
   }
  }
  $48 = $$0$i$i + 16 | 0;
  $49 = HEAP8[$48 >> 0] | 0;
  $51 = ($49 & 1) == 0;
  $56 = $51 ? ($49 & 255) >>> 1 : HEAP32[$$0$i$i + 20 >> 2] | 0;
  $57 = HEAP8[$__v >> 0] | 0;
  $59 = ($57 & 1) == 0;
  $64 = $59 ? ($57 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $75 = _memcmp($51 ? $48 + 1 | 0 : HEAP32[$$0$i$i + 24 >> 2] | 0, $59 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0, $64 >>> 0 < $56 >>> 0 ? $64 : $56) | 0;
  if (((($75 | 0) == 0 ? ($56 >>> 0 < $64 >>> 0 ? -2147483648 : 0) : $75) | 0) < 0) $83 = $$0$i$i; else {
   $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
   return $$0 | 0;
  }
 }
 if (!(HEAP32[$1 >> 2] | 0)) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  $82 = $83;
  HEAP32[$__parent >> 2] = $82;
  $$0 = $82 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$01$be = 0, $$0143 = 0, $$0143$lcssa = 0, $$02$be = 0, $$0242 = 0, $$0242$lcssa = 0, $$1$lcssa = 0, $$128 = 0, $14 = 0, $15 = 0, $26 = 0, $27 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $40 = 0, $44 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $60 = 0, $61 = 0, $66 = 0, $72 = 0, $9 = 0, $fend$0$lcssa = 0, $fend$048 = 0, $fend$1$be = 0, $fend$144 = 0, $fend$2$lcssa = 0, $fend$235 = 0, $n$032 = 0, $p$033 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $tmp = sp + 8 | 0;
 L1 : do if (($frm | 0) == ($frm_end | 0)) $fend$0$lcssa = $frm_end; else {
  $fend$048 = $frm;
  while (1) {
   if (!(HEAP32[$fend$048 >> 2] | 0)) {
    $fend$0$lcssa = $fend$048;
    break L1;
   }
   $fend$048 = $fend$048 + 4 | 0;
   if (($fend$048 | 0) == ($frm_end | 0)) {
    $fend$0$lcssa = $frm_end;
    break;
   }
  }
 } while (0);
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $5 = $to_end;
 $6 = $this + 8 | 0;
 L6 : do if (($to | 0) == ($to_end | 0) | ($frm | 0) == ($frm_end | 0)) {
  $72 = $frm;
  label = 29;
 } else {
  $$0143 = $frm;
  $$0242 = $to;
  $fend$144 = $fend$0$lcssa;
  L7 : while (1) {
   $9 = $st;
   $14 = HEAP32[$9 + 4 >> 2] | 0;
   $15 = $save_state;
   HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$15 + 4 >> 2] = $14;
   $26 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
   $27 = _wcsnrtombs($$0242, $frm_nxt, $fend$144 - $$0143 >> 2, $5 - $$0242 | 0, $st) | 0;
   if ($26) _uselocale($26 | 0) | 0;
   switch ($27 | 0) {
   case 0:
    {
     $$0 = 1;
     break L6;
     break;
    }
   case -1:
    {
     $$0143$lcssa = $$0143;
     $$0242$lcssa = $$0242;
     break L7;
     break;
    }
   default:
    {}
   }
   $44 = (HEAP32[$to_nxt >> 2] | 0) + $27 | 0;
   HEAP32[$to_nxt >> 2] = $44;
   if (($44 | 0) == ($to_end | 0)) {
    label = 15;
    break;
   }
   if (($fend$144 | 0) == ($frm_end | 0)) {
    $$01$be = HEAP32[$frm_nxt >> 2] | 0;
    $$02$be = $44;
    $fend$1$be = $frm_end;
   } else {
    $50 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
    $51 = _wcrtomb($tmp, 0, $st) | 0;
    if ($50) _uselocale($50 | 0) | 0;
    if (($51 | 0) == -1) {
     $$0 = 2;
     break L6;
    }
    if ($51 >>> 0 > ($5 - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) {
     $$0 = 1;
     break L6;
    }
    if ($51) {
     $n$032 = $51;
     $p$033 = $tmp;
     while (1) {
      $60 = HEAP8[$p$033 >> 0] | 0;
      $61 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $61 + 1;
      HEAP8[$61 >> 0] = $60;
      $n$032 = $n$032 + -1 | 0;
      if (!$n$032) break; else $p$033 = $p$033 + 1 | 0;
     }
    }
    $66 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
    HEAP32[$frm_nxt >> 2] = $66;
    L26 : do if (($66 | 0) == ($frm_end | 0)) $fend$2$lcssa = $frm_end; else {
     $fend$235 = $66;
     while (1) {
      if (!(HEAP32[$fend$235 >> 2] | 0)) {
       $fend$2$lcssa = $fend$235;
       break L26;
      }
      $fend$235 = $fend$235 + 4 | 0;
      if (($fend$235 | 0) == ($frm_end | 0)) {
       $fend$2$lcssa = $frm_end;
       break;
      }
     }
    } while (0);
    $$01$be = $66;
    $$02$be = HEAP32[$to_nxt >> 2] | 0;
    $fend$1$be = $fend$2$lcssa;
   }
   if (($$02$be | 0) == ($to_end | 0) | ($$01$be | 0) == ($frm_end | 0)) {
    $72 = $$01$be;
    label = 29;
    break L6;
   } else {
    $$0143 = $$01$be;
    $$0242 = $$02$be;
    $fend$144 = $fend$1$be;
   }
  }
  if ((label | 0) == 15) {
   $72 = HEAP32[$frm_nxt >> 2] | 0;
   label = 29;
   break;
  }
  HEAP32[$to_nxt >> 2] = $$0242$lcssa;
  L35 : do if (($$0143$lcssa | 0) == (HEAP32[$frm_nxt >> 2] | 0)) $$1$lcssa = $$0143$lcssa; else {
   $$128 = $$0143$lcssa;
   $34 = $$0242$lcssa;
   while (1) {
    $31 = HEAP32[$$128 >> 2] | 0;
    $33 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
    $35 = _wcrtomb($34, $31, $save_state) | 0;
    if ($33) _uselocale($33 | 0) | 0;
    if (($35 | 0) == -1) {
     $$1$lcssa = $$128;
     break L35;
    }
    $34 = (HEAP32[$to_nxt >> 2] | 0) + $35 | 0;
    HEAP32[$to_nxt >> 2] = $34;
    $40 = $$128 + 4 | 0;
    if (($40 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
     $$1$lcssa = $40;
     break;
    } else $$128 = $40;
   }
  } while (0);
  HEAP32[$frm_nxt >> 2] = $$1$lcssa;
  $$0 = 2;
 } while (0);
 if ((label | 0) == 29) $$0 = ($72 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad16DwarfCFIToModule6RecordEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $0, $1, $reg, $rule) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 $rule = $rule | 0;
 var $$0$i13$i = 0, $$lcssa = 0, $$lcssa19 = 0, $11 = 0, $12 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $39 = 0, $4 = 0, $47 = 0, $48 = 0, $54 = 0, $56 = 0, $61 = 0, $65 = 0, $67 = 0, $72 = 0, $73 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa17 = 0, $__nd$0$i$i$lcssa18 = 0, $__parent$i = 0, $__r$0$i = 0, $shared_rule = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__parent$i = sp + 40 | 0;
 $shared_rule = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 $4 = $this + 16 | 0;
 if (!(HEAP32[$4 >> 2] | 0)) ___assert_fail(13177, 13137, 194, 13234);
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($__parent$i, $this + 52 | 0, $rule);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($shared_rule, (HEAP32[$__parent$i >> 2] | 0) + 16 | 0);
 $11 = HEAP32[$4 >> 2] | 0;
 $12 = $11;
 if ((HEAP32[$12 >> 2] | 0) == ($0 | 0) ? (HEAP32[$12 + 4 >> 2] | 0) == ($1 | 0) : 0) {
  __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($2, $this, $reg);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($11 + 16 | 0, $2) | 0, $shared_rule) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($shared_rule);
  STACKTOP = sp;
  return;
 }
 $23 = $11 + 28 | 0;
 $24 = $11 + 32 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 do if (!$25) {
  HEAP32[$__parent$i >> 2] = $24;
  $$0$i13$i = $24;
  $65 = $24;
  label = 15;
 } else {
  $__nd$0$i$i = $25;
  while (1) {
   $28 = $__nd$0$i$i + 16 | 0;
   $30 = HEAP32[$28 >> 2] | 0;
   $33 = HEAP32[$28 + 4 >> 2] | 0;
   if ($33 >>> 0 > $1 >>> 0 | ($33 | 0) == ($1 | 0) & $30 >>> 0 > $0 >>> 0) {
    $39 = HEAP32[$__nd$0$i$i >> 2] | 0;
    if (!$39) {
     $$lcssa19 = $__nd$0$i$i;
     $__nd$0$i$i$lcssa18 = $__nd$0$i$i;
     label = 8;
     break;
    } else $__nd$0$be$in$i$i = $39;
   } else {
    if (!($33 >>> 0 < $1 >>> 0 | ($33 | 0) == ($1 | 0) & $30 >>> 0 < $0 >>> 0)) {
     $__nd$0$i$i$lcssa = $__nd$0$i$i;
     label = 14;
     break;
    }
    $47 = $__nd$0$i$i + 4 | 0;
    $48 = HEAP32[$47 >> 2] | 0;
    if (!$48) {
     $$lcssa = $47;
     $__nd$0$i$i$lcssa17 = $__nd$0$i$i;
     label = 12;
     break;
    } else $__nd$0$be$in$i$i = $48;
   }
   $__nd$0$i$i = $__nd$0$be$in$i$i;
  }
  if ((label | 0) == 8) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa18;
   $$0$i13$i = $$lcssa19;
   $65 = $__nd$0$i$i$lcssa18;
   label = 15;
   break;
  } else if ((label | 0) == 12) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa17;
   $$0$i13$i = $$lcssa;
   $65 = $__nd$0$i$i$lcssa17;
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
   if (!$__nd$0$i$i$lcssa) {
    $$0$i13$i = $__parent$i;
    $65 = $__nd$0$i$i$lcssa;
    label = 15;
    break;
   } else {
    $__r$0$i = $__nd$0$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 15) {
  $54 = __Znwj(40) | 0;
  $56 = $54 + 16 | 0;
  HEAP32[$56 >> 2] = $0;
  HEAP32[$56 + 4 >> 2] = $1;
  $61 = $54 + 28 | 0;
  HEAP32[$61 >> 2] = 0;
  HEAP32[$54 + 32 >> 2] = 0;
  HEAP32[$54 + 24 >> 2] = $61;
  HEAP32[$54 >> 2] = 0;
  HEAP32[$54 + 4 >> 2] = 0;
  HEAP32[$54 + 8 >> 2] = $65;
  HEAP32[$$0$i13$i >> 2] = $54;
  $67 = HEAP32[HEAP32[$23 >> 2] >> 2] | 0;
  if (!$67) $72 = $54; else {
   HEAP32[$23 >> 2] = $67;
   $72 = HEAP32[$$0$i13$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$11 + 32 >> 2] | 0, $72);
  $73 = $11 + 36 | 0;
  HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 1;
  $__r$0$i = $54;
 }
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($3, $this, $reg);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($__r$0$i + 24 | 0, $3) | 0, $shared_rule) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($shared_rule);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this, $__s, $__intl, $__iob, $__fl, $__units) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $14 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $4 = 0, $42 = 0, $5 = 0, $54 = 0, $62 = 0, $74 = 0, $76 = 0, $85 = 0, $86 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $96 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 992 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $__buf = sp + 888 | 0;
 $__bb = sp + 880 | 0;
 $__digits = sp + 480 | 0;
 $__loc = sp + 76 | 0;
 $__pat = sp + 884 | 0;
 $__dp = sp + 72 | 0;
 $__ts = sp + 68 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__sn = sp + 32 | 0;
 $__fd = sp + 28 | 0;
 $__mbuf = sp + 80 | 0;
 $__mi = sp + 24 | 0;
 $__me = sp + 20 | 0;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[$$byval_copy >> 3] = $__units;
 $1 = _snprintf($__buf, 100, 30375, $$byval_copy) | 0;
 if ($1 >>> 0 > 99) {
  $3 = __ZNSt3__16__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $__units;
  $4 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb, $3, 30375, $vararg_buffer1) | 0;
  $5 = HEAP32[$__bb >> 2] | 0;
  if (!$5) __ZSt17__throw_bad_allocv();
  $9 = _malloc($4 << 2) | 0;
  if (!$9) __ZSt17__throw_bad_allocv(); else {
   $93 = $9;
   $96 = $5;
   $__db$0 = $9;
   $__n$0 = $4;
  }
 } else {
  $93 = 0;
  $96 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
 }
 $12 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $12;
 $13 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 $14 = HEAP32[$__bb >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 48 >> 2] & 31]($13, $14, $14 + $__n$0 | 0, $__db$0) | 0;
 if (!$__n$0) $29 = 0; else $29 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__sn >> 2] = 0;
 HEAP32[$__sn + 4 >> 2] = 0;
 HEAP32[$__sn + 8 >> 2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $29, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
 $30 = HEAP32[$__fd >> 2] | 0;
 if (($__n$0 | 0) > ($30 | 0)) {
  $34 = HEAP8[$__sn >> 0] | 0;
  $42 = HEAP8[$__sym >> 0] | 0;
  $74 = ($__n$0 - $30 << 1 | 1) + $30 + (($34 & 1) == 0 ? ($34 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($42 & 1) == 0 ? ($42 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 } else {
  $54 = HEAP8[$__sn >> 0] | 0;
  $62 = HEAP8[$__sym >> 0] | 0;
  $74 = $30 + 2 + (($54 & 1) == 0 ? ($54 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($62 & 1) == 0 ? ($62 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 }
 if ($74 >>> 0 > 100) {
  $76 = _malloc($74 << 2) | 0;
  if (!$76) __ZSt17__throw_bad_allocv(); else {
   $89 = $76;
   $__mb$0 = $76;
  }
 } else {
  $89 = 0;
  $__mb$0 = $__mbuf;
 }
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $__db$0, $__db$0 + ($__n$0 << 2) | 0, $13, $29, $__pat, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp, $__sym, $__sn, $30);
 HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
 $85 = HEAP32[$__mi >> 2] | 0;
 $86 = HEAP32[$__me >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $87 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__mb$0, $85, $86, $__iob, $__fl) | 0;
 if (!$89) $91 = $12; else {
  _free($89);
  $91 = HEAP32[$__loc >> 2] | 0;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 __ZNSt3__114__shared_count16__release_sharedEv($91) | 0;
 if ($93) _free($93);
 if ($96) _free($96);
 STACKTOP = sp;
 return $87 | 0;
}

function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__x) {
 $__root = $__root | 0;
 $__x = $__x | 0;
 var $$07 = 0, $$07$lcssa58 = 0, $$07$lcssa59 = 0, $$lcssa = 0, $$lcssa60 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $$lcssa68 = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $30 = 0, $31 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $47 = 0, $5 = 0, $52 = 0, $62 = 0, $63 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $82 = 0, $85 = 0, label = 0, $$07$looptemp = 0;
 $0 = ($__x | 0) == ($__root | 0);
 HEAP8[$__x + 12 >> 0] = $0 & 1;
 if ($0) return; else $$07 = $__x;
 while (1) {
  $4 = HEAP32[$$07 + 8 >> 2] | 0;
  $5 = $4 + 12 | 0;
  if (HEAP8[$5 >> 0] | 0) {
   label = 37;
   break;
  }
  $8 = $4 + 8 | 0;
  $$07$looptemp = $$07;
  $$07 = HEAP32[$8 >> 2] | 0;
  $10 = HEAP32[$$07 >> 2] | 0;
  if (($10 | 0) == ($4 | 0)) {
   $13 = HEAP32[$$07 + 4 >> 2] | 0;
   if (!$13) {
    $$07$lcssa59 = $$07$looptemp;
    $$lcssa61 = $4;
    $$lcssa62 = $8;
    $$lcssa64 = $8;
    $$lcssa66 = $$07;
    $$lcssa68 = $$07;
    label = 7;
    break;
   }
   $15 = $13 + 12 | 0;
   if (HEAP8[$15 >> 0] | 0) {
    $$07$lcssa59 = $$07$looptemp;
    $$lcssa61 = $4;
    $$lcssa62 = $8;
    $$lcssa64 = $8;
    $$lcssa66 = $$07;
    $$lcssa68 = $$07;
    label = 7;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$07 + 12 >> 0] = ($$07 | 0) == ($__root | 0) & 1;
   HEAP8[$15 >> 0] = 1;
  } else {
   if (!$10) {
    $$07$lcssa58 = $$07$looptemp;
    $$lcssa = $8;
    $$lcssa60 = $4;
    $$lcssa63 = $8;
    $$lcssa65 = $$07;
    $$lcssa67 = $$07;
    label = 24;
    break;
   }
   $52 = $10 + 12 | 0;
   if (HEAP8[$52 >> 0] | 0) {
    $$07$lcssa58 = $$07$looptemp;
    $$lcssa = $8;
    $$lcssa60 = $4;
    $$lcssa63 = $8;
    $$lcssa65 = $$07;
    $$lcssa67 = $$07;
    label = 24;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$07 + 12 >> 0] = ($$07 | 0) == ($__root | 0) & 1;
   HEAP8[$52 >> 0] = 1;
  }
  if (($$07 | 0) == ($__root | 0)) {
   label = 37;
   break;
  }
 }
 if ((label | 0) == 7) {
  if ((HEAP32[$$lcssa61 >> 2] | 0) == ($$07$lcssa59 | 0)) {
   $36 = $$lcssa61;
   $38 = $$lcssa68;
  } else {
   $24 = $$lcssa61 + 4 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   HEAP32[$24 >> 2] = $26;
   if (!$26) $30 = $$lcssa66; else {
    HEAP32[$26 + 8 >> 2] = $$lcssa61;
    $30 = HEAP32[$$lcssa62 >> 2] | 0;
   }
   $29 = $25 + 8 | 0;
   HEAP32[$29 >> 2] = $30;
   $31 = HEAP32[$$lcssa64 >> 2] | 0;
   if ((HEAP32[$31 >> 2] | 0) == ($$lcssa61 | 0)) HEAP32[$31 >> 2] = $25; else HEAP32[$31 + 4 >> 2] = $25;
   HEAP32[$25 >> 2] = $$lcssa61;
   HEAP32[$$lcssa62 >> 2] = $25;
   $36 = $25;
   $38 = HEAP32[$29 >> 2] | 0;
  }
  HEAP8[$36 + 12 >> 0] = 1;
  HEAP8[$38 + 12 >> 0] = 0;
  $39 = HEAP32[$38 >> 2] | 0;
  $40 = $39 + 4 | 0;
  $41 = HEAP32[$40 >> 2] | 0;
  HEAP32[$38 >> 2] = $41;
  if ($41) HEAP32[$41 + 8 >> 2] = $38;
  $44 = $38 + 8 | 0;
  HEAP32[$39 + 8 >> 2] = HEAP32[$44 >> 2];
  $47 = HEAP32[$44 >> 2] | 0;
  if ((HEAP32[$47 >> 2] | 0) == ($38 | 0)) HEAP32[$47 >> 2] = $39; else HEAP32[$47 + 4 >> 2] = $39;
  HEAP32[$40 >> 2] = $38;
  HEAP32[$44 >> 2] = $39;
  return;
 } else if ((label | 0) == 24) {
  if ((HEAP32[$$lcssa60 >> 2] | 0) == ($$07$lcssa58 | 0)) {
   $62 = HEAP32[$$lcssa60 >> 2] | 0;
   $63 = $62 + 4 | 0;
   $64 = HEAP32[$63 >> 2] | 0;
   HEAP32[$$lcssa60 >> 2] = $64;
   if (!$64) $68 = $$lcssa65; else {
    HEAP32[$64 + 8 >> 2] = $$lcssa60;
    $68 = HEAP32[$$lcssa >> 2] | 0;
   }
   $67 = $62 + 8 | 0;
   HEAP32[$67 >> 2] = $68;
   $69 = HEAP32[$$lcssa63 >> 2] | 0;
   if ((HEAP32[$69 >> 2] | 0) == ($$lcssa60 | 0)) HEAP32[$69 >> 2] = $62; else HEAP32[$69 + 4 >> 2] = $62;
   HEAP32[$63 >> 2] = $$lcssa60;
   HEAP32[$$lcssa >> 2] = $62;
   $74 = $62;
   $76 = HEAP32[$67 >> 2] | 0;
  } else {
   $74 = $$lcssa60;
   $76 = $$lcssa67;
  }
  HEAP8[$74 + 12 >> 0] = 1;
  HEAP8[$76 + 12 >> 0] = 0;
  $77 = $76 + 4 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = HEAP32[$78 >> 2] | 0;
  HEAP32[$77 >> 2] = $79;
  if ($79) HEAP32[$79 + 8 >> 2] = $76;
  $82 = $76 + 8 | 0;
  HEAP32[$78 + 8 >> 2] = HEAP32[$82 >> 2];
  $85 = HEAP32[$82 >> 2] | 0;
  if ((HEAP32[$85 >> 2] | 0) == ($76 | 0)) HEAP32[$85 >> 2] = $78; else HEAP32[$85 + 4 >> 2] = $78;
  HEAP32[$78 >> 2] = $76;
  HEAP32[$82 >> 2] = $78;
  return;
 } else if ((label | 0) == 37) return;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this, $__s, $__intl, $__iob, $__fl, $__units) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $28 = 0, $29 = 0, $3 = 0, $33 = 0, $4 = 0, $41 = 0, $5 = 0, $53 = 0, $61 = 0, $73 = 0, $74 = 0, $8 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $89 = 0, $91 = 0, $94 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer1 = sp;
 $__buf = sp + 284 | 0;
 $__bb = sp + 72 | 0;
 $__digits = sp + 184 | 0;
 $__loc = sp + 68 | 0;
 $__pat = sp + 80 | 0;
 $__dp = sp + 77 | 0;
 $__ts = sp + 76 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__sn = sp + 32 | 0;
 $__fd = sp + 28 | 0;
 $__mbuf = sp + 84 | 0;
 $__mi = sp + 24 | 0;
 $__me = sp + 20 | 0;
 $0 = sp + 16 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[$$byval_copy >> 3] = $__units;
 $1 = _snprintf($__buf, 100, 30375, $$byval_copy) | 0;
 if ($1 >>> 0 > 99) {
  $3 = __ZNSt3__16__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $__units;
  $4 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb, $3, 30375, $vararg_buffer1) | 0;
  $5 = HEAP32[$__bb >> 2] | 0;
  if (!$5) __ZSt17__throw_bad_allocv();
  $8 = _malloc($4) | 0;
  if (!$8) __ZSt17__throw_bad_allocv(); else {
   $91 = $8;
   $94 = $5;
   $__db$0 = $8;
   $__n$0 = $4;
  }
 } else {
  $91 = 0;
  $94 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
 }
 $11 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $11;
 $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 $13 = HEAP32[$__bb >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 31]($12, $13, $13 + $__n$0 | 0, $__db$0) | 0;
 if (!$__n$0) $28 = 0; else $28 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__sn >> 2] = 0;
 HEAP32[$__sn + 4 >> 2] = 0;
 HEAP32[$__sn + 8 >> 2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $28, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
 $29 = HEAP32[$__fd >> 2] | 0;
 if (($__n$0 | 0) > ($29 | 0)) {
  $33 = HEAP8[$__sn >> 0] | 0;
  $41 = HEAP8[$__sym >> 0] | 0;
  $73 = ($__n$0 - $29 << 1 | 1) + $29 + (($33 & 1) == 0 ? ($33 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($41 & 1) == 0 ? ($41 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 } else {
  $53 = HEAP8[$__sn >> 0] | 0;
  $61 = HEAP8[$__sym >> 0] | 0;
  $73 = $29 + 2 + (($53 & 1) == 0 ? ($53 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($61 & 1) == 0 ? ($61 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 }
 if ($73 >>> 0 > 100) {
  $74 = _malloc($73) | 0;
  if (!$74) __ZSt17__throw_bad_allocv(); else {
   $87 = $74;
   $__mb$0 = $74;
  }
 } else {
  $87 = 0;
  $__mb$0 = $__mbuf;
 }
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $__db$0, $__db$0 + $__n$0 | 0, $12, $28, $__pat, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp, $__sym, $__sn, $29);
 HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
 $83 = HEAP32[$__mi >> 2] | 0;
 $84 = HEAP32[$__me >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $85 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__mb$0, $83, $84, $__iob, $__fl) | 0;
 if (!$87) $89 = $11; else {
  _free($87);
  $89 = HEAP32[$__loc >> 2] | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 __ZNSt3__114__shared_count16__release_sharedEv($89) | 0;
 if ($91) _free($91);
 if ($94) _free($94);
 STACKTOP = sp;
 return $85 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $$0$i = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $31 = 0, $4 = 0, $42 = 0, $48 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $73 = 0, $75 = 0, $9 = 0, $args = 0, $args3 = 0, $t$0$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $args = sp + 12 | 0;
 $args3 = sp;
 L1 : do if (($last - $first | 0) > 1) {
  $4 = HEAP8[$first >> 0] | 0;
  switch ($4 << 24 >> 24) {
  case 100:
  case 111:
   {
    if ((HEAP8[$first + 1 >> 0] | 0) == 110) {
     $9 = $first + 2 | 0;
     if ($4 << 24 >> 24 == 111) {
      $10 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($9, $last, $db) | 0;
      if (($10 | 0) == ($9 | 0)) {
       $$0 = $first;
       break L1;
      }
      $12 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($10, $last, $db) | 0;
      if (($12 | 0) == ($10 | 0)) {
       $$0 = $10;
       break L1;
      }
      $14 = $db + 4 | 0;
      $15 = HEAP32[$14 >> 2] | 0;
      if ((($15 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       $$0 = $12;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args, $15 + -24 | 0);
      $23 = HEAP32[$14 >> 2] | 0;
      $24 = $23 + -24 | 0;
      $26 = $23;
      do {
       $25 = $26 + -24 | 0;
       HEAP32[$14 >> 2] = $25;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
       $26 = HEAP32[$14 >> 2] | 0;
      } while (($26 | 0) != ($24 | 0));
      $29 = HEAP8[$args >> 0] | 0;
      $31 = ($29 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($23 + -48 | 0, $31 ? $args + 1 | 0 : HEAP32[$args + 8 >> 2] | 0, $31 ? ($29 & 255) >>> 1 : HEAP32[$args + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
      $$0 = $12;
      break L1;
     }
     if (($9 | 0) == ($last | 0)) $$0$i = $last; else {
      $42 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($9, $last, $db) | 0;
      if (($42 | 0) == ($9 | 0)) $t$0$i = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($9, $last, $db) | 0; else $t$0$i = $42;
      if (($t$0$i | 0) == ($9 | 0)) $$0$i = $9; else {
       $48 = HEAP32[$db + 4 >> 2] | 0;
       if ((HEAP32[$db >> 2] | 0) == ($48 | 0)) $$0$i = $9; else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($48 + -24 | 0, 0, 25787) | 0;
        $$0$i = $t$0$i;
       }
      }
     }
     STACKTOP = sp;
     return (($$0$i | 0) == ($9 | 0) ? $first : $$0$i) | 0;
    }
    break;
   }
  default:
   {}
  }
  $52 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
  if (($52 | 0) == ($first | 0)) {
   $54 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
   if (($54 | 0) == ($first | 0)) $$0 = $first; else {
    $56 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($54, $last, $db) | 0;
    if (($56 | 0) == ($54 | 0)) $$0 = $54; else {
     $58 = $db + 4 | 0;
     $59 = HEAP32[$58 >> 2] | 0;
     if ((($59 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$0 = $56; else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args3, $59 + -24 | 0);
      $67 = HEAP32[$58 >> 2] | 0;
      $68 = $67 + -24 | 0;
      $70 = $67;
      do {
       $69 = $70 + -24 | 0;
       HEAP32[$58 >> 2] = $69;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($69);
       $70 = HEAP32[$58 >> 2] | 0;
      } while (($70 | 0) != ($68 | 0));
      $73 = HEAP8[$args3 >> 0] | 0;
      $75 = ($73 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($67 + -48 | 0, $75 ? $args3 + 1 | 0 : HEAP32[$args3 + 8 >> 2] | 0, $75 ? ($73 & 255) >>> 1 : HEAP32[$args3 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args3);
      $$0 = $56;
     }
    }
   }
  } else $$0 = $52;
 } else $$0 = $first; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$pre = 0, $$pre$phiZ2D = 0, $101 = 0, $107 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $3 = 0, $34 = 0, $40 = 0, $48 = 0, $50 = 0, $57 = 0, $67 = 0, $75 = 0, $77 = 0, $79 = 0, $85 = 0, $88 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) {
  $$pre = $to;
  $$pre$phiZ2D = $frm_end;
 } else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre = HEAP32[$to_nxt >> 2] | 0;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt >> 2] | 0;
 $17 = $16 >>> 0 < $frm_end >>> 0;
 L9 : do if ($17 & $$pre >>> 0 < $to_end >>> 0) {
  $21 = $16;
  $25 = $$pre;
  while (1) {
   $20 = HEAP8[$21 >> 0] | 0;
   $22 = $20 & 255;
   do if ($20 << 24 >> 24 > -1) {
    if ($22 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L9;
    }
    HEAP32[$25 >> 2] = $22;
    HEAP32[$frm_nxt >> 2] = $21 + 1;
   } else {
    if (($20 & 255) < 194) {
     $$0 = 2;
     break L9;
    }
    if (($20 & 255) < 224) {
     if (($$pre$phiZ2D - $21 | 0) < 2) {
      $$0 = 1;
      break L9;
     }
     $34 = HEAPU8[$21 + 1 >> 0] | 0;
     if (($34 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $40 = $34 & 63 | $22 << 6 & 1984;
     if ($40 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP32[$25 >> 2] = $40;
     HEAP32[$frm_nxt >> 2] = $21 + 2;
     break;
    }
    if (($20 & 255) < 240) {
     if (($$pre$phiZ2D - $21 | 0) < 3) {
      $$0 = 1;
      break L9;
     }
     $48 = HEAP8[$21 + 1 >> 0] | 0;
     $50 = HEAP8[$21 + 2 >> 0] | 0;
     switch ($22 | 0) {
     case 224:
      {
       if (($48 & -32) << 24 >> 24 != -96) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     case 237:
      {
       if (($48 & -32) << 24 >> 24 != -128) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     default:
      if (($48 & -64) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
     }
     $57 = $50 & 255;
     if (($57 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $67 = ($48 & 255) << 6 & 4032 | $22 << 12 & 61440 | $57 & 63;
     if ($67 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP32[$25 >> 2] = $67;
     HEAP32[$frm_nxt >> 2] = $21 + 3;
     break;
    }
    if (($20 & 255) >= 245) {
     $$0 = 2;
     break L9;
    }
    if (($$pre$phiZ2D - $21 | 0) < 4) {
     $$0 = 1;
     break L9;
    }
    $75 = HEAP8[$21 + 1 >> 0] | 0;
    $77 = HEAP8[$21 + 2 >> 0] | 0;
    $79 = HEAP8[$21 + 3 >> 0] | 0;
    switch ($22 | 0) {
    case 240:
     {
      if (($75 + 112 & 255) >= 48) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    case 244:
     {
      if (($75 & -16) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($75 & -64) << 24 >> 24 != -128) {
      $$0 = 2;
      break L9;
     }
    }
    $85 = $77 & 255;
    if (($85 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    $88 = $79 & 255;
    if (($88 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    $101 = ($75 & 255) << 12 & 258048 | $22 << 18 & 1835008 | $85 << 6 & 4032 | $88 & 63;
    if ($101 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L9;
    }
    HEAP32[$25 >> 2] = $101;
    HEAP32[$frm_nxt >> 2] = $21 + 4;
   } while (0);
   $25 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
   HEAP32[$to_nxt >> 2] = $25;
   $21 = HEAP32[$frm_nxt >> 2] | 0;
   $107 = $21 >>> 0 < $frm_end >>> 0;
   if (!($107 & $25 >>> 0 < $to_end >>> 0)) {
    $$lcssa = $107;
    label = 38;
    break;
   }
  }
 } else {
  $$lcssa = $17;
  label = 38;
 } while (0);
 if ((label | 0) == 38) $$0 = $$lcssa & 1;
 return $$0 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo13ReadFDEFieldsEPNS0_3FDEE($this, $fde) {
 $this = $this | 0;
 $fde = $fde | 0;
 var $$0 = 0, $$0$i = 0, $$lcssa = 0, $$sum = 0, $$sum1 = 0, $1 = 0, $101 = 0, $11 = 0, $110 = 0, $114 = 0, $123 = 0, $126 = 0, $137 = 0, $15 = 0, $16 = 0, $2 = 0, $23 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $42 = 0, $45 = 0, $49 = 0, $51 = 0, $56 = 0, $63 = 0, $64 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $94 = 0, $cursor$0 = 0, $num_read$0$i = 0, $shift$0$i = 0, $size = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $size = sp;
 $1 = HEAP32[$fde + 12 >> 2] | 0;
 $2 = $this + 8 | 0;
 $4 = $fde + 32 | 0;
 $8 = __ZNK12dwarf2reader10ByteReader18ReadEncodedPointerEPKcNS_20DwarfPointerEncodingEPj(HEAP32[$2 >> 2] | 0, $1, HEAP32[(HEAP32[$4 >> 2] | 0) + 96 >> 2] | 0, $size) | 0;
 $9 = tempRet0;
 $11 = $fde + 40 | 0;
 HEAP32[$11 >> 2] = $8;
 HEAP32[$11 + 4 >> 2] = $9;
 $15 = HEAP32[$size >> 2] | 0;
 $16 = $fde + 20 | 0;
 if ($15 >>> 0 > ((HEAP32[$16 >> 2] | 0) - $1 | 0) >>> 0) {
  $23 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 8 >> 2] & 31]($23, HEAP32[$fde >> 2] | 0, 0, HEAP32[$fde + 8 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $30 = $1 + $15 | 0;
 $31 = HEAP32[$2 >> 2] | 0;
 $33 = $31 + 56 | 0;
 HEAP32[$33 >> 2] = $8;
 HEAP32[$33 + 4 >> 2] = $9;
 HEAP8[$31 + 29 >> 0] = 1;
 $42 = __ZNK12dwarf2reader10ByteReader18ReadEncodedPointerEPKcNS_20DwarfPointerEncodingEPj($31, $30, HEAP32[(HEAP32[$4 >> 2] | 0) + 96 >> 2] & 15, $size) | 0;
 $45 = $fde + 48 | 0;
 HEAP32[$45 >> 2] = $42;
 HEAP32[$45 + 4 >> 2] = tempRet0;
 $49 = HEAP32[$size >> 2] | 0;
 $51 = HEAP32[$16 >> 2] | 0;
 if ($49 >>> 0 > ($51 - $30 | 0) >>> 0) {
  $56 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$56 >> 2] | 0) + 8 >> 2] & 31]($56, HEAP32[$fde >> 2] | 0, 0, HEAP32[$fde + 8 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$sum = $49 + $15 | 0;
 $63 = $1 + $$sum | 0;
 $64 = HEAP32[$4 >> 2] | 0;
 if (!(HEAP8[$64 + 72 >> 0] | 0)) $cursor$0 = $63; else {
  $$0$i = $63;
  $76 = 0;
  $78 = 0;
  $num_read$0$i = 0;
  $shift$0$i = 0;
  while (1) {
   $70 = $num_read$0$i + 1 | 0;
   $71 = HEAPU8[$$0$i >> 0] | 0;
   $73 = _bitshift64Shl($71 & 127 | 0, 0, $shift$0$i | 0) | 0;
   $75 = $73 | $76;
   $77 = tempRet0 | $78;
   if (!($71 & 128)) {
    $$lcssa = $70;
    $84 = $75;
    $85 = $77;
    break;
   } else {
    $$0$i = $$0$i + 1 | 0;
    $76 = $75;
    $78 = $77;
    $num_read$0$i = $70;
    $shift$0$i = $shift$0$i + 7 | 0;
   }
  }
  HEAP32[$size >> 2] = $$lcssa;
  $86 = _i64Add($84 | 0, $85 | 0, $$lcssa | 0, 0) | 0;
  $87 = tempRet0;
  if (0 < $87 >>> 0 | 0 == ($87 | 0) & ($51 - $63 | 0) >>> 0 < $86 >>> 0) {
   $94 = HEAP32[$this + 16 >> 2] | 0;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$94 >> 2] | 0) + 8 >> 2] & 31]($94, HEAP32[$fde >> 2] | 0, 0, HEAP32[$fde + 8 >> 2] | 0);
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $$sum1 = $$lcssa + $$sum | 0;
  $101 = $1 + $$sum1 | 0;
  if (HEAP8[$64 + 73 >> 0] | 0) {
   if (!(__ZNK12dwarf2reader10ByteReader14UsableEncodingENS_20DwarfPointerEncodingE(HEAP32[$2 >> 2] | 0, HEAP32[$64 + 76 >> 2] | 0) | 0)) {
    $110 = HEAP32[$this + 16 >> 2] | 0;
    $114 = HEAP32[$4 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$110 >> 2] | 0) + 36 >> 2] & 31]($110, HEAP32[$114 >> 2] | 0, 0, HEAP32[$114 + 76 >> 2] & 255);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $123 = __ZNK12dwarf2reader10ByteReader18ReadEncodedPointerEPKcNS_20DwarfPointerEncodingEPj(HEAP32[$2 >> 2] | 0, $101, HEAP32[(HEAP32[$4 >> 2] | 0) + 76 >> 2] | 0, $size) | 0;
   $126 = $fde + 56 | 0;
   HEAP32[$126 >> 2] = $123;
   HEAP32[$126 + 4 >> 2] = tempRet0;
   if (0 > $85 >>> 0 | (0 == ($85 | 0) ? (HEAP32[$size >> 2] | 0) >>> 0 > $84 >>> 0 : 0)) {
    $137 = HEAP32[$this + 16 >> 2] | 0;
    FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$137 >> 2] | 0) + 8 >> 2] & 31]($137, HEAP32[$fde >> 2] | 0, 0, HEAP32[$fde + 8 >> 2] | 0);
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
  $cursor$0 = $1 + ($84 + $$sum1) | 0;
 }
 HEAP32[$fde + 16 >> 2] = $cursor$0;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad11DumpSymbols28FindBestMatchForArchitectureEii($this, $cpu_type, $cpu_subtype) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 var $$0 = 0, $$lcssa40 = 0, $$sink17 = 0, $0 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $5 = 0, $50 = 0, $51 = 0, $59 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $70 = 0, $78 = 0, $8 = 0, $81 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $98 = 0, $arch = 0, $fat_arch_vector = 0, $i$013 = 0, $i$013$lcssa = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $fat_arch_vector = sp + 28 | 0;
 $arch = sp + 8 | 0;
 HEAP32[$fat_arch_vector >> 2] = 0;
 $0 = $fat_arch_vector + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$fat_arch_vector + 8 >> 2] = 0;
 $2 = $this + 36 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $this + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 L1 : do if (($3 | 0) == ($5 | 0)) {
  $59 = 0;
  $61 = 0;
  label = 11;
 } else {
  $7 = $arch + 4 | 0;
  $8 = $arch + 8 | 0;
  $9 = $arch + 12 | 0;
  $10 = $arch + 16 | 0;
  $11 = $fat_arch_vector + 8 | 0;
  $$sink17 = $3;
  $98 = $5;
  while (1) {
   $13 = $$sink17 + 8 | 0;
   $15 = HEAP32[$13 >> 2] | 0;
   $18 = HEAP32[$13 + 4 >> 2] | 0;
   if ($18 >>> 0 > 0 | ($18 | 0) == 0 & $15 >>> 0 > 4294967295) {
    $$lcssa40 = $98;
    break;
   }
   $25 = $$sink17 + 16 | 0;
   $27 = HEAP32[$25 >> 2] | 0;
   $30 = HEAP32[$25 + 4 >> 2] | 0;
   if ($30 >>> 0 > 0 | ($30 | 0) == 0 & $27 >>> 0 > 4294967295) {
    $$lcssa40 = $98;
    break;
   }
   $37 = $$sink17 + 24 | 0;
   $39 = HEAP32[$37 >> 2] | 0;
   $42 = HEAP32[$37 + 4 >> 2] | 0;
   if ($42 >>> 0 > 0 | ($42 | 0) == 0 & $39 >>> 0 > 4294967295) {
    $$lcssa40 = $98;
    break;
   }
   $50 = HEAP32[$$sink17 + 4 >> 2] | 0;
   HEAP32[$arch >> 2] = HEAP32[$$sink17 >> 2];
   HEAP32[$7 >> 2] = $50;
   HEAP32[$8 >> 2] = $15;
   HEAP32[$9 >> 2] = $27;
   HEAP32[$10 >> 2] = $39;
   $51 = HEAP32[$0 >> 2] | 0;
   if (($51 | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__16vectorI8fat_archNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($fat_arch_vector, $arch); else {
    HEAP32[$51 >> 2] = HEAP32[$arch >> 2];
    HEAP32[$51 + 4 >> 2] = HEAP32[$arch + 4 >> 2];
    HEAP32[$51 + 8 >> 2] = HEAP32[$arch + 8 >> 2];
    HEAP32[$51 + 12 >> 2] = HEAP32[$arch + 12 >> 2];
    HEAP32[$51 + 16 >> 2] = HEAP32[$arch + 16 >> 2];
    HEAP32[$0 >> 2] = $51 + 20;
   }
   $$sink17 = $$sink17 + 32 | 0;
   $98 = HEAP32[$4 >> 2] | 0;
   if (($$sink17 | 0) == ($98 | 0)) {
    label = 10;
    break;
   }
  }
  if ((label | 0) == 10) {
   $59 = HEAP32[$fat_arch_vector >> 2] | 0;
   $61 = HEAP32[$0 >> 2] | 0;
   label = 11;
   break;
  }
  $78 = HEAP32[$2 >> 2] | 0;
  if (($78 | 0) != ($$lcssa40 | 0)) {
   $81 = $78;
   do {
    if ((HEAP32[$81 >> 2] | 0) == ($cpu_type | 0)) if ((HEAP32[$81 + 4 >> 2] | 0) == ($cpu_subtype | 0)) {
     $$0 = $81;
     break L1;
    }
    $81 = $81 + 32 | 0;
   } while (($81 | 0) != ($$lcssa40 | 0));
  }
  $88 = HEAP32[_stderr >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $cpu_type;
  HEAP32[$vararg_buffer + 4 >> 2] = $cpu_subtype;
  _fprintf($88 | 0, 21703, $vararg_buffer | 0) | 0;
  $$0 = 0;
 } while (0);
 L22 : do if ((label | 0) == 11) {
  $63 = _NXFindBestFatArch($cpu_type, $cpu_subtype, $59, ($61 - $59 | 0) / 20 | 0) | 0;
  $64 = HEAP32[$0 >> 2] | 0;
  $65 = HEAP32[$fat_arch_vector >> 2] | 0;
  L24 : do if (($64 | 0) != ($65 | 0)) {
   $70 = ($64 - $65 | 0) / 20 | 0;
   $i$013 = 0;
   while (1) {
    if (($63 | 0) == ($65 + ($i$013 * 20 | 0) | 0)) {
     $i$013$lcssa = $i$013;
     break;
    }
    $i$013 = $i$013 + 1 | 0;
    if ($i$013 >>> 0 >= $70 >>> 0) break L24;
   }
   $$0 = (HEAP32[$2 >> 2] | 0) + ($i$013$lcssa << 5) | 0;
   break L22;
  } while (0);
  if (!$63) $$0 = 0; else ___assert_fail(21627, 21646, 259, 21674);
 } while (0);
 $89 = HEAP32[$fat_arch_vector >> 2] | 0;
 if (!$89) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 $92 = HEAP32[$0 >> 2] | 0;
 if (($92 | 0) != ($89 | 0)) HEAP32[$0 >> 2] = $92 + (~((($92 + -20 - $89 | 0) >>> 0) / 20 | 0) * 20 | 0);
 __ZdlPv($89);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $10 = 0, $102 = 0, $107 = 0, $110 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $14 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $50 = 0, $55 = 0, $6 = 0, $61 = 0, $63 = 0, $70 = 0, $8 = 0, $80 = 0, $84 = 0, $93 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $10 = $frm_end;
  $$pre = HEAP32[$frm_nxt >> 2] | 0;
  if ($$pre >>> 0 < $frm_end >>> 0) {
   $13 = $$pre;
   while (1) {
    $12 = HEAP16[$13 >> 1] | 0;
    $14 = $12 & 65535;
    if ($14 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L4;
    }
    do if (($12 & 65535) < 128) {
     $17 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $17 | 0) < 1) {
      $$0 = 1;
      break L4;
     }
     HEAP32[$to_nxt >> 2] = $17 + 1;
     HEAP8[$17 >> 0] = $12;
    } else {
     if (($12 & 65535) < 2048) {
      $24 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $24 | 0) < 2) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $24 + 1;
      HEAP8[$24 >> 0] = $14 >>> 6 | 192;
      $35 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $35 + 1;
      HEAP8[$35 >> 0] = $14 & 63 | 128;
      break;
     }
     if (($12 & 65535) < 55296) {
      $38 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $38 | 0) < 3) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $38 + 1;
      HEAP8[$38 >> 0] = $14 >>> 12 | 224;
      $50 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $50 + 1;
      HEAP8[$50 >> 0] = $14 >>> 6 & 63 | 128;
      $55 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $55 + 1;
      HEAP8[$55 >> 0] = $14 & 63 | 128;
      break;
     }
     if (($12 & 65535) >= 56320) {
      if (($12 & 65535) < 57344) {
       $$0 = 2;
       break L4;
      }
      $110 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $110 | 0) < 3) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $110 + 1;
      HEAP8[$110 >> 0] = $14 >>> 12 | 224;
      $122 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $122 + 1;
      HEAP8[$122 >> 0] = $14 >>> 6 & 63 | 128;
      $127 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $127 + 1;
      HEAP8[$127 >> 0] = $14 & 63 | 128;
      break;
     }
     if (($10 - $13 | 0) < 4) {
      $$0 = 1;
      break L4;
     }
     $61 = $13 + 2 | 0;
     $63 = HEAPU16[$61 >> 1] | 0;
     if (($63 & 64512 | 0) != 56320) {
      $$0 = 2;
      break L4;
     }
     if (($$pre1 - (HEAP32[$to_nxt >> 2] | 0) | 0) < 4) {
      $$0 = 1;
      break L4;
     }
     $70 = $14 & 960;
     if ((($70 << 10) + 65536 | $14 << 10 & 64512 | $63 & 1023) >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L4;
     }
     HEAP32[$frm_nxt >> 2] = $61;
     $80 = ($70 >>> 6) + 1 | 0;
     $84 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $84 + 1;
     HEAP8[$84 >> 0] = $80 >>> 2 | 240;
     $93 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $93 + 1;
     HEAP8[$93 >> 0] = $14 >>> 2 & 15 | $80 << 4 & 48 | 128;
     $102 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $102 + 1;
     HEAP8[$102 >> 0] = $14 << 4 & 48 | $63 >>> 6 & 15 | 128;
     $107 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $107 + 1;
     HEAP8[$107 >> 0] = $63 & 63 | 128;
    } while (0);
    $13 = (HEAP32[$frm_nxt >> 2] | 0) + 2 | 0;
    HEAP32[$frm_nxt >> 2] = $13;
    if ($13 >>> 0 >= $frm_end >>> 0) {
     $$0 = 0;
     break;
    }
   }
  } else $$0 = 0;
 } while (0);
 return $$0 | 0;
}

function __ZN12dwarf2reader15CompilationUnit5StartEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $3 = 0, $33 = 0, $36 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $61 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $78 = 0, $80 = 0, $82 = 0, $87 = 0, $92 = 0, $94 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 36 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 $4 = $this + 72 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 18557, 11);
 $6 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($5, $0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $7 = HEAP32[$4 >> 2] | 0;
 if (($6 | 0) == ($7 + 4 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 21899, 12);
  $10 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($7, $1) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $12 = HEAP32[$4 >> 2] | 0;
  $14 = $10;
 } else {
  $12 = $7;
  $14 = $6;
 }
 if (($14 | 0) == ($12 + 4 | 0)) ___assert_fail(18020, 18044, 259, 18569);
 $17 = $this + 40 | 0;
 $18 = $17;
 $20 = HEAP32[$18 >> 2] | 0;
 $23 = HEAP32[$18 + 4 >> 2] | 0;
 HEAP32[$this + 48 >> 2] = (HEAP32[$14 + 32 >> 2] | 0) + $20;
 $27 = $14 + 40 | 0;
 $33 = _i64Subtract(HEAP32[$27 >> 2] | 0, HEAP32[$27 + 4 >> 2] | 0, $20 | 0, $23 | 0) | 0;
 $36 = $this + 56 | 0;
 HEAP32[$36 >> 2] = $33;
 HEAP32[$36 + 4 >> 2] = tempRet0;
 __ZN12dwarf2reader15CompilationUnit10ReadHeaderEv($this);
 $41 = $this + 8 | 0;
 $43 = HEAP32[$41 >> 2] | 0;
 $46 = HEAP32[$41 + 4 >> 2] | 0;
 $48 = HEAP32[$this + 68 >> 2] | 0;
 $50 = HEAP8[$48 + 25 >> 0] | 0;
 $51 = $50 << 24 >> 24 == 8;
 $54 = _i64Add(($51 ? 12 : 4) | 0, ($51 ? 0 : 0) | 0, $43 | 0, $46 | 0) | 0;
 $55 = tempRet0;
 $57 = HEAP32[$this + 76 >> 2] | 0;
 $61 = $17;
 if (!(FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$57 >> 2] | 0) + 8 >> 2] & 15]($57, HEAP32[$61 >> 2] | 0, HEAP32[$61 + 4 >> 2] | 0, HEAP8[$48 + 24 >> 0] | 0, $50, $43, $46, HEAP16[$this + 16 >> 1] & 255) | 0)) {
  tempRet0 = $55;
  STACKTOP = sp;
  return $54 | 0;
 }
 __ZN12dwarf2reader15CompilationUnit11ReadAbbrevsEv($this);
 $73 = HEAP32[$4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 18575, 10);
 $74 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($73, $2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $75 = HEAP32[$4 >> 2] | 0;
 if (($74 | 0) == ($75 + 4 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 18586, 11);
  $78 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($75, $3) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $80 = HEAP32[$4 >> 2] | 0;
  $82 = $78;
 } else {
  $80 = $75;
  $82 = $74;
 }
 if (($82 | 0) != ($80 + 4 | 0)) {
  HEAP32[$this + 84 >> 2] = HEAP32[$82 + 32 >> 2];
  $87 = $82 + 40 | 0;
  $92 = HEAP32[$87 + 4 >> 2] | 0;
  $94 = $this + 88 | 0;
  HEAP32[$94 >> 2] = HEAP32[$87 >> 2];
  HEAP32[$94 + 4 >> 2] = $92;
 }
 __ZN12dwarf2reader15CompilationUnit11ProcessDIEsEv($this);
 tempRet0 = $55;
 STACKTOP = sp;
 return $54 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first, $last, $op, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $op = $op | 0;
 $db = $db | 0;
 var $$04 = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $2 = 0, $25 = 0, $28 = 0, $3 = 0, $35 = 0, $37 = 0, $4 = 0, $40 = 0, $44 = 0, $47 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $69 = 0, $7 = 0, $72 = 0, $77 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 36 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 $4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
 if (($4 | 0) == ($first | 0)) $$04 = $first; else {
  $7 = $db + 4 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if ((HEAP32[$db >> 2] | 0) == ($8 | 0)) $$04 = $first; else {
   $10 = $8 + -24 | 0;
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($2, $op, 25573);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, (HEAP32[$7 >> 2] | 0) + -24 | 0);
   $13 = HEAP8[$3 >> 0] | 0;
   $15 = ($13 & 1) == 0;
   $25 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2, $15 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0, $15 ? ($13 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$1 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
   HEAP32[$1 + 8 >> 2] = HEAP32[$25 + 8 >> 2];
   HEAP32[$25 >> 2] = 0;
   HEAP32[$25 + 4 >> 2] = 0;
   HEAP32[$25 + 8 >> 2] = 0;
   $28 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($1, 25478) | 0;
   HEAP32[$0 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$0 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
   HEAP32[$0 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
   HEAP32[$28 >> 2] = 0;
   HEAP32[$28 + 4 >> 2] = 0;
   HEAP32[$28 + 8 >> 2] = 0;
   do if (!(HEAP8[$10 >> 0] & 1)) {
    HEAP8[$10 + 1 >> 0] = 0;
    HEAP8[$10 >> 0] = 0;
   } else {
    $35 = $8 + -16 | 0;
    HEAP8[HEAP32[$35 >> 2] >> 0] = 0;
    $37 = $8 + -20 | 0;
    HEAP32[$37 >> 2] = 0;
    $$pre$i$i$i = HEAP8[$10 >> 0] | 0;
    if (!($$pre$i$i$i & 1)) {
     $44 = $$pre$i$i$i;
     $53 = 10;
    } else {
     $40 = HEAP32[$10 >> 2] | 0;
     $44 = $40 & 255;
     $53 = ($40 & -2) + -1 | 0;
    }
    if (!($44 & 1)) {
     $47 = ($44 & 255) >>> 1;
     if (($44 & 255) < 22) {
      $52 = 10;
      $72 = $47;
      $77 = 1;
     } else {
      $52 = ($47 + 16 & 240) + -1 | 0;
      $72 = $47;
      $77 = 1;
     }
    } else {
     $52 = 10;
     $72 = 0;
     $77 = 0;
    }
    if (($52 | 0) != ($53 | 0)) {
     if (($52 | 0) == 10) {
      $59 = $10 + 1 | 0;
      $60 = HEAP32[$35 >> 2] | 0;
      if ($77) {
       _memcpy($59 | 0, $60 | 0, (($44 & 255) >>> 1) + 1 | 0) | 0;
       _free($60);
      } else {
       HEAP8[$59 >> 0] = HEAP8[$60 >> 0] | 0;
       _free($60);
      }
      HEAP8[$10 >> 0] = $72 << 1;
      break;
     }
     $56 = $52 + 1 | 0;
     $57 = _malloc($56) | 0;
     if (!($52 >>> 0 <= $53 >>> 0 & ($57 | 0) == 0)) {
      if ($77) _memcpy($57 | 0, $10 + 1 | 0, (($44 & 255) >>> 1) + 1 | 0) | 0; else {
       $69 = HEAP32[$35 >> 2] | 0;
       HEAP8[$57 >> 0] = HEAP8[$69 >> 0] | 0;
       _free($69);
      }
      HEAP32[$10 >> 2] = $56 | 1;
      HEAP32[$37 >> 2] = $72;
      HEAP32[$35 >> 2] = $57;
     }
    }
   } while (0);
   HEAP32[$10 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
   $$04 = $4;
  }
 }
 STACKTOP = sp;
 return $$04 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule11FuncHandler25ProcessAttributeReferenceEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph7$i$i$i = 0, $$0$ph7$i$i$i$i = 0, $$01$ph6$i$i$i = 0, $$01$ph6$i$i$i$i = 0, $$014$i$i$i = 0, $$014$i$i$i$i = 0, $$014$i$i$i$i$lcssa = 0, $$014$i$i$i$lcssa = 0, $110 = 0, $115 = 0, $12 = 0, $127 = 0, $17 = 0, $3 = 0, $30 = 0, $35 = 0, $44 = 0, $49 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $66 = 0, $79 = 0, $8 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $97 = 0;
 switch ($attr | 0) {
 case 49:
  {
   $3 = HEAP32[$this + 4 >> 2] | 0;
   $6 = HEAP32[(HEAP32[$3 >> 2] | 0) + 32 >> 2] | 0;
   if (!$6) ___assert_fail(15030, 21517, 119, 26244);
   $8 = $6 + 36 | 0;
   $9 = HEAP32[$8 >> 2] | 0;
   if ($9) {
    $$0$ph7$i$i$i = $8;
    $$01$ph6$i$i$i = $9;
    L7 : while (1) {
     $$014$i$i$i = $$01$ph6$i$i$i;
     while (1) {
      $12 = $$014$i$i$i + 16 | 0;
      $17 = HEAP32[$12 + 4 >> 2] | 0;
      if (!($17 >>> 0 < $1 >>> 0 | (($17 | 0) == ($1 | 0) ? (HEAP32[$12 >> 2] | 0) >>> 0 < $0 >>> 0 : 0))) {
       $$014$i$i$i$lcssa = $$014$i$i$i;
       break;
      }
      $$014$i$i$i = HEAP32[$$014$i$i$i + 4 >> 2] | 0;
      if (!$$014$i$i$i) {
       $$0$ph$lcssa$i$i$i = $$0$ph7$i$i$i;
       break L7;
      }
     }
     $$01$ph6$i$i$i = HEAP32[$$014$i$i$i$lcssa >> 2] | 0;
     if (!$$01$ph6$i$i$i) {
      $$0$ph$lcssa$i$i$i = $$014$i$i$i$lcssa;
      break;
     } else $$0$ph7$i$i$i = $$014$i$i$i$lcssa;
    }
    if (($$0$ph$lcssa$i$i$i | 0) != ($8 | 0)) {
     $30 = $$0$ph$lcssa$i$i$i + 16 | 0;
     $35 = HEAP32[$30 + 4 >> 2] | 0;
     if (!($35 >>> 0 > $1 >>> 0 | (($35 | 0) == ($1 | 0) ? (HEAP32[$30 >> 2] | 0) >>> 0 > $0 >>> 0 : 0))) {
      HEAP32[$this + 92 >> 2] = $$0$ph$lcssa$i$i$i + 24;
      return;
     }
    }
   }
   $44 = HEAP32[$3 + 4 >> 2] | 0;
   $49 = $this + 16 | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 31]($44, HEAP32[$49 >> 2] | 0, HEAP32[$49 + 4 >> 2] | 0, $0, $1);
   return;
  }
 case 71:
  {
   $56 = HEAP32[$this + 4 >> 2] | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   $59 = HEAP32[$56 + 4 >> 2] | 0;
   $61 = $59 + 16 | 0;
   $66 = HEAP32[$61 + 4 >> 2] | 0;
   if (($66 >>> 0 > $1 >>> 0 | (($66 | 0) == ($1 | 0) ? (HEAP32[$61 >> 2] | 0) >>> 0 > $0 >>> 0 : 0)) & (HEAP8[$57 + 28 >> 0] | 0) == 0) {
    $79 = $this + 16 | 0;
    FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$59 >> 2] | 0) + 52 >> 2] & 31]($59, HEAP32[$79 >> 2] | 0, HEAP32[$79 + 4 >> 2] | 0, $0, $1);
    return;
   }
   $86 = HEAP32[$57 + 32 >> 2] | 0;
   if (!$86) ___assert_fail(15030, 21517, 119, 26244);
   $88 = $86 + 24 | 0;
   $89 = HEAP32[$88 >> 2] | 0;
   if ($89) {
    $$0$ph7$i$i$i$i = $88;
    $$01$ph6$i$i$i$i = $89;
    L28 : while (1) {
     $$014$i$i$i$i = $$01$ph6$i$i$i$i;
     while (1) {
      $92 = $$014$i$i$i$i + 16 | 0;
      $97 = HEAP32[$92 + 4 >> 2] | 0;
      if (!($97 >>> 0 < $1 >>> 0 | (($97 | 0) == ($1 | 0) ? (HEAP32[$92 >> 2] | 0) >>> 0 < $0 >>> 0 : 0))) {
       $$014$i$i$i$i$lcssa = $$014$i$i$i$i;
       break;
      }
      $$014$i$i$i$i = HEAP32[$$014$i$i$i$i + 4 >> 2] | 0;
      if (!$$014$i$i$i$i) {
       $$0$ph$lcssa$i$i$i$i = $$0$ph7$i$i$i$i;
       break L28;
      }
     }
     $$01$ph6$i$i$i$i = HEAP32[$$014$i$i$i$i$lcssa >> 2] | 0;
     if (!$$01$ph6$i$i$i$i) {
      $$0$ph$lcssa$i$i$i$i = $$014$i$i$i$i$lcssa;
      break;
     } else $$0$ph7$i$i$i$i = $$014$i$i$i$i$lcssa;
    }
    if (($$0$ph$lcssa$i$i$i$i | 0) != ($88 | 0)) {
     $110 = $$0$ph$lcssa$i$i$i$i + 16 | 0;
     $115 = HEAP32[$110 + 4 >> 2] | 0;
     if (!($115 >>> 0 > $1 >>> 0 | (($115 | 0) == ($1 | 0) ? (HEAP32[$110 >> 2] | 0) >>> 0 > $0 >>> 0 : 0))) {
      HEAP32[$this + 28 >> 2] = $$0$ph$lcssa$i$i$i$i + 24;
      return;
     }
    }
   }
   $127 = $this + 16 | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$59 >> 2] | 0) + 20 >> 2] & 31]($59, HEAP32[$127 >> 2] | 0, HEAP32[$127 + 4 >> 2] | 0, $0, $1);
   return;
  }
 default:
  return;
 }
}

function __ZN15google_breakpad6Module15StackFrameEntryC2ERKS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i3 = 0, $$0$i$i$i$i$i8 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i5 = 0, $$byval_copy1 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $42 = 0, $43 = 0, $45 = 0, $48 = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp;
 HEAP32[$this >> 2] = HEAP32[$0 >> 2];
 HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$this + 12 >> 2] = HEAP32[$0 + 12 >> 2];
 $3 = $this + 16 | 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 $6 = $this + 20 | 0;
 HEAP32[$3 >> 2] = $6;
 $8 = HEAP32[$0 + 16 >> 2] | 0;
 $9 = $0 + 20 | 0;
 if (($8 | 0) != ($9 | 0)) {
  $11 = $6;
  $12 = $2 + 12 | 0;
  $14 = $8;
  $17 = $8;
  while (1) {
   HEAP32[$1 >> 2] = $11;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, $14 + 16 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($12, $14 + 28 | 0);
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKS8_($3, $$byval_copy1, $2) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $18 = HEAP32[$17 + 4 >> 2] | 0;
   if (!$18) {
    $$01$i$i$i$i$i = $17;
    while (1) {
     $23 = HEAP32[$$01$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$23 >> 2] | 0) == ($$01$i$i$i$i$i | 0)) {
      $$0$i$i$i$i$i = $23;
      break;
     } else $$01$i$i$i$i$i = $23;
    }
   } else {
    $$0$i$i$i$i$i$i = $18;
    while (1) {
     $20 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$20) {
      $$0$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $20;
    }
   }
   if (($$0$i$i$i$i$i | 0) == ($9 | 0)) break; else {
    $14 = $$0$i$i$i$i$i;
    $17 = $$0$i$i$i$i$i;
   }
  }
 }
 $27 = $this + 28 | 0;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 $30 = $this + 32 | 0;
 HEAP32[$27 >> 2] = $30;
 $32 = HEAP32[$0 + 28 >> 2] | 0;
 $33 = $0 + 32 | 0;
 if (($32 | 0) == ($33 | 0)) {
  STACKTOP = sp;
  return;
 }
 $35 = $30;
 $36 = $2 + 8 | 0;
 $37 = $2 + 12 | 0;
 $39 = $32;
 $42 = $32;
 while (1) {
  HEAP32[$1 >> 2] = $35;
  __ZNSt3__14pairIKyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS0_IKS8_S8_EEEEEEEC2ERKSF_($2, $39 + 16 | 0);
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
  __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE15__insert_uniqueENS_21__tree_const_iteratorISG_PNS_11__tree_nodeISG_PvEEiEERKSG_($27, $$byval_copy1, $2) | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($36, HEAP32[$37 >> 2] | 0);
  $43 = HEAP32[$42 + 4 >> 2] | 0;
  if (!$43) {
   $$01$i$i$i$i$i5 = $42;
   while (1) {
    $48 = HEAP32[$$01$i$i$i$i$i5 + 8 >> 2] | 0;
    if ((HEAP32[$48 >> 2] | 0) == ($$01$i$i$i$i$i5 | 0)) {
     $$0$i$i$i$i$i8 = $48;
     break;
    } else $$01$i$i$i$i$i5 = $48;
   }
  } else {
   $$0$i$i$i$i$i$i3 = $43;
   while (1) {
    $45 = HEAP32[$$0$i$i$i$i$i$i3 >> 2] | 0;
    if (!$45) {
     $$0$i$i$i$i$i8 = $$0$i$i$i$i$i$i3;
     break;
    } else $$0$i$i$i$i$i$i3 = $45;
   }
  }
  if (($$0$i$i$i$i$i8 | 0) == ($33 | 0)) break; else {
   $39 = $$0$i$i$i$i$i8;
   $42 = $$0$i$i$i$i$i8;
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $104 = 0, $15 = 0, $2 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $34 = 0, $35 = 0, $39 = 0, $47 = 0, $5 = 0, $59 = 0, $6 = 0, $67 = 0, $79 = 0, $81 = 0, $87 = 0, $90 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $$byval_copy = sp + 468 | 0;
 $__loc = sp + 464 | 0;
 $__pat = sp + 472 | 0;
 $__dp = sp + 56 | 0;
 $__ts = sp + 52 | 0;
 $__grp = sp + 40 | 0;
 $__sym = sp + 28 | 0;
 $__sn = sp + 16 | 0;
 $__fd = sp + 12 | 0;
 $__mbuf = sp + 64 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 $1 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $1;
 $2 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 $3 = HEAP8[$__digits >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $6 = $__digits + 4 | 0;
 if (!(($5 ? ($3 & 255) >>> 1 : HEAP32[$6 >> 2] | 0) | 0)) $27 = 0; else {
  $15 = HEAP32[($5 ? $6 : HEAP32[$__digits + 8 >> 2] | 0) >> 2] | 0;
  $27 = ($15 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2 >> 2] | 0) + 44 >> 2] & 31]($2, 45) | 0);
 }
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__sn >> 2] = 0;
 HEAP32[$__sn + 4 >> 2] = 0;
 HEAP32[$__sn + 8 >> 2] = 0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $27, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
 $28 = HEAP8[$__digits >> 0] | 0;
 $31 = HEAP32[$6 >> 2] | 0;
 $34 = ($28 & 1) == 0 ? ($28 & 255) >>> 1 : $31;
 $35 = HEAP32[$__fd >> 2] | 0;
 if (($34 | 0) > ($35 | 0)) {
  $39 = HEAP8[$__sn >> 0] | 0;
  $47 = HEAP8[$__sym >> 0] | 0;
  $79 = ($34 - $35 << 1 | 1) + $35 + (($39 & 1) == 0 ? ($39 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($47 & 1) == 0 ? ($47 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 } else {
  $59 = HEAP8[$__sn >> 0] | 0;
  $67 = HEAP8[$__sym >> 0] | 0;
  $79 = $35 + 2 + (($59 & 1) == 0 ? ($59 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($67 & 1) == 0 ? ($67 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 }
 if ($79 >>> 0 > 100) {
  $81 = _malloc($79 << 2) | 0;
  if (!$81) __ZSt17__throw_bad_allocv(); else {
   $102 = $81;
   $__mb$0 = $81;
  }
 } else {
  $102 = 0;
  $__mb$0 = $__mbuf;
 }
 $87 = ($28 & 1) == 0;
 $90 = $87 ? $6 : HEAP32[$__digits + 8 >> 2] | 0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $90, $90 + (($87 ? ($28 & 255) >>> 1 : $31) << 2) | 0, $2, $27, $__pat, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp, $__sym, $__sn, $35);
 HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
 $98 = HEAP32[$__mi >> 2] | 0;
 $99 = HEAP32[$__me >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $100 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__mb$0, $98, $99, $__iob, $__fl) | 0;
 if (!$102) $104 = $1; else {
  _free($102);
  $104 = HEAP32[$__loc >> 2] | 0;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 __ZNSt3__114__shared_count16__release_sharedEv($104) | 0;
 STACKTOP = sp;
 return $100 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $103 = 0, $105 = 0, $16 = 0, $2 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $40 = 0, $48 = 0, $5 = 0, $6 = 0, $60 = 0, $68 = 0, $80 = 0, $81 = 0, $87 = 0, $91 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 56 | 0;
 $__loc = sp + 52 | 0;
 $__pat = sp + 64 | 0;
 $__dp = sp + 61 | 0;
 $__ts = sp + 60 | 0;
 $__grp = sp + 40 | 0;
 $__sym = sp + 28 | 0;
 $__sn = sp + 16 | 0;
 $__fd = sp + 12 | 0;
 $__mbuf = sp + 68 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 $1 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $1;
 $2 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 $3 = HEAP8[$__digits >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $6 = $__digits + 4 | 0;
 if (!(($5 ? ($3 & 255) >>> 1 : HEAP32[$6 >> 2] | 0) | 0)) $28 = 0; else {
  $16 = HEAP8[($5 ? $__digits + 1 | 0 : HEAP32[$__digits + 8 >> 2] | 0) >> 0] | 0;
  $28 = $16 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 31]($2, 45) | 0) << 24 >> 24;
 }
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__sn >> 2] = 0;
 HEAP32[$__sn + 4 >> 2] = 0;
 HEAP32[$__sn + 8 >> 2] = 0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $28, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd);
 $29 = HEAP8[$__digits >> 0] | 0;
 $32 = HEAP32[$6 >> 2] | 0;
 $35 = ($29 & 1) == 0 ? ($29 & 255) >>> 1 : $32;
 $36 = HEAP32[$__fd >> 2] | 0;
 if (($35 | 0) > ($36 | 0)) {
  $40 = HEAP8[$__sn >> 0] | 0;
  $48 = HEAP8[$__sym >> 0] | 0;
  $80 = ($35 - $36 << 1 | 1) + $36 + (($40 & 1) == 0 ? ($40 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($48 & 1) == 0 ? ($48 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 } else {
  $60 = HEAP8[$__sn >> 0] | 0;
  $68 = HEAP8[$__sym >> 0] | 0;
  $80 = $36 + 2 + (($60 & 1) == 0 ? ($60 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($68 & 1) == 0 ? ($68 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
 }
 if ($80 >>> 0 > 100) {
  $81 = _malloc($80) | 0;
  if (!$81) __ZSt17__throw_bad_allocv(); else {
   $103 = $81;
   $__mb$0 = $81;
  }
 } else {
  $103 = 0;
  $__mb$0 = $__mbuf;
 }
 $87 = ($29 & 1) == 0;
 $91 = $87 ? $__digits + 1 | 0 : HEAP32[$__digits + 8 >> 2] | 0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0, $__mi, $__me, HEAP32[$__iob + 4 >> 2] | 0, $91, $91 + ($87 ? ($29 & 255) >>> 1 : $32) | 0, $2, $28, $__pat, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp, $__sym, $__sn, $36);
 HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
 $99 = HEAP32[$__mi >> 2] | 0;
 $100 = HEAP32[$__me >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $101 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__mb$0, $99, $100, $__iob, $__fl) | 0;
 if (!$103) $105 = $1; else {
  _free($103);
  $105 = HEAP32[$__loc >> 2] | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 __ZNSt3__114__shared_count16__release_sharedEv($105) | 0;
 STACKTOP = sp;
 return $101 | 0;
}

function __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($this) {
 $this = $this | 0;
 var $$sink = 0, $0 = 0, $100 = 0, $101 = 0, $105 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $114 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $3 = 0, $4 = 0, $49 = 0, $5 = 0, $52 = 0, $54 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $7 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $97 = 0, $98 = 0, $99 = 0, $i$07$i5 = 0, $i1$06$i8 = 0, $storemerge$i = 0, $storemerge$i27 = 0, $storemerge$i35 = 0, $storemerge$i45 = 0, $v$2$i = 0, $v$211$i = 0, $v$211$i43 = 0;
 $0 = $this + 24 | 0;
 $3 = (HEAP32[$this + 4 >> 2] | 0) + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $4;
 if (($7 - $6 | 0) >>> 0 < 4) {
  HEAP32[$5 >> 2] = $7;
  HEAP8[$this + 13 >> 0] = 0;
  $52 = $4;
  $storemerge$i = -559038737;
 } else {
  if (!(HEAP8[$this + 12 >> 0] | 0)) $v$2$i = HEAPU8[$6 >> 0] | (HEAPU8[$6 + 1 >> 0] | (HEAPU8[$6 + 2 >> 0] | HEAPU8[$6 + 3 >> 0] << 8) << 8) << 8; else $v$2$i = HEAPU8[$6 + 3 >> 0] | (HEAPU8[$6 + 2 >> 0] | (HEAPU8[$6 + 1 >> 0] | HEAPU8[$6 >> 0] << 8) << 8) << 8;
  $49 = $6 + 4 | 0;
  HEAP32[$5 >> 2] = $49;
  $52 = $49;
  $storemerge$i = $v$2$i;
 }
 HEAP32[$0 >> 2] = $storemerge$i;
 if (($4 | 0) == ($52 | 0)) {
  HEAP32[$5 >> 2] = $7;
  HEAP8[$this + 13 >> 0] = 0;
  $58 = $4;
  $storemerge$i45 = -17;
 } else {
  $v$211$i43 = HEAP8[$52 >> 0] | 0;
  $54 = $52 + 1 | 0;
  HEAP32[$5 >> 2] = $54;
  $58 = $54;
  $storemerge$i45 = $v$211$i43;
 }
 HEAP8[$this + 28 >> 0] = $storemerge$i45;
 if ((HEAP32[$3 >> 2] | 0) == ($58 | 0)) {
  HEAP32[$5 >> 2] = $58;
  HEAP8[$this + 13 >> 0] = 0;
  $66 = $58;
  $storemerge$i35 = -17;
 } else {
  $v$211$i = HEAP8[$58 >> 0] | 0;
  $61 = $58 + 1 | 0;
  HEAP32[$5 >> 2] = $61;
  $66 = $61;
  $storemerge$i35 = $v$211$i;
 }
 HEAP8[$this + 29 >> 0] = $storemerge$i35;
 $62 = $this + 30 | 0;
 $63 = HEAP32[$3 >> 2] | 0;
 $64 = $63;
 if (($64 - $66 | 0) >>> 0 < 2) {
  HEAP32[$5 >> 2] = $64;
  HEAP8[$this + 13 >> 0] = 0;
  $90 = $63;
  $storemerge$i27 = -16657;
 } else {
  if (!(HEAP8[$this + 12 >> 0] | 0)) $$sink = HEAPU8[$66 >> 0] | HEAPU8[$66 + 1 >> 0] << 8; else $$sink = HEAPU8[$66 + 1 >> 0] | HEAPU8[$66 >> 0] << 8;
  $86 = $66 + 2 | 0;
  HEAP32[$5 >> 2] = $86;
  $90 = $86;
  $storemerge$i27 = $$sink & 65535;
 }
 HEAP16[$62 >> 1] = $storemerge$i27;
 $87 = HEAP32[$this >> 2] | 0;
 $88 = $this + 32 | 0;
 if (($64 - $90 | 0) >>> 0 < $87 >>> 0) {
  HEAP32[$5 >> 2] = $64;
  HEAP8[$this + 13 >> 0] = 0;
  $119 = -559038737;
  $122 = 0;
  $124 = 1;
  $117 = $88;
  $118 = $117;
  HEAP32[$118 >> 2] = $119;
  $120 = $117 + 4 | 0;
  $121 = $120;
  HEAP32[$121 >> 2] = $122;
  $123 = $this + 16 | 0;
  HEAP8[$123 >> 0] = $124;
  return;
 }
 $97 = ($87 | 0) == 0;
 if (!(HEAP8[$this + 12 >> 0] | 0)) if ($97) {
  $125 = 0;
  $126 = 0;
 } else {
  $107 = 0;
  $108 = 0;
  $i1$06$i8 = $87 + -1 | 0;
  while (1) {
   $109 = _bitshift64Shl($107 | 0, $108 | 0, 8) | 0;
   $110 = tempRet0;
   $114 = HEAPU8[$90 + $i1$06$i8 >> 0] | $109;
   $i1$06$i8 = $i1$06$i8 + -1 | 0;
   if ($i1$06$i8 >>> 0 >= $87 >>> 0) {
    $125 = $114;
    $126 = $110;
    break;
   } else {
    $107 = $114;
    $108 = $110;
   }
  }
 } else if ($97) {
  $125 = 0;
  $126 = 0;
 } else {
  $98 = 0;
  $99 = 0;
  $i$07$i5 = 0;
  while (1) {
   $100 = _bitshift64Shl($98 | 0, $99 | 0, 8) | 0;
   $101 = tempRet0;
   $105 = HEAPU8[$90 + $i$07$i5 >> 0] | $100;
   $i$07$i5 = $i$07$i5 + 1 | 0;
   if (($i$07$i5 | 0) == ($87 | 0)) {
    $125 = $105;
    $126 = $101;
    break;
   } else {
    $98 = $105;
    $99 = $101;
   }
  }
 }
 HEAP32[$5 >> 2] = $90 + $87;
 $119 = $125;
 $122 = $126;
 $124 = HEAP8[$this + 13 >> 0] ^ 1;
 $117 = $88;
 $118 = $117;
 HEAP32[$118 >> 2] = $119;
 $120 = $117 + 4 | 0;
 $121 = $120;
 HEAP32[$121 >> 2] = $122;
 $123 = $this + 16 | 0;
 HEAP8[$123 >> 0] = $124;
 return;
}

function __ZN12dwarf2reader8LineInfo9ReadLinesEv($this) {
 $this = $this | 0;
 var $$ = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $44 = 0, $45 = 0, $46 = 0, $50 = 0, $51 = 0, $55 = 0, $65 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $have_pending_line$0$off04 = 0, $have_pending_line$1$off0 = 0, $lineptr$03 = 0, $lsm = 0, $oplength = 0, $pending_column_num$08 = 0, $pending_column_num$1 = 0, $pending_file_num$06 = 0, $pending_file_num$1 = 0, $pending_line_num$07 = 0, $pending_line_num$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $lsm = sp;
 $oplength = sp + 32 | 0;
 $1 = HEAP32[$this + 56 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $$ = (HEAP8[$3 + 25 >> 0] | 0) == 8 ? 12 : 4;
 $7 = $this + 72 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $this + 16 | 0;
 $10 = $this + 41 | 0;
 $11 = HEAP8[$10 >> 0] | 0;
 HEAP32[$lsm >> 2] = 1;
 $12 = $lsm + 8 | 0;
 $13 = $12;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 $17 = $lsm + 16 | 0;
 HEAP32[$17 >> 2] = 1;
 $18 = $lsm + 20 | 0;
 HEAP32[$18 >> 2] = 0;
 $19 = $lsm + 24 | 0;
 HEAP8[$19 >> 0] = $11;
 $20 = $lsm + 25 | 0;
 HEAP8[$20 >> 0] = 0;
 $21 = $lsm + 26 | 0;
 HEAP8[$21 >> 0] = 0;
 $28 = $1 + ((HEAP32[$9 >> 2] | 0) + $$) | 0;
 if ($8 >>> 0 >= $28 >>> 0) {
  $$lcssa = $28;
  HEAP32[$7 >> 2] = $$lcssa;
  STACKTOP = sp;
  return;
 }
 $30 = $this + 4 | 0;
 $32 = $3;
 $44 = 0;
 $45 = 0;
 $have_pending_line$0$off04 = 0;
 $lineptr$03 = $8;
 $pending_column_num$08 = 0;
 $pending_file_num$06 = 0;
 $pending_line_num$07 = 0;
 while (1) {
  do if (__ZN12dwarf2reader8LineInfo16ProcessOneOpcodeEPNS_10ByteReaderEPNS_15LineInfoHandlerERKNS_14LineInfoHeaderEPKcPNS_16LineStateMachineEPjjPb($32, HEAP32[$30 >> 2] | 0, $9, $lineptr$03, $lsm, $oplength, -1, 0) | 0) {
   if ($have_pending_line$0$off04) {
    $34 = HEAP32[$30 >> 2] | 0;
    $37 = HEAP32[(HEAP32[$34 >> 2] | 0) + 16 >> 2] | 0;
    $38 = $12;
    $46 = _i64Subtract(HEAP32[$38 >> 2] | 0, HEAP32[$38 + 4 >> 2] | 0, $44 | 0, $45 | 0) | 0;
    FUNCTION_TABLE_viiiiiiii[$37 & 3]($34, $44, $45, $46, tempRet0, $pending_file_num$06, $pending_line_num$07, $pending_column_num$08);
   }
   if (!(HEAP8[$21 >> 0] | 0)) {
    $55 = $12;
    $74 = HEAP32[$55 >> 2] | 0;
    $75 = HEAP32[$55 + 4 >> 2] | 0;
    $have_pending_line$1$off0 = 1;
    $pending_column_num$1 = HEAP32[$18 >> 2] | 0;
    $pending_file_num$1 = HEAP32[$lsm >> 2] | 0;
    $pending_line_num$1 = HEAP32[$17 >> 2] | 0;
    break;
   } else {
    $50 = HEAP8[$10 >> 0] | 0;
    HEAP32[$lsm >> 2] = 1;
    $51 = $12;
    HEAP32[$51 >> 2] = 0;
    HEAP32[$51 + 4 >> 2] = 0;
    HEAP32[$17 >> 2] = 1;
    HEAP32[$18 >> 2] = 0;
    HEAP8[$19 >> 0] = $50;
    HEAP8[$20 >> 0] = 0;
    HEAP8[$21 >> 0] = 0;
    $74 = $44;
    $75 = $45;
    $have_pending_line$1$off0 = 0;
    $pending_column_num$1 = $pending_column_num$08;
    $pending_file_num$1 = $pending_file_num$06;
    $pending_line_num$1 = $pending_line_num$07;
    break;
   }
  } else {
   $74 = $44;
   $75 = $45;
   $have_pending_line$1$off0 = $have_pending_line$0$off04;
   $pending_column_num$1 = $pending_column_num$08;
   $pending_file_num$1 = $pending_file_num$06;
   $pending_line_num$1 = $pending_line_num$07;
  } while (0);
  $65 = $lineptr$03 + (HEAP32[$oplength >> 2] | 0) | 0;
  $72 = $1 + ((HEAP32[$9 >> 2] | 0) + $$) | 0;
  if ($65 >>> 0 >= $72 >>> 0) {
   $$lcssa = $72;
   break;
  }
  $32 = HEAP32[$2 >> 2] | 0;
  $44 = $74;
  $45 = $75;
  $have_pending_line$0$off04 = $have_pending_line$1$off0;
  $lineptr$03 = $65;
  $pending_column_num$08 = $pending_column_num$1;
  $pending_file_num$06 = $pending_file_num$1;
  $pending_line_num$07 = $pending_line_num$1;
 }
 HEAP32[$7 >> 2] = $$lcssa;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$byval_copy = 0, $0 = 0, $10 = 0, $2 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $5 = 0, $50 = 0, $6 = 0, $63 = 0, $64 = 0, $67 = 0, $8 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy = sp + 424 | 0;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 428 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 164;
 $4 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $4;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 HEAP8[$__neg >> 0] = 0;
 $6 = HEAP32[$__e >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 $8 = HEAP32[$__iob + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $10 = $6;
 if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $$byval_copy, $__intl, $__loc, $8, $__err, $__neg, $5, $__wb, $__wn, $__wbuf + 400 | 0) | 0) {
  if (!(HEAP8[$__v >> 0] & 1)) HEAP8[$__v >> 0] = 0; else HEAP32[HEAP32[$__v + 8 >> 2] >> 2] = 0;
  HEAP32[$__v + 4 >> 2] = 0;
  if (HEAP8[$__neg >> 0] | 0) __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__v, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] & 31]($5, 45) | 0);
  $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] & 31]($5, 48) | 0;
  $27 = HEAP32[$__wb >> 2] | 0;
  $28 = HEAP32[$__wn >> 2] | 0;
  $29 = $28 + -4 | 0;
  L10 : do if ($27 >>> 0 < $29 >>> 0) {
   $__w$02 = $27;
   while (1) {
    if ((HEAP32[$__w$02 >> 2] | 0) != ($26 | 0)) {
     $__w$0$lcssa = $__w$02;
     break L10;
    }
    $33 = $__w$02 + 4 | 0;
    if ($33 >>> 0 < $29 >>> 0) $__w$02 = $33; else {
     $__w$0$lcssa = $33;
     break;
    }
   }
  } else $__w$0$lcssa = $27; while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v, $__w$0$lcssa, $28) | 0;
 }
 $35 = HEAP32[$__b >> 2] | 0;
 do if (!$35) $67 = 1; else {
  $38 = HEAP32[$35 + 12 >> 2] | 0;
  if (($38 | 0) == (HEAP32[$35 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 127]($35) | 0; else $$0$i$i$i$i = HEAP32[$38 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $67 = 1;
   break;
  } else {
   $67 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$6) label = 24; else {
  $50 = HEAP32[$10 + 12 >> 2] | 0;
  if (($50 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 127]($10) | 0; else $$0$i$i1$i$i = HEAP32[$50 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 24;
   break;
  } else if ($67) break; else {
   label = 26;
   break;
  }
 } while (0);
 if ((label | 0) == 24) if ($67) label = 26;
 if ((label | 0) == 26) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $63 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($4) | 0;
 $64 = HEAP32[$__wb >> 2] | 0;
 HEAP32[$__wb >> 2] = 0;
 if ($64) FUNCTION_TABLE_vi[HEAP32[$2 >> 2] & 255]($64);
 STACKTOP = sp;
 return $63 | 0;
}

function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $14 = 0, $19 = 0, $22 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $62 = 0, $65 = 0, $73 = 0, $82 = 0, $87 = 0, $89 = 0;
 L1 : do if ($__ct << 24 >> 24 == $__decimal_point << 24 >> 24) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if ((($22 & 1) == 0 ? ($22 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 32 | 0;
  $$0$i3 = $__atoms;
  while (1) {
   if ((HEAP8[$$0$i3 >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i3;
    break;
   }
   $$0$i3 = $$0$i3 + 1 | 0;
   if (($$0$i3 | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  if (($47 | 0) > 31) $$0 = -1; else {
   $50 = HEAP8[28892 + $47 >> 0] | 0;
   switch ($47 | 0) {
   case 24:
   case 25:
    {
     $51 = HEAP32[$__a_end >> 2] | 0;
     if (($51 | 0) != ($__a | 0)) if ((HEAPU8[$51 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
      $$0 = -1;
      break L1;
     }
     HEAP32[$__a_end >> 2] = $51 + 1;
     HEAP8[$51 >> 0] = $50;
     $$0 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$__exp >> 0] = 80;
     $62 = HEAP32[$__a_end >> 2] | 0;
     HEAP32[$__a_end >> 2] = $62 + 1;
     HEAP8[$62 >> 0] = $50;
     $$0 = 0;
     break L1;
     break;
    }
   default:
    {
     $65 = $50 & 95;
     if (($65 | 0) == (HEAP8[$__exp >> 0] | 0)) {
      HEAP8[$__exp >> 0] = $65 | 128;
      if (HEAP8[$__in_units >> 0] | 0) {
       HEAP8[$__in_units >> 0] = 0;
       $73 = HEAP8[$__grouping >> 0] | 0;
       if ((($73 & 1) == 0 ? ($73 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
        $82 = HEAP32[$__g_end >> 2] | 0;
        if (($82 - $__g | 0) < 160) {
         $87 = HEAP32[$__dc >> 2] | 0;
         HEAP32[$__g_end >> 2] = $82 + 4;
         HEAP32[$82 >> 2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end >> 2] | 0;
     HEAP32[$__a_end >> 2] = $89 + 1;
     HEAP8[$89 >> 0] = $50;
     if (($47 | 0) > 21) {
      $$0 = 0;
      break L1;
     }
     HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
     $$0 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $10 = 0, $14 = 0, $17 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $39 = 0, $42 = 0, $47 = 0, $48 = 0, $5 = 0, $53 = 0, $55 = 0, $58 = 0, $62 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $77 = 0, $78 = 0, $87 = 0, $90 = 0, $95 = 0, $96 = 0;
 do if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this + 1 >> 0] = 0;
  HEAP8[$this >> 0] = 0;
 } else {
  $5 = $this + 8 | 0;
  HEAP8[HEAP32[$5 >> 2] >> 0] = 0;
  $7 = $this + 4 | 0;
  HEAP32[$7 >> 2] = 0;
  $$pre$i$i$i = HEAP8[$this >> 0] | 0;
  if (!($$pre$i$i$i & 1)) {
   $14 = $$pre$i$i$i;
   $23 = 10;
  } else {
   $10 = HEAP32[$this >> 2] | 0;
   $14 = $10 & 255;
   $23 = ($10 & -2) + -1 | 0;
  }
  if (!($14 & 1)) {
   $17 = ($14 & 255) >>> 1;
   if (($14 & 255) < 22) {
    $22 = 10;
    $42 = $17;
    $95 = 1;
   } else {
    $22 = ($17 + 16 & 240) + -1 | 0;
    $42 = $17;
    $95 = 1;
   }
  } else {
   $22 = 10;
   $42 = 0;
   $95 = 0;
  }
  if (($22 | 0) != ($23 | 0)) {
   if (($22 | 0) == 10) {
    $29 = $this + 1 | 0;
    $30 = HEAP32[$5 >> 2] | 0;
    if ($95) {
     _memcpy($29 | 0, $30 | 0, (($14 & 255) >>> 1) + 1 | 0) | 0;
     _free($30);
    } else {
     HEAP8[$29 >> 0] = HEAP8[$30 >> 0] | 0;
     _free($30);
    }
    HEAP8[$this >> 0] = $42 << 1;
    break;
   }
   $26 = $22 + 1 | 0;
   $27 = _malloc($26) | 0;
   if (!($22 >>> 0 <= $23 >>> 0 & ($27 | 0) == 0)) {
    if ($95) _memcpy($27 | 0, $this + 1 | 0, (($14 & 255) >>> 1) + 1 | 0) | 0; else {
     $39 = HEAP32[$5 >> 2] | 0;
     HEAP8[$27 >> 0] = HEAP8[$39 >> 0] | 0;
     _free($39);
    }
    HEAP32[$this >> 2] = $26 | 1;
    HEAP32[$7 >> 2] = $42;
    HEAP32[$5 >> 2] = $27;
   }
  }
 } while (0);
 HEAP32[$this >> 2] = HEAP32[$0 >> 2];
 HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $47 = $this + 12 | 0;
 $48 = $0 + 12 | 0;
 do if (!(HEAP8[$47 >> 0] & 1)) {
  HEAP8[$47 + 1 >> 0] = 0;
  HEAP8[$47 >> 0] = 0;
 } else {
  $53 = $this + 20 | 0;
  HEAP8[HEAP32[$53 >> 2] >> 0] = 0;
  $55 = $this + 16 | 0;
  HEAP32[$55 >> 2] = 0;
  $$pre$i$i$i2 = HEAP8[$47 >> 0] | 0;
  if (!($$pre$i$i$i2 & 1)) {
   $62 = $$pre$i$i$i2;
   $71 = 10;
  } else {
   $58 = HEAP32[$47 >> 2] | 0;
   $62 = $58 & 255;
   $71 = ($58 & -2) + -1 | 0;
  }
  if (!($62 & 1)) {
   $65 = ($62 & 255) >>> 1;
   if (($62 & 255) < 22) {
    $70 = 10;
    $90 = $65;
    $96 = 1;
   } else {
    $70 = ($65 + 16 & 240) + -1 | 0;
    $90 = $65;
    $96 = 1;
   }
  } else {
   $70 = 10;
   $90 = 0;
   $96 = 0;
  }
  if (($70 | 0) != ($71 | 0)) {
   if (($70 | 0) == 10) {
    $77 = $47 + 1 | 0;
    $78 = HEAP32[$53 >> 2] | 0;
    if ($96) {
     _memcpy($77 | 0, $78 | 0, (($62 & 255) >>> 1) + 1 | 0) | 0;
     _free($78);
    } else {
     HEAP8[$77 >> 0] = HEAP8[$78 >> 0] | 0;
     _free($78);
    }
    HEAP8[$47 >> 0] = $90 << 1;
    break;
   }
   $74 = $70 + 1 | 0;
   $75 = _malloc($74) | 0;
   if (!($70 >>> 0 <= $71 >>> 0 & ($75 | 0) == 0)) {
    if ($96) _memcpy($75 | 0, $47 + 1 | 0, (($62 & 255) >>> 1) + 1 | 0) | 0; else {
     $87 = HEAP32[$53 >> 2] | 0;
     HEAP8[$75 >> 0] = HEAP8[$87 >> 0] | 0;
     _free($87);
    }
    HEAP32[$47 >> 2] = $74 | 1;
    HEAP32[$55 >> 2] = $90;
    HEAP32[$53 >> 2] = $75;
   }
  }
 } while (0);
 HEAP32[$47 >> 2] = HEAP32[$48 >> 2];
 HEAP32[$47 + 4 >> 2] = HEAP32[$48 + 4 >> 2];
 HEAP32[$47 + 8 >> 2] = HEAP32[$48 + 8 >> 2];
 HEAP32[$48 >> 2] = 0;
 HEAP32[$48 + 4 >> 2] = 0;
 HEAP32[$48 + 8 >> 2] = 0;
 return;
}

function __ZN15google_breakpad11DumpSymbols17LoadCommandDumper14SegmentCommandERKNS_6mach_o7SegmentE($this, $segment) {
 $this = $this | 0;
 $segment = $segment | 0;
 var $$02 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $23 = 0, $32 = 0, $4 = 0, $45 = 0, $5 = 0, $8 = 0, $section_map = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $section_map = sp + 24 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$section_map + 4 >> 2] = 0;
 HEAP32[$section_map + 8 >> 2] = 0;
 $4 = $section_map + 4 | 0;
 HEAP32[$section_map >> 2] = $4;
 $5 = $this + 12 | 0;
 do if (__ZNK15google_breakpad6mach_o6Reader18MapSegmentSectionsERKNS0_7SegmentEPNSt3__13mapINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_7SectionENS5_4lessISC_EENSA_INS5_4pairIKSC_SD_EEEEEE(HEAP32[$5 >> 2] | 0, $segment, $section_map) | 0) {
  $8 = $segment + 16 | 0;
  if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($8, 22181) | 0)) {
   $11 = $this + 8 | 0;
   $14 = $segment + 32 | 0;
   __ZN15google_breakpad6Module14SetLoadAddressEy(HEAP32[$11 >> 2] | 0, HEAP32[$14 >> 2] | 0, HEAP32[$14 + 4 >> 2] | 0);
   if ((HEAP32[$this + 16 >> 2] | 0) == 1) {
    $$02 = 1;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 22188, 10);
   $23 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($section_map, $0) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   if (($23 | 0) == ($4 | 0)) {
    $$02 = 1;
    break;
   }
   __ZNK15google_breakpad11DumpSymbols7ReadCFIEPNS_6ModuleERKNS_6mach_o6ReaderERKNS3_7SectionEb(HEAP32[$this + 4 >> 2] | 0, HEAP32[$11 >> 2] | 0, HEAP32[$5 >> 2] | 0, $23 + 32 | 0, 1) | 0;
   $$02 = 1;
   break;
  }
  if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($8, 22199) | 0)) {
   $32 = $this + 16 | 0;
   if ((HEAP32[$32 >> 2] | 0) != 2) {
    if (!(__ZNK15google_breakpad11DumpSymbols9ReadDwarfEPNS_6ModuleERKNS_6mach_o6ReaderERKNSt3__13mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS3_7SectionENS7_4lessISE_EENSC_INS7_4pairIKSE_SF_EEEEEEb(HEAP32[$this + 4 >> 2] | 0, HEAP32[$this + 8 >> 2] | 0, HEAP32[$5 >> 2] | 0, $section_map, (HEAP8[$this + 20 >> 0] | 0) != 0) | 0)) {
     $$02 = 0;
     break;
    }
    if ((HEAP32[$32 >> 2] | 0) == 1) {
     $$02 = 1;
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 22207, 13);
   $45 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($section_map, $1) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   if (($45 | 0) == ($4 | 0)) $$02 = 1; else {
    __ZNK15google_breakpad11DumpSymbols7ReadCFIEPNS_6ModuleERKNS_6mach_o6ReaderERKNS3_7SectionEb(HEAP32[$this + 4 >> 2] | 0, HEAP32[$this + 8 >> 2] | 0, HEAP32[$5 >> 2] | 0, $45 + 32 | 0, 0) | 0;
    $$02 = 1;
   }
  } else $$02 = 1;
 } else $$02 = 0; while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($section_map, HEAP32[$4 >> 2] | 0);
 STACKTOP = sp;
 return $$02 | 0;
}

function __ZN16MacFileUtilities11MachoWalker14WalkHeaderCoreEijb($this, $offset, $number_of_commands, $swap) {
 $this = $this | 0;
 $offset = $offset | 0;
 $number_of_commands = $number_of_commands | 0;
 $swap = $swap | 0;
 var $$0 = 0, $$01$lcssa2 = 0, $$015 = 0, $$015$us = 0, $$lcssa3 = 0, $$lcssa4 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $3 = 0, $34 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $57 = 0, $6 = 0, $cmd = 0, $i$06 = 0, $i$06$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $cmd = sp;
 if (!$number_of_commands) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $1 = $this + 4 | 0;
 $2 = $this + 12 | 0;
 $3 = $cmd + 4 | 0;
 $4 = $this + 16 | 0;
 $5 = $this + 8 | 0;
 L4 : do if ($swap) {
  $$015$us = $offset;
  $i$06$us = 0;
  while (1) {
   $6 = HEAP32[$1 >> 2] | 0;
   if (!$6) {
    if ((_pread(HEAP32[$this >> 2] | 0, $cmd | 0, 8, $$015$us | 0) | 0) != 8) {
     $$0 = 0;
     label = 21;
     break;
    }
   } else {
    if (($$015$us | 0) < 0) {
     $$0 = 0;
     label = 21;
     break;
    }
    $10 = HEAP32[$5 >> 2] | 0;
    if (($$015$us + 8 | 0) >>> 0 > $10 >>> 0) {
     $$01$lcssa2 = $$015$us;
     $$lcssa3 = $6;
     $$lcssa4 = $10;
     break L4;
    }
    $13 = $6 + $$015$us | 0;
    $14 = $13;
    $17 = $13 + 4 | 0;
    $18 = HEAPU8[$17 >> 0] | HEAPU8[$17 + 1 >> 0] << 8 | HEAPU8[$17 + 2 >> 0] << 16 | HEAPU8[$17 + 3 >> 0] << 24;
    $19 = $cmd;
    HEAP32[$19 >> 2] = HEAPU8[$14 >> 0] | HEAPU8[$14 + 1 >> 0] << 8 | HEAPU8[$14 + 2 >> 0] << 16 | HEAPU8[$14 + 3 >> 0] << 24;
    HEAP32[$19 + 4 >> 2] = $18;
   }
   __Z26breakpad_swap_load_commandP12load_command($cmd);
   $26 = HEAP32[$2 >> 2] | 0;
   if ($26) if (!(FUNCTION_TABLE_iiiiii[$26 & 63]($this, $cmd, $$015$us, 1, HEAP32[$4 >> 2] | 0) | 0)) {
    $$0 = 1;
    label = 21;
    break;
   }
   $i$06$us = $i$06$us + 1 | 0;
   if ($i$06$us >>> 0 >= $number_of_commands >>> 0) {
    $$0 = 1;
    label = 21;
    break;
   } else $$015$us = (HEAP32[$3 >> 2] | 0) + $$015$us | 0;
  }
  if ((label | 0) == 21) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  $$015 = $offset;
  $i$06 = 0;
  while (1) {
   $34 = HEAP32[$1 >> 2] | 0;
   if (!$34) {
    if ((_pread(HEAP32[$this >> 2] | 0, $cmd | 0, 8, $$015 | 0) | 0) != 8) {
     $$0 = 0;
     label = 21;
     break;
    }
   } else {
    if (($$015 | 0) < 0) {
     $$0 = 0;
     label = 21;
     break;
    }
    $38 = HEAP32[$5 >> 2] | 0;
    if (($$015 + 8 | 0) >>> 0 > $38 >>> 0) {
     $$01$lcssa2 = $$015;
     $$lcssa3 = $34;
     $$lcssa4 = $38;
     break L4;
    }
    $41 = $34 + $$015 | 0;
    $42 = $41;
    $45 = $41 + 4 | 0;
    $46 = HEAPU8[$45 >> 0] | HEAPU8[$45 + 1 >> 0] << 8 | HEAPU8[$45 + 2 >> 0] << 16 | HEAPU8[$45 + 3 >> 0] << 24;
    $47 = $cmd;
    HEAP32[$47 >> 2] = HEAPU8[$42 >> 0] | HEAPU8[$42 + 1 >> 0] << 8 | HEAPU8[$42 + 2 >> 0] << 16 | HEAPU8[$42 + 3 >> 0] << 24;
    HEAP32[$47 + 4 >> 2] = $46;
   }
   $57 = HEAP32[$2 >> 2] | 0;
   if ($57) if (!(FUNCTION_TABLE_iiiiii[$57 & 63]($this, $cmd, $$015, 0, HEAP32[$4 >> 2] | 0) | 0)) {
    $$0 = 1;
    label = 21;
    break;
   }
   $i$06 = $i$06 + 1 | 0;
   if ($i$06 >>> 0 >= $number_of_commands >>> 0) {
    $$0 = 1;
    label = 21;
    break;
   } else $$015 = (HEAP32[$3 >> 2] | 0) + $$015 | 0;
  }
  if ((label | 0) == 21) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 if ($$lcssa4 >>> 0 <= $$01$lcssa2 >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 _memcpy($cmd | 0, $$lcssa3 + $$01$lcssa2 | 0, $$lcssa4 - $$01$lcssa2 | 0) | 0;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16vectorIN12dwarf2reader15CompilationUnit6AbbrevENS_9allocatorIS3_EEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i = 0, $$0$i11 = 0, $$0$i9 = 0, $1 = 0, $10 = 0, $18 = 0, $2 = 0, $22 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $35 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $5 = 0, $54 = 0, $55 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $70 = 0, $72 = 0, $74 = 0, $82 = 0, $9 = 0, $__f$01$i$i$i$i$i$i$i$i$i5 = 0, $__v = 0, sp = 0, $__f$01$i$i$i$i$i$i$i$i$i5$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v = sp;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = $3;
 if ($1 - $5 >> 5 >>> 0 >= $__n >>> 0) {
  $$0$i = $__n;
  $9 = $3;
  do {
   HEAP32[$9 >> 2] = 0;
   HEAP32[$9 + 4 >> 2] = 0;
   HEAP32[$9 + 8 >> 2] = 0;
   HEAP32[$9 + 12 >> 2] = 0;
   HEAP32[$9 + 16 >> 2] = 0;
   HEAP32[$9 + 20 >> 2] = 0;
   HEAP32[$9 + 24 >> 2] = 0;
   HEAP32[$9 + 28 >> 2] = 0;
   $10 = $9 + 16 | 0;
   HEAP32[$10 >> 2] = $10;
   HEAP32[$9 + 20 >> 2] = $10;
   HEAP32[$9 + 24 >> 2] = 0;
   $9 = (HEAP32[$2 >> 2] | 0) + 32 | 0;
   HEAP32[$2 >> 2] = $9;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  STACKTOP = sp;
  return;
 }
 $18 = HEAP32[$this >> 2] | 0;
 $22 = ($5 - $18 >> 5) + $__n | 0;
 if ($22 >>> 0 > 134217727) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $25 = $18;
 $26 = $1 - $25 | 0;
 if ($26 >> 5 >>> 0 < 67108863) {
  $29 = $26 >> 4;
  $$0$i9 = $29 >>> 0 < $22 >>> 0 ? $22 : $29;
 } else $$0$i9 = 134217727;
 $35 = (HEAP32[$2 >> 2] | 0) - $25 >> 5;
 HEAP32[$__v + 12 >> 2] = 0;
 HEAP32[$__v + 16 >> 2] = $this + 8;
 if (!$$0$i9) $41 = 0; else $41 = __Znwj($$0$i9 << 5) | 0;
 HEAP32[$__v >> 2] = $41;
 $42 = $41 + ($35 << 5) | 0;
 $43 = $__v + 8 | 0;
 HEAP32[$43 >> 2] = $42;
 $44 = $__v + 4 | 0;
 HEAP32[$44 >> 2] = $42;
 HEAP32[$__v + 12 >> 2] = $41 + ($$0$i9 << 5);
 $$0$i11 = $__n;
 $47 = $42;
 while (1) {
  HEAP32[$47 >> 2] = 0;
  HEAP32[$47 + 4 >> 2] = 0;
  HEAP32[$47 + 8 >> 2] = 0;
  HEAP32[$47 + 12 >> 2] = 0;
  HEAP32[$47 + 16 >> 2] = 0;
  HEAP32[$47 + 20 >> 2] = 0;
  HEAP32[$47 + 24 >> 2] = 0;
  HEAP32[$47 + 28 >> 2] = 0;
  $48 = $47 + 16 | 0;
  HEAP32[$48 >> 2] = $48;
  HEAP32[$47 + 20 >> 2] = $48;
  HEAP32[$47 + 24 >> 2] = 0;
  $$0$i11 = $$0$i11 + -1 | 0;
  if (!$$0$i11) break; else $47 = $47 + 32 | 0;
 }
 HEAP32[$43 >> 2] = $41 + ($35 + $__n << 5);
 __ZNSt3__16vectorIN12dwarf2reader15CompilationUnit6AbbrevENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v);
 $54 = HEAP32[$44 >> 2] | 0;
 $55 = HEAP32[$43 >> 2] | 0;
 if (($55 | 0) != ($54 | 0)) {
  $61 = ~(($55 + -32 - $54 | 0) >>> 5);
  $63 = $55;
  do {
   $64 = $63 + -16 | 0;
   $65 = $63 + -8 | 0;
   if (HEAP32[$65 >> 2] | 0) {
    $70 = HEAP32[$63 + -12 >> 2] | 0;
    $72 = (HEAP32[$64 >> 2] | 0) + 4 | 0;
    $74 = HEAP32[$70 >> 2] | 0;
    HEAP32[$74 + 4 >> 2] = HEAP32[$72 >> 2];
    HEAP32[HEAP32[$72 >> 2] >> 2] = $74;
    HEAP32[$65 >> 2] = 0;
    if (($70 | 0) != ($64 | 0)) {
     $__f$01$i$i$i$i$i$i$i$i$i5 = $70;
     do {
      $__f$01$i$i$i$i$i$i$i$i$i5$looptemp = $__f$01$i$i$i$i$i$i$i$i$i5;
      $__f$01$i$i$i$i$i$i$i$i$i5 = HEAP32[$__f$01$i$i$i$i$i$i$i$i$i5 + 4 >> 2] | 0;
      __ZdlPv($__f$01$i$i$i$i$i$i$i$i$i5$looptemp);
     } while (($__f$01$i$i$i$i$i$i$i$i$i5 | 0) != ($64 | 0));
    }
   }
   $63 = $63 + -32 | 0;
  } while (($63 | 0) != ($54 | 0));
  HEAP32[$43 >> 2] = $55 + ($61 << 5);
 }
 $82 = HEAP32[$__v >> 2] | 0;
 if (!$82) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($82);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIN12dwarf2reader15CompilationUnit6AbbrevENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i = 0, $1 = 0, $13 = 0, $14 = 0, $17 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0, $45 = 0, $47 = 0, $52 = 0, $53 = 0, $58 = 0, $61 = 0, $63 = 0, $69 = 0, $70 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $85 = 0, $87 = 0, $89 = 0, $97 = 0, $__f$01$i$i$i$i$i$i$i$i$i5 = 0, $__v = 0, sp = 0, $58$looptemp = 0, $__f$01$i$i$i$i$i$i$i$i$i5$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v = sp;
 $1 = $this + 4 | 0;
 $3 = HEAP32[$this >> 2] | 0;
 $8 = ((HEAP32[$1 >> 2] | 0) - $3 >> 5) + 1 | 0;
 if ($8 >>> 0 > 134217727) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $13 = $3;
 $14 = (HEAP32[$this + 8 >> 2] | 0) - $13 | 0;
 if ($14 >> 5 >>> 0 < 67108863) {
  $17 = $14 >> 4;
  $$0$i = $17 >>> 0 < $8 >>> 0 ? $8 : $17;
 } else $$0$i = 134217727;
 $23 = (HEAP32[$1 >> 2] | 0) - $13 >> 5;
 HEAP32[$__v + 12 >> 2] = 0;
 HEAP32[$__v + 16 >> 2] = $this + 8;
 if (!$$0$i) $29 = 0; else $29 = __Znwj($$0$i << 5) | 0;
 HEAP32[$__v >> 2] = $29;
 $30 = $29 + ($23 << 5) | 0;
 $31 = $__v + 8 | 0;
 HEAP32[$31 >> 2] = $30;
 $32 = $__v + 4 | 0;
 HEAP32[$32 >> 2] = $30;
 HEAP32[$__v + 12 >> 2] = $29 + ($$0$i << 5);
 HEAP32[$30 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$30 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
 HEAP32[$30 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
 HEAP8[$30 + 12 >> 0] = HEAP8[$__x + 12 >> 0] | 0;
 $35 = $29 + ($23 << 5) + 16 | 0;
 $36 = $__x + 16 | 0;
 HEAP32[$35 >> 2] = $35;
 HEAP32[$29 + ($23 << 5) + 20 >> 2] = $35;
 $38 = $29 + ($23 << 5) + 24 | 0;
 HEAP32[$38 >> 2] = 0;
 $40 = HEAP32[$__x + 20 >> 2] | 0;
 if (($40 | 0) != ($36 | 0)) {
  $45 = $40;
  $58 = $35;
  $61 = 0;
  $63 = $40;
  do {
   $58$looptemp = $58;
   $58 = __Znwj(16) | 0;
   $47 = $45 + 8 | 0;
   $52 = HEAP32[$47 + 4 >> 2] | 0;
   $53 = $58 + 8 | 0;
   HEAP32[$53 >> 2] = HEAP32[$47 >> 2];
   HEAP32[$53 + 4 >> 2] = $52;
   HEAP32[$58 + 4 >> 2] = $35;
   HEAP32[$58 >> 2] = $58$looptemp;
   HEAP32[$58$looptemp + 4 >> 2] = $58;
   HEAP32[$35 >> 2] = $58;
   $61 = $61 + 1 | 0;
   HEAP32[$38 >> 2] = $61;
   $63 = HEAP32[$63 + 4 >> 2] | 0;
   $45 = $63;
  } while (($45 | 0) != ($36 | 0));
 }
 HEAP32[$31 >> 2] = $29 + ($23 + 1 << 5);
 __ZNSt3__16vectorIN12dwarf2reader15CompilationUnit6AbbrevENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v);
 $69 = HEAP32[$32 >> 2] | 0;
 $70 = HEAP32[$31 >> 2] | 0;
 if (($70 | 0) != ($69 | 0)) {
  $76 = ~(($70 + -32 - $69 | 0) >>> 5);
  $78 = $70;
  do {
   $79 = $78 + -16 | 0;
   $80 = $78 + -8 | 0;
   if (HEAP32[$80 >> 2] | 0) {
    $85 = HEAP32[$78 + -12 >> 2] | 0;
    $87 = (HEAP32[$79 >> 2] | 0) + 4 | 0;
    $89 = HEAP32[$85 >> 2] | 0;
    HEAP32[$89 + 4 >> 2] = HEAP32[$87 >> 2];
    HEAP32[HEAP32[$87 >> 2] >> 2] = $89;
    HEAP32[$80 >> 2] = 0;
    if (($85 | 0) != ($79 | 0)) {
     $__f$01$i$i$i$i$i$i$i$i$i5 = $85;
     do {
      $__f$01$i$i$i$i$i$i$i$i$i5$looptemp = $__f$01$i$i$i$i$i$i$i$i$i5;
      $__f$01$i$i$i$i$i$i$i$i$i5 = HEAP32[$__f$01$i$i$i$i$i$i$i$i$i5 + 4 >> 2] | 0;
      __ZdlPv($__f$01$i$i$i$i$i$i$i$i$i5$looptemp);
     } while (($__f$01$i$i$i$i$i$i$i$i$i5 | 0) != ($79 | 0));
    }
   }
   $78 = $78 + -32 | 0;
  } while (($78 | 0) != ($69 | 0));
  HEAP32[$31 >> 2] = $70 + ($76 << 5);
 }
 $97 = HEAP32[$__v >> 2] | 0;
 if (!$97) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($97);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $10 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $34 = 0, $36 = 0, $4 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $64 = 0, $65 = 0, $8 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$02 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 24 | 0;
 $__wbuf = sp + 32 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 28 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 164;
 $4 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $4;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 HEAP8[$__neg >> 0] = 0;
 $6 = HEAP32[$__e >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 $8 = HEAP32[$__iob + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $10 = $6;
 if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $$byval_copy, $__intl, $__loc, $8, $__err, $__neg, $5, $__wb, $__wn, $__wbuf + 100 | 0) | 0) {
  if (!(HEAP8[$__v >> 0] & 1)) {
   HEAP8[$__v + 1 >> 0] = 0;
   HEAP8[$__v >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__v + 8 >> 2] >> 0] = 0;
   HEAP32[$__v + 4 >> 2] = 0;
  }
  if (HEAP8[$__neg >> 0] | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 31]($5, 45) | 0);
  $27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 31]($5, 48) | 0;
  $28 = HEAP32[$__wb >> 2] | 0;
  $29 = HEAP32[$__wn >> 2] | 0;
  $30 = $29 + -1 | 0;
  L10 : do if ($28 >>> 0 < $30 >>> 0) {
   $__w$02 = $28;
   while (1) {
    if ((HEAP8[$__w$02 >> 0] | 0) != $27 << 24 >> 24) {
     $__w$0$lcssa = $__w$02;
     break L10;
    }
    $34 = $__w$02 + 1 | 0;
    if ($34 >>> 0 < $30 >>> 0) $__w$02 = $34; else {
     $__w$0$lcssa = $34;
     break;
    }
   }
  } else $__w$0$lcssa = $28; while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v, $__w$0$lcssa, $29) | 0;
 }
 $36 = HEAP32[$__b >> 2] | 0;
 do if (!$36) $49 = 0; else if ((HEAP32[$36 + 12 >> 2] | 0) == (HEAP32[$36 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] & 127]($36) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $49 = 0;
  break;
 } else {
  $49 = HEAP32[$__b >> 2] | 0;
  break;
 } else $49 = $36; while (0);
 $48 = ($49 | 0) == 0;
 do if (!$6) label = 21; else {
  if ((HEAP32[$10 + 12 >> 2] | 0) == (HEAP32[$10 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 127]($10) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 21;
   break;
  }
  if (!$48) label = 22;
 } while (0);
 if ((label | 0) == 21) if ($48) label = 22;
 if ((label | 0) == 22) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $64 = HEAP32[$__b >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($4) | 0;
 $65 = HEAP32[$__wb >> 2] | 0;
 HEAP32[$__wb >> 2] = 0;
 if ($65) FUNCTION_TABLE_vi[HEAP32[$2 >> 2] & 255]($65);
 STACKTOP = sp;
 return $64 | 0;
}

function __ZN12dwarf2reader13DIEDispatcher8StartDIEEyNS_8DwarfTagE($this, $0, $1, $tag) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $tag = $tag | 0;
 var $$0 = 0, $$pr$pre = 0, $$pr9 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $26 = 0, $3 = 0, $30 = 0, $39 = 0, $40 = 0, $49 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $63 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $70 = 0, $72 = 0, $73 = 0, $79 = 0, $8 = 0, $80 = 0, $86 = 0, $entry$sroa$4 = 0, $handler$06 = 0, $handler$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $entry$sroa$4 = sp;
 $2 = $this + 24 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 L1 : do if (!$3) label = 10; else {
  $8 = $3 + -1 + (HEAP32[$this + 20 >> 2] | 0) | 0;
  $13 = HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($8 >>> 8 << 2) >> 2] | 0;
  $14 = $8 & 255;
  if (!($13 + ($14 << 4) | 0)) label = 10; else {
   $17 = $13 + ($14 << 4) + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   if (!$18) $handler$06 = 0; else {
    $20 = $13 + ($14 << 4) + 12 | 0;
    do if (!(HEAP8[$20 >> 0] | 0)) {
     HEAP8[$20 >> 0] = 1;
     $26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 32 >> 2] & 127]($18) | 0;
     $$pr$pre = HEAP32[$17 >> 2] | 0;
     if ($26) if (!$$pr$pre) {
      $handler$06 = 0;
      break L1;
     } else {
      $$pr9 = $$pr$pre;
      break;
     }
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pr$pre >> 2] | 0) + 40 >> 2] & 255]($$pr$pre);
     $30 = HEAP32[$17 >> 2] | 0;
     if (!(($30 | 0) == 0 ? 1 : ($30 | 0) == (HEAP32[$this + 28 >> 2] | 0))) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$30 >> 2] | 0) + 4 >> 2] & 255]($30);
     HEAP32[$17 >> 2] = 0;
     $$0 = 0;
     STACKTOP = sp;
     return $$0 | 0;
    } else $$pr9 = $18; while (0);
    $49 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$$pr9 >> 2] | 0) + 36 >> 2] & 31]($$pr9, $0, $1, $tag) | 0;
    if (!$49) if (!(HEAP32[$17 >> 2] | 0)) $handler$06 = 0; else {
     $handler$07 = 0;
     label = 14;
    } else {
     $handler$07 = $49;
     label = 14;
    }
   }
  }
 } while (0);
 if ((label | 0) == 10) {
  $39 = $this + 28 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  if (FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$40 >> 2] | 0) + 48 >> 2] & 31]($40, $0, $1, $tag) | 0) {
   $handler$07 = HEAP32[$39 >> 2] | 0;
   label = 14;
  } else {
   $handler$07 = 0;
   label = 14;
  }
 }
 if ((label | 0) == 14) {
  $52 = $this + 12 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  $54 = $this + 8 | 0;
  $55 = HEAP32[$54 >> 2] | 0;
  $63 = $this + 20 | 0;
  $64 = HEAP32[$63 >> 2] | 0;
  $65 = HEAP32[$2 >> 2] | 0;
  if (((($53 | 0) == ($55 | 0) ? 0 : ($53 - $55 << 6) + -1 | 0) | 0) == ($65 + $64 | 0)) {
   __ZNSt3__15dequeIN12dwarf2reader13DIEDispatcher12HandlerStackENS_9allocatorIS3_EEE19__add_back_capacityEv($this + 4 | 0);
   $69 = HEAP32[$2 >> 2] | 0;
   $70 = HEAP32[$63 >> 2] | 0;
   $72 = HEAP32[$52 >> 2] | 0;
   $73 = HEAP32[$54 >> 2] | 0;
  } else {
   $69 = $65;
   $70 = $64;
   $72 = $53;
   $73 = $55;
  }
  $68 = $69 + $70 | 0;
  if (($72 | 0) == ($73 | 0)) $80 = 0; else $80 = (HEAP32[$73 + ($68 >>> 8 << 2) >> 2] | 0) + (($68 & 255) << 4) | 0;
  $79 = $80;
  HEAP32[$79 >> 2] = $0;
  HEAP32[$79 + 4 >> 2] = $1;
  HEAP32[$80 + 8 >> 2] = $handler$07;
  HEAP8[$80 + 12 >> 0] = 0;
  $86 = $80 + 13 | 0;
  HEAP8[$86 >> 0] = HEAP8[$entry$sroa$4 >> 0] | 0;
  HEAP8[$86 + 1 >> 0] = HEAP8[$entry$sroa$4 + 1 >> 0] | 0;
  HEAP8[$86 + 2 >> 0] = HEAP8[$entry$sroa$4 + 2 >> 0] | 0;
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  $handler$06 = $handler$07;
 }
 $$0 = ($handler$06 | 0) != 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $__wch = $__wch | 0;
 var $$in = 0, $$pre = 0, $10 = 0, $109 = 0, $114 = 0, $121 = 0, $126 = 0, $142 = 0, $147 = 0, $15 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $38 = 0, $4 = 0, $45 = 0, $48 = 0, $5 = 0, $57 = 0, $58 = 0, $61 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $8 = 0, $84 = 0, $85 = 0, $87 = 0, $93 = 0, $98 = 0;
 $2 = $this + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $this + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  HEAP32[$2 >> 2] = $5;
  $$in = $5;
 } else $$in = $3;
 $7 = $$in;
 $8 = $__wch & 24;
 if (!$8) {
  $10 = $agg$result;
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  $15 = $agg$result + 8 | 0;
  HEAP32[$15 >> 2] = -1;
  HEAP32[$15 + 4 >> 2] = -1;
  return;
 }
 if (($__way | 0) == 1 & ($8 | 0) == 24) {
  $21 = $agg$result;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$21 + 4 >> 2] = 0;
  $26 = $agg$result + 8 | 0;
  HEAP32[$26 >> 2] = -1;
  HEAP32[$26 + 4 >> 2] = -1;
  return;
 }
 L12 : do switch ($__way | 0) {
 case 0:
  {
   $70 = 0;
   $71 = 0;
   break;
  }
 case 1:
  {
   if (!($__wch & 8)) {
    $45 = $5 - (HEAP32[$this + 20 >> 2] | 0) | 0;
    $70 = $45;
    $71 = (($45 | 0) < 0) << 31 >> 31;
    break L12;
   } else {
    $38 = (HEAP32[$this + 12 >> 2] | 0) - (HEAP32[$this + 8 >> 2] | 0) | 0;
    $70 = $38;
    $71 = (($38 | 0) < 0) << 31 >> 31;
    break L12;
   }
   break;
  }
 case 2:
  {
   $48 = $this + 32 | 0;
   if (!(HEAP8[$48 >> 0] & 1)) $57 = $48 + 1 | 0; else $57 = HEAP32[$this + 40 >> 2] | 0;
   $58 = $$in - $57 | 0;
   $70 = $58;
   $71 = (($58 | 0) < 0) << 31 >> 31;
   break;
  }
 default:
  {
   $61 = $agg$result;
   HEAP32[$61 >> 2] = 0;
   HEAP32[$61 + 4 >> 2] = 0;
   $66 = $agg$result + 8 | 0;
   HEAP32[$66 >> 2] = -1;
   HEAP32[$66 + 4 >> 2] = -1;
   return;
  }
 } while (0);
 $72 = _i64Add($70 | 0, $71 | 0, $0 | 0, $1 | 0) | 0;
 $73 = tempRet0;
 if (($73 | 0) >= 0) {
  $75 = $this + 32 | 0;
  if (!(HEAP8[$75 >> 0] & 1)) $84 = $75 + 1 | 0; else $84 = HEAP32[$this + 40 >> 2] | 0;
  $85 = $$in - $84 | 0;
  $87 = (($85 | 0) < 0) << 31 >> 31;
  if (!(($87 | 0) < ($73 | 0) | ($87 | 0) == ($73 | 0) & $85 >>> 0 < $72 >>> 0)) {
   $$pre = $__wch & 8;
   if (!(($72 | 0) == 0 & ($73 | 0) == 0)) {
    if ($$pre) if (!(HEAP32[$this + 12 >> 2] | 0)) {
     $109 = $agg$result;
     HEAP32[$109 >> 2] = 0;
     HEAP32[$109 + 4 >> 2] = 0;
     $114 = $agg$result + 8 | 0;
     HEAP32[$114 >> 2] = -1;
     HEAP32[$114 + 4 >> 2] = -1;
     return;
    }
    if (($__wch & 16 | 0) != 0 & ($5 | 0) == 0) {
     $121 = $agg$result;
     HEAP32[$121 >> 2] = 0;
     HEAP32[$121 + 4 >> 2] = 0;
     $126 = $agg$result + 8 | 0;
     HEAP32[$126 >> 2] = -1;
     HEAP32[$126 + 4 >> 2] = -1;
     return;
    }
   }
   if ($$pre) {
    HEAP32[$this + 12 >> 2] = (HEAP32[$this + 8 >> 2] | 0) + $72;
    HEAP32[$this + 16 >> 2] = $7;
   }
   if ($__wch & 16) HEAP32[$4 >> 2] = (HEAP32[$this + 20 >> 2] | 0) + $72;
   $142 = $agg$result;
   HEAP32[$142 >> 2] = 0;
   HEAP32[$142 + 4 >> 2] = 0;
   $147 = $agg$result + 8 | 0;
   HEAP32[$147 >> 2] = $72;
   HEAP32[$147 + 4 >> 2] = $73;
   return;
  }
 }
 $93 = $agg$result;
 HEAP32[$93 >> 2] = 0;
 HEAP32[$93 + 4 >> 2] = 0;
 $98 = $agg$result + 8 | 0;
 HEAP32[$98 >> 2] = -1;
 HEAP32[$98 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $14 = 0, $19 = 0, $22 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $64 = 0, $72 = 0, $81 = 0, $86 = 0, $88 = 0;
 L1 : do if (($__ct | 0) == ($__decimal_point | 0)) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if (($__ct | 0) == ($__thousands_sep | 0)) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if ((($22 & 1) == 0 ? ($22 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 128 | 0;
  $$0$i3 = $__atoms;
  while (1) {
   if ((HEAP32[$$0$i3 >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i3;
    break;
   }
   $$0$i3 = $$0$i3 + 4 | 0;
   if (($$0$i3 | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  $48 = $47 >> 2;
  if (($47 | 0) > 124) $$0 = -1; else {
   $51 = HEAP8[28892 + $48 >> 0] | 0;
   switch ($48 | 0) {
   case 24:
   case 25:
    {
     $52 = HEAP32[$__a_end >> 2] | 0;
     if (($52 | 0) != ($__a | 0)) if ((HEAPU8[$52 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
      $$0 = -1;
      break L1;
     }
     HEAP32[$__a_end >> 2] = $52 + 1;
     HEAP8[$52 >> 0] = $51;
     $$0 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$__exp >> 0] = 80;
     break;
    }
   default:
    {
     $64 = $51 & 95;
     if (($64 | 0) == (HEAP8[$__exp >> 0] | 0)) {
      HEAP8[$__exp >> 0] = $64 | 128;
      if (HEAP8[$__in_units >> 0] | 0) {
       HEAP8[$__in_units >> 0] = 0;
       $72 = HEAP8[$__grouping >> 0] | 0;
       if ((($72 & 1) == 0 ? ($72 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
        $81 = HEAP32[$__g_end >> 2] | 0;
        if (($81 - $__g | 0) < 160) {
         $86 = HEAP32[$__dc >> 2] | 0;
         HEAP32[$__g_end >> 2] = $81 + 4;
         HEAP32[$81 >> 2] = $86;
        }
       }
      }
     }
    }
   }
   $88 = HEAP32[$__a_end >> 2] | 0;
   HEAP32[$__a_end >> 2] = $88 + 1;
   HEAP8[$88 >> 0] = $51;
   if (($47 | 0) > 84) $$0 = 0; else {
    HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
    $$0 = 0;
   }
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIyyEEPyEEbT0_S5_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $22 = 0, $26 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $60 = 0, $62 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $79 = 0, $83 = 0, $87 = 0, $__count$06 = 0, $__count$1 = 0, $__i$07 = 0, $__i$07$lcssa = 0, $__j$05 = 0, $__j$05$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0, $__k$0$lcssa = 0;
 L1 : do switch ($__last - $__first >> 3 | 0) {
 case 1:
 case 0:
  {
   $$0 = 1;
   break;
  }
 case 2:
  {
   $4 = $__last + -8 | 0;
   $5 = $4;
   $7 = HEAP32[$5 >> 2] | 0;
   $10 = HEAP32[$5 + 4 >> 2] | 0;
   $11 = $__first;
   $13 = HEAP32[$11 >> 2] | 0;
   $16 = HEAP32[$11 + 4 >> 2] | 0;
   if ($10 >>> 0 < $16 >>> 0 | ($10 | 0) == ($16 | 0) & $7 >>> 0 < $13 >>> 0) {
    $22 = $__first;
    HEAP32[$22 >> 2] = $7;
    HEAP32[$22 + 4 >> 2] = $10;
    $26 = $4;
    HEAP32[$26 >> 2] = $13;
    HEAP32[$26 + 4 >> 2] = $16;
    $$0 = 1;
   } else $$0 = 1;
   break;
  }
 case 3:
  {
   __ZNSt3__17__sort3IRNS_6__lessIyyEEPyEEjT0_S5_S5_T_($__first, $__first + 8 | 0, $__last + -8 | 0, $__comp) | 0;
   $$0 = 1;
   break;
  }
 case 4:
  {
   __ZNSt3__17__sort4IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_T_($__first, $__first + 8 | 0, $__first + 16 | 0, $__last + -8 | 0, $__comp) | 0;
   $$0 = 1;
   break;
  }
 case 5:
  {
   __ZNSt3__17__sort5IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_S5_T_($__first, $__first + 8 | 0, $__first + 16 | 0, $__first + 24 | 0, $__last + -8 | 0, $__comp) | 0;
   $$0 = 1;
   break;
  }
 default:
  {
   $39 = $__first + 16 | 0;
   __ZNSt3__17__sort3IRNS_6__lessIyyEEPyEEjT0_S5_S5_T_($__first, $__first + 8 | 0, $39, $__comp) | 0;
   $41 = $__first + 24 | 0;
   if (($41 | 0) == ($__last | 0)) $$0 = 1; else {
    $__count$06 = 0;
    $__i$07 = $41;
    $__j$05 = $39;
    while (1) {
     $43 = $__i$07;
     $45 = HEAP32[$43 >> 2] | 0;
     $48 = HEAP32[$43 + 4 >> 2] | 0;
     $49 = $__j$05;
     $51 = HEAP32[$49 >> 2] | 0;
     $54 = HEAP32[$49 + 4 >> 2] | 0;
     if ($48 >>> 0 < $54 >>> 0 | ($48 | 0) == ($54 | 0) & $45 >>> 0 < $51 >>> 0) {
      $62 = $51;
      $65 = $54;
      $__j$1 = $__i$07;
      $__k$0 = $__j$05;
      while (1) {
       $60 = $__j$1;
       HEAP32[$60 >> 2] = $62;
       HEAP32[$60 + 4 >> 2] = $65;
       if (($__k$0 | 0) == ($__first | 0)) {
        $__k$0$lcssa = $__first;
        break;
       }
       $67 = $__k$0 + -8 | 0;
       $68 = $67;
       $62 = HEAP32[$68 >> 2] | 0;
       $65 = HEAP32[$68 + 4 >> 2] | 0;
       if (!($48 >>> 0 < $65 >>> 0 | ($48 | 0) == ($65 | 0) & $45 >>> 0 < $62 >>> 0)) {
        $__k$0$lcssa = $__k$0;
        break;
       } else {
        $__j$1$phi = $__k$0;
        $__k$0 = $67;
        $__j$1 = $__j$1$phi;
       }
      }
      $79 = $__k$0$lcssa;
      HEAP32[$79 >> 2] = $45;
      HEAP32[$79 + 4 >> 2] = $48;
      $83 = $__count$06 + 1 | 0;
      if (($83 | 0) == 8) {
       $__i$07$lcssa = $__i$07;
       break;
      } else $__count$1 = $83;
     } else $__count$1 = $__count$06;
     $87 = $__i$07 + 8 | 0;
     if (($87 | 0) == ($__last | 0)) {
      $$0 = 1;
      break L1;
     } else {
      $__j$05$phi = $__i$07;
      $__count$06 = $__count$1;
      $__i$07 = $87;
      $__j$05 = $__j$05$phi;
     }
    }
    $$0 = ($__i$07$lcssa + 8 | 0) == ($__last | 0);
   }
  }
 } while (0);
 return $$0 | 0;
}

function _wcsrtombs($s, $ws, $n, $st) {
 $s = $s | 0;
 $ws = $ws | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $46 = 0, $6 = 0, $7 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $buf = sp;
 if (!$s) {
  $2 = HEAP32[$ws >> 2] | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (!$3) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$0218 = 0;
   $6 = $3;
   $ws2$019 = $2;
  }
  while (1) {
   if ($6 >>> 0 > 127) {
    $7 = _wcrtomb($buf, $6, 0) | 0;
    if (($7 | 0) == -1) {
     $$0 = -1;
     label = 26;
     break;
    } else $$pn = $7;
   } else $$pn = 1;
   $$13 = $$pn + $$0218 | 0;
   $ws2$019 = $ws2$019 + 4 | 0;
   $6 = HEAP32[$ws2$019 >> 2] | 0;
   if (!$6) {
    $$0 = $$13;
    label = 26;
    break;
   } else $$0218 = $$13;
  }
  if ((label | 0) == 26) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 L14 : do if ($n >>> 0 > 3) {
  $$0129 = $s;
  $$2428 = $n;
  $14 = HEAP32[$ws >> 2] | 0;
  while (1) {
   $13 = HEAP32[$14 >> 2] | 0;
   if (($13 + -1 | 0) >>> 0 > 126) {
    if (!$13) {
     $$0129$lcssa = $$0129;
     $$2428$lcssa = $$2428;
     break;
    }
    $19 = _wcrtomb($$0129, $13, 0) | 0;
    if (($19 | 0) == -1) {
     $$0 = -1;
     label = 26;
     break;
    }
    $$1 = $$0129 + $19 | 0;
    $$35 = $$2428 - $19 | 0;
    $27 = $14;
   } else {
    HEAP8[$$0129 >> 0] = $13;
    $$1 = $$0129 + 1 | 0;
    $$35 = $$2428 + -1 | 0;
    $27 = HEAP32[$ws >> 2] | 0;
   }
   $14 = $27 + 4 | 0;
   HEAP32[$ws >> 2] = $14;
   if ($$35 >>> 0 <= 3) {
    $$01$lcssa = $$1;
    $$24$lcssa = $$35;
    break L14;
   } else {
    $$0129 = $$1;
    $$2428 = $$35;
   }
  }
  if ((label | 0) == 26) {
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP8[$$0129$lcssa >> 0] = 0;
  HEAP32[$ws >> 2] = 0;
  $$0 = $n - $$2428$lcssa | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$01$lcssa = $s;
  $$24$lcssa = $n;
 } while (0);
 if (!$$24$lcssa) {
  $$0 = $n;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$223 = $$01$lcssa;
 $$422 = $$24$lcssa;
 $30 = HEAP32[$ws >> 2] | 0;
 while (1) {
  $29 = HEAP32[$30 >> 2] | 0;
  if (($29 + -1 | 0) >>> 0 > 126) {
   if (!$29) {
    $$223$lcssa = $$223;
    $$422$lcssa = $$422;
    label = 19;
    break;
   }
   $35 = _wcrtomb($buf, $29, 0) | 0;
   if (($35 | 0) == -1) {
    $$0 = -1;
    label = 26;
    break;
   }
   if ($$422 >>> 0 < $35 >>> 0) {
    $$422$lcssa82 = $$422;
    label = 22;
    break;
   }
   _wcrtomb($$223, HEAP32[$30 >> 2] | 0, 0) | 0;
   $$3 = $$223 + $35 | 0;
   $$5 = $$422 - $35 | 0;
   $46 = $30;
  } else {
   HEAP8[$$223 >> 0] = $29;
   $$3 = $$223 + 1 | 0;
   $$5 = $$422 + -1 | 0;
   $46 = HEAP32[$ws >> 2] | 0;
  }
  $30 = $46 + 4 | 0;
  HEAP32[$ws >> 2] = $30;
  if (!$$5) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$223 = $$3;
   $$422 = $$5;
  }
 }
 if ((label | 0) == 19) {
  HEAP8[$$223$lcssa >> 0] = 0;
  HEAP32[$ws >> 2] = 0;
  $$0 = $n - $$422$lcssa | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 22) {
  $$0 = $n - $$422$lcssa82 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i3$i$i915 = 0, $0 = 0, $13 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $46 = 0, $47 = 0, $48 = 0, $58 = 0, $59 = 0, $71 = 0, $83 = 0, $84 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $83 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $83 = 1;
   break;
  } else {
   $83 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($83) {
   $$pre$i3$i$i915 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($83) label = 16; else {
  $$pre$i3$i$i915 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 31]($__ct, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $84 = 1; else {
    $58 = $$pre;
    label = 25;
   }
  } else {
   HEAP32[$47 >> 2] = $48 + 4;
   $58 = $46;
   label = 25;
  }
  do if ((label | 0) == 25) {
   $59 = HEAP32[$58 + 12 >> 2] | 0;
   if (($59 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 127]($58) | 0; else $$0$i$i$i$i1 = HEAP32[$59 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $84 = 1;
    break;
   } else {
    $84 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i915) label = 37; else {
   $71 = HEAP32[$$pre$i3$i$i915 + 12 >> 2] | 0;
   if (($71 | 0) == (HEAP32[$$pre$i3$i$i915 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i915 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i915) | 0; else $$0$i$i1$i$i7 = HEAP32[$71 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 37;
    break;
   } else if ($84) break L22; else break;
  } while (0);
  if ((label | 0) == 37) if (!$84) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo17ReadEntryPrologueEPKcPNS0_5EntryE($this, $cursor, $entry) {
 $this = $this | 0;
 $cursor = $cursor | 0;
 $entry = $entry | 0;
 var $$0 = 0, $$field = 0, $$field2 = 0, $0 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $49 = 0, $50 = 0, $55 = 0, $61 = 0, $62 = 0, $67 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $88 = 0, $9 = 0, $91 = 0, $93 = 0, $length_size = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $length_size = sp;
 $0 = HEAP32[$this >> 2] | 0;
 $3 = $0 + (HEAP32[$this + 4 >> 2] | 0) | 0;
 $4 = $cursor;
 HEAP32[$entry >> 2] = $4 - $0;
 HEAP32[$entry + 4 >> 2] = $cursor;
 $8 = $entry + 8 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $entry + 20 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $this + 8 | 0;
 $12 = __ZN12dwarf2reader10ByteReader17ReadInitialLengthEPKcPj(HEAP32[$10 >> 2] | 0, $cursor, $length_size) | 0;
 $13 = tempRet0;
 $14 = HEAP32[$length_size >> 2] | 0;
 $15 = $3;
 if ($14 >>> 0 > ($15 - $4 | 0) >>> 0) {
  $19 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$19 >> 2] | 0) + 8 >> 2] & 31]($19, HEAP32[$entry >> 2] | 0, 0, HEAP32[$8 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $25 = $cursor + $14 | 0;
 if (($12 | 0) == 0 & ($13 | 0) == 0) if (HEAP8[$this + 20 >> 0] | 0) {
  HEAP32[$8 >> 2] = 3;
  HEAP32[$9 >> 2] = $25;
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $32 = $25;
 if ($13 >>> 0 > 0 | ($13 | 0) == 0 & $12 >>> 0 > ($15 - $32 | 0) >>> 0) {
  $40 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$40 >> 2] | 0) + 8 >> 2] & 31]($40, HEAP32[$entry >> 2] | 0, 0, HEAP32[$8 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $46 = $cursor + ($14 + $12) | 0;
 HEAP32[$9 >> 2] = $46;
 $47 = HEAP32[$10 >> 2] | 0;
 $49 = HEAP8[$47 + 25 >> 0] | 0;
 $50 = $49 & 255;
 if ($50 >>> 0 > ($46 - $32 | 0) >>> 0) {
  $55 = HEAP32[$this + 16 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$55 >> 2] | 0) + 8 >> 2] & 31]($55, HEAP32[$entry >> 2] | 0, 0, HEAP32[$8 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $61 = $47 + 4 | 0;
 $$field = HEAP32[$61 >> 2] | 0;
 $$field2 = HEAP32[$61 + 4 >> 2] | 0;
 $62 = $$field2 & 1;
 if (!($62 | $$field)) ___assert_fail(18373, 18394, 138, 18430);
 $67 = $47 + ($$field2 >> 1) | 0;
 if (!$62) $72 = $$field; else $72 = HEAP32[(HEAP32[$67 >> 2] | 0) + $$field >> 2] | 0;
 $73 = FUNCTION_TABLE_iii[$72 & 31]($67, $25) | 0;
 $74 = tempRet0;
 $75 = $entry + 24 | 0;
 $76 = $75;
 HEAP32[$76 >> 2] = $73;
 HEAP32[$76 + 4 >> 2] = $74;
 L25 : do if (!(HEAP8[$this + 20 >> 0] | 0)) switch ($49 << 24 >> 24) {
 case 4:
  {
   HEAP32[$8 >> 2] = ($73 | 0) == -1 & ($74 | 0) == 0 ? 1 : 2;
   break L25;
   break;
  }
 case 8:
  {
   HEAP32[$8 >> 2] = ($73 | 0) == -1 & ($74 | 0) == -1 ? 1 : 2;
   break L25;
   break;
  }
 default:
  ___assert_fail(19088, 18044, 1828, 19105);
 } else if (($73 | 0) == 0 & ($74 | 0) == 0) {
  HEAP32[$8 >> 2] = 1;
  break;
 } else {
  HEAP32[$8 >> 2] = 2;
  $88 = $32 - (HEAP32[$this >> 2] | 0) | 0;
  $91 = _i64Subtract($88 | 0, (($88 | 0) < 0) << 31 >> 31 | 0, $73 | 0, $74 | 0) | 0;
  $93 = $75;
  HEAP32[$93 >> 2] = $91;
  HEAP32[$93 + 4 >> 2] = tempRet0;
  break;
 } while (0);
 HEAP32[$entry + 12 >> 2] = $cursor + ($50 + $14);
 HEAP32[$entry + 32 >> 2] = 0;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler22ProcessAttributeStringEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE($this, $attr, $form, $data) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $data = $data | 0;
 var $$pr$pre = 0, $$pr10 = 0, $0 = 0, $1 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $3 = 0, $34 = 0, $38 = 0, $43 = 0, $54 = 0, $8 = 0, $demangled$07 = 0, $status = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 40 | 0;
 $1 = sp + 28 | 0;
 $status = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 if (($attr | 0) < 8199) {
  switch ($attr | 0) {
  case 3:
   break;
  default:
   {
    STACKTOP = sp;
    return;
   }
  }
  $8 = HEAP32[(HEAP32[HEAP32[$this + 4 >> 2] >> 2] | 0) + 32 >> 2] | 0;
  if (!$8) ___assert_fail(15030, 21517, 119, 26244);
  __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($0, $8, $data);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($1, (HEAP32[$0 >> 2] | 0) + 8 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this + 32 | 0, $1) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  STACKTOP = sp;
  return;
 }
 switch ($attr | 0) {
 case 8199:
  break;
 default:
  {
   STACKTOP = sp;
   return;
  }
 }
 HEAP32[$status >> 2] = -1;
 $17 = $data + 8 | 0;
 $19 = $data + 1 | 0;
 $21 = ___cxa_demangle((HEAP8[$data >> 0] & 1) == 0 ? $19 : HEAP32[$17 >> 2] | 0, 0, 0, $status) | 0;
 $22 = HEAP32[$status >> 2] | 0;
 do if (!$22) $demangled$07 = $21; else {
  $24 = HEAP8[$data >> 0] | 0;
  $26 = ($24 & 1) == 0;
  if (($26 ? ($24 & 255) >>> 1 : HEAP32[$data + 4 >> 2] | 0) >>> 0 > 1) {
   $34 = $26 ? $19 : HEAP32[$17 >> 2] | 0;
   if ((HEAP8[$34 >> 0] | 0) == 95) {
    $38 = ___cxa_demangle($34 + 1 | 0, 0, 0, $status) | 0;
    $$pr$pre = HEAP32[$status >> 2] | 0;
    if (!$$pr$pre) {
     $demangled$07 = $38;
     break;
    } else $$pr10 = $$pr$pre;
   } else $$pr10 = $22;
  } else $$pr10 = $22;
  $43 = HEAP32[(HEAP32[$this + 4 >> 2] | 0) + 4 >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$43 >> 2] | 0) + 48 >> 2] & 15]($43, $data, $$pr10);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this + 44 | 0, 30292) | 0;
  STACKTOP = sp;
  return;
 } while (0);
 if (!$demangled$07) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, $demangled$07, _strlen($demangled$07 | 0) | 0);
 $54 = HEAP32[(HEAP32[HEAP32[$this + 4 >> 2] >> 2] | 0) + 32 >> 2] | 0;
 if (!$54) ___assert_fail(15030, 21517, 119, 26244);
 __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($0, $54, $3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, (HEAP32[$0 >> 2] | 0) + 8 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this + 44 | 0, $2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 _free($demangled$07);
 STACKTOP = sp;
 return;
}

function _scanexp($f, $pok) {
 $f = $f | 0;
 $pok = $pok | 0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $35 = 0, $36 = 0, $48 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $78 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $x$013 = 0;
 $0 = $f + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $f + 100 | 0;
 if ($1 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
  HEAP32[$0 >> 2] = $1 + 1;
  $10 = HEAPU8[$1 >> 0] | 0;
 } else $10 = ___shgetc($f) | 0;
 switch ($10 | 0) {
 case 43:
 case 45:
  {
   $11 = ($10 | 0) == 45 & 1;
   $12 = HEAP32[$0 >> 2] | 0;
   if ($12 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $12 + 1;
    $20 = HEAPU8[$12 >> 0] | 0;
   } else $20 = ___shgetc($f) | 0;
   if (($pok | 0) != 0 & ($20 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$2 >> 2] | 0)) {
    $c$0 = $20;
    $neg$0 = $11;
   } else {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    $c$0 = $20;
    $neg$0 = $11;
   } else {
    $c$0 = $20;
    $neg$0 = $11;
   }
   break;
  }
 default:
  {
   $c$0 = $10;
   $neg$0 = 0;
  }
 }
 if (($c$0 + -48 | 0) >>> 0 > 9) {
  if (!(HEAP32[$2 >> 2] | 0)) {
   $98 = -2147483648;
   $99 = 0;
   tempRet0 = $98;
   return $99 | 0;
  }
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $98 = -2147483648;
  $99 = 0;
  tempRet0 = $98;
  return $99 | 0;
 } else {
  $c$112 = $c$0;
  $x$013 = 0;
 }
 while (1) {
  $35 = $c$112 + -48 + ($x$013 * 10 | 0) | 0;
  $36 = HEAP32[$0 >> 2] | 0;
  if ($36 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $36 + 1;
   $c$1$be = HEAPU8[$36 >> 0] | 0;
  } else $c$1$be = ___shgetc($f) | 0;
  if (($c$1$be + -48 | 0) >>> 0 < 10 & ($35 | 0) < 214748364) {
   $c$112 = $c$1$be;
   $x$013 = $35;
  } else {
   $$lcssa22 = $35;
   $c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $48 = (($$lcssa22 | 0) < 0) << 31 >> 31;
 if (($c$1$be$lcssa + -48 | 0) >>> 0 < 10) {
  $53 = $$lcssa22;
  $54 = $48;
  $c$27 = $c$1$be$lcssa;
  while (1) {
   $55 = ___muldi3($53 | 0, $54 | 0, 10, 0) | 0;
   $56 = tempRet0;
   $59 = _i64Add($c$27 | 0, (($c$27 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
   $61 = _i64Add($59 | 0, tempRet0 | 0, $55 | 0, $56 | 0) | 0;
   $62 = tempRet0;
   $63 = HEAP32[$0 >> 2] | 0;
   if ($63 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $63 + 1;
    $c$2$be = HEAPU8[$63 >> 0] | 0;
   } else $c$2$be = ___shgetc($f) | 0;
   if (($c$2$be + -48 | 0) >>> 0 < 10 & (($62 | 0) < 21474836 | ($62 | 0) == 21474836 & $61 >>> 0 < 2061584302)) {
    $53 = $61;
    $54 = $62;
    $c$27 = $c$2$be;
   } else {
    $92 = $61;
    $93 = $62;
    $c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $92 = $$lcssa22;
  $93 = $48;
  $c$2$lcssa = $c$1$be$lcssa;
 }
 if (($c$2$lcssa + -48 | 0) >>> 0 < 10) do {
  $78 = HEAP32[$0 >> 2] | 0;
  if ($78 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $78 + 1;
   $c$3$be = HEAPU8[$78 >> 0] | 0;
  } else $c$3$be = ___shgetc($f) | 0;
 } while (($c$3$be + -48 | 0) >>> 0 < 10);
 if (HEAP32[$2 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
 $91 = ($neg$0 | 0) != 0;
 $94 = _i64Subtract(0, 0, $92 | 0, $93 | 0) | 0;
 $98 = $91 ? tempRet0 : $93;
 $99 = $91 ? $94 : $92;
 tempRet0 = $98;
 return $99 | 0;
}

function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0$i6 = 0, $$0$lcssa$i$i = 0, $$01$i = 0, $$01$i3 = 0, $$012$i$i = 0, $$03$i$i = 0, $$__last = 0, $$not = 0, $1 = 0, $12 = 0, $16 = 0, $17 = 0, $21 = 0, $28 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $6 = 0, $8 = 0;
 $1 = $__first;
 $3 = ($__last - $1 | 0) / 12 | 0;
 $4 = $this + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$this >> 2] | 0;
 $8 = $6;
 if ($3 >>> 0 <= (($5 - $8 | 0) / 12 | 0) >>> 0) {
  $12 = $this + 4 | 0;
  $16 = ((HEAP32[$12 >> 2] | 0) - $8 | 0) / 12 | 0;
  $17 = $3 >>> 0 > $16 >>> 0;
  $$__last = $17 ? $__first + ($16 * 12 | 0) | 0 : $__last;
  if (($$__last | 0) == ($__first | 0)) $$0$lcssa$i$i = $6; else {
   $21 = $$__last + -12 - $1 | 0;
   $$012$i$i = $__first;
   $$03$i$i = $6;
   while (1) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($$03$i$i, $$012$i$i) | 0;
    $$012$i$i = $$012$i$i + 12 | 0;
    if (($$012$i$i | 0) == ($$__last | 0)) break; else $$03$i$i = $$03$i$i + 12 | 0;
   }
   $$0$lcssa$i$i = $6 + (((($21 >>> 0) / 12 | 0) + 1 | 0) * 12 | 0) | 0;
  }
  if (!$17) {
   while (1) {
    $33 = HEAP32[$12 >> 2] | 0;
    if (($33 | 0) == ($$0$lcssa$i$i | 0)) break;
    $35 = $33 + -12 | 0;
    HEAP32[$12 >> 2] = $35;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
   }
   return;
  }
  if (($$__last | 0) == ($__last | 0)) return;
  $$01$i3 = $$__last;
  $28 = HEAP32[$12 >> 2] | 0;
  do {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($28, $$01$i3);
   $28 = (HEAP32[$12 >> 2] | 0) + 12 | 0;
   HEAP32[$12 >> 2] = $28;
   $$01$i3 = $$01$i3 + 12 | 0;
  } while (($$01$i3 | 0) != ($__last | 0));
  return;
 }
 if (!$6) $44 = $5; else {
  $37 = $this + 4 | 0;
  while (1) {
   $38 = HEAP32[$37 >> 2] | 0;
   if (($38 | 0) == ($6 | 0)) break;
   $40 = $38 + -12 | 0;
   HEAP32[$37 >> 2] = $40;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
  }
  __ZdlPv(HEAP32[$this >> 2] | 0);
  HEAP32[$4 >> 2] = 0;
  HEAP32[$37 >> 2] = 0;
  HEAP32[$this >> 2] = 0;
  $44 = 0;
 }
 $42 = $3 >>> 0 > 357913941;
 if ($42) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $46 = ($44 - 0 | 0) / 12 | 0;
 if ($46 >>> 0 < 178956970) {
  $48 = $46 << 1;
  $$not = $48 >>> 0 >= $3 >>> 0;
  if ($$not | $42 ^ 1) $$0$i6 = $$not ? $48 : $3; else __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 } else $$0$i6 = 357913941;
 $50 = __Znwj($$0$i6 * 12 | 0) | 0;
 $51 = $this + 4 | 0;
 HEAP32[$51 >> 2] = $50;
 HEAP32[$this >> 2] = $50;
 HEAP32[$4 >> 2] = $50 + ($$0$i6 * 12 | 0);
 if (($__first | 0) == ($__last | 0)) return;
 $$01$i = $__first;
 $54 = $50;
 do {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($54, $$01$i);
  $54 = (HEAP32[$51 >> 2] | 0) + 12 | 0;
  HEAP32[$51 >> 2] = $54;
  $$01$i = $$01$i + 12 | 0;
 } while (($$01$i | 0) != ($__last | 0));
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $$byval_copy = sp + 304 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 308 | 0;
 $__nb = sp + 72 | 0;
 $__o = sp + 76 | 0;
 $__op = sp + 68 | 0;
 $__oe = sp + 64 | 0;
 $0 = sp + 60 | 0;
 $1 = sp + 56 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 30293, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 if (($__nc$0 | 0) > 29) {
  $16 = __ZNSt3__16__clocEv() | 0;
  if ($9) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
   $__nc$1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, $16, $__fmt, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $__v;
   $__nc$1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, $16, $__fmt, $vararg_buffer9) | 0;
  }
  $21 = HEAP32[$__nb >> 2] | 0;
  if (!$21) __ZSt17__throw_bad_allocv(); else {
   $24 = $21;
   $38 = $21;
   $__nc$2 = $__nc$1;
  }
 } else {
  $24 = HEAP32[$__nb >> 2] | 0;
  $38 = 0;
  $__nc$2 = $__nc$0;
 }
 $23 = $24 + $__nc$2 | 0;
 $25 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24, $23, $__iob) | 0;
 if (($24 | 0) == ($__nar | 0)) {
  $31 = $__nar;
  $37 = 0;
  $__ob$0 = $__o;
 } else {
  $28 = _malloc($__nc$2 << 3) | 0;
  if (!$28) __ZSt17__throw_bad_allocv(); else {
   $31 = $24;
   $37 = $28;
   $__ob$0 = $28;
  }
 }
 $30 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $30;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($31, $25, $23, $__ob$0, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($30) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $33 = HEAP32[$__op >> 2] | 0;
 $34 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $35 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__ob$0, $33, $34, $__iob, $__fl) | 0;
 HEAP32[$__s >> 2] = $35;
 if ($37) _free($37);
 _free($38);
 STACKTOP = sp;
 return $35 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 76 | 0;
 $vararg_buffer9 = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 80 | 0;
 $__nb = sp + 72 | 0;
 $__o = sp + 110 | 0;
 $__op = sp + 68 | 0;
 $__oe = sp + 64 | 0;
 $0 = sp + 60 | 0;
 $1 = sp + 56 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 30293, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 if (($__nc$0 | 0) > 29) {
  $16 = __ZNSt3__16__clocEv() | 0;
  if ($9) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
   $__nc$1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, $16, $__fmt, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $__v;
   $__nc$1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, $16, $__fmt, $vararg_buffer9) | 0;
  }
  $21 = HEAP32[$__nb >> 2] | 0;
  if (!$21) __ZSt17__throw_bad_allocv(); else {
   $24 = $21;
   $37 = $21;
   $__nc$2 = $__nc$1;
  }
 } else {
  $24 = HEAP32[$__nb >> 2] | 0;
  $37 = 0;
  $__nc$2 = $__nc$0;
 }
 $23 = $24 + $__nc$2 | 0;
 $25 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($24, $23, $__iob) | 0;
 if (($24 | 0) == ($__nar | 0)) {
  $31 = $__nar;
  $36 = 0;
  $__ob$0 = $__o;
 } else {
  $28 = _malloc($__nc$2 << 1) | 0;
  if (!$28) __ZSt17__throw_bad_allocv(); else {
   $31 = $24;
   $36 = $28;
   $__ob$0 = $28;
  }
 }
 $30 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $30;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($31, $25, $23, $__ob$0, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($30) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $33 = HEAP32[$__op >> 2] | 0;
 $34 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $35 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__ob$0, $33, $34, $__iob, $__fl) | 0;
 _free($36);
 _free($37);
 STACKTOP = sp;
 return $35 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $13 = 0, $16 = 0, $26 = 0, $28 = 0, $3 = 0, $41 = 0, $42 = 0, $43 = 0, $51 = 0, $54 = 0, $66 = 0, $78 = 0, $79 = 0, $80 = 0, label = 0;
 L1 : while (1) {
  $0 = HEAP32[$__b >> 2] | 0;
  do if (!$0) $78 = 1; else {
   $3 = HEAP32[$0 + 12 >> 2] | 0;
   if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $78 = 1;
    break;
   } else {
    $78 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $13 = HEAP32[$__e >> 2] | 0;
  do if (!$13) label = 15; else {
   $16 = HEAP32[$13 + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
   if (($$0$i$i1$i$i | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 15;
    break;
   } else if ($78) {
    $79 = $13;
    break;
   } else {
    $$pre$i3$i$i9 = $13;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else $79 = 0;
  }
  $26 = HEAP32[$__b >> 2] | 0;
  $28 = HEAP32[$26 + 12 >> 2] | 0;
  if (($28 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0; else $$0$i$i = HEAP32[$28 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 31]($__ct, 8192, $$0$i$i) | 0)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b >> 2] | 0;
  $42 = $41 + 12 | 0;
  $43 = HEAP32[$42 >> 2] | 0;
  if (($43 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 40 >> 2] & 127]($41) | 0;
   continue;
  } else {
   HEAP32[$42 >> 2] = $43 + 4;
   continue;
  }
 }
 $51 = HEAP32[$__b >> 2] | 0;
 do if (!$51) $80 = 1; else {
  $54 = HEAP32[$51 + 12 >> 2] | 0;
  if (($54 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] & 127]($51) | 0; else $$0$i$i$i$i1 = HEAP32[$54 >> 2] | 0;
  if (($$0$i$i$i$i1 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i9) label = 37; else {
  $66 = HEAP32[$$pre$i3$i$i9 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$$pre$i3$i$i9 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i9 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i9) | 0; else $$0$i$i1$i$i7 = HEAP32[$66 >> 2] | 0;
  if (($$0$i$i1$i$i7 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 37;
   break;
  } else if ($80) break; else {
   label = 39;
   break;
  }
 } while (0);
 if ((label | 0) == 37) if ($80) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function _getopt($argc, $argv, $optstring) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 $optstring = $optstring | 0;
 var $$0 = 0, $0 = 0, $17 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $34 = 0, $40 = 0, $42 = 0, $46 = 0, $5 = 0, $53 = 0, $59 = 0, $65 = 0, $7 = 0, $c = 0, $d = 0, $i$0$lcssa = 0, $i$04 = 0, $k$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp + 4 | 0;
 $d = sp;
 $0 = HEAP32[1334] | 0;
 if (($0 | 0) == 0 | (HEAP32[1336] | 0) != 0) {
  HEAP32[1336] = 0;
  HEAP32[1337] = 0;
  HEAP32[1334] = 1;
  $5 = 1;
 } else $5 = $0;
 if (($5 | 0) >= ($argc | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $7 = HEAP32[$argv + ($5 << 2) >> 2] | 0;
 if (!$7) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ((HEAP8[$7 >> 0] | 0) != 45) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 switch (HEAP8[$7 + 1 >> 0] | 0) {
 case 45:
  {
   label = 7;
   break;
  }
 case 0:
  {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {}
 }
 if ((label | 0) == 7) if (!(HEAP8[$7 + 2 >> 0] | 0)) {
  HEAP32[1334] = $5 + 1;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $17 = HEAP32[1337] | 0;
 if (!$17) {
  HEAP32[1337] = 1;
  $20 = 1;
 } else $20 = $17;
 $21 = _mbtowc($c, $7 + $20 | 0, 4) | 0;
 if (($21 | 0) < 0) {
  HEAP32[$c >> 2] = 65533;
  $28 = 65533;
  $k$0 = 1;
 } else {
  $28 = HEAP32[$c >> 2] | 0;
  $k$0 = $21;
 }
 $23 = HEAP32[1334] | 0;
 $25 = HEAP32[$argv + ($23 << 2) >> 2] | 0;
 $26 = HEAP32[1337] | 0;
 $27 = $25 + $26 | 0;
 HEAP32[1338] = $28;
 $29 = $26 + $k$0 | 0;
 HEAP32[1337] = $29;
 if (!(HEAP8[$25 + $29 >> 0] | 0)) {
  HEAP32[1334] = $23 + 1;
  HEAP32[1337] = 0;
 }
 $34 = _mbtowc($d, $optstring, 4) | 0;
 L30 : do if (!$34) $i$0$lcssa = 0; else {
  $40 = $34;
  $i$04 = 0;
  while (1) {
   if ((HEAP32[$d >> 2] | 0) == (HEAP32[$c >> 2] | 0)) {
    $i$0$lcssa = $i$04;
    break L30;
   }
   $42 = (($40 | 0) < 1 ? 1 : $40) + $i$04 | 0;
   $40 = _mbtowc($d, $optstring + $42 | 0, 4) | 0;
   if (!$40) {
    $i$0$lcssa = $42;
    break;
   } else $i$04 = $42;
  }
 } while (0);
 $46 = HEAP32[$d >> 2] | 0;
 if (($46 | 0) != (HEAP32[$c >> 2] | 0)) {
  if (!((HEAP8[$optstring >> 0] | 0) != 58 & (HEAP32[1335] | 0) != 0)) {
   $$0 = 63;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $53 = HEAP32[$argv >> 2] | 0;
  _write(2, $53 | 0, _strlen($53 | 0) | 0) | 0;
  _write(2, 24804, 18) | 0;
  _write(2, $27 | 0, $k$0 | 0) | 0;
  _write(2, 24823, 1) | 0;
  $$0 = 63;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ((HEAP8[$optstring + ($i$0$lcssa + 1) >> 0] | 0) != 58) {
  $$0 = $46;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $59 = HEAP32[1334] | 0;
 if (($59 | 0) < ($argc | 0)) {
  HEAP32[1334] = $59 + 1;
  HEAP32[1339] = (HEAP32[$argv + ($59 << 2) >> 2] | 0) + (HEAP32[1337] | 0);
  HEAP32[1337] = 0;
  $$0 = $46;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ((HEAP8[$optstring >> 0] | 0) == 58) {
  $$0 = 58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[1335] | 0)) {
  $$0 = 63;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $65 = HEAP32[$argv >> 2] | 0;
 _write(2, $65 | 0, _strlen($65 | 0) | 0) | 0;
 _write(2, 24825, 31) | 0;
 _write(2, $27 | 0, $k$0 | 0) | 0;
 _write(2, 24823, 1) | 0;
 $$0 = 63;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeIPN15google_breakpad6Module8FunctionENS2_15FunctionCompareENS_9allocatorIS4_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEESE_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa25 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $49 = 0, $5 = 0, $59 = 0, $61 = 0, $63 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $75 = 0, $84 = 0, $94 = 0, $95 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa23 = 0, $__nd$0$lcssa24 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP32[$__v >> 2] | 0;
 $5 = $3 + 16 | 0;
 $7 = HEAP32[$5 >> 2] | 0;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $3 + 4 | 0;
 $12 = $3 + 8 | 0;
 $13 = $3 + 1 | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = HEAP32[$__nd$0 + 16 >> 2] | 0;
  $17 = $15 + 16 | 0;
  $19 = HEAP32[$17 >> 2] | 0;
  $22 = HEAP32[$17 + 4 >> 2] | 0;
  if (($7 | 0) == ($19 | 0) & ($10 | 0) == ($22 | 0)) {
   $26 = HEAP8[$3 >> 0] | 0;
   $28 = ($26 & 1) == 0;
   $32 = $28 ? ($26 & 255) >>> 1 : HEAP32[$11 >> 2] | 0;
   $33 = HEAP8[$15 >> 0] | 0;
   $35 = ($33 & 1) == 0;
   $40 = $35 ? ($33 & 255) >>> 1 : HEAP32[$15 + 4 >> 2] | 0;
   $49 = _memcmp($28 ? $13 : HEAP32[$12 >> 2] | 0, $35 ? $15 + 1 | 0 : HEAP32[$15 + 8 >> 2] | 0, $40 >>> 0 < $32 >>> 0 ? $40 : $32) | 0;
   if (((($49 | 0) == 0 ? ($32 >>> 0 < $40 >>> 0 ? -2147483648 : 0) : $49) | 0) < 0) label = 6; else {
    $61 = HEAP8[$15 >> 0] | 0;
    $63 = ($61 & 1) == 0;
    $68 = $63 ? ($61 & 255) >>> 1 : HEAP32[$15 + 4 >> 2] | 0;
    $69 = HEAP8[$3 >> 0] | 0;
    $71 = ($69 & 1) == 0;
    $75 = $71 ? ($69 & 255) >>> 1 : HEAP32[$11 >> 2] | 0;
    $84 = _memcmp($63 ? $15 + 1 | 0 : HEAP32[$15 + 8 >> 2] | 0, $71 ? $13 : HEAP32[$12 >> 2] | 0, $75 >>> 0 < $68 >>> 0 ? $75 : $68) | 0;
    if (((($84 | 0) == 0 ? ($68 >>> 0 < $75 >>> 0 ? -2147483648 : 0) : $84) | 0) < 0) label = 10; else {
     $__nd$0$lcssa = $__nd$0;
     label = 13;
     break;
    }
   }
  } else if ($10 >>> 0 < $22 >>> 0 | ($10 | 0) == ($22 | 0) & $7 >>> 0 < $19 >>> 0) label = 6; else if ($22 >>> 0 < $10 >>> 0 | ($22 | 0) == ($10 | 0) & $19 >>> 0 < $7 >>> 0) label = 10; else {
   $__nd$0$lcssa = $__nd$0;
   label = 13;
   break;
  }
  if ((label | 0) == 6) {
   label = 0;
   $59 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$59) {
    $$lcssa25 = $__nd$0;
    $__nd$0$lcssa24 = $__nd$0;
    label = 7;
    break;
   } else $__nd$0$be$in = $59;
  } else if ((label | 0) == 10) {
   label = 0;
   $94 = $__nd$0 + 4 | 0;
   $95 = HEAP32[$94 >> 2] | 0;
   if (!$95) {
    $$lcssa = $94;
    $__nd$0$lcssa23 = $__nd$0;
    label = 12;
    break;
   } else $__nd$0$be$in = $95;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 7) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa24;
  $$0 = $$lcssa25;
  return $$0 | 0;
 } else if ((label | 0) == 12) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function _mbsnrtowcs($wcs, $src, $n, $wn, $st) {
 $wcs = $wcs | 0;
 $src = $src | 0;
 $n = $n | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $23 = 0, $24 = 0, $32 = 0, $37 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $wbuf = sp + 8 | 0;
 $s = sp;
 $0 = HEAP32[$src >> 2] | 0;
 HEAP32[$s >> 2] = $0;
 $1 = ($wcs | 0) != 0;
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 L1 : do if (($wn$ | 0) != 0 & ($0 | 0) != 0) {
  $$021 = $n;
  $$0218 = $wn$;
  $37 = $$cast;
  $cnt$019 = 0;
  $ws$020 = $wcs$;
  while (1) {
   $4 = $$021 >>> 2;
   $5 = $4 >>> 0 >= $$0218 >>> 0;
   if (!($$021 >>> 0 > 131 | $5)) {
    $$1 = $$021;
    $$24 = $$0218;
    $19 = $37;
    $cnt$1 = $cnt$019;
    $ws$09 = $ws$020;
    break L1;
   }
   $$02$ = $5 ? $$0218 : $4;
   $8 = $$021 - $$02$ | 0;
   $9 = _mbsrtowcs($ws$020, $s, $$02$, $st) | 0;
   if (($9 | 0) == -1) {
    $$lcssa57 = $8;
    $ws$020$lcssa56 = $ws$020;
    break;
   }
   $11 = ($ws$020 | 0) == ($wbuf | 0);
   $13 = $11 ? 0 : $9;
   $$13 = $$0218 - $13 | 0;
   $ws$1 = $11 ? $ws$020 : $ws$020 + ($9 << 2) | 0;
   $14 = $9 + $cnt$019 | 0;
   $15 = HEAP32[$s >> 2] | 0;
   if (($$0218 | 0) != ($13 | 0) & ($15 | 0) != 0) {
    $$021 = $8;
    $$0218 = $$13;
    $37 = $15;
    $cnt$019 = $14;
    $ws$020 = $ws$1;
   } else {
    $$1 = $8;
    $$24 = $$13;
    $19 = $15;
    $cnt$1 = $14;
    $ws$09 = $ws$1;
    break L1;
   }
  }
  $$1 = $$lcssa57;
  $$24 = 0;
  $19 = HEAP32[$s >> 2] | 0;
  $cnt$1 = -1;
  $ws$09 = $ws$020$lcssa56;
 } else {
  $$1 = $n;
  $$24 = $wn$;
  $19 = $$cast;
  $cnt$1 = 0;
  $ws$09 = $wcs$;
 } while (0);
 L8 : do if (!$19) $cnt$3 = $cnt$1; else if (($$24 | 0) != 0 & ($$1 | 0) != 0) {
  $$216 = $$1;
  $$313 = $$24;
  $23 = $19;
  $cnt$214 = $cnt$1;
  $ws$215 = $ws$09;
  while (1) {
   $24 = _mbrtowc($ws$215, $23, $$216, $st) | 0;
   if (($24 + 2 | 0) >>> 0 < 3) {
    $$lcssa = $24;
    $cnt$214$lcssa = $cnt$214;
    break;
   }
   $23 = (HEAP32[$s >> 2] | 0) + $24 | 0;
   HEAP32[$s >> 2] = $23;
   $$313 = $$313 + -1 | 0;
   $32 = $cnt$214 + 1 | 0;
   if (!(($$313 | 0) != 0 & ($$216 | 0) != ($24 | 0))) {
    $cnt$3 = $32;
    break L8;
   } else {
    $$216 = $$216 - $24 | 0;
    $cnt$214 = $32;
    $ws$215 = $ws$215 + 4 | 0;
   }
  }
  switch ($$lcssa | 0) {
  case -1:
   {
    $cnt$3 = -1;
    break L8;
    break;
   }
  case 0:
   {
    HEAP32[$s >> 2] = 0;
    $cnt$3 = $cnt$214$lcssa;
    break L8;
    break;
   }
  default:
   {
    HEAP32[$st >> 2] = 0;
    $cnt$3 = $cnt$214$lcssa;
    break L8;
   }
  }
 } else $cnt$3 = $cnt$1; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$src >> 2] = HEAP32[$s >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZN15google_breakpad17DwarfLineToModule9DefineDirERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj($this, $name, $dir_num) {
 $this = $this | 0;
 $name = $name | 0;
 $dir_num = $dir_num | 0;
 var $$0$i12$i = 0, $$lcssa = 0, $$lcssa18 = 0, $0 = 0, $13 = 0, $14 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $27 = 0, $3 = 0, $32 = 0, $33 = 0, $4 = 0, $7 = 0, $9 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa16 = 0, $__nd$0$i$i$lcssa17 = 0, $__parent$i = 0, $__r$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i = sp + 12 | 0;
 $0 = sp;
 if (!$dir_num) {
  STACKTOP = sp;
  return;
 }
 $2 = $this + 24 | 0;
 $3 = $this + 28 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 do if (!$4) {
  HEAP32[$__parent$i >> 2] = $3;
  $$0$i12$i = $3;
  $25 = $3;
  label = 12;
 } else {
  $__nd$0$i$i = $4;
  while (1) {
   $7 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
   if ($7 >>> 0 > $dir_num >>> 0) {
    $9 = HEAP32[$__nd$0$i$i >> 2] | 0;
    if (!$9) {
     $$lcssa18 = $__nd$0$i$i;
     $__nd$0$i$i$lcssa17 = $__nd$0$i$i;
     label = 5;
     break;
    } else $__nd$0$be$in$i$i = $9;
   } else {
    if ($7 >>> 0 >= $dir_num >>> 0) {
     $__nd$0$i$i$lcssa = $__nd$0$i$i;
     label = 11;
     break;
    }
    $13 = $__nd$0$i$i + 4 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if (!$14) {
     $$lcssa = $13;
     $__nd$0$i$i$lcssa16 = $__nd$0$i$i;
     label = 9;
     break;
    } else $__nd$0$be$in$i$i = $14;
   }
   $__nd$0$i$i = $__nd$0$be$in$i$i;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa17;
   $$0$i12$i = $$lcssa18;
   $25 = $__nd$0$i$i$lcssa17;
   label = 12;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa16;
   $$0$i12$i = $$lcssa;
   $25 = $__nd$0$i$i$lcssa16;
   label = 12;
   break;
  } else if ((label | 0) == 11) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
   if (!$__nd$0$i$i$lcssa) {
    $$0$i12$i = $__parent$i;
    $25 = $__nd$0$i$i$lcssa;
    label = 12;
    break;
   } else {
    $__r$0$i = $__nd$0$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 12) {
  $20 = __Znwj(32) | 0;
  HEAP32[$20 + 16 >> 2] = $dir_num;
  $22 = $20 + 20 | 0;
  HEAP32[$22 >> 2] = 0;
  HEAP32[$22 + 4 >> 2] = 0;
  HEAP32[$22 + 8 >> 2] = 0;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  HEAP32[$20 + 8 >> 2] = $25;
  HEAP32[$$0$i12$i >> 2] = $20;
  $27 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
  if (!$27) $32 = $20; else {
   HEAP32[$2 >> 2] = $27;
   $32 = HEAP32[$$0$i12$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 28 >> 2] | 0, $32);
  $33 = $this + 32 | 0;
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
  $__r$0$i = $20;
 }
 __ZL10ExpandPathRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_($0, $name, $this + 8 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($__r$0$i + 20 | 0, $0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i15 = 0, $$0$i922 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $22 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $61 = 0, $7 = 0, $__bn$i7 = 0, $__buf$i6 = 0, $__mb$i5 = 0, $__ndflt = 0, $__p$0$i1018 = 0, $__p$0$i14 = 0, $__wn$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $__mb$i5 = sp + 168 | 0;
 $__buf$i6 = sp + 40 | 0;
 $__bn$i7 = sp + 32 | 0;
 $__wn$i = sp + 28 | 0;
 $__ndflt = sp + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 HEAP32[$__ndflt >> 2] = 0;
 HEAP32[$__ndflt + 4 >> 2] = 0;
 HEAP32[$__ndflt + 8 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 >> 2] = 9928;
 $5 = HEAP8[$__dflt >> 0] | 0;
 $7 = ($5 & 1) == 0;
 $10 = $__dflt + 4 | 0;
 $11 = $7 ? $10 : HEAP32[$__dflt + 8 >> 2] | 0;
 $15 = $7 ? ($5 & 255) >>> 1 : HEAP32[$10 >> 2] | 0;
 $16 = $11 + ($15 << 2) | 0;
 $17 = $__buf$i6 + 32 | 0;
 if (($15 | 0) > 0) {
  $$0$i922 = $11;
  do {
   HEAP32[$__wn$i >> 2] = $$0$i922;
   $22 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 15]($0, $__mb$i5, $$0$i922, $16, $__wn$i, $__buf$i6, $17, $__bn$i7) | 0;
   if ($__buf$i6 >>> 0 < (HEAP32[$__bn$i7 >> 2] | 0) >>> 0) {
    $__p$0$i1018 = $__buf$i6;
    do {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt, HEAP8[$__p$0$i1018 >> 0] | 0);
     $__p$0$i1018 = $__p$0$i1018 + 1 | 0;
    } while ($__p$0$i1018 >>> 0 < (HEAP32[$__bn$i7 >> 2] | 0) >>> 0);
   }
   $$0$i922 = HEAP32[$__wn$i >> 2] | 0;
  } while (($22 | 0) != 2 & $$0$i922 >>> 0 < $16 >>> 0);
 }
 $44 = _catgets((($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, ((HEAP8[$__ndflt >> 0] & 1) == 0 ? $__ndflt + 1 | 0 : HEAP32[$__ndflt + 8 >> 2] | 0) | 0) | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 >> 2] = 9976;
 $48 = _strlen($44 | 0) | 0;
 $49 = $44 + $48 | 0;
 $50 = $49;
 $51 = $__buf$i6 + 128 | 0;
 if (($48 | 0) > 0) {
  $$0$i15 = $44;
  do {
   HEAP32[$__wn$i >> 2] = $$0$i15;
   $61 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 15]($1, $__mb$i5, $$0$i15, ($50 - $$0$i15 | 0) > 32 ? $$0$i15 + 32 | 0 : $49, $__wn$i, $__buf$i6, $51, $__bn$i7) | 0;
   if ($__buf$i6 >>> 0 < (HEAP32[$__bn$i7 >> 2] | 0) >>> 0) {
    $__p$0$i14 = $__buf$i6;
    do {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($agg$result, HEAP32[$__p$0$i14 >> 2] | 0);
     $__p$0$i14 = $__p$0$i14 + 4 | 0;
    } while ($__p$0$i14 >>> 0 < (HEAP32[$__bn$i7 >> 2] | 0) >>> 0);
   }
   $$0$i15 = HEAP32[$__wn$i >> 2] | 0;
  } while (($61 | 0) != 2 & $$0$i15 >>> 0 < $49 >>> 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this | 0;
 var $$sum$i1 = 0, $$sum$i11 = 0, $$sum1$i12 = 0, $$sum1$i2 = 0, $0 = 0, $1 = 0, $10 = 0, $18 = 0, $29 = 0, $36 = 0, $40 = 0, $5 = 0, $51 = 0, $6 = 0, $62 = 0;
 $0 = HEAP32[_stdin >> 2] | 0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(7052, $0, 7108);
 HEAP32[1593] = 8184;
 HEAP32[1595] = 8204;
 HEAP32[1594] = 0;
 $1 = HEAP32[2043] | 0;
 __ZNSt3__18ios_base4initEPv(6372 + $1 | 0, 7052);
 HEAP32[6372 + ($1 + 72) >> 2] = 0;
 HEAP32[6372 + ($1 + 76) >> 2] = -1;
 $5 = HEAP32[_stdout >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(7156, $5, 7116);
 HEAP32[1615] = 8264;
 HEAP32[1616] = 8284;
 $6 = HEAP32[2063] | 0;
 __ZNSt3__18ios_base4initEPv(6460 + $6 | 0, 7156);
 $$sum$i1 = $6 + 72 | 0;
 HEAP32[6460 + $$sum$i1 >> 2] = 0;
 $$sum1$i2 = $6 + 76 | 0;
 HEAP32[6460 + $$sum1$i2 >> 2] = -1;
 $10 = HEAP32[_stderr >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(7204, $10, 7124);
 HEAP32[1636] = 8264;
 HEAP32[1637] = 8284;
 __ZNSt3__18ios_base4initEPv(6544 + $6 | 0, 7204);
 HEAP32[6544 + $$sum$i1 >> 2] = 0;
 HEAP32[6544 + $$sum1$i2 >> 2] = -1;
 $18 = HEAP32[6544 + ((HEAP32[(HEAP32[1636] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
 HEAP32[1657] = 8264;
 HEAP32[1658] = 8284;
 __ZNSt3__18ios_base4initEPv(6628 + $6 | 0, $18);
 HEAP32[6628 + $$sum$i1 >> 2] = 0;
 HEAP32[6628 + $$sum1$i2 >> 2] = -1;
 HEAP32[6372 + ((HEAP32[(HEAP32[1593] | 0) + -12 >> 2] | 0) + 72) >> 2] = 6460;
 $29 = 6544 + ((HEAP32[(HEAP32[1636] | 0) + -12 >> 2] | 0) + 4) | 0;
 HEAP32[$29 >> 2] = HEAP32[$29 >> 2] | 8192;
 HEAP32[6544 + ((HEAP32[(HEAP32[1636] | 0) + -12 >> 2] | 0) + 72) >> 2] = 6460;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(7252, $0, 7132);
 HEAP32[1678] = 8224;
 HEAP32[1680] = 8244;
 HEAP32[1679] = 0;
 $36 = HEAP32[2053] | 0;
 __ZNSt3__18ios_base4initEPv(6712 + $36 | 0, 7252);
 HEAP32[6712 + ($36 + 72) >> 2] = 0;
 HEAP32[6712 + ($36 + 76) >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(7308, $5, 7140);
 HEAP32[1700] = 8304;
 HEAP32[1701] = 8324;
 $40 = HEAP32[2073] | 0;
 __ZNSt3__18ios_base4initEPv(6800 + $40 | 0, 7308);
 $$sum$i11 = $40 + 72 | 0;
 HEAP32[6800 + $$sum$i11 >> 2] = 0;
 $$sum1$i12 = $40 + 76 | 0;
 HEAP32[6800 + $$sum1$i12 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(7356, $10, 7148);
 HEAP32[1721] = 8304;
 HEAP32[1722] = 8324;
 __ZNSt3__18ios_base4initEPv(6884 + $40 | 0, 7356);
 HEAP32[6884 + $$sum$i11 >> 2] = 0;
 HEAP32[6884 + $$sum1$i12 >> 2] = -1;
 $51 = HEAP32[6884 + ((HEAP32[(HEAP32[1721] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
 HEAP32[1742] = 8304;
 HEAP32[1743] = 8324;
 __ZNSt3__18ios_base4initEPv(6968 + $40 | 0, $51);
 HEAP32[6968 + $$sum$i11 >> 2] = 0;
 HEAP32[6968 + $$sum1$i12 >> 2] = -1;
 HEAP32[6712 + ((HEAP32[(HEAP32[1678] | 0) + -12 >> 2] | 0) + 72) >> 2] = 6800;
 $62 = 6884 + ((HEAP32[(HEAP32[1721] | 0) + -12 >> 2] | 0) + 4) | 0;
 HEAP32[$62 >> 2] = HEAP32[$62 >> 2] | 8192;
 HEAP32[6884 + ((HEAP32[(HEAP32[1721] | 0) + -12 >> 2] | 0) + 72) >> 2] = 6800;
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $$byval_copy = sp + 296 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 300 | 0;
 $__nb = sp + 64 | 0;
 $__o = sp + 68 | 0;
 $__op = sp + 60 | 0;
 $__oe = sp + 56 | 0;
 $0 = sp + 52 | 0;
 $1 = sp + 48 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 30292, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 if (($__nc$0 | 0) > 29) {
  $16 = __ZNSt3__16__clocEv() | 0;
  HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
  $19 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, $16, $__fmt, $vararg_buffer5) | 0;
  $20 = HEAP32[$__nb >> 2] | 0;
  if (!$20) __ZSt17__throw_bad_allocv(); else {
   $23 = $20;
   $37 = $20;
   $__nc$1 = $19;
  }
 } else {
  $23 = HEAP32[$__nb >> 2] | 0;
  $37 = 0;
  $__nc$1 = $__nc$0;
 }
 $22 = $23 + $__nc$1 | 0;
 $24 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23, $22, $__iob) | 0;
 if (($23 | 0) == ($__nar | 0)) {
  $30 = $__nar;
  $36 = 0;
  $__ob$0 = $__o;
 } else {
  $27 = _malloc($__nc$1 << 3) | 0;
  if (!$27) __ZSt17__throw_bad_allocv(); else {
   $30 = $23;
   $36 = $27;
   $__ob$0 = $27;
  }
 }
 $29 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $29;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($30, $24, $22, $__ob$0, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($29) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $32 = HEAP32[$__op >> 2] | 0;
 $33 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $34 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__ob$0, $32, $33, $__iob, $__fl) | 0;
 HEAP32[$__s >> 2] = $34;
 if ($36) _free($36);
 _free($37);
 STACKTOP = sp;
 return $34 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $$byval_copy = sp + 68 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer2 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 72 | 0;
 $__nb = sp + 64 | 0;
 $__o = sp + 102 | 0;
 $__op = sp + 60 | 0;
 $__oe = sp + 56 | 0;
 $0 = sp + 52 | 0;
 $1 = sp + 48 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 30292, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 if (($__nc$0 | 0) > 29) {
  $16 = __ZNSt3__16__clocEv() | 0;
  HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
  $19 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb, $16, $__fmt, $vararg_buffer5) | 0;
  $20 = HEAP32[$__nb >> 2] | 0;
  if (!$20) __ZSt17__throw_bad_allocv(); else {
   $23 = $20;
   $36 = $20;
   $__nc$1 = $19;
  }
 } else {
  $23 = HEAP32[$__nb >> 2] | 0;
  $36 = 0;
  $__nc$1 = $__nc$0;
 }
 $22 = $23 + $__nc$1 | 0;
 $24 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23, $22, $__iob) | 0;
 if (($23 | 0) == ($__nar | 0)) {
  $30 = $__nar;
  $35 = 0;
  $__ob$0 = $__o;
 } else {
  $27 = _malloc($__nc$1 << 1) | 0;
  if (!$27) __ZSt17__throw_bad_allocv(); else {
   $30 = $23;
   $35 = $27;
   $__ob$0 = $27;
  }
 }
 $29 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $29;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($30, $24, $22, $__ob$0, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($29) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $32 = HEAP32[$__op >> 2] | 0;
 $33 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $34 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__ob$0, $32, $33, $__iob, $__fl) | 0;
 _free($35);
 _free($36);
 STACKTOP = sp;
 return $34 | 0;
}

function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $11 = 0, $12 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $40 = 0, $50 = 0, $55 = 0, $6 = 0, $66 = 0, $72 = 0, $77 = 0, $8 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $$pre = HEAP32[$frm_nxt >> 2] | 0;
  if ($$pre >>> 0 < $frm_end >>> 0) {
   $12 = $$pre;
   while (1) {
    $11 = HEAP32[$12 >> 2] | 0;
    if ($11 >>> 0 > $Maxcode >>> 0 | ($11 & -2048 | 0) == 55296) {
     $$0 = 2;
     break L4;
    }
    do if ($11 >>> 0 < 128) {
     $17 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $17 | 0) < 1) {
      $$0 = 1;
      break L4;
     }
     HEAP32[$to_nxt >> 2] = $17 + 1;
     HEAP8[$17 >> 0] = $11;
    } else {
     if ($11 >>> 0 < 2048) {
      $24 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $24 | 0) < 2) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $24 + 1;
      HEAP8[$24 >> 0] = $11 >>> 6 | 192;
      $35 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $35 + 1;
      HEAP8[$35 >> 0] = $11 & 63 | 128;
      break;
     }
     $38 = HEAP32[$to_nxt >> 2] | 0;
     $40 = $$pre1 - $38 | 0;
     if ($11 >>> 0 < 65536) {
      if (($40 | 0) < 3) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $38 + 1;
      HEAP8[$38 >> 0] = $11 >>> 12 | 224;
      $50 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $50 + 1;
      HEAP8[$50 >> 0] = $11 >>> 6 & 63 | 128;
      $55 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $55 + 1;
      HEAP8[$55 >> 0] = $11 & 63 | 128;
      break;
     } else {
      if (($40 | 0) < 4) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $38 + 1;
      HEAP8[$38 >> 0] = $11 >>> 18 | 240;
      $66 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $66 + 1;
      HEAP8[$66 >> 0] = $11 >>> 12 & 63 | 128;
      $72 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $72 + 1;
      HEAP8[$72 >> 0] = $11 >>> 6 & 63 | 128;
      $77 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $77 + 1;
      HEAP8[$77 >> 0] = $11 & 63 | 128;
      break;
     }
    } while (0);
    $12 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
    HEAP32[$frm_nxt >> 2] = $12;
    if ($12 >>> 0 >= $frm_end >>> 0) {
     $$0 = 0;
     break;
    }
   }
  } else $$0 = 0;
 } while (0);
 return $$0 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $27 = 0, $29 = 0, $46 = 0, $47 = 0, $48 = 0, $56 = 0, $68 = 0, $69 = 0, $83 = 0, label = 0;
 $0 = $__ct + 8 | 0;
 L1 : while (1) {
  $1 = HEAP32[$__b >> 2] | 0;
  do if (!$1) $14 = 0; else if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 127]($1) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $14 = 0;
   break;
  } else {
   $14 = HEAP32[$__b >> 2] | 0;
   break;
  } else $14 = $1; while (0);
  $13 = ($14 | 0) == 0;
  $15 = HEAP32[$__e >> 2] | 0;
  do if (!$15) label = 12; else {
   if ((HEAP32[$15 + 12 >> 2] | 0) != (HEAP32[$15 + 16 >> 2] | 0)) if ($13) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 12;
    break;
   } else if ($13) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   if ($13) {
    $$pre$i2$i$i6 = 0;
    break;
   } else $83 = 0;
  }
  $27 = HEAP32[$__b >> 2] | 0;
  $29 = HEAP32[$27 + 12 >> 2] | 0;
  if (($29 | 0) == (HEAP32[$27 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 127]($27) | 0; else $$0$i$i = HEAPU8[$29 >> 0] | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  if (!(HEAP16[(HEAP32[$0 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
   continue;
  } else {
   HEAP32[$47 >> 2] = $48 + 1;
   continue;
  }
 }
 $56 = HEAP32[$__b >> 2] | 0;
 do if (!$56) $69 = 0; else if ((HEAP32[$56 + 12 >> 2] | 0) == (HEAP32[$56 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 127]($56) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $69 = 0;
  break;
 } else {
  $69 = HEAP32[$__b >> 2] | 0;
  break;
 } else $69 = $56; while (0);
 $68 = ($69 | 0) == 0;
 do if (!$$pre$i2$i$i6) label = 32; else {
  if ((HEAP32[$$pre$i2$i$i6 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i6) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 32;
   break;
  }
  if (!$68) label = 33;
 } while (0);
 if ((label | 0) == 32) if ($68) label = 33;
 if ((label | 0) == 33) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i2$i$i611 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $28 = 0, $30 = 0, $48 = 0, $49 = 0, $50 = 0, $60 = 0, $70 = 0, $71 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $13 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $13 = 0;
  break;
 } else {
  $13 = HEAP32[$__b >> 2] | 0;
  break;
 } else $13 = $0; while (0);
 $12 = ($13 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($12) {
   $$pre$i2$i$i611 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($12) label = 12; else {
  $$pre$i2$i$i611 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 31]($__ct, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $48 = HEAP32[$__b >> 2] | 0;
  $49 = $48 + 12 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if (($50 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 40 >> 2] & 127]($48) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $71 = 0; else {
    $60 = $$pre;
    label = 21;
   }
  } else {
   HEAP32[$49 >> 2] = $50 + 1;
   $60 = $48;
   label = 21;
  }
  do if ((label | 0) == 21) if ((HEAP32[$60 + 12 >> 2] | 0) == (HEAP32[$60 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $71 = 0;
   break;
  } else {
   $71 = HEAP32[$__b >> 2] | 0;
   break;
  } else $71 = $60; while (0);
  $70 = ($71 | 0) == 0;
  do if (!$$pre$i2$i$i611) label = 30; else {
   if ((HEAP32[$$pre$i2$i$i611 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i611 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i611 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i611) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 30;
    break;
   }
   if ($70) break L16;
  } while (0);
  if ((label | 0) == 30) if (!$70) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}

function __ZN15google_breakpad6Module15AssignSourceIdsEv($this) {
 $this = $this | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i2 = 0, $$0$i$i$i1 = 0, $$0$i$i$i7 = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i4 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, $39 = 0, $42 = 0, $47 = 0, $49 = 0, $5 = 0, $54 = 0, $56 = 0, $59 = 0, $9 = 0, $next_source_id$015 = 0, $next_source_id$1 = 0;
 $1 = HEAP32[$this + 56 >> 2] | 0;
 $2 = $this + 60 | 0;
 $3 = ($1 | 0) == ($2 | 0);
 if (!$3) {
  $5 = $1;
  while (1) {
   HEAP32[(HEAP32[$5 + 20 >> 2] | 0) + 12 >> 2] = -1;
   $9 = HEAP32[$5 + 4 >> 2] | 0;
   if (!$9) {
    $$01$i$i$i4 = $5;
    while (1) {
     $14 = HEAP32[$$01$i$i$i4 + 8 >> 2] | 0;
     if ((HEAP32[$14 >> 2] | 0) == ($$01$i$i$i4 | 0)) {
      $$0$i$i$i7 = $14;
      break;
     } else $$01$i$i$i4 = $14;
    }
   } else {
    $$0$i$i$i$i2 = $9;
    while (1) {
     $11 = HEAP32[$$0$i$i$i$i2 >> 2] | 0;
     if (!$11) {
      $$0$i$i$i7 = $$0$i$i$i$i2;
      break;
     } else $$0$i$i$i$i2 = $11;
    }
   }
   if (($$0$i$i$i7 | 0) == ($2 | 0)) break; else $5 = $$0$i$i$i7;
  }
 }
 $19 = HEAP32[$this + 68 >> 2] | 0;
 $20 = $this + 72 | 0;
 if (($19 | 0) != ($20 | 0)) {
  $23 = $19;
  while (1) {
   $24 = HEAP32[$23 + 16 >> 2] | 0;
   $26 = HEAP32[$24 + 40 >> 2] | 0;
   $28 = HEAP32[$24 + 44 >> 2] | 0;
   if (($26 | 0) != ($28 | 0)) {
    $31 = $26;
    do {
     HEAP32[(HEAP32[$31 + 16 >> 2] | 0) + 12 >> 2] = 0;
     $31 = $31 + 24 | 0;
    } while (($31 | 0) != ($28 | 0));
   }
   $37 = HEAP32[$23 + 4 >> 2] | 0;
   if (!$37) {
    $$01$i$i = $23;
    while (1) {
     $42 = HEAP32[$$01$i$i + 8 >> 2] | 0;
     if ((HEAP32[$42 >> 2] | 0) == ($$01$i$i | 0)) {
      $$0$i$i = $42;
      break;
     } else $$01$i$i = $42;
    }
   } else {
    $$0$i$i$i1 = $37;
    while (1) {
     $39 = HEAP32[$$0$i$i$i1 >> 2] | 0;
     if (!$39) {
      $$0$i$i = $$0$i$i$i1;
      break;
     } else $$0$i$i$i1 = $39;
    }
   }
   if (($$0$i$i | 0) == ($20 | 0)) break; else $23 = $$0$i$i;
  }
 }
 if ($3) return;
 $47 = $1;
 $next_source_id$015 = 0;
 while (1) {
  $49 = (HEAP32[$47 + 20 >> 2] | 0) + 12 | 0;
  if (!(HEAP32[$49 >> 2] | 0)) {
   HEAP32[$49 >> 2] = $next_source_id$015;
   $next_source_id$1 = $next_source_id$015 + 1 | 0;
  } else $next_source_id$1 = $next_source_id$015;
  $54 = HEAP32[$47 + 4 >> 2] | 0;
  if (!$54) {
   $$01$i$i$i = $47;
   while (1) {
    $59 = HEAP32[$$01$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$59 >> 2] | 0) == ($$01$i$i$i | 0)) {
     $$0$i$i$i = $59;
     break;
    } else $$01$i$i$i = $59;
   }
  } else {
   $$0$i$i$i$i = $54;
   while (1) {
    $56 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$56) {
     $$0$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $56;
   }
  }
  if (($$0$i$i$i | 0) == ($2 | 0)) break; else {
   $47 = $$0$i$i$i;
   $next_source_id$015 = $next_source_id$1;
  }
 }
 return;
}

function __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($this, $reg, $rule) {
 $this = $this | 0;
 $reg = $reg | 0;
 $rule = $rule | 0;
 var $$0$i12$i = 0, $$lcssa = 0, $$lcssa18 = 0, $13 = 0, $14 = 0, $2 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $32 = 0, $33 = 0, $36 = 0, $37 = 0, $4 = 0, $7 = 0, $9 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa16 = 0, $__nd$0$i$i$lcssa17 = 0, $__parent$i = 0, $__r$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i = sp;
 if (($reg | 0) == -1) ___assert_fail(18867, 18044, 1116, 18909);
 if (!$rule) ___assert_fail(18925, 18044, 1117, 18909);
 $2 = $this + 4 | 0;
 $3 = $this + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 do if (!$4) {
  HEAP32[$__parent$i >> 2] = $3;
  $$0$i12$i = $3;
  $25 = $3;
  label = 15;
 } else {
  $__nd$0$i$i = $4;
  while (1) {
   $7 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
   if (($7 | 0) > ($reg | 0)) {
    $9 = HEAP32[$__nd$0$i$i >> 2] | 0;
    if (!$9) {
     $$lcssa18 = $__nd$0$i$i;
     $__nd$0$i$i$lcssa17 = $__nd$0$i$i;
     label = 8;
     break;
    } else $__nd$0$be$in$i$i = $9;
   } else {
    if (($7 | 0) >= ($reg | 0)) {
     $__nd$0$i$i$lcssa = $__nd$0$i$i;
     label = 14;
     break;
    }
    $13 = $__nd$0$i$i + 4 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if (!$14) {
     $$lcssa = $13;
     $__nd$0$i$i$lcssa16 = $__nd$0$i$i;
     label = 12;
     break;
    } else $__nd$0$be$in$i$i = $14;
   }
   $__nd$0$i$i = $__nd$0$be$in$i$i;
  }
  if ((label | 0) == 8) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa17;
   $$0$i12$i = $$lcssa18;
   $25 = $__nd$0$i$i$lcssa17;
   label = 15;
   break;
  } else if ((label | 0) == 12) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa16;
   $$0$i12$i = $$lcssa;
   $25 = $__nd$0$i$i$lcssa16;
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
   if (!$__nd$0$i$i$lcssa) {
    $$0$i12$i = $__parent$i;
    $25 = $__nd$0$i$i$lcssa;
    label = 15;
    break;
   } else {
    $__r$0$i = $__nd$0$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 15) {
  $20 = __Znwj(24) | 0;
  HEAP32[$20 + 16 >> 2] = $reg;
  HEAP32[$20 + 20 >> 2] = 0;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  HEAP32[$20 + 8 >> 2] = $25;
  HEAP32[$$0$i12$i >> 2] = $20;
  $27 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
  if (!$27) $32 = $20; else {
   HEAP32[$2 >> 2] = $27;
   $32 = HEAP32[$$0$i12$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 8 >> 2] | 0, $32);
  $33 = $this + 12 | 0;
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
  $__r$0$i = $20;
 }
 $36 = $__r$0$i + 20 | 0;
 $37 = HEAP32[$36 >> 2] | 0;
 if (!$37) {
  HEAP32[$36 >> 2] = $rule;
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$37 >> 2] | 0) + 4 >> 2] & 255]($37);
 HEAP32[$36 >> 2] = $rule;
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIcE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $45 = 0, $58 = 0, $6 = 0, $62 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$019 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa24 = 0, $__nread$2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  if (($8 | 0) > 0) {
   $__i$019 = 0;
   do {
    $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($12 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$__extbuf + $__i$019 >> 0] = $12;
    $__i$019 = $__i$019 + 1 | 0;
   } while (($__i$019 | 0) < ($8 | 0));
  }
  L8 : do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $21 = $this + 40 | 0;
   $22 = $this + 36 | 0;
   $23 = $__1buf + 1 | 0;
   $__nread$0 = $8;
   L10 : while (1) {
    $25 = HEAP32[$21 >> 2] | 0;
    $26 = $25;
    $28 = HEAP32[$26 >> 2] | 0;
    $31 = HEAP32[$26 + 4 >> 2] | 0;
    $32 = HEAP32[$22 >> 2] | 0;
    $33 = $__extbuf + $__nread$0 | 0;
    switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 15]($32, $25, $__extbuf, $33, $__enxt, $__1buf, $23, $__inxt) | 0) {
    case 2:
     {
      $$0 = -1;
      break L1;
      break;
     }
    case 3:
     {
      $__nread$0$lcssa24 = $__nread$0;
      break L10;
      break;
     }
    case 1:
     break;
    default:
     {
      $__nread$2 = $__nread$0;
      break L8;
     }
    }
    $39 = HEAP32[$21 >> 2] | 0;
    HEAP32[$39 >> 2] = $28;
    HEAP32[$39 + 4 >> 2] = $31;
    if (($__nread$0 | 0) == 8) {
     $$0 = -1;
     break L1;
    }
    $45 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($45 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$33 >> 0] = $45;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread$2 = $__nread$0$lcssa24;
  } else {
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread$2 = $8;
  } while (0);
  if ($__consume) {
   $58 = HEAP8[$__1buf >> 0] | 0;
   HEAP32[$this + 48 >> 2] = $58 & 255;
   $62 = $58;
  } else {
   $__i2$0 = $__nread$2;
   while (1) {
    if (($__i2$0 | 0) <= 0) break;
    $__i2$0 = $__i2$0 + -1 | 0;
    if ((_ungetc(HEAPU8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
     $$0 = -1;
     break L1;
    }
   }
   $62 = HEAP8[$__1buf >> 0] | 0;
  }
  $$0 = $62 & 255;
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad6Module9AddExternEPNS0_6ExternE($this, $ext) {
 $this = $this | 0;
 $ext = $ext | 0;
 var $$0$i$i$i = 0, $$lcssa = 0, $$lcssa18 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $24 = 0, $3 = 0, $32 = 0, $33 = 0, $40 = 0, $44 = 0, $46 = 0, $5 = 0, $51 = 0, $52 = 0, $7 = 0, $__nd$0$be$in$i$i$i = 0, $__nd$0$i$i$i = 0, $__nd$0$i$i$i$lcssa = 0, $__nd$0$i$i$i$lcssa16 = 0, $__nd$0$i$i$i$lcssa17 = 0, $__parent$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i$i = sp;
 $0 = $ext;
 $1 = $this + 92 | 0;
 $2 = $this + 96 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 do if (!$3) {
  HEAP32[$__parent$i$i >> 2] = $2;
  $$0$i$i$i = $2;
  $44 = $2;
 } else {
  $5 = $ext;
  $7 = HEAP32[$5 >> 2] | 0;
  $10 = HEAP32[$5 + 4 >> 2] | 0;
  $__nd$0$i$i$i = $3;
  while (1) {
   $13 = HEAP32[$__nd$0$i$i$i + 16 >> 2] | 0;
   $15 = HEAP32[$13 >> 2] | 0;
   $18 = HEAP32[$13 + 4 >> 2] | 0;
   if ($10 >>> 0 < $18 >>> 0 | ($10 | 0) == ($18 | 0) & $7 >>> 0 < $15 >>> 0) {
    $24 = HEAP32[$__nd$0$i$i$i >> 2] | 0;
    if (!$24) {
     $$lcssa18 = $__nd$0$i$i$i;
     $__nd$0$i$i$i$lcssa17 = $__nd$0$i$i$i;
     label = 5;
     break;
    } else $__nd$0$be$in$i$i$i = $24;
   } else {
    if (!($18 >>> 0 < $10 >>> 0 | ($18 | 0) == ($10 | 0) & $15 >>> 0 < $7 >>> 0)) {
     $__nd$0$i$i$i$lcssa = $__nd$0$i$i$i;
     label = 10;
     break;
    }
    $32 = $__nd$0$i$i$i + 4 | 0;
    $33 = HEAP32[$32 >> 2] | 0;
    if (!$33) {
     $$lcssa = $32;
     $__nd$0$i$i$i$lcssa16 = $__nd$0$i$i$i;
     label = 9;
     break;
    } else $__nd$0$be$in$i$i$i = $33;
   }
   $__nd$0$i$i$i = $__nd$0$be$in$i$i$i;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa17;
   $$0$i$i$i = $$lcssa18;
   $44 = $__nd$0$i$i$i$lcssa17;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa16;
   $$0$i$i$i = $$lcssa;
   $44 = $__nd$0$i$i$i$lcssa16;
   break;
  } else if ((label | 0) == 10) {
   HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa;
   $$0$i$i$i = $__parent$i$i;
   $44 = $__nd$0$i$i$i$lcssa;
   break;
  }
 } while (0);
 if (!(HEAP32[$$0$i$i$i >> 2] | 0)) {
  $40 = __Znwj(20) | 0;
  HEAP32[$40 + 16 >> 2] = $0;
  HEAP32[$40 >> 2] = 0;
  HEAP32[$40 + 4 >> 2] = 0;
  HEAP32[$40 + 8 >> 2] = $44;
  HEAP32[$$0$i$i$i >> 2] = $40;
  $46 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
  if (!$46) $51 = $40; else {
   HEAP32[$1 >> 2] = $46;
   $51 = HEAP32[$$0$i$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 96 >> 2] | 0, $51);
  $52 = $this + 100 | 0;
  HEAP32[$52 >> 2] = (HEAP32[$52 >> 2] | 0) + 1;
  STACKTOP = sp;
  return;
 } else {
  if (!$ext) {
   STACKTOP = sp;
   return;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($ext + 8 | 0);
  __ZdlPv($ext);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this | 0;
 var $8 = 0;
 if (!(HEAP8[2352] | 0)) if (___cxa_guard_acquire(2352) | 0) {
  if (!(HEAP8[2360] | 0)) if (___cxa_guard_acquire(2360) | 0) {
   $8 = 11248;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 11536);
   ___cxa_atexit(170, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2360);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11248, 11536) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11260, 11568) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11272, 11604) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11284, 11628) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11296, 11652) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11308, 11668) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11320, 11688) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11332, 11708) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11344, 11736) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11356, 11776) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11368, 11808) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11380, 11844) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11392, 11880) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11404, 11896) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11416, 11912) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11428, 11928) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11440, 11652) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11452, 11944) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11464, 11960) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11476, 11976) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11488, 11992) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11500, 12008) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11512, 12024) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(11524, 12040) | 0;
  HEAP32[3014] = 11248;
  ___cxa_guard_release(2352);
 }
 return HEAP32[3014] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this | 0;
 var $8 = 0;
 if (!(HEAP8[2336] | 0)) if (___cxa_guard_acquire(2336) | 0) {
  if (!(HEAP8[2344] | 0)) if (___cxa_guard_acquire(2344) | 0) {
   $8 = 10956;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 11244);
   ___cxa_atexit(169, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2344);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10956, 30607) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10968, 30615) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10980, 30624) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10992, 30630) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11004, 30636) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11016, 30640) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11028, 30645) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11040, 30650) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11052, 30657) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11064, 30667) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11076, 30675) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11088, 30684) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11100, 30693) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11112, 30697) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11124, 30701) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11136, 30705) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11148, 30636) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11160, 30709) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11172, 30713) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11184, 30717) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11196, 30721) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11208, 30725) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11220, 30729) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(11232, 30733) | 0;
  HEAP32[2811] = 10956;
  ___cxa_guard_release(2336);
 }
 return HEAP32[2811] | 0;
}

function __ZNSt3__110__stdinbufIwE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $40 = 0, $46 = 0, $6 = 0, $60 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$019 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa24 = 0, $__nread$2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  if (($8 | 0) > 0) {
   $__i$019 = 0;
   do {
    $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($12 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$__extbuf + $__i$019 >> 0] = $12;
    $__i$019 = $__i$019 + 1 | 0;
   } while (($__i$019 | 0) < ($8 | 0));
  }
  L8 : do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $21 = $this + 40 | 0;
   $22 = $this + 36 | 0;
   $23 = $__1buf + 4 | 0;
   $__nread$0 = $8;
   L10 : while (1) {
    $26 = HEAP32[$21 >> 2] | 0;
    $27 = $26;
    $29 = HEAP32[$27 >> 2] | 0;
    $32 = HEAP32[$27 + 4 >> 2] | 0;
    $33 = HEAP32[$22 >> 2] | 0;
    $34 = $__extbuf + $__nread$0 | 0;
    switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$33 >> 2] | 0) + 16 >> 2] & 15]($33, $26, $__extbuf, $34, $__enxt, $__1buf, $23, $__inxt) | 0) {
    case 2:
     {
      $$0 = -1;
      break L1;
      break;
     }
    case 3:
     {
      $__nread$0$lcssa24 = $__nread$0;
      break L10;
      break;
     }
    case 1:
     break;
    default:
     {
      $__nread$2 = $__nread$0;
      break L8;
     }
    }
    $40 = HEAP32[$21 >> 2] | 0;
    HEAP32[$40 >> 2] = $29;
    HEAP32[$40 + 4 >> 2] = $32;
    if (($__nread$0 | 0) == 8) {
     $$0 = -1;
     break L1;
    }
    $46 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($46 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$34 >> 0] = $46;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
   $__nread$2 = $__nread$0$lcssa24;
  } else {
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
   $__nread$2 = $8;
  } while (0);
  if ($__consume) {
   $60 = HEAP32[$__1buf >> 2] | 0;
   HEAP32[$this + 48 >> 2] = $60;
   $$0 = $60;
   break;
  } else $__i2$0 = $__nread$2;
  while (1) {
   if (($__i2$0 | 0) <= 0) break;
   $__i2$0 = $__i2$0 + -1 | 0;
   if ((_ungetc(HEAP8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
    $$0 = -1;
    break L1;
   }
  }
  $$0 = HEAP32[$__1buf >> 2] | 0;
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _wcsnrtombs($dst, $wcs, $wn, $n, $st) {
 $dst = $dst | 0;
 $wcs = $wcs | 0;
 $wn = $wn | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $18 = 0, $23 = 0, $24 = 0, $33 = 0, $38 = 0, $4 = 0, $7 = 0, $8 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $buf = sp + 8 | 0;
 $ws = sp;
 $0 = HEAP32[$wcs >> 2] | 0;
 HEAP32[$ws >> 2] = $0;
 $1 = ($dst | 0) != 0;
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 L1 : do if (($n$ | 0) != 0 & ($0 | 0) != 0) {
  $$021 = $wn;
  $$0218 = $n$;
  $38 = $$cast;
  $cnt$019 = 0;
  $s$020 = $dst$;
  while (1) {
   $4 = $$021 >>> 0 >= $$0218 >>> 0;
   if (!($4 | $$021 >>> 0 > 32)) {
    $$1 = $$021;
    $$24 = $$0218;
    $18 = $38;
    $cnt$1 = $cnt$019;
    $s$09 = $s$020;
    break L1;
   }
   $$02$$0 = $4 ? $$0218 : $$021;
   $7 = $$021 - $$02$$0 | 0;
   $8 = _wcsrtombs($s$020, $ws, $$02$$0, 0) | 0;
   if (($8 | 0) == -1) {
    $$lcssa57 = $7;
    $s$020$lcssa56 = $s$020;
    break;
   }
   $10 = ($s$020 | 0) == ($buf | 0);
   $12 = $10 ? 0 : $8;
   $$13 = $$0218 - $12 | 0;
   $s$1 = $10 ? $s$020 : $s$020 + $8 | 0;
   $13 = $8 + $cnt$019 | 0;
   $14 = HEAP32[$ws >> 2] | 0;
   if (($$0218 | 0) != ($12 | 0) & ($14 | 0) != 0) {
    $$021 = $7;
    $$0218 = $$13;
    $38 = $14;
    $cnt$019 = $13;
    $s$020 = $s$1;
   } else {
    $$1 = $7;
    $$24 = $$13;
    $18 = $14;
    $cnt$1 = $13;
    $s$09 = $s$1;
    break L1;
   }
  }
  $$1 = $$lcssa57;
  $$24 = 0;
  $18 = HEAP32[$ws >> 2] | 0;
  $cnt$1 = -1;
  $s$09 = $s$020$lcssa56;
 } else {
  $$1 = $wn;
  $$24 = $n$;
  $18 = $$cast;
  $cnt$1 = 0;
  $s$09 = $dst$;
 } while (0);
 L8 : do if (!$18) $cnt$3 = $cnt$1; else if (($$24 | 0) != 0 & ($$1 | 0) != 0) {
  $$216 = $$1;
  $$313 = $$24;
  $23 = $18;
  $cnt$214 = $cnt$1;
  $s$215 = $s$09;
  while (1) {
   $24 = _wcrtomb($s$215, HEAP32[$23 >> 2] | 0, 0) | 0;
   if (($24 + 1 | 0) >>> 0 < 2) {
    $$lcssa = $24;
    $cnt$214$lcssa = $cnt$214;
    break;
   }
   $23 = (HEAP32[$ws >> 2] | 0) + 4 | 0;
   HEAP32[$ws >> 2] = $23;
   $$216 = $$216 + -1 | 0;
   $33 = $cnt$214 + 1 | 0;
   if (!(($$313 | 0) != ($24 | 0) & ($$216 | 0) != 0)) {
    $cnt$3 = $33;
    break L8;
   } else {
    $$313 = $$313 - $24 | 0;
    $cnt$214 = $33;
    $s$215 = $s$215 + $24 | 0;
   }
  }
  if (!$$lcssa) {
   HEAP32[$ws >> 2] = 0;
   $cnt$3 = $cnt$214$lcssa;
  } else $cnt$3 = -1;
 } else $cnt$3 = $cnt$1; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$wcs >> 2] = HEAP32[$ws >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZNSt3__14pairIKyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS0_IKS8_S8_EEEEEEEC2ERKSF_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $1 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp;
 $3 = $0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $this;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 $13 = $this + 8 | 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 $16 = $this + 12 | 0;
 HEAP32[$13 >> 2] = $16;
 $18 = HEAP32[$0 + 8 >> 2] | 0;
 $19 = $0 + 12 | 0;
 if (($18 | 0) == ($19 | 0)) {
  $37 = $0;
  $38 = $37;
  $39 = HEAP32[$38 >> 2] | 0;
  $40 = $37 + 4 | 0;
  $41 = $40;
  $42 = HEAP32[$41 >> 2] | 0;
  $43 = $this;
  $44 = $43;
  HEAP32[$44 >> 2] = $39;
  $45 = $43 + 4 | 0;
  $46 = $45;
  HEAP32[$46 >> 2] = $42;
  STACKTOP = sp;
  return;
 }
 $21 = $16;
 $22 = $2 + 12 | 0;
 $24 = $18;
 $27 = $18;
 while (1) {
  HEAP32[$1 >> 2] = $21;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, $24 + 16 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($22, $24 + 28 | 0);
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKS8_($13, $$byval_copy, $2) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $28 = HEAP32[$27 + 4 >> 2] | 0;
  if (!$28) {
   $$01$i$i$i$i$i = $27;
   while (1) {
    $33 = HEAP32[$$01$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$33 >> 2] | 0) == ($$01$i$i$i$i$i | 0)) {
     $$0$i$i$i$i$i = $33;
     break;
    } else $$01$i$i$i$i$i = $33;
   }
  } else {
   $$0$i$i$i$i$i$i = $28;
   while (1) {
    $30 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$30) {
     $$0$i$i$i$i$i = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $30;
   }
  }
  if (($$0$i$i$i$i$i | 0) == ($19 | 0)) break; else {
   $24 = $$0$i$i$i$i$i;
   $27 = $$0$i$i$i$i$i;
  }
 }
 $37 = $0;
 $38 = $37;
 $39 = HEAP32[$38 >> 2] | 0;
 $40 = $37 + 4 | 0;
 $41 = $40;
 $42 = HEAP32[$41 >> 2] | 0;
 $43 = $this;
 $44 = $43;
 HEAP32[$44 >> 2] = $39;
 $45 = $43 + 4 | 0;
 $46 = $45;
 HEAP32[$46 >> 2] = $42;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule15ReadSourceLinesEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $11 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $35 = 0, $38 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) ___assert_fail(15030, 21517, 119, 26244);
 $8 = HEAP32[$6 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($2, 15952, 11);
 $9 = $8 + 12 | 0;
 $10 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($9, $2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $11 = $8 + 16 | 0;
 if (($10 | 0) == ($11 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 15964, 12);
  $13 = __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($9, $3) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $15 = $13;
 } else $15 = $10;
 if (($15 | 0) == ($11 | 0)) {
  $16 = HEAP32[$5 >> 2] | 0;
  if (!$16) ___assert_fail(15030, 21517, 119, 26244);
  $19 = HEAP32[$16 + 4 >> 2] | 0;
  $22 = HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($4, 15952, 11);
  FUNCTION_TABLE_vii[$22 & 63]($19, $4);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  STACKTOP = sp;
  return;
 }
 $24 = $15 + 40 | 0;
 $26 = HEAP32[$24 >> 2] | 0;
 $29 = HEAP32[$24 + 4 >> 2] | 0;
 if ($29 >>> 0 > $1 >>> 0 | ($29 | 0) == ($1 | 0) & $26 >>> 0 > $0 >>> 0) {
  $43 = HEAP32[$this + 4 >> 2] | 0;
  $44 = HEAP32[$5 >> 2] | 0;
  if (!$44) ___assert_fail(15030, 21517, 119, 26244);
  $46 = _i64Subtract($26 | 0, $29 | 0, $0 | 0, $1 | 0) | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$43 >> 2] | 0) + 12 >> 2] & 15]($43, (HEAP32[$15 + 32 >> 2] | 0) + $0 | 0, $46, tempRet0, HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] | 0, $this + 32 | 0);
  STACKTOP = sp;
  return;
 } else {
  $35 = HEAP32[$5 >> 2] | 0;
  if (!$35) ___assert_fail(15030, 21517, 119, 26244);
  $38 = HEAP32[$35 + 4 >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$38 >> 2] | 0) + 32 >> 2] & 15]($38, $0, $1);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $32 = 0, $4 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 56 | 0;
 $$byval_copy = sp + 52 | 0;
 $__lv = sp + 48 | 0;
 $0 = sp + 44 | 0;
 $1 = sp + 40 | 0;
 $2 = sp + 36 | 0;
 $3 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $4 = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$1 >> 2];
  $14 = FUNCTION_TABLE_iiiiiii[$11 & 63]($this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv) | 0;
  HEAP32[$__b >> 2] = $14;
  switch (HEAP32[$__lv >> 2] | 0) {
  case 0:
   {
    HEAP8[$__v >> 0] = 0;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  case 1:
   {
    HEAP8[$__v >> 0] = 1;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  default:
   {
    HEAP8[$__v >> 0] = 1;
    HEAP32[$__err >> 2] = 4;
    $$sroa$01$0 = $14;
    break L1;
   }
  }
 } else {
  $16 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$2 >> 2] = $16;
  $17 = __ZNKSt3__16locale9use_facetERNS0_2idE($2, 9444) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($16) | 0;
  $18 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$3 >> 2] = $18;
  $19 = __ZNKSt3__16locale9use_facetERNS0_2idE($3, 9600) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($18) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 24 >> 2] & 63]($__names, $19);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($__names + 12 | 0, $19);
  HEAP32[$4 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
  HEAP8[$__v >> 0] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy2, $__names, $__names + 24 | 0, $17, $__err, 1) | 0) == ($__names | 0) & 1;
  $32 = HEAP32[$__b >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names + 12 | 0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
  $$sroa$01$0 = $32;
 } while (0);
 STACKTOP = sp;
 return $$sroa$01$0 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $32 = 0, $4 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 56 | 0;
 $$byval_copy = sp + 52 | 0;
 $__lv = sp + 48 | 0;
 $0 = sp + 44 | 0;
 $1 = sp + 40 | 0;
 $2 = sp + 36 | 0;
 $3 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $4 = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$1 >> 2];
  $14 = FUNCTION_TABLE_iiiiiii[$11 & 63]($this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv) | 0;
  HEAP32[$__b >> 2] = $14;
  switch (HEAP32[$__lv >> 2] | 0) {
  case 0:
   {
    HEAP8[$__v >> 0] = 0;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  case 1:
   {
    HEAP8[$__v >> 0] = 1;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  default:
   {
    HEAP8[$__v >> 0] = 1;
    HEAP32[$__err >> 2] = 4;
    $$sroa$01$0 = $14;
    break L1;
   }
  }
 } else {
  $16 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$2 >> 2] = $16;
  $17 = __ZNKSt3__16locale9use_facetERNS0_2idE($2, 9452) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($16) | 0;
  $18 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$3 >> 2] = $18;
  $19 = __ZNKSt3__16locale9use_facetERNS0_2idE($3, 9592) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($18) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 24 >> 2] & 63]($__names, $19);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($__names + 12 | 0, $19);
  HEAP32[$4 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
  HEAP8[$__v >> 0] = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy2, $__names, $__names + 24 | 0, $17, $__err, 1) | 0) == ($__names | 0) & 1;
  $32 = HEAP32[$__b >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names + 12 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
  $$sroa$01$0 = $32;
 } while (0);
 STACKTOP = sp;
 return $$sroa$01$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre$phi3Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $34 = 0, $4 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $54 = 0, $58 = 0, $66 = 0, $69 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (($__c | 0) == -1) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $2 = $this + 12 | 0;
 $4 = $this + 8 | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0;
 $9 = $this + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $this + 28 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (($10 | 0) == ($12 | 0)) {
  $14 = $this + 48 | 0;
  if (!(HEAP32[$14 >> 2] & 16)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $18 = $this + 20 | 0;
  $21 = HEAP32[$18 >> 2] | 0;
  $23 = $this + 44 | 0;
  $26 = (HEAP32[$23 >> 2] | 0) - $21 | 0;
  $27 = $this + 32 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($27, 0);
  if (!(HEAP8[$27 >> 0] & 1)) $33 = 10; else $33 = (HEAP32[$27 >> 2] & -2) + -1 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($27, $33, 0);
  $34 = HEAP8[$27 >> 0] | 0;
  if (!($34 & 1)) {
   $45 = $27 + 1 | 0;
   $46 = ($34 & 255) >>> 1;
  } else {
   $45 = HEAP32[$this + 40 >> 2] | 0;
   $46 = HEAP32[$this + 36 >> 2] | 0;
  }
  $44 = $45 + $46 | 0;
  HEAP32[$18 >> 2] = $45;
  HEAP32[$11 >> 2] = $44;
  $47 = $45 + ($10 - $21) | 0;
  HEAP32[$9 >> 2] = $47;
  $48 = $45 + $26 | 0;
  HEAP32[$23 >> 2] = $48;
  $$pre$phi3Z2D = $14;
  $$pre$phiZ2D = $23;
  $50 = $47;
  $52 = $48;
  $69 = $44;
 } else {
  $$phi$trans$insert = $this + 44 | 0;
  $$pre$phi3Z2D = $this + 48 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $50 = $10;
  $52 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $69 = $12;
 }
 $49 = $50 + 1 | 0;
 HEAP32[$0 >> 2] = $49;
 $54 = HEAP32[($49 >>> 0 < $52 >>> 0 ? $$pre$phiZ2D : $0) >> 2] | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $54;
 if (HEAP32[$$pre$phi3Z2D >> 2] & 8) {
  $58 = $this + 32 | 0;
  if (!(HEAP8[$58 >> 0] & 1)) $66 = $58 + 1 | 0; else $66 = HEAP32[$this + 40 >> 2] | 0;
  HEAP32[$4 >> 2] = $66;
  HEAP32[$2 >> 2] = $66 + $8;
  HEAP32[$this + 16 >> 2] = $54;
 }
 if (($50 | 0) == ($69 | 0)) {
  $$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 31]($this, $__c & 255) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$9 >> 2] = $49;
  HEAP8[$50 >> 0] = $__c;
  $$0 = $__c & 255;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $4 = 0, $47 = 0, $50 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP32[$__atoms + 96 >> 2] | 0) == ($__ct | 0);
  if (!$4) if ((HEAP32[$__atoms + 100 >> 2] | 0) != ($__ct | 0)) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if (($__ct | 0) == ($__thousands_sep | 0) ? ((($10 & 1) == 0 ? ($10 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) != 0 : 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 104 | 0;
  $$0$i2 = $__atoms;
  while (1) {
   if ((HEAP32[$$0$i2 >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i2;
    break;
   }
   $$0$i2 = $$0$i2 + 4 | 0;
   if (($$0$i2 | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  $35 = $34 >> 2;
  if (($34 | 0) > 92) $$0 = -1; else {
   switch ($__base | 0) {
   case 10:
   case 8:
    {
     if (($35 | 0) >= ($__base | 0)) {
      $$0 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($34 | 0) >= 88) {
      if ($1) {
       $$0 = -1;
       break L6;
      }
      if (($0 - $__a | 0) >= 3) {
       $$0 = -1;
       break L6;
      }
      if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
       $$0 = -1;
       break L6;
      }
      HEAP32[$__dc >> 2] = 0;
      $47 = HEAP8[28892 + $35 >> 0] | 0;
      HEAP32[$__a_end >> 2] = $0 + 1;
      HEAP8[$0 >> 0] = $47;
      $$0 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $50 = HEAP8[28892 + $35 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $50;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $4 = 0, $46 = 0, $49 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP8[$__atoms + 24 >> 0] | 0) == $__ct << 24 >> 24;
  if (!$4) if ((HEAP8[$__atoms + 25 >> 0] | 0) != $__ct << 24 >> 24) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24 ? ((($10 & 1) == 0 ? ($10 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) != 0 : 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 26 | 0;
  $$0$i2 = $__atoms;
  while (1) {
   if ((HEAP8[$$0$i2 >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i2;
    break;
   }
   $$0$i2 = $$0$i2 + 1 | 0;
   if (($$0$i2 | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  if (($34 | 0) > 23) $$0 = -1; else {
   switch ($__base | 0) {
   case 10:
   case 8:
    {
     if (($34 | 0) >= ($__base | 0)) {
      $$0 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($34 | 0) >= 22) {
      if ($1) {
       $$0 = -1;
       break L6;
      }
      if (($0 - $__a | 0) >= 3) {
       $$0 = -1;
       break L6;
      }
      if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
       $$0 = -1;
       break L6;
      }
      HEAP32[$__dc >> 2] = 0;
      $46 = HEAP8[28892 + $34 >> 0] | 0;
      HEAP32[$__a_end >> 2] = $0 + 1;
      HEAP8[$0 >> 0] = $46;
      $$0 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $49 = HEAP8[28892 + $34 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $49;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $$03$i$i = 0, $$03$i$i4 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $21 = 0, $22 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $7 = 0, $__p$0$lcssa$i$i = 0, $__p$0$lcssa$i$i9 = 0, $__p$0$ph$i$i = 0, $__p$0$ph$i$i2 = 0, $__p$02$i$i = 0, $__p$02$i$i5 = 0;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1 & 16) {
  $4 = $this + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  $7 = HEAP32[$this + 24 >> 2] | 0;
  if ($5 >>> 0 < $7 >>> 0) {
   HEAP32[$4 >> 2] = $7;
   $13 = $7;
  } else $13 = $5;
  $10 = HEAP32[$this + 20 >> 2] | 0;
  $14 = $13 - $10 | 0;
  if ($14 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
  if ($14 >>> 0 < 11) {
   HEAP8[$agg$result >> 0] = $14 << 1;
   $__p$0$ph$i$i2 = $agg$result + 1 | 0;
  } else {
   $21 = $14 + 16 & -16;
   $22 = __Znwj($21) | 0;
   HEAP32[$agg$result + 8 >> 2] = $22;
   HEAP32[$agg$result >> 2] = $21 | 1;
   HEAP32[$agg$result + 4 >> 2] = $14;
   $__p$0$ph$i$i2 = $22;
  }
  if (($10 | 0) == ($13 | 0)) $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2; else {
   $$03$i$i4 = $10;
   $__p$02$i$i5 = $__p$0$ph$i$i2;
   while (1) {
    HEAP8[$__p$02$i$i5 >> 0] = HEAP8[$$03$i$i4 >> 0] | 0;
    $$03$i$i4 = $$03$i$i4 + 1 | 0;
    if (($$03$i$i4 | 0) == ($13 | 0)) break; else $__p$02$i$i5 = $__p$02$i$i5 + 1 | 0;
   }
   $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2 + $14 | 0;
  }
  HEAP8[$__p$0$lcssa$i$i9 >> 0] = 0;
  return;
 }
 if (!($1 & 8)) {
  HEAP32[$agg$result >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  return;
 }
 $34 = HEAP32[$this + 8 >> 2] | 0;
 $36 = HEAP32[$this + 16 >> 2] | 0;
 $39 = $36 - $34 | 0;
 if ($39 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
 if ($39 >>> 0 < 11) {
  HEAP8[$agg$result >> 0] = $39 << 1;
  $__p$0$ph$i$i = $agg$result + 1 | 0;
 } else {
  $46 = $39 + 16 & -16;
  $47 = __Znwj($46) | 0;
  HEAP32[$agg$result + 8 >> 2] = $47;
  HEAP32[$agg$result >> 2] = $46 | 1;
  HEAP32[$agg$result + 4 >> 2] = $39;
  $__p$0$ph$i$i = $47;
 }
 if (($34 | 0) == ($36 | 0)) $__p$0$lcssa$i$i = $__p$0$ph$i$i; else {
  $$03$i$i = $34;
  $__p$02$i$i = $__p$0$ph$i$i;
  while (1) {
   HEAP8[$__p$02$i$i >> 0] = HEAP8[$$03$i$i >> 0] | 0;
   $$03$i$i = $$03$i$i + 1 | 0;
   if (($$03$i$i | 0) == ($36 | 0)) break; else $__p$02$i$i = $__p$02$i$i + 1 | 0;
  }
  $__p$0$lcssa$i$i = $__p$0$ph$i$i + $39 | 0;
 }
 HEAP8[$__p$0$lcssa$i$i >> 0] = 0;
 return;
}

function _memchr($src, $c, $n) {
 $src = $src | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $32 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0;
 $0 = $c & 255;
 $4 = ($n | 0) != 0;
 L1 : do if ($4 & ($src & 3 | 0) != 0) {
  $5 = $c & 255;
  $$019 = $n;
  $s$020 = $src;
  while (1) {
   if ((HEAP8[$s$020 >> 0] | 0) == $5 << 24 >> 24) {
    $$0$lcssa44 = $$019;
    $s$0$lcssa43 = $s$020;
    label = 6;
    break L1;
   }
   $8 = $s$020 + 1 | 0;
   $9 = $$019 + -1 | 0;
   $13 = ($9 | 0) != 0;
   if ($13 & ($8 & 3 | 0) != 0) {
    $$019 = $9;
    $s$020 = $8;
   } else {
    $$0$lcssa = $9;
    $$lcssa = $13;
    $s$0$lcssa = $8;
    label = 5;
    break;
   }
  }
 } else {
  $$0$lcssa = $n;
  $$lcssa = $4;
  $s$0$lcssa = $src;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$0$lcssa44 = $$0$lcssa;
  $s$0$lcssa43 = $s$0$lcssa;
  label = 6;
 } else {
  $$3 = 0;
  $s$2 = $s$0$lcssa;
 }
 L8 : do if ((label | 0) == 6) {
  $15 = $c & 255;
  if ((HEAP8[$s$0$lcssa43 >> 0] | 0) == $15 << 24 >> 24) {
   $$3 = $$0$lcssa44;
   $s$2 = $s$0$lcssa43;
  } else {
   $17 = Math_imul($0, 16843009) | 0;
   L11 : do if ($$0$lcssa44 >>> 0 > 3) {
    $$110 = $$0$lcssa44;
    $w$011 = $s$0$lcssa43;
    while (1) {
     $20 = HEAP32[$w$011 >> 2] ^ $17;
     if (($20 & -2139062144 ^ -2139062144) & $20 + -16843009) {
      $$110$lcssa = $$110;
      $w$011$lcssa = $w$011;
      break;
     }
     $26 = $w$011 + 4 | 0;
     $27 = $$110 + -4 | 0;
     if ($27 >>> 0 > 3) {
      $$110 = $27;
      $w$011 = $26;
     } else {
      $$1$lcssa = $27;
      $w$0$lcssa = $26;
      label = 11;
      break L11;
     }
    }
    $$24 = $$110$lcssa;
    $s$15 = $w$011$lcssa;
   } else {
    $$1$lcssa = $$0$lcssa44;
    $w$0$lcssa = $s$0$lcssa43;
    label = 11;
   } while (0);
   if ((label | 0) == 11) if (!$$1$lcssa) {
    $$3 = 0;
    $s$2 = $w$0$lcssa;
    break;
   } else {
    $$24 = $$1$lcssa;
    $s$15 = $w$0$lcssa;
   }
   while (1) {
    if ((HEAP8[$s$15 >> 0] | 0) == $15 << 24 >> 24) {
     $$3 = $$24;
     $s$2 = $s$15;
     break L8;
    }
    $32 = $s$15 + 1 | 0;
    $$24 = $$24 + -1 | 0;
    if (!$$24) {
     $$3 = 0;
     $s$2 = $32;
     break;
    } else $s$15 = $32;
   }
  }
 } while (0);
 return (($$3 | 0) != 0 ? $s$2 : 0) | 0;
}

function __ZN15google_breakpad6Module12WriteRuleMapERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S8_EEEEEERNS1_13basic_ostreamIcS5_EE($rule_map, $stream) {
 $rule_map = $rule_map | 0;
 $stream = $stream | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $36 = 0, $38 = 0, $41 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[$rule_map >> 2] | 0;
 $2 = $rule_map + 4 | 0;
 if (($1 | 0) == ($2 | 0)) {
  $45 = HEAP32[$stream >> 2] | 0;
  $46 = $45 + -12 | 0;
  $47 = HEAP32[$46 >> 2] | 0;
  $$sum = $47 + 16 | 0;
  $48 = $stream + $$sum | 0;
  $49 = HEAP32[$48 >> 2] | 0;
  $50 = ($49 | 0) == 0;
  STACKTOP = sp;
  return $50 | 0;
 }
 $5 = $1;
 $6 = $1;
 while (1) {
  if (($5 | 0) != ($6 | 0)) {
   HEAP8[$0 >> 0] = 32;
   __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, $0, 1) | 0;
  }
  $7 = $5 + 16 | 0;
  $8 = HEAP8[$7 >> 0] | 0;
  $10 = ($8 & 1) == 0;
  $21 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($stream, $10 ? $7 + 1 | 0 : HEAP32[$5 + 24 >> 2] | 0, $10 ? ($8 & 255) >>> 1 : HEAP32[$5 + 20 >> 2] | 0) | 0, 16672, 2) | 0;
  $22 = $5 + 28 | 0;
  $23 = HEAP8[$22 >> 0] | 0;
  $25 = ($23 & 1) == 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($21, $25 ? $22 + 1 | 0 : HEAP32[$5 + 36 >> 2] | 0, $25 ? ($23 & 255) >>> 1 : HEAP32[$5 + 32 >> 2] | 0) | 0;
  $36 = HEAP32[$5 + 4 >> 2] | 0;
  if (!$36) {
   $$01$i$i$i = $5;
   while (1) {
    $41 = HEAP32[$$01$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($$01$i$i$i | 0)) {
     $$0$i$i$i = $41;
     break;
    } else $$01$i$i$i = $41;
   }
  } else {
   $$0$i$i$i$i = $36;
   while (1) {
    $38 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$38) {
     $$0$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $38;
   }
  }
  if (($$0$i$i$i | 0) == ($2 | 0)) break;
  $5 = $$0$i$i$i;
  $6 = HEAP32[$rule_map >> 2] | 0;
 }
 $45 = HEAP32[$stream >> 2] | 0;
 $46 = $45 + -12 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 $$sum = $47 + 16 | 0;
 $48 = $stream + $$sum | 0;
 $49 = HEAP32[$48 >> 2] | 0;
 $50 = ($49 | 0) == 0;
 STACKTOP = sp;
 return $50 | 0;
}

function __ZNSt3__16vectorIPN15google_breakpad6Module15StackFrameEntryENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0$i6 = 0, $$01$i = 0, $$01$i3 = 0, $$__last = 0, $1 = 0, $12 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $25 = 0, $3 = 0, $30 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $56 = 0, $6 = 0, $60 = 0, $8 = 0;
 $1 = $__first;
 $3 = $__last - $1 >> 2;
 $4 = $this + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$this >> 2] | 0;
 $8 = $6;
 if ($3 >>> 0 <= $5 - $8 >> 2 >>> 0) {
  $12 = $this + 4 | 0;
  $16 = (HEAP32[$12 >> 2] | 0) - $8 >> 2;
  $17 = $3 >>> 0 > $16 >>> 0;
  $$__last = $17 ? $__first + ($16 << 2) | 0 : $__last;
  $20 = $$__last - $1 | 0;
  _memmove($6 | 0, $__first | 0, $20 | 0) | 0;
  $22 = $6 + ($20 >> 2 << 2) | 0;
  if (!$17) {
   $30 = HEAP32[$12 >> 2] | 0;
   if (($30 | 0) == ($22 | 0)) return;
   HEAP32[$12 >> 2] = $30 + (~(($30 + -4 - $22 | 0) >>> 2) << 2);
   return;
  }
  if (($$__last | 0) == ($__last | 0)) return;
  $$01$i3 = $$__last;
  $25 = HEAP32[$12 >> 2] | 0;
  do {
   HEAP32[$25 >> 2] = HEAP32[$$01$i3 >> 2];
   $25 = (HEAP32[$12 >> 2] | 0) + 4 | 0;
   HEAP32[$12 >> 2] = $25;
   $$01$i3 = $$01$i3 + 4 | 0;
  } while (($$01$i3 | 0) != ($__last | 0));
  return;
 }
 if (!$6) $46 = $5; else {
  $37 = $this + 4 | 0;
  $38 = HEAP32[$37 >> 2] | 0;
  if (($38 | 0) != ($6 | 0)) HEAP32[$37 >> 2] = $38 + (~(($38 + -4 - $8 | 0) >>> 2) << 2);
  __ZdlPv($6);
  HEAP32[$4 >> 2] = 0;
  HEAP32[$37 >> 2] = 0;
  HEAP32[$this >> 2] = 0;
  $46 = 0;
 }
 if ($3 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $47 = $46 - 0 | 0;
 if ($47 >> 2 >>> 0 < 536870911) {
  $50 = $47 >> 1;
  $52 = $50 >>> 0 < $3 >>> 0 ? $3 : $50;
  if ($52 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this); else $$0$i6 = $52;
 } else $$0$i6 = 1073741823;
 $55 = __Znwj($$0$i6 << 2) | 0;
 $56 = $this + 4 | 0;
 HEAP32[$56 >> 2] = $55;
 HEAP32[$this >> 2] = $55;
 HEAP32[$4 >> 2] = $55 + ($$0$i6 << 2);
 if (($__first | 0) == ($__last | 0)) return;
 $$01$i = $__first;
 $60 = $55;
 do {
  HEAP32[$60 >> 2] = HEAP32[$$01$i >> 2];
  $60 = (HEAP32[$56 >> 2] | 0) + 4 | 0;
  HEAP32[$56 >> 2] = $60;
  $$01$i = $$01$i + 4 | 0;
 } while (($$01$i | 0) != ($__last | 0));
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi3Z2D = 0, $$pre1 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $21 = 0, $24 = 0, $26 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $51 = 0, $59 = 0, $8 = 0, $__nm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$8 & 63]($this, $$byval_copy, $__iob, $__fl, $__v & 1) | 0;
 } else {
  $12 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$1 >> 2] = $12;
  $13 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 9600) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($12) | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($__v) FUNCTION_TABLE_vii[HEAP32[$14 + 24 >> 2] & 63]($__nm, $13); else FUNCTION_TABLE_vii[HEAP32[$14 + 28 >> 2] & 63]($__nm, $13);
  $19 = HEAP8[$__nm >> 0] | 0;
  $21 = ($19 & 1) == 0;
  $24 = $__nm + 4 | 0;
  $$pre1 = $__nm + 8 | 0;
  $$pre$phi3Z2D = $21 ? $24 : $__nm + 4 | 0;
  $$ph = $21 ? $24 : HEAP32[$__nm + 8 >> 2] | 0;
  $26 = ($19 & 1) == 0;
  if (($$ph | 0) != (($26 ? $$pre$phi3Z2D : HEAP32[$$pre1 >> 2] | 0) + (($26 ? ($19 & 255) >>> 1 : HEAP32[$$pre$phi3Z2D >> 2] | 0) << 2) | 0)) {
   $35 = $$ph;
   do {
    $34 = HEAP32[$35 >> 2] | 0;
    $36 = HEAP32[$__s >> 2] | 0;
    if ($36) {
     $38 = $36 + 24 | 0;
     $39 = HEAP32[$38 >> 2] | 0;
     if (($39 | 0) == (HEAP32[$36 + 28 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$36 >> 2] | 0) + 52 >> 2] & 31]($36, $34) | 0; else {
      HEAP32[$38 >> 2] = $39 + 4;
      HEAP32[$39 >> 2] = $34;
      $$0$i$i = $34;
     }
     if (($$0$i$i | 0) == -1) HEAP32[$__s >> 2] = 0;
    }
    $35 = $35 + 4 | 0;
    $$pre = HEAP8[$__nm >> 0] | 0;
    $51 = ($$pre & 1) == 0;
   } while (($35 | 0) != (($51 ? $$pre$phi3Z2D : HEAP32[$$pre1 >> 2] | 0) + (($51 ? ($$pre & 255) >>> 1 : HEAP32[$$pre$phi3Z2D >> 2] | 0) << 2) | 0));
  }
  $59 = HEAP32[$__s >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
  $$sroa$0$0 = $59;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNSt3__16vectorIN12dwarf2reader15CompilationUnit6AbbrevENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$07$i = 0, $$lcssa57 = 0, $$pre$phi21Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $35 = 0, $37 = 0, $43 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $9 = 0, $32$looptemp = 0, $$07$i$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 if (($2 | 0) == ($0 | 0)) {
  $$pre$phi21Z2D = $3;
  $$pre$phiZ2D = $this;
  $46 = HEAP32[$3 >> 2] | 0;
  $47 = $0;
 } else {
  $$07$i = $2;
  $7 = HEAP32[$3 >> 2] | 0;
  while (1) {
   $6 = $7 + -32 | 0;
   $$07$i$looptemp = $$07$i;
   $$07$i = $$07$i + -32 | 0;
   HEAP32[$6 >> 2] = HEAP32[$$07$i >> 2];
   HEAP32[$6 + 4 >> 2] = HEAP32[$$07$i + 4 >> 2];
   HEAP32[$6 + 8 >> 2] = HEAP32[$$07$i + 8 >> 2];
   HEAP8[$6 + 12 >> 0] = HEAP8[$$07$i + 12 >> 0] | 0;
   $9 = $7 + -16 | 0;
   $10 = $$07$i$looptemp + -16 | 0;
   HEAP32[$9 >> 2] = $9;
   HEAP32[$7 + -12 >> 2] = $9;
   $12 = $7 + -8 | 0;
   HEAP32[$12 >> 2] = 0;
   $14 = HEAP32[$$07$i$looptemp + -12 >> 2] | 0;
   if (($14 | 0) != ($10 | 0)) {
    $19 = $14;
    $32 = $9;
    $35 = 0;
    $37 = $14;
    do {
     $32$looptemp = $32;
     $32 = __Znwj(16) | 0;
     $21 = $19 + 8 | 0;
     $26 = HEAP32[$21 + 4 >> 2] | 0;
     $27 = $32 + 8 | 0;
     HEAP32[$27 >> 2] = HEAP32[$21 >> 2];
     HEAP32[$27 + 4 >> 2] = $26;
     HEAP32[$32 + 4 >> 2] = $9;
     HEAP32[$32 >> 2] = $32$looptemp;
     HEAP32[$32$looptemp + 4 >> 2] = $32;
     HEAP32[$9 >> 2] = $32;
     $35 = $35 + 1 | 0;
     HEAP32[$12 >> 2] = $35;
     $37 = HEAP32[$37 + 4 >> 2] | 0;
     $19 = $37;
    } while (($19 | 0) != ($10 | 0));
   }
   $43 = (HEAP32[$3 >> 2] | 0) + -32 | 0;
   HEAP32[$3 >> 2] = $43;
   if (($$07$i | 0) == ($0 | 0)) {
    $$lcssa57 = $43;
    break;
   } else $7 = $43;
  }
  $$pre$phi21Z2D = $3;
  $$pre$phiZ2D = $this;
  $46 = $$lcssa57;
  $47 = HEAP32[$this >> 2] | 0;
 }
 HEAP32[$$pre$phiZ2D >> 2] = $46;
 HEAP32[$$pre$phi21Z2D >> 2] = $47;
 $48 = $__v + 8 | 0;
 $49 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$48 >> 2];
 HEAP32[$48 >> 2] = $49;
 $51 = $this + 8 | 0;
 $52 = $__v + 12 | 0;
 $53 = HEAP32[$51 >> 2] | 0;
 HEAP32[$51 >> 2] = HEAP32[$52 >> 2];
 HEAP32[$52 >> 2] = $53;
 HEAP32[$__v >> 2] = HEAP32[$$pre$phi21Z2D >> 2];
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi5Z2D = 0, $$pre1 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $21 = 0, $24 = 0, $25 = 0, $27 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $53 = 0, $61 = 0, $8 = 0, $__nm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$8 & 63]($this, $$byval_copy, $__iob, $__fl, $__v & 1) | 0;
 } else {
  $12 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$1 >> 2] = $12;
  $13 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 9592) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($12) | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  if ($__v) FUNCTION_TABLE_vii[HEAP32[$14 + 24 >> 2] & 63]($__nm, $13); else FUNCTION_TABLE_vii[HEAP32[$14 + 28 >> 2] & 63]($__nm, $13);
  $19 = HEAP8[$__nm >> 0] | 0;
  $21 = ($19 & 1) == 0;
  $24 = $__nm + 1 | 0;
  $$pre1 = $__nm + 8 | 0;
  $$pre$phi5Z2D = $21 ? $24 : $__nm + 1 | 0;
  $$ph = $21 ? $24 : HEAP32[$__nm + 8 >> 2] | 0;
  $25 = $__nm + 4 | 0;
  $27 = ($19 & 1) == 0;
  if (($$ph | 0) != (($27 ? $$pre$phi5Z2D : HEAP32[$$pre1 >> 2] | 0) + ($27 ? ($19 & 255) >>> 1 : HEAP32[$25 >> 2] | 0) | 0)) {
   $36 = $$ph;
   do {
    $35 = HEAP8[$36 >> 0] | 0;
    $37 = HEAP32[$__s >> 2] | 0;
    do if ($37) {
     $39 = $37 + 24 | 0;
     $40 = HEAP32[$39 >> 2] | 0;
     if (($40 | 0) != (HEAP32[$37 + 28 >> 2] | 0)) {
      HEAP32[$39 >> 2] = $40 + 1;
      HEAP8[$40 >> 0] = $35;
      break;
     }
     if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$37 >> 2] | 0) + 52 >> 2] & 31]($37, $35 & 255) | 0) == -1) HEAP32[$__s >> 2] = 0;
    } while (0);
    $36 = $36 + 1 | 0;
    $$pre = HEAP8[$__nm >> 0] | 0;
    $53 = ($$pre & 1) == 0;
   } while (($36 | 0) != (($53 ? $$pre$phi5Z2D : HEAP32[$$pre1 >> 2] | 0) + ($53 ? ($$pre & 255) >>> 1 : HEAP32[$25 >> 2] | 0) | 0));
  }
  $61 = HEAP32[$__s >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
  $$sroa$0$0 = $61;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZN12dwarf2reader10ByteReader17ReadInitialLengthEPKcPj($this, $start, $len) {
 $this = $this | 0;
 $start = $start | 0;
 $len = $len | 0;
 var $$0$in$i = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $104 = 0, $13 = 0, $29 = 0, $31 = 0, $34 = 0, $37 = 0, $4 = 0, $40 = 0, $43 = 0, $46 = 0, $49 = 0, $52 = 0, $53 = 0, $54 = 0, $56 = 0, $59 = 0, $60 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 $1 = HEAPU8[$start >> 0] | 0;
 $4 = HEAPU8[$start + 1 >> 0] | 0;
 $7 = HEAPU8[$start + 2 >> 0] | 0;
 $10 = HEAPU8[$start + 3 >> 0] | 0;
 $13 = (HEAP32[$this + 20 >> 2] | 0) == 1;
 if ($13) $$0$in$i = $4 << 8 | $1 | $7 << 16 | $10 << 24; else $$0$in$i = $4 << 16 | $1 << 24 | $7 << 8 | $10;
 if (($$0$in$i | 0) != -1) {
  HEAP8[$this + 25 >> 0] = 4;
  $102 = $this + 4 | 0;
  HEAP32[$102 >> 2] = 28;
  HEAP32[$102 + 4 >> 2] = 0;
  HEAP32[$len >> 2] = 4;
  $103 = 0;
  $104 = $$0$in$i;
  tempRet0 = $103;
  return $104 | 0;
 }
 HEAP8[$this + 25 >> 0] = 8;
 $29 = $this + 4 | 0;
 HEAP32[$29 >> 2] = 29;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$len >> 2] = 12;
 $31 = HEAPU8[$start + 4 >> 0] | 0;
 $34 = HEAPU8[$start + 5 >> 0] | 0;
 $37 = HEAPU8[$start + 6 >> 0] | 0;
 $40 = HEAPU8[$start + 7 >> 0] | 0;
 $43 = HEAPU8[$start + 8 >> 0] | 0;
 $46 = HEAPU8[$start + 9 >> 0] | 0;
 $49 = HEAPU8[$start + 10 >> 0] | 0;
 $52 = HEAPU8[$start + 11 >> 0] | 0;
 if ($13) {
  $53 = _bitshift64Shl($34 | 0, 0, 8) | 0;
  $54 = tempRet0;
  $56 = _bitshift64Shl($37 | 0, 0, 16) | 0;
  $59 = $54 | tempRet0;
  $60 = _bitshift64Shl($40 | 0, 0, 24) | 0;
  $64 = $59 | tempRet0 | $43;
  $65 = _bitshift64Shl($46 | 0, 0, 40) | 0;
  $68 = $64 | tempRet0;
  $69 = _bitshift64Shl($49 | 0, 0, 48) | 0;
  $72 = $68 | tempRet0;
  $73 = _bitshift64Shl($52 | 0, 0, 56) | 0;
  $103 = $72 | tempRet0;
  $104 = $53 | $31 | $56 | $60 | $65 | $69 | $73;
  tempRet0 = $103;
  return $104 | 0;
 } else {
  $77 = _bitshift64Shl($49 | 0, 0, 8) | 0;
  $78 = tempRet0;
  $79 = _bitshift64Shl($46 | 0, 0, 16) | 0;
  $80 = tempRet0;
  $81 = _bitshift64Shl($43 | 0, 0, 24) | 0;
  $82 = tempRet0;
  $83 = _bitshift64Shl($37 | 0, 0, 40) | 0;
  $84 = tempRet0;
  $85 = _bitshift64Shl($34 | 0, 0, 48) | 0;
  $86 = tempRet0;
  $87 = _bitshift64Shl($31 | 0, 0, 56) | 0;
  $103 = $86 | tempRet0 | $84 | $40 | $82 | $80 | $78;
  $104 = $85 | $87 | $83 | $81 | $79 | $77 | $52;
  tempRet0 = $103;
  return $104 | 0;
 }
 return 0;
}

function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIKS6_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i10 = 0, $$0$i11 = 0, $$01$i$i = 0, $$lcssa19 = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $0 = 0, $12 = 0, $14 = 0, $2 = 0, $20 = 0, $22 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $44 = 0, $47 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $61 = 0, $62 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = (((HEAP32[$0 >> 2] | 0) - $2 | 0) / 12 | 0) + 1 | 0;
 if ($7 >>> 0 > 357913941) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = $this + 8 | 0;
 $12 = $2;
 $14 = ((HEAP32[$9 >> 2] | 0) - $12 | 0) / 12 | 0;
 if ($14 >>> 0 < 178956970) {
  $20 = $14 << 1;
  $22 = $20 >>> 0 < $7 >>> 0 ? $7 : $20;
  $26 = ((HEAP32[$0 >> 2] | 0) - $12 | 0) / 12 | 0;
  if (!$22) {
   $$0$i11 = 0;
   $31 = 0;
   $32 = $26;
  } else {
   $$0$i10 = $22;
   $61 = $26;
   label = 6;
  }
 } else {
  $$0$i10 = 357913941;
  $61 = ((HEAP32[$0 >> 2] | 0) - $12 | 0) / 12 | 0;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i11 = $$0$i10;
  $31 = __Znwj($$0$i10 * 12 | 0) | 0;
  $32 = $61;
 }
 $30 = $31 + ($32 * 12 | 0) | 0;
 $33 = $30;
 $35 = $31 + ($$0$i11 * 12 | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($30, $__x);
 $37 = $31 + (($32 + 1 | 0) * 12 | 0) | 0;
 $38 = HEAP32[$this >> 2] | 0;
 $39 = HEAP32[$0 >> 2] | 0;
 if (($39 | 0) == ($38 | 0)) {
  $$pre$phi$iZ2D = $this;
  $$pre$phiZ2D = $0;
  $51 = $33;
  $53 = $38;
  $62 = $39;
 } else {
  $$01$i$i = $39;
  $44 = $30;
  $47 = $33;
  while (1) {
   $$01$i$i = $$01$i$i + -12 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($44 + -12 | 0, $$01$i$i);
   $44 = $47 + -12 | 0;
   $49 = $44;
   if (($$01$i$i | 0) == ($38 | 0)) {
    $$lcssa19 = $49;
    break;
   } else $47 = $49;
  }
  $$pre$phi$iZ2D = $this;
  $$pre$phiZ2D = $0;
  $51 = $$lcssa19;
  $53 = HEAP32[$this >> 2] | 0;
  $62 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$$pre$phi$iZ2D >> 2] = $51;
 HEAP32[$$pre$phiZ2D >> 2] = $37;
 HEAP32[$9 >> 2] = $35;
 $52 = $53;
 $55 = $62;
 while (1) {
  $54 = $55;
  if (($54 | 0) == ($52 | 0)) break;
  $57 = $54 + -12 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
  $55 = $57;
 }
 if (!$53) return;
 __ZdlPv($53);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$03 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp + 40 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 L1 : do if (($last - $first | 0) > 3) if ((HEAP8[$first >> 0] | 0) == 68) {
  switch (HEAP8[$first + 1 >> 0] | 0) {
  case 84:
  case 116:
   break;
  default:
   {
    $$03 = $first;
    break L1;
   }
  }
  $13 = $first + 2 | 0;
  $14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($13, $last, $db) | 0;
  if (($14 | 0) == ($13 | 0) | ($14 | 0) == ($last | 0)) $$03 = $first; else if ((HEAP8[$14 >> 0] | 0) == 69) {
   $21 = HEAP32[$db + 4 >> 2] | 0;
   if ((HEAP32[$db >> 2] | 0) == ($21 | 0)) $$03 = $first; else {
    $23 = $21 + -24 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $23);
    $24 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 25662) | 0;
    HEAP32[$2 >> 2] = HEAP32[$24 >> 2];
    HEAP32[$2 + 4 >> 2] = HEAP32[$24 + 4 >> 2];
    HEAP32[$2 + 8 >> 2] = HEAP32[$24 + 8 >> 2];
    HEAP32[$24 >> 2] = 0;
    HEAP32[$24 + 4 >> 2] = 0;
    HEAP32[$24 + 8 >> 2] = 0;
    $27 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($2, 25478) | 0;
    HEAP32[$1 >> 2] = HEAP32[$27 >> 2];
    HEAP32[$1 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
    HEAP32[$1 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
    HEAP32[$27 >> 2] = 0;
    HEAP32[$27 + 4 >> 2] = 0;
    HEAP32[$27 + 8 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($23, $0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($1);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$03 = $14 + 1 | 0;
   }
  } else $$03 = $first;
 } else $$03 = $first; else $$03 = $first; while (0);
 STACKTOP = sp;
 return $$03 | 0;
}

function __ZN12dwarf2reader15CompilationUnit10ReadHeaderEv($this) {
 $this = $this | 0;
 var $$0$in$i = 0, $$field = 0, $$field2 = 0, $$sum = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $28 = 0, $31 = 0, $32 = 0, $34 = 0, $52 = 0, $53 = 0, $58 = 0, $63 = 0, $64 = 0, $67 = 0, $71 = 0, $75 = 0, $86 = 0, $initial_length_size = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $initial_length_size = sp;
 $0 = $this + 48 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 56 | 0;
 if ((HEAP32[$2 >> 2] | 0) <= 4) ___assert_fail(18219, 18044, 224, 18260);
 $10 = $this + 68 | 0;
 $12 = __ZN12dwarf2reader10ByteReader17ReadInitialLengthEPKcPj(HEAP32[$10 >> 2] | 0, $1, $initial_length_size) | 0;
 $14 = HEAP32[$initial_length_size >> 2] | 0;
 $15 = $this + 8 | 0;
 $16 = $15;
 HEAP32[$16 >> 2] = $12;
 HEAP32[$16 + 4 >> 2] = tempRet0;
 $$sum = $14 + 2 | 0;
 $20 = $1 + $$sum | 0;
 $28 = (HEAP32[$0 >> 2] | 0) + (HEAP32[$2 >> 2] | 0) | 0;
 if ($20 >>> 0 >= $28 >>> 0) ___assert_fail(18271, 18044, 230, 18260);
 $31 = HEAP32[$10 >> 2] | 0;
 $32 = HEAP8[$1 + $14 >> 0] | 0;
 $34 = HEAP8[$1 + ($14 + 1) >> 0] | 0;
 if ((HEAP32[$31 + 20 >> 2] | 0) == 1) $$0$in$i = ($34 & 255) << 8 | $32 & 255; else $$0$in$i = $34 & 255 | ($32 & 255) << 8;
 HEAP16[$this + 16 >> 1] = $$0$in$i;
 if (($1 + ((HEAPU8[$31 + 25 >> 0] | 0) + $$sum) | 0) >>> 0 >= $28 >>> 0) ___assert_fail(18312, 18044, 234, 18260);
 $52 = $31 + 4 | 0;
 $$field = HEAP32[$52 >> 2] | 0;
 $$field2 = HEAP32[$52 + 4 >> 2] | 0;
 $53 = $$field2 & 1;
 if (!($53 | $$field)) ___assert_fail(18373, 18394, 138, 18430);
 $58 = $31 + ($$field2 >> 1) | 0;
 if (!$53) $63 = $$field; else $63 = HEAP32[(HEAP32[$58 >> 2] | 0) + $$field >> 2] | 0;
 $64 = FUNCTION_TABLE_iii[$63 & 31]($58, $20) | 0;
 $67 = $this + 24 | 0;
 HEAP32[$67 >> 2] = $64;
 HEAP32[$67 + 4 >> 2] = tempRet0;
 $71 = HEAP32[$10 >> 2] | 0;
 $$sum2 = (HEAPU8[$71 + 25 >> 0] | 0) + $$sum | 0;
 $75 = $1 + ($$sum2 + 1) | 0;
 if ($75 >>> 0 >= ((HEAP32[$0 >> 2] | 0) + (HEAP32[$2 >> 2] | 0) | 0) >>> 0) ___assert_fail(18441, 18044, 238, 18260);
 $86 = HEAP8[$1 + $$sum2 >> 0] | 0;
 HEAP8[$this + 32 >> 0] = $86;
 __ZN12dwarf2reader10ByteReader14SetAddressSizeEh($71, $86);
 HEAP32[$this + 64 >> 2] = $75;
 if (((HEAP32[$15 >> 2] | 0) + (HEAP32[$initial_length_size >> 2] | 0) | 0) > (HEAP32[$2 >> 2] | 0)) ___assert_fail(18482, 18044, 249, 18260); else {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__17__sort5IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_S5_T_($__x1, $__x2, $__x3, $__x4, $__x5, $__c) {
 $__x1 = $__x1 | 0;
 $__x2 = $__x2 | 0;
 $__x3 = $__x3 | 0;
 $__x4 = $__x4 | 0;
 $__x5 = $__x5 | 0;
 $__c = $__c | 0;
 var $0 = 0, $1 = 0, $100 = 0, $12 = 0, $18 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $44 = 0, $48 = 0, $52 = 0, $53 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $70 = 0, $74 = 0, $79 = 0, $81 = 0, $84 = 0, $85 = 0, $87 = 0, $9 = 0, $90 = 0, $96 = 0, $__r$0 = 0;
 $0 = __ZNSt3__17__sort4IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_T_($__x1, $__x2, $__x3, $__x4, $__c) | 0;
 $1 = $__x5;
 $3 = HEAP32[$1 >> 2] | 0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $__x4;
 $9 = HEAP32[$7 >> 2] | 0;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 if ($6 >>> 0 < $12 >>> 0 | ($6 | 0) == ($12 | 0) & $3 >>> 0 < $9 >>> 0) {
  $18 = $__x4;
  HEAP32[$18 >> 2] = $3;
  HEAP32[$18 + 4 >> 2] = $6;
  $22 = $__x5;
  HEAP32[$22 >> 2] = $9;
  HEAP32[$22 + 4 >> 2] = $12;
  $26 = $0 + 1 | 0;
  $27 = $__x4;
  $29 = HEAP32[$27 >> 2] | 0;
  $32 = HEAP32[$27 + 4 >> 2] | 0;
  $33 = $__x3;
  $35 = HEAP32[$33 >> 2] | 0;
  $38 = HEAP32[$33 + 4 >> 2] | 0;
  if ($32 >>> 0 < $38 >>> 0 | ($32 | 0) == ($38 | 0) & $29 >>> 0 < $35 >>> 0) {
   $44 = $__x3;
   HEAP32[$44 >> 2] = $29;
   HEAP32[$44 + 4 >> 2] = $32;
   $48 = $__x4;
   HEAP32[$48 >> 2] = $35;
   HEAP32[$48 + 4 >> 2] = $38;
   $52 = $0 + 2 | 0;
   $53 = $__x3;
   $55 = HEAP32[$53 >> 2] | 0;
   $58 = HEAP32[$53 + 4 >> 2] | 0;
   $59 = $__x2;
   $61 = HEAP32[$59 >> 2] | 0;
   $64 = HEAP32[$59 + 4 >> 2] | 0;
   if ($58 >>> 0 < $64 >>> 0 | ($58 | 0) == ($64 | 0) & $55 >>> 0 < $61 >>> 0) {
    $70 = $__x2;
    HEAP32[$70 >> 2] = $55;
    HEAP32[$70 + 4 >> 2] = $58;
    $74 = $__x3;
    HEAP32[$74 >> 2] = $61;
    HEAP32[$74 + 4 >> 2] = $64;
    $79 = $__x2;
    $81 = HEAP32[$79 >> 2] | 0;
    $84 = HEAP32[$79 + 4 >> 2] | 0;
    $85 = $__x1;
    $87 = HEAP32[$85 >> 2] | 0;
    $90 = HEAP32[$85 + 4 >> 2] | 0;
    if ($84 >>> 0 < $90 >>> 0 | ($84 | 0) == ($90 | 0) & $81 >>> 0 < $87 >>> 0) {
     $96 = $__x1;
     HEAP32[$96 >> 2] = $81;
     HEAP32[$96 + 4 >> 2] = $84;
     $100 = $__x2;
     HEAP32[$100 >> 2] = $87;
     HEAP32[$100 + 4 >> 2] = $90;
     $__r$0 = $0 + 4 | 0;
    } else $__r$0 = $0 + 3 | 0;
   } else $__r$0 = $52;
  } else $__r$0 = $26;
 } else $__r$0 = $0;
 return $__r$0 | 0;
}

function __ZNSt3__16vectorI12SuperFatArchNS_9allocatorIS1_EEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i = 0, $$0$i2 = 0, $$0$i36 = 0, $$0$i37 = 0, $$in = 0, $$in5 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $13 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $5 = 0, $50 = 0, $54 = 0, $56 = 0, $59 = 0, label = 0;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = $3;
 if ($1 - $5 >> 5 >>> 0 >= $__n >>> 0) {
  $$0$i = $__n;
  $$in5 = $3;
  do {
   HEAP32[$$in5 >> 2] = 0;
   HEAP32[$$in5 + 4 >> 2] = 0;
   HEAP32[$$in5 + 8 >> 2] = 0;
   HEAP32[$$in5 + 12 >> 2] = 0;
   HEAP32[$$in5 + 16 >> 2] = 0;
   HEAP32[$$in5 + 20 >> 2] = 0;
   HEAP32[$$in5 + 24 >> 2] = 0;
   HEAP32[$$in5 + 28 >> 2] = 0;
   $$in5 = (HEAP32[$2 >> 2] | 0) + 32 | 0;
   HEAP32[$2 >> 2] = $$in5;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  return;
 }
 $13 = HEAP32[$this >> 2] | 0;
 $17 = ($5 - $13 >> 5) + $__n | 0;
 if ($17 >>> 0 > 134217727) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $20 = $13;
 $21 = $1 - $20 | 0;
 if ($21 >> 5 >>> 0 < 67108863) {
  $28 = $21 >> 4;
  $30 = $28 >>> 0 < $17 >>> 0 ? $17 : $28;
  $34 = (HEAP32[$2 >> 2] | 0) - $20 >> 5;
  if (!$30) {
   $$0$i37 = 0;
   $39 = 0;
   $40 = $34;
  } else {
   $$0$i36 = $30;
   $59 = $34;
   label = 8;
  }
 } else {
  $$0$i36 = 134217727;
  $59 = (HEAP32[$2 >> 2] | 0) - $20 >> 5;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i37 = $$0$i36;
  $39 = __Znwj($$0$i36 << 5) | 0;
  $40 = $59;
 }
 $38 = $39 + ($40 << 5) | 0;
 $42 = $39 + ($$0$i37 << 5) | 0;
 $$0$i2 = $__n;
 $$in = $38;
 $44 = $38;
 while (1) {
  HEAP32[$$in >> 2] = 0;
  HEAP32[$$in + 4 >> 2] = 0;
  HEAP32[$$in + 8 >> 2] = 0;
  HEAP32[$$in + 12 >> 2] = 0;
  HEAP32[$$in + 16 >> 2] = 0;
  HEAP32[$$in + 20 >> 2] = 0;
  HEAP32[$$in + 24 >> 2] = 0;
  HEAP32[$$in + 28 >> 2] = 0;
  $$in = $44 + 32 | 0;
  $46 = $$in;
  $$0$i2 = $$0$i2 + -1 | 0;
  if (!$$0$i2) {
   $$lcssa = $46;
   break;
  } else $44 = $46;
 }
 $50 = HEAP32[$this >> 2] | 0;
 $54 = (HEAP32[$2 >> 2] | 0) - $50 | 0;
 $56 = $39 + ($40 - ($54 >> 5) << 5) | 0;
 _memcpy($56 | 0, $50 | 0, $54 | 0) | 0;
 HEAP32[$this >> 2] = $56;
 HEAP32[$2 >> 2] = $$lcssa;
 HEAP32[$0 >> 2] = $42;
 if (!$50) return;
 __ZdlPv($50);
 return;
}

function __ZNSt3__118__insertion_sort_3IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEvT0_SB_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $24 = 0, $26 = 0, $32 = 0, $33 = 0, $37 = 0, $40 = 0, $5 = 0, $9 = 0, $__i$02 = 0, $__j$01 = 0, $__j$01$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0;
 $0 = $__first + 8 | 0;
 $1 = $__first + 4 | 0;
 $5 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
 $9 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$0 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0;
 do if ($5) {
  $18 = HEAP32[$__first >> 2] | 0;
  if ($9) {
   HEAP32[$__first >> 2] = HEAP32[$0 >> 2];
   HEAP32[$0 >> 2] = $18;
   break;
  }
  HEAP32[$__first >> 2] = HEAP32[$1 >> 2];
  HEAP32[$1 >> 2] = $18;
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$0 >> 2] | 0, $18) | 0) {
   $24 = HEAP32[$1 >> 2] | 0;
   HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$0 >> 2] = $24;
  }
 } else if ($9) {
  $10 = HEAP32[$1 >> 2] | 0;
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$1 >> 2] = $11;
  HEAP32[$0 >> 2] = $10;
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($11, HEAP32[$__first >> 2] | 0) | 0) {
   $16 = HEAP32[$__first >> 2] | 0;
   HEAP32[$__first >> 2] = HEAP32[$1 >> 2];
   HEAP32[$1 >> 2] = $16;
  }
 } while (0);
 $26 = $__first + 12 | 0;
 if (($26 | 0) == ($__last | 0)) return; else {
  $__i$02 = $26;
  $__j$01 = $0;
 }
 while (1) {
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__i$02 >> 2] | 0, HEAP32[$__j$01 >> 2] | 0) | 0) {
   $32 = HEAP32[$__i$02 >> 2] | 0;
   $33 = $32;
   $__j$1 = $__i$02;
   $__k$0 = $__j$01;
   while (1) {
    HEAP32[$__j$1 >> 2] = HEAP32[$__k$0 >> 2];
    if (($__k$0 | 0) == ($__first | 0)) {
     $$lcssa = $__k$0;
     break;
    }
    $37 = $__k$0 + -4 | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($33, HEAP32[$37 >> 2] | 0) | 0) {
     $__j$1$phi = $__k$0;
     $__k$0 = $37;
     $__j$1 = $__j$1$phi;
    } else {
     $$lcssa = $__k$0;
     break;
    }
   }
   HEAP32[$$lcssa >> 2] = $32;
  }
  $40 = $__i$02 + 4 | 0;
  if (($40 | 0) == ($__last | 0)) break; else {
   $__j$01$phi = $__i$02;
   $__i$02 = $40;
   $__j$01 = $__j$01$phi;
  }
 }
 return;
}

function __ZNSt3__118__insertion_sort_3IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEvT0_SB_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $24 = 0, $26 = 0, $32 = 0, $33 = 0, $37 = 0, $40 = 0, $5 = 0, $9 = 0, $__i$02 = 0, $__j$01 = 0, $__j$01$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0;
 $0 = $__first + 8 | 0;
 $1 = $__first + 4 | 0;
 $5 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$1 >> 2] | 0, HEAP32[$__first >> 2] | 0) | 0;
 $9 = FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$0 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0;
 do if ($5) {
  $18 = HEAP32[$__first >> 2] | 0;
  if ($9) {
   HEAP32[$__first >> 2] = HEAP32[$0 >> 2];
   HEAP32[$0 >> 2] = $18;
   break;
  }
  HEAP32[$__first >> 2] = HEAP32[$1 >> 2];
  HEAP32[$1 >> 2] = $18;
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$0 >> 2] | 0, $18) | 0) {
   $24 = HEAP32[$1 >> 2] | 0;
   HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$0 >> 2] = $24;
  }
 } else if ($9) {
  $10 = HEAP32[$1 >> 2] | 0;
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$1 >> 2] = $11;
  HEAP32[$0 >> 2] = $10;
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($11, HEAP32[$__first >> 2] | 0) | 0) {
   $16 = HEAP32[$__first >> 2] | 0;
   HEAP32[$__first >> 2] = HEAP32[$1 >> 2];
   HEAP32[$1 >> 2] = $16;
  }
 } while (0);
 $26 = $__first + 12 | 0;
 if (($26 | 0) == ($__last | 0)) return; else {
  $__i$02 = $26;
  $__j$01 = $0;
 }
 while (1) {
  if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31](HEAP32[$__i$02 >> 2] | 0, HEAP32[$__j$01 >> 2] | 0) | 0) {
   $32 = HEAP32[$__i$02 >> 2] | 0;
   $33 = $32;
   $__j$1 = $__i$02;
   $__k$0 = $__j$01;
   while (1) {
    HEAP32[$__j$1 >> 2] = HEAP32[$__k$0 >> 2];
    if (($__k$0 | 0) == ($__first | 0)) {
     $$lcssa = $__k$0;
     break;
    }
    $37 = $__k$0 + -4 | 0;
    if (FUNCTION_TABLE_iii[HEAP32[$__comp >> 2] & 31]($33, HEAP32[$37 >> 2] | 0) | 0) {
     $__j$1$phi = $__k$0;
     $__k$0 = $37;
     $__j$1 = $__j$1$phi;
    } else {
     $$lcssa = $__k$0;
     break;
    }
   }
   HEAP32[$$lcssa >> 2] = $32;
  }
  $40 = $__i$02 + 4 | 0;
  if (($40 | 0) == ($__last | 0)) break; else {
   $__j$01$phi = $__i$02;
   $__i$02 = $40;
   $__j$01 = $__j$01$phi;
  }
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE12__find_equalISE_EERPNS_16__tree_node_baseIPvEESP_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa22 = 0, $0 = 0, $1 = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $20 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $4 = 0, $40 = 0, $44 = 0, $45 = 0, $6 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa20 = 0, $__nd$0$lcssa21 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP32[$__v >> 2] | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $6 = ($4 & 1) == 0;
 $11 = $6 ? ($4 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0;
 $15 = $6 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $17 = HEAP32[$__nd$0 + 16 >> 2] | 0;
  $18 = HEAP8[$17 >> 0] | 0;
  $20 = ($18 & 1) == 0;
  $25 = $20 ? ($18 & 255) >>> 1 : HEAP32[$17 + 4 >> 2] | 0;
  $29 = $20 ? $17 + 1 | 0 : HEAP32[$17 + 8 >> 2] | 0;
  $30 = $25 >>> 0 < $11 >>> 0;
  $32 = _memcmp($15, $29, $30 ? $25 : $11) | 0;
  $34 = $11 >>> 0 < $25 >>> 0;
  if (((($32 | 0) == 0 ? ($34 ? -2147483648 : 0) : $32) | 0) < 0) {
   $37 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$37) {
    $$lcssa22 = $__nd$0;
    $__nd$0$lcssa21 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $37;
  } else {
   $40 = _memcmp($29, $15, $34 ? $11 : $25) | 0;
   if (((($40 | 0) == 0 ? ($30 ? -2147483648 : 0) : $40) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $44 = $__nd$0 + 4 | 0;
   $45 = HEAP32[$44 >> 2] | 0;
   if (!$45) {
    $$lcssa = $44;
    $__nd$0$lcssa20 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $45;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa21;
  $$0 = $$lcssa22;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa20;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZN15google_breakpad16DwarfCFIToModule13ValOffsetRuleEyiil($this, $0, $1, $reg, $base_register, $offset) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 $base_register = $base_register | 0;
 $offset = $offset | 0;
 var $11 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $2 = sp + 160 | 0;
 $s = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $6 = $s + 4 | 0;
 HEAP32[$s >> 2] = 4068;
 HEAP32[$s + 56 >> 2] = 4088;
 __ZNSt3__18ios_base4initEPv($s + 56 | 0, $6);
 HEAP32[$s + 128 >> 2] = 0;
 HEAP32[$s + 132 >> 2] = -1;
 HEAP32[$s >> 2] = 4108;
 HEAP32[$s + 56 >> 2] = 4128;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 4144;
 $11 = $s + 36 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$s + 52 >> 2] = 16;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($3, $this, $base_register);
 $13 = HEAP8[$3 >> 0] | 0;
 $15 = ($13 & 1) == 0;
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($s, $15 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0, $15 ? ($13 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0) | 0, 25585, 1) | 0, $offset) | 0, 13246, 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($4, $6);
 __ZN15google_breakpad16DwarfCFIToModule6RecordEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $0, $1, $reg, $4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($s);
 STACKTOP = sp;
 return 1;
}

function __ZN15google_breakpad16DwarfCFIToModule10OffsetRuleEyiil($this, $0, $1, $reg, $base_register, $offset) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 $base_register = $base_register | 0;
 $offset = $offset | 0;
 var $11 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $2 = sp + 160 | 0;
 $s = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $6 = $s + 4 | 0;
 HEAP32[$s >> 2] = 4068;
 HEAP32[$s + 56 >> 2] = 4088;
 __ZNSt3__18ios_base4initEPv($s + 56 | 0, $6);
 HEAP32[$s + 128 >> 2] = 0;
 HEAP32[$s + 132 >> 2] = -1;
 HEAP32[$s >> 2] = 4108;
 HEAP32[$s + 56 >> 2] = 4128;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 4144;
 $11 = $s + 36 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$s + 52 >> 2] = 16;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($3, $this, $base_register);
 $13 = HEAP8[$3 >> 0] | 0;
 $15 = ($13 & 1) == 0;
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($s, $15 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0, $15 ? ($13 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0) | 0, 25585, 1) | 0, $offset) | 0, 13241, 4) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($4, $6);
 __ZN15google_breakpad16DwarfCFIToModule6RecordEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $0, $1, $reg, $4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($s);
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $__g_end, $__err) {
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__err = $__err | 0;
 var $$01$i$i22 = 0, $$lcssa = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $19 = 0, $20 = 0, $24 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $36 = 0, $4 = 0, $45 = 0, $__ig$018 = 0, $__r$019 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0;
 $0 = HEAP8[$__grouping >> 0] | 0;
 $3 = $__grouping + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 L1 : do if ((($0 & 1) == 0 ? ($0 & 255) >>> 1 : $4) | 0) {
  if (($__g | 0) == ($__g_end | 0)) {
   $19 = $0;
   $28 = $4;
  } else {
   $10 = $__g_end + -4 | 0;
   if ($10 >>> 0 > $__g >>> 0) {
    $$01$i$i22 = $__g;
    $14 = $10;
    do {
     $12 = HEAP32[$$01$i$i22 >> 2] | 0;
     HEAP32[$$01$i$i22 >> 2] = HEAP32[$14 >> 2];
     HEAP32[$14 >> 2] = $12;
     $$01$i$i22 = $$01$i$i22 + 4 | 0;
     $14 = $14 + -4 | 0;
    } while ($$01$i$i22 >>> 0 < $14 >>> 0);
   }
   $19 = HEAP8[$__grouping >> 0] | 0;
   $28 = HEAP32[$3 >> 2] | 0;
  }
  $20 = ($19 & 1) == 0;
  $24 = $20 ? $__grouping + 1 | 0 : HEAP32[$__grouping + 8 >> 2] | 0;
  $30 = $__g_end + -4 | 0;
  $31 = $24 + ($20 ? ($19 & 255) >>> 1 : $28) | 0;
  $33 = HEAP8[$24 >> 0] | 0;
  $or$cond217 = $33 << 24 >> 24 < 1 | $33 << 24 >> 24 == 127;
  L10 : do if ($30 >>> 0 > $__g >>> 0) {
   $36 = $33;
   $__ig$018 = $24;
   $__r$019 = $__g;
   $or$cond220 = $or$cond217;
   while (1) {
    if (!$or$cond220) if (($36 << 24 >> 24 | 0) != (HEAP32[$__r$019 >> 2] | 0)) break;
    $__ig$018 = ($31 - $__ig$018 | 0) > 1 ? $__ig$018 + 1 | 0 : $__ig$018;
    $__r$019 = $__r$019 + 4 | 0;
    $45 = HEAP8[$__ig$018 >> 0] | 0;
    $or$cond2 = $45 << 24 >> 24 < 1 | $45 << 24 >> 24 == 127;
    if ($__r$019 >>> 0 >= $30 >>> 0) {
     $$lcssa = $45;
     $or$cond2$lcssa = $or$cond2;
     break L10;
    } else {
     $36 = $45;
     $or$cond220 = $or$cond2;
    }
   }
   HEAP32[$__err >> 2] = 4;
   break L1;
  } else {
   $$lcssa = $33;
   $or$cond2$lcssa = $or$cond217;
  } while (0);
  if (!$or$cond2$lcssa) if (((HEAP32[$30 >> 2] | 0) + -1 | 0) >>> 0 >= $$lcssa << 24 >> 24 >>> 0) HEAP32[$__err >> 2] = 4;
 } while (0);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $33 = 0, $44 = 0, $6 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $44 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 31]($44, $info, $current_ptr, $path_below, $use_strcmp);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $23 = $info + 52 | 0;
    HEAP8[$23 >> 0] = 0;
    $24 = $info + 53 | 0;
    HEAP8[$24 >> 0] = 0;
    $26 = HEAP32[$this + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 15]($26, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
    if (!(HEAP8[$24 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 0;
     label = 13;
    } else if (!(HEAP8[$23 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 1;
     label = 13;
    }
    do if ((label | 0) == 13) {
     HEAP32[$14 >> 2] = $current_ptr;
     $33 = $info + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
      HEAP8[$info + 54 >> 0] = 1;
      if ($is_dst_type_derived_from_static_type$0$off01) break;
     } else label = 16; else label = 16;
     if ((label | 0) == 16) if ($is_dst_type_derived_from_static_type$0$off01) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler25ProcessAttributeReferenceEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$ph$lcssa$i$i$i = 0, $$0$ph7$i$i$i = 0, $$01$ph6$i$i$i = 0, $$014$i$i$i = 0, $$014$i$i$i$lcssa = 0, $13 = 0, $26 = 0, $3 = 0, $33 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $44 = 0, $57 = 0, $6 = 0, $62 = 0, $74 = 0, $8 = 0;
 if (($attr | 0) != 71) return;
 $3 = HEAP32[$this + 4 >> 2] | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$3 + 4 >> 2] | 0;
 $8 = $6 + 16 | 0;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 if (($13 >>> 0 > $1 >>> 0 | (($13 | 0) == ($1 | 0) ? (HEAP32[$8 >> 2] | 0) >>> 0 > $0 >>> 0 : 0)) & (HEAP8[$4 + 28 >> 0] | 0) == 0) {
  $26 = $this + 16 | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 52 >> 2] & 31]($6, HEAP32[$26 >> 2] | 0, HEAP32[$26 + 4 >> 2] | 0, $0, $1);
  return;
 }
 $33 = HEAP32[$4 + 32 >> 2] | 0;
 if (!$33) ___assert_fail(15030, 21517, 119, 26244);
 $35 = $33 + 24 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 if ($36) {
  $$0$ph7$i$i$i = $35;
  $$01$ph6$i$i$i = $36;
  L12 : while (1) {
   $$014$i$i$i = $$01$ph6$i$i$i;
   while (1) {
    $39 = $$014$i$i$i + 16 | 0;
    $44 = HEAP32[$39 + 4 >> 2] | 0;
    if (!($44 >>> 0 < $1 >>> 0 | (($44 | 0) == ($1 | 0) ? (HEAP32[$39 >> 2] | 0) >>> 0 < $0 >>> 0 : 0))) {
     $$014$i$i$i$lcssa = $$014$i$i$i;
     break;
    }
    $$014$i$i$i = HEAP32[$$014$i$i$i + 4 >> 2] | 0;
    if (!$$014$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$0$ph7$i$i$i;
     break L12;
    }
   }
   $$01$ph6$i$i$i = HEAP32[$$014$i$i$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i$i$i) {
    $$0$ph$lcssa$i$i$i = $$014$i$i$i$lcssa;
    break;
   } else $$0$ph7$i$i$i = $$014$i$i$i$lcssa;
  }
  if (($$0$ph$lcssa$i$i$i | 0) != ($35 | 0)) {
   $57 = $$0$ph$lcssa$i$i$i + 16 | 0;
   $62 = HEAP32[$57 + 4 >> 2] | 0;
   if (!($62 >>> 0 > $1 >>> 0 | (($62 | 0) == ($1 | 0) ? (HEAP32[$57 >> 2] | 0) >>> 0 > $0 >>> 0 : 0))) {
    HEAP32[$this + 28 >> 2] = $$0$ph$lcssa$i$i$i + 24;
    return;
   }
  }
 }
 $74 = $this + 16 | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 20 >> 2] & 31]($6, HEAP32[$74 >> 2] | 0, HEAP32[$74 + 4 >> 2] | 0, $0, $1);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule6FinishEv($this) {
 $this = $this | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $39 = 0, $41 = 0, $46 = 0, $48 = 0, $49 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) ___assert_fail(15030, 21517, 119, 26244);
 $6 = HEAP32[$3 + 8 >> 2] | 0;
 if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2] & 127]($6) | 0)) {
  STACKTOP = sp;
  return;
 }
 if (HEAP8[$this + 16 >> 0] | 0) {
  $15 = $this + 24 | 0;
  __ZN15google_breakpad15DwarfCUToModule15ReadSourceLinesEy($this, HEAP32[$15 >> 2] | 0, HEAP32[$15 + 4 >> 2] | 0);
 }
 $21 = HEAP32[$2 >> 2] | 0;
 if (!$21) ___assert_fail(15030, 21517, 119, 26244);
 $23 = $21 + 12 | 0;
 __ZN15google_breakpad15DwarfCUToModule22AssignLinesToFunctionsEv($this);
 $24 = HEAP32[$2 >> 2] | 0;
 if (!$24) ___assert_fail(15030, 21517, 119, 26244);
 $28 = HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$23 >> 2];
 $30 = $21 + 16 | 0;
 HEAP32[$1 >> 2] = HEAP32[$30 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 __ZN15google_breakpad6Module12AddFunctionsENSt3__111__wrap_iterIPPNS0_8FunctionEEES6_($28, $$byval_copy, $$byval_copy1);
 $32 = HEAP32[$23 >> 2] | 0;
 $33 = HEAP32[$30 >> 2] | 0;
 if (($33 | 0) != ($32 | 0)) HEAP32[$30 >> 2] = $33 + (~(($33 + -4 - $32 | 0) >>> 2) << 2);
 $39 = HEAP32[$2 >> 2] | 0;
 if (!$39) ___assert_fail(15030, 21517, 119, 26244);
 $41 = HEAP32[$39 >> 2] | 0;
 if (HEAP8[$41 + 28 >> 0] | 0) {
  STACKTOP = sp;
  return;
 }
 $46 = HEAP32[$41 + 32 >> 2] | 0;
 if (!$46) ___assert_fail(15030, 21517, 119, 26244);
 $48 = $46 + 20 | 0;
 $49 = $46 + 24 | 0;
 __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad15DwarfCUToModule13SpecificationEEENS_19__map_value_compareIyS5_NS_4lessIyEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE($48, HEAP32[$49 >> 2] | 0);
 HEAP32[$46 + 28 >> 2] = 0;
 HEAP32[$48 >> 2] = $49;
 HEAP32[$49 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa34 = 0, $$st = 0, $0 = 0, $11 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $32 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 $$st = ($st | 0) == 0 ? 5568 : $st;
 $2 = HEAP32[$$st >> 2] | 0;
 L1 : do if (!$src) {
  if (!$2) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $11 = $0;
  } else $11 = $wc;
  if (!$n) {
   $$0 = -2;
   STACKTOP = sp;
   return $$0 | 0;
  }
  do if (!$2) {
   $8 = HEAP8[$src >> 0] | 0;
   $9 = $8 & 255;
   if ($8 << 24 >> 24 > -1) {
    HEAP32[$11 >> 2] = $9;
    $$0 = $8 << 24 >> 24 != 0 & 1;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    $14 = $9 + -194 | 0;
    if ($14 >>> 0 > 50) break L1;
    $18 = HEAP32[5360 + ($14 << 2) >> 2] | 0;
    $19 = $n + -1 | 0;
    if (!$19) {
     $c$2 = $18;
     break;
    } else {
     $$023 = $19;
     $c$04 = $18;
     $s$05 = $src + 1 | 0;
     label = 11;
     break;
    }
   }
  } else {
   $$023 = $n;
   $c$04 = $2;
   $s$05 = $src;
   label = 11;
  } while (0);
  L18 : do if ((label | 0) == 11) {
   $21 = HEAP8[$s$05 >> 0] | 0;
   $23 = ($21 & 255) >>> 3;
   if (($23 + -16 | $23 + ($c$04 >> 26)) >>> 0 > 7) break L1; else {
    $$1 = $$023;
    $32 = $21;
    $c$1 = $c$04;
    $s$1 = $s$05;
   }
   while (1) {
    $s$1 = $s$1 + 1 | 0;
    $c$1 = ($32 & 255) + -128 | $c$1 << 6;
    $$1 = $$1 + -1 | 0;
    if (($c$1 | 0) >= 0) {
     $$lcssa = $c$1;
     $$lcssa34 = $$1;
     break;
    }
    if (!$$1) {
     $c$2 = $c$1;
     break L18;
    }
    $32 = HEAP8[$s$1 >> 0] | 0;
    if (($32 & -64) << 24 >> 24 != -128) break L1;
   }
   HEAP32[$$st >> 2] = 0;
   HEAP32[$11 >> 2] = $$lcssa;
   $$0 = $n - $$lcssa34 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } while (0);
  HEAP32[$$st >> 2] = $c$2;
  $$0 = -2;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 HEAP32[$$st >> 2] = 0;
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa20 = 0, $__nd$0$lcssa21 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
 $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa22 = $__nd$0;
    $__nd$0$lcssa21 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa20 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa21;
  $$0 = $$lcssa22;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa20;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa20 = 0, $__nd$0$lcssa21 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa22 = $__nd$0;
    $__nd$0$lcssa21 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa20 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa21;
  $$0 = $$lcssa22;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa20;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module15StackFrameEntryES5_EPPS3_EEjT0_SB_SB_SB_T_($__x1, $__x2, $__x3, $__x4, $__c) {
 $__x1 = $__x1 | 0;
 $__x2 = $__x2 | 0;
 $__x3 = $__x3 | 0;
 $__x4 = $__x4 | 0;
 $__c = $__c | 0;
 var $$0$i = 0, $14 = 0, $16 = 0, $22 = 0, $28 = 0, $3 = 0, $35 = 0, $42 = 0, $7 = 0, $8 = 0, $__r$0 = 0;
 $3 = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0;
 $7 = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x3 >> 2] | 0, HEAP32[$__x2 >> 2] | 0) | 0;
 do if ($3) {
  $16 = HEAP32[$__x1 >> 2] | 0;
  if ($7) {
   HEAP32[$__x1 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x3 >> 2] = $16;
   $$0$i = 1;
   break;
  }
  HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
  HEAP32[$__x2 >> 2] = $16;
  if (FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x3 >> 2] | 0, $16) | 0) {
   $22 = HEAP32[$__x2 >> 2] | 0;
   HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x3 >> 2] = $22;
   $$0$i = 2;
  } else $$0$i = 1;
 } else if ($7) {
  $8 = HEAP32[$__x2 >> 2] | 0;
  HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
  HEAP32[$__x3 >> 2] = $8;
  if (FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0) {
   $14 = HEAP32[$__x1 >> 2] | 0;
   HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
   HEAP32[$__x2 >> 2] = $14;
   $$0$i = 2;
  } else $$0$i = 1;
 } else $$0$i = 0; while (0);
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x4 >> 2] | 0, HEAP32[$__x3 >> 2] | 0) | 0)) {
  $__r$0 = $$0$i;
  return $__r$0 | 0;
 }
 $28 = HEAP32[$__x3 >> 2] | 0;
 HEAP32[$__x3 >> 2] = HEAP32[$__x4 >> 2];
 HEAP32[$__x4 >> 2] = $28;
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x3 >> 2] | 0, HEAP32[$__x2 >> 2] | 0) | 0)) {
  $__r$0 = $$0$i + 1 | 0;
  return $__r$0 | 0;
 }
 $35 = HEAP32[$__x2 >> 2] | 0;
 HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
 HEAP32[$__x3 >> 2] = $35;
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0)) {
  $__r$0 = $$0$i + 2 | 0;
  return $__r$0 | 0;
 }
 $42 = HEAP32[$__x1 >> 2] | 0;
 HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
 HEAP32[$__x2 >> 2] = $42;
 $__r$0 = $$0$i + 3 | 0;
 return $__r$0 | 0;
}

function __ZNSt3__17__sort4IRPFbPKN15google_breakpad6Module8FunctionES5_EPPS3_EEjT0_SB_SB_SB_T_($__x1, $__x2, $__x3, $__x4, $__c) {
 $__x1 = $__x1 | 0;
 $__x2 = $__x2 | 0;
 $__x3 = $__x3 | 0;
 $__x4 = $__x4 | 0;
 $__c = $__c | 0;
 var $$0$i = 0, $14 = 0, $16 = 0, $22 = 0, $28 = 0, $3 = 0, $35 = 0, $42 = 0, $7 = 0, $8 = 0, $__r$0 = 0;
 $3 = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0;
 $7 = FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x3 >> 2] | 0, HEAP32[$__x2 >> 2] | 0) | 0;
 do if ($3) {
  $16 = HEAP32[$__x1 >> 2] | 0;
  if ($7) {
   HEAP32[$__x1 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x3 >> 2] = $16;
   $$0$i = 1;
   break;
  }
  HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
  HEAP32[$__x2 >> 2] = $16;
  if (FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x3 >> 2] | 0, $16) | 0) {
   $22 = HEAP32[$__x2 >> 2] | 0;
   HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
   HEAP32[$__x3 >> 2] = $22;
   $$0$i = 2;
  } else $$0$i = 1;
 } else if ($7) {
  $8 = HEAP32[$__x2 >> 2] | 0;
  HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
  HEAP32[$__x3 >> 2] = $8;
  if (FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0) {
   $14 = HEAP32[$__x1 >> 2] | 0;
   HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
   HEAP32[$__x2 >> 2] = $14;
   $$0$i = 2;
  } else $$0$i = 1;
 } else $$0$i = 0; while (0);
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x4 >> 2] | 0, HEAP32[$__x3 >> 2] | 0) | 0)) {
  $__r$0 = $$0$i;
  return $__r$0 | 0;
 }
 $28 = HEAP32[$__x3 >> 2] | 0;
 HEAP32[$__x3 >> 2] = HEAP32[$__x4 >> 2];
 HEAP32[$__x4 >> 2] = $28;
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x3 >> 2] | 0, HEAP32[$__x2 >> 2] | 0) | 0)) {
  $__r$0 = $$0$i + 1 | 0;
  return $__r$0 | 0;
 }
 $35 = HEAP32[$__x2 >> 2] | 0;
 HEAP32[$__x2 >> 2] = HEAP32[$__x3 >> 2];
 HEAP32[$__x3 >> 2] = $35;
 if (!(FUNCTION_TABLE_iii[HEAP32[$__c >> 2] & 31](HEAP32[$__x2 >> 2] | 0, HEAP32[$__x1 >> 2] | 0) | 0)) {
  $__r$0 = $$0$i + 2 | 0;
  return $__r$0 | 0;
 }
 $42 = HEAP32[$__x1 >> 2] | 0;
 HEAP32[$__x1 >> 2] = HEAP32[$__x2 >> 2];
 HEAP32[$__x2 >> 2] = $42;
 $__r$0 = $$0$i + 3 | 0;
 return $__r$0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter13UncoveredLineERKNS_6Module4LineE($this, $line) {
 $this = $this | 0;
 $line = $line | 0;
 var $10 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $43 = 0, $45 = 0, $56 = 0, $6 = 0, $64 = 0, $65 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $76 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this + 38 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 $3 = $this + 37 | 0;
 if (!(HEAP8[$3 >> 0] | 0)) {
  $6 = $this + 36 | 0;
  $9 = HEAP32[_stderr >> 2] | 0;
  $10 = $this + 4 | 0;
  if (!(HEAP8[$6 >> 0] | 0)) {
   if (!(HEAP8[$10 >> 0] & 1)) $31 = $10 + 1 | 0; else $31 = HEAP32[$this + 12 >> 2] | 0;
   $17 = $this + 24 | 0;
   if (!(HEAP8[$17 >> 0] & 1)) $32 = $17 + 1 | 0; else $32 = HEAP32[$this + 32 >> 2] | 0;
   $25 = $this + 16 | 0;
   $27 = HEAP32[$25 >> 2] | 0;
   $30 = HEAP32[$25 + 4 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = $31;
   HEAP32[$vararg_buffer + 4 >> 2] = $32;
   $33 = $vararg_buffer + 8 | 0;
   HEAP32[$33 >> 2] = $27;
   HEAP32[$33 + 4 >> 2] = $30;
   _fprintf($9 | 0, 15058, $vararg_buffer | 0) | 0;
   HEAP8[$6 >> 0] = 1;
  }
  if (!(HEAP8[$10 >> 0] & 1)) $43 = $10 + 1 | 0; else $43 = HEAP32[$this + 12 >> 2] | 0;
  HEAP32[$vararg_buffer3 >> 2] = $43;
  _fprintf($9 | 0, 15580, $vararg_buffer3 | 0) | 0;
  HEAP8[$3 >> 0] = 1;
  $76 = $9;
 } else $76 = HEAP32[_stderr >> 2] | 0;
 $45 = $line + 8 | 0;
 $56 = HEAP32[$line + 16 >> 2] | 0;
 if (!(HEAP8[$56 >> 0] & 1)) $71 = $56 + 1 | 0; else $71 = HEAP32[$56 + 8 >> 2] | 0;
 $64 = HEAP32[$line + 20 >> 2] | 0;
 $65 = $line;
 $67 = HEAP32[$65 >> 2] | 0;
 $70 = HEAP32[$65 + 4 >> 2] | 0;
 HEAP32[$vararg_buffer6 >> 2] = (HEAP32[$45 >> 2] | 0) == 0 & (HEAP32[$45 + 4 >> 2] | 0) == 0 ? 15629 : 30292;
 HEAP32[$vararg_buffer6 + 4 >> 2] = $71;
 HEAP32[$vararg_buffer6 + 8 >> 2] = $64;
 $72 = $vararg_buffer6 + 16 | 0;
 HEAP32[$72 >> 2] = $67;
 HEAP32[$72 + 4 >> 2] = $70;
 _fprintf($76 | 0, 15664, $vararg_buffer6 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEENS_4lessIS6_EENS4_INS7_IKS6_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa20 = 0, $__nd$0$lcssa21 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa22 = $__nd$0;
    $__nd$0$lcssa21 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa20 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa21;
  $$0 = $$lcssa22;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa20;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa20 = 0, $__nd$0$lcssa21 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa22 = $__nd$0;
    $__nd$0$lcssa21 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa20 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa21;
  $$0 = $$lcssa22;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa20;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZN15google_breakpad11DumpSymbols18DumperLineToModule11ReadProgramEPKcyPNS_6ModuleEPNSt3__16vectorINS4_4LineENS6_9allocatorIS8_EEEE($this, $program, $0, $1, $module, $lines) {
 $this = $this | 0;
 $program = $program | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $module = $module | 0;
 $lines = $lines | 0;
 var $13 = 0, $16 = 0, $26 = 0, $28 = 0, $30 = 0, $4 = 0, $9 = 0, $handler = 0, $parser = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $handler = sp + 80 | 0;
 $parser = sp;
 HEAP32[$handler >> 2] = 4488;
 HEAP32[$handler + 4 >> 2] = $module;
 $4 = $handler + 8 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($4, $this + 4 | 0);
 HEAP32[$handler + 20 >> 2] = $lines;
 HEAP32[$handler + 28 >> 2] = 0;
 HEAP32[$handler + 32 >> 2] = 0;
 $9 = $handler + 28 | 0;
 HEAP32[$handler + 24 >> 2] = $9;
 HEAP32[$handler + 40 >> 2] = 0;
 HEAP32[$handler + 44 >> 2] = 0;
 $13 = $handler + 40 | 0;
 HEAP32[$handler + 36 >> 2] = $13;
 HEAP32[$handler + 48 >> 2] = -1;
 $16 = $handler + 56 | 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP8[$handler + 64 >> 0] = 0;
 HEAP8[$handler + 65 >> 0] = 0;
 __ZN12dwarf2reader8LineInfoC2EPKcyPNS_10ByteReaderEPNS_15LineInfoHandlerE($parser, $program, $0, $1, HEAP32[$this + 16 >> 2] | 0, $handler);
 __ZN12dwarf2reader8LineInfo5StartEv($parser) | 0;
 HEAP32[$parser >> 2] = 4808;
 $26 = HEAP32[$parser + 48 >> 2] | 0;
 if ($26) {
  $28 = HEAP32[$26 >> 2] | 0;
  if ($28) {
   $30 = $26 + 4 | 0;
   if ((HEAP32[$30 >> 2] | 0) != ($28 | 0)) HEAP32[$30 >> 2] = $28;
   __ZdlPv($28);
  }
  __ZdlPv($26);
 }
 HEAP32[$handler >> 2] = 4488;
 __ZNSt3__16__treeINS_12__value_typeIjPN15google_breakpad6Module4FileEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($handler + 36 | 0, HEAP32[$13 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($handler + 24 | 0, HEAP32[$9 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo5State9DoRestoreEj($this, $reg) {
 $this = $this | 0;
 $reg = $reg | 0;
 var $$0 = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph7$i$i$i$i = 0, $$01$ph6$i$i$i$i = 0, $$014$i$i$i$i = 0, $$014$i$i$i$i$lcssa = 0, $1 = 0, $10 = 0, $20 = 0, $21 = 0, $36 = 0, $40 = 0, $42 = 0, $50 = 0, $6 = 0, $rule$0 = 0, label = 0;
 $1 = HEAP32[$this + 24 >> 2] | 0;
 if ((HEAP32[$1 + 8 >> 2] | 0) == 1) {
  $6 = HEAP32[$this + 8 >> 2] | 0;
  $10 = HEAP32[$1 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 40 >> 2] & 31]($6, $10, 0, (HEAP32[$this + 28 >> 2] | 0) + $10 - (HEAP32[$1 + 4 >> 2] | 0) | 0, 0);
  $$0 = 0;
  return $$0 | 0;
 }
 if (($reg | 0) == -1) ___assert_fail(18867, 18044, 1107, 18896);
 $20 = $this + 56 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (!$21) label = 13; else {
  $$0$ph7$i$i$i$i = $20;
  $$01$ph6$i$i$i$i = $21;
  L9 : while (1) {
   $$014$i$i$i$i = $$01$ph6$i$i$i$i;
   while (1) {
    if ((HEAP32[$$014$i$i$i$i + 16 >> 2] | 0) >= ($reg | 0)) {
     $$014$i$i$i$i$lcssa = $$014$i$i$i$i;
     break;
    }
    $$014$i$i$i$i = HEAP32[$$014$i$i$i$i + 4 >> 2] | 0;
    if (!$$014$i$i$i$i) {
     $$0$ph$lcssa$i$i$i$i = $$0$ph7$i$i$i$i;
     break L9;
    }
   }
   $$01$ph6$i$i$i$i = HEAP32[$$014$i$i$i$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i$i$i$i) {
    $$0$ph$lcssa$i$i$i$i = $$014$i$i$i$i$lcssa;
    break;
   } else $$0$ph7$i$i$i$i = $$014$i$i$i$i$lcssa;
  }
  if (($$0$ph$lcssa$i$i$i$i | 0) == ($20 | 0)) label = 13; else if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) > ($reg | 0)) label = 13; else {
   $36 = HEAP32[$$0$ph$lcssa$i$i$i$i + 20 >> 2] | 0;
   $40 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 16 >> 2] & 127]($36) | 0;
   if (!$40) label = 13; else $rule$0 = $40;
  }
 }
 if ((label | 0) == 13) {
  $42 = __Znwj(4) | 0;
  HEAP32[$42 >> 2] = 4968;
  $rule$0 = $42;
 }
 __ZN12dwarf2reader13CallFrameInfo7RuleMap15SetRegisterRuleEiPNS0_4RuleE($this + 32 | 0, $reg, $rule$0);
 $50 = $this + 16 | 0;
 $$0 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$rule$0 >> 2] | 0) + 8 >> 2] & 63]($rule$0, HEAP32[$this + 4 >> 2] | 0, HEAP32[$50 >> 2] | 0, HEAP32[$50 + 4 >> 2] | 0, $reg) | 0;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa20 = 0, $__nd$0$lcssa21 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
 $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa22 = $__nd$0;
    $__nd$0$lcssa21 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa20 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa21;
  $$0 = $$lcssa22;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa20;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__15stackIN12dwarf2reader13DIEDispatcher12HandlerStackENS_5dequeIS3_NS_9allocatorIS3_EEEEED2Ev($this) {
 $this = $this | 0;
 var $$lcssa$i = 0, $$ph$i = 0, $$ph1$i = 0, $$pre$i = 0, $$pre2$i = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $31 = 0, $33 = 0, $37 = 0, $40 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $60 = 0, $62 = 0, $7 = 0, $__i$01$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = $1 + ($3 >>> 8 << 2) | 0;
 $6 = $this + 8 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) == ($1 | 0)) {
  $24 = 0;
  $33 = $this + 20 | 0;
  $62 = 0;
 } else {
  $13 = $this + 20 | 0;
  $15 = (HEAP32[$13 >> 2] | 0) + $3 | 0;
  $24 = (HEAP32[$1 + ($15 >>> 8 << 2) >> 2] | 0) + (($15 & 255) << 4) | 0;
  $33 = $13;
  $62 = (HEAP32[$5 >> 2] | 0) + (($3 & 255) << 4) | 0;
 }
 $$ph$i = $62;
 $$ph1$i = $5;
 L5 : while (1) {
  $22 = $$ph$i;
  do {
   $21 = $22;
   if (($21 | 0) == ($24 | 0)) break L5;
   $22 = $21 + 16 | 0;
  } while (($22 - (HEAP32[$$ph1$i >> 2] | 0) | 0) != 4096);
  $31 = $$ph1$i + 4 | 0;
  $$ph$i = HEAP32[$31 >> 2] | 0;
  $$ph1$i = $31;
 }
 HEAP32[$33 >> 2] = 0;
 $37 = $7 - $1 >> 2;
 if ($37 >>> 0 > 2) {
  $40 = $1;
  do {
   __ZdlPv(HEAP32[$40 >> 2] | 0);
   $40 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
   HEAP32[$0 >> 2] = $40;
   $47 = (HEAP32[$6 >> 2] | 0) - $40 >> 2;
  } while ($47 >>> 0 > 2);
  $$lcssa$i = $47;
 } else $$lcssa$i = $37;
 switch ($$lcssa$i | 0) {
 case 1:
  {
   HEAP32[$2 >> 2] = 128;
   break;
  }
 case 2:
  {
   HEAP32[$2 >> 2] = 256;
   break;
  }
 default:
  {}
 }
 $49 = HEAP32[$0 >> 2] | 0;
 $50 = HEAP32[$6 >> 2] | 0;
 if (($49 | 0) != ($50 | 0)) {
  $__i$01$i = $49;
  do {
   __ZdlPv(HEAP32[$__i$01$i >> 2] | 0);
   $__i$01$i = $__i$01$i + 4 | 0;
  } while (($__i$01$i | 0) != ($50 | 0));
  $$pre$i = HEAP32[$0 >> 2] | 0;
  $$pre2$i = HEAP32[$6 >> 2] | 0;
  if (($$pre2$i | 0) != ($$pre$i | 0)) HEAP32[$6 >> 2] = $$pre2$i + (~(($$pre2$i + -4 - $$pre$i | 0) >>> 2) << 2);
 }
 $60 = HEAP32[$this >> 2] | 0;
 if (!$60) return;
 __ZdlPv($60);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$ph$lcssa$i = 0, $$0$ph7$i = 0, $$01$ph6$i = 0, $$014$i = 0, $$014$i$lcssa = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $3 = 0, $30 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $56 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $$0$ph7$i = $0;
  $$01$ph6$i = $1;
  L3 : while (1) {
   $$014$i = $$01$ph6$i;
   while (1) {
    $15 = $$014$i + 16 | 0;
    $16 = HEAP8[$15 >> 0] | 0;
    $18 = ($16 & 1) == 0;
    $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$$014$i + 20 >> 2] | 0;
    $30 = _memcmp($18 ? $15 + 1 | 0 : HEAP32[$$014$i + 24 >> 2] | 0, $14, $10 >>> 0 < $23 >>> 0 ? $10 : $23) | 0;
    if (((($30 | 0) == 0 ? ($23 >>> 0 < $10 >>> 0 ? -2147483648 : 0) : $30) | 0) >= 0) {
     $$014$i$lcssa = $$014$i;
     break;
    }
    $$014$i = HEAP32[$$014$i + 4 >> 2] | 0;
    if (!$$014$i) {
     $$0$ph$lcssa$i = $$0$ph7$i;
     break L3;
    }
   }
   $$01$ph6$i = HEAP32[$$014$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i) {
    $$0$ph$lcssa$i = $$014$i$lcssa;
    break;
   } else $$0$ph7$i = $$014$i$lcssa;
  }
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $41 = $$0$ph$lcssa$i + 16 | 0;
   $42 = HEAP8[$41 >> 0] | 0;
   $44 = ($42 & 1) == 0;
   $49 = $44 ? ($42 & 255) >>> 1 : HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   $56 = _memcmp($14, $44 ? $41 + 1 | 0 : HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0, $49 >>> 0 < $10 >>> 0 ? $49 : $10) | 0;
   if (((($56 | 0) == 0 ? ($10 >>> 0 < $49 >>> 0 ? -2147483648 : 0) : $56) | 0) >= 0) {
    $$sroa$0$0 = $$0$ph$lcssa$i;
    return $$sroa$0$0 | 0;
   }
  }
 }
 $$sroa$0$0 = $0;
 return $$sroa$0$0 | 0;
}

function __ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE4findIS7_EENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_PvEEiEERKT_($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$ph$lcssa$i = 0, $$0$ph7$i = 0, $$01$ph6$i = 0, $$014$i = 0, $$014$i$lcssa = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $3 = 0, $30 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $56 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $$0$ph7$i = $0;
  $$01$ph6$i = $1;
  L3 : while (1) {
   $$014$i = $$01$ph6$i;
   while (1) {
    $15 = $$014$i + 16 | 0;
    $16 = HEAP8[$15 >> 0] | 0;
    $18 = ($16 & 1) == 0;
    $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$$014$i + 20 >> 2] | 0;
    $30 = _memcmp($18 ? $15 + 1 | 0 : HEAP32[$$014$i + 24 >> 2] | 0, $14, $10 >>> 0 < $23 >>> 0 ? $10 : $23) | 0;
    if (((($30 | 0) == 0 ? ($23 >>> 0 < $10 >>> 0 ? -2147483648 : 0) : $30) | 0) >= 0) {
     $$014$i$lcssa = $$014$i;
     break;
    }
    $$014$i = HEAP32[$$014$i + 4 >> 2] | 0;
    if (!$$014$i) {
     $$0$ph$lcssa$i = $$0$ph7$i;
     break L3;
    }
   }
   $$01$ph6$i = HEAP32[$$014$i$lcssa >> 2] | 0;
   if (!$$01$ph6$i) {
    $$0$ph$lcssa$i = $$014$i$lcssa;
    break;
   } else $$0$ph7$i = $$014$i$lcssa;
  }
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $41 = $$0$ph$lcssa$i + 16 | 0;
   $42 = HEAP8[$41 >> 0] | 0;
   $44 = ($42 & 1) == 0;
   $49 = $44 ? ($42 & 255) >>> 1 : HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   $56 = _memcmp($14, $44 ? $41 + 1 | 0 : HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0, $49 >>> 0 < $10 >>> 0 ? $49 : $10) | 0;
   if (((($56 | 0) == 0 ? ($10 >>> 0 < $49 >>> 0 ? -2147483648 : 0) : $56) | 0) >= 0) {
    $$sroa$0$0 = $$0$ph$lcssa$i;
    return $$sroa$0$0 | 0;
   }
  }
 }
 $$sroa$0$0 = $0;
 return $$sroa$0$0 | 0;
}

function __ZN16MacFileUtilities11MachoWalker18WalkHeaderAtOffsetEi($this, $offset) {
 $this = $this | 0;
 $offset = $offset | 0;
 var $$0 = 0, $1 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $24 = 0, $6 = 0, $header = 0, $header64 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $header = sp + 32 | 0;
 $header64 = sp;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 do if (!$1) {
  if ((_pread(HEAP32[$this >> 2] | 0, $header | 0, 28, $offset | 0) | 0) != 28) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  if (($offset | 0) < 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $6 = HEAP32[$this + 8 >> 2] | 0;
  if (($offset + 28 | 0) >>> 0 <= $6 >>> 0) {
   dest = $header;
   src = $1 + $offset | 0;
   stop = dest + 28 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   break;
  }
  if ($6 >>> 0 <= $offset >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  _memcpy($header | 0, $1 + $offset | 0, $6 - $offset | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $16 = (HEAP32[$header >> 2] | 0) == -822415874;
 if ($16) __Z25breakpad_swap_mach_headerP11mach_header($header);
 HEAP32[$header64 >> 2] = HEAP32[$header >> 2];
 HEAP32[$header64 + 4 >> 2] = HEAP32[$header + 4 >> 2];
 HEAP32[$header64 + 8 >> 2] = HEAP32[$header + 8 >> 2];
 HEAP32[$header64 + 12 >> 2] = HEAP32[$header + 12 >> 2];
 HEAP32[$header64 + 16 >> 2] = HEAP32[$header + 16 >> 2];
 HEAP32[$header64 + 20 >> 2] = HEAP32[$header + 20 >> 2];
 HEAP32[$header64 + 24 >> 2] = HEAP32[$header + 24 >> 2];
 HEAP32[$header64 + 28 >> 2] = 0;
 $18 = $this + 20 | 0;
 HEAP32[$18 >> 2] = $header64;
 $19 = $this + 24 | 0;
 HEAP32[$19 >> 2] = 28;
 $20 = $this + 28 | 0;
 HEAP32[$20 >> 2] = $offset;
 $24 = __ZN16MacFileUtilities11MachoWalker14WalkHeaderCoreEijb($this, $offset + 28 | 0, HEAP32[$header + 16 >> 2] | 0, $16) | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$20 >> 2] = 0;
 $$0 = $24;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad13StabsToModule6ExternERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy($this, $name, $0, $1) {
 $this = $this | 0;
 $name = $name | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $2 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = __Znwj(24) | 0;
 $6 = $5;
 HEAP32[$6 >> 2] = $0;
 HEAP32[$6 + 4 >> 2] = $1;
 $10 = $5 + 8 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKc($name, 0, 3, 17338) | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($3, $name, 1, -1, $name);
  __ZN15google_breakpadL8DemangleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($2, $3);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($10, $2) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $22 = $this + 4 | 0;
  $23 = HEAP32[$22 >> 2] | 0;
  __ZN15google_breakpad6Module9AddExternEPNS0_6ExternE($23, $5);
  STACKTOP = sp;
  return 1;
 }
 if ((HEAP8[((HEAP8[$name >> 0] & 1) == 0 ? $name + 1 | 0 : HEAP32[$name + 8 >> 2] | 0) >> 0] | 0) == 95) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($4, $name, 1, -1, $name);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($10, $4) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $22 = $this + 4 | 0;
  $23 = HEAP32[$22 >> 2] | 0;
  __ZN15google_breakpad6Module9AddExternEPNS0_6ExternE($23, $5);
  STACKTOP = sp;
  return 1;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($10, $name) | 0;
  $22 = $this + 4 | 0;
  $23 = HEAP32[$22 >> 2] | 0;
  __ZN15google_breakpad6Module9AddExternEPNS0_6ExternE($23, $5);
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZN15google_breakpad11DumpSymbols17LoadCommandDumper13SymtabCommandERKNS_10ByteBufferES4_($this, $entries, $strings) {
 $this = $this | 0;
 $entries = $entries | 0;
 $strings = $strings | 0;
 var $$02 = 0, $1 = 0, $11 = 0, $20 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, $stabs_reader = 0, $stabs_to_module = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $stabs_to_module = sp + 88 | 0;
 $stabs_reader = sp;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 HEAP32[$stabs_to_module >> 2] = 4612;
 HEAP32[$stabs_to_module + 4 >> 2] = $1;
 $3 = $stabs_to_module + 8 | 0;
 $4 = $stabs_to_module + 40 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 + 12 >> 2] = 0;
 HEAP32[$3 + 16 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 HEAP8[$3 + 24 >> 0] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 $5 = HEAP32[$entries >> 2] | 0;
 $7 = HEAP32[$entries + 4 >> 2] | 0;
 if ($5 >>> 0 > $7 >>> 0) ___assert_fail(22901, 22914, 70, 22941);
 $9 = HEAP32[$strings >> 2] | 0;
 $11 = HEAP32[$strings + 4 >> 2] | 0;
 if ($9 >>> 0 > $11 >>> 0) ___assert_fail(22901, 22914, 70, 22941);
 $20 = HEAP32[$this + 12 >> 2] | 0;
 __ZN15google_breakpad11StabsReaderC2EPKhjS2_jbjbPNS_12StabsHandlerE($stabs_reader, $5, $7 - $5 | 0, $9, $11 - $9 | 0, (HEAP8[$20 + 12 >> 0] | 0) != 0, (HEAP8[$20 + 13 >> 0] | 0) != 0 ? 8 : 4, 1, $stabs_to_module);
 if (__ZN15google_breakpad11StabsReader7ProcessEv($stabs_reader) | 0) {
  __ZN15google_breakpad13StabsToModule8FinalizeEv($stabs_to_module);
  $$02 = 1;
 } else $$02 = 0;
 $30 = HEAP32[$stabs_reader + 76 >> 2] | 0;
 if (!$30) {
  __ZN15google_breakpad13StabsToModuleD2Ev($stabs_to_module);
  STACKTOP = sp;
  return $$02 | 0;
 }
 $33 = $stabs_reader + 80 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 if (($34 | 0) != ($30 | 0)) HEAP32[$33 >> 2] = $34 + (~(($34 + -16 - $30 | 0) >>> 4) << 4);
 __ZdlPv($30);
 __ZN15google_breakpad13StabsToModuleD2Ev($stabs_to_module);
 STACKTOP = sp;
 return $$02 | 0;
}

function __ZNSt3__17__sort3IRNS_6__lessIyyEEPyEEjT0_S5_S5_T_($__x, $__y, $__z, $__c) {
 $__x = $__x | 0;
 $__y = $__y | 0;
 $__z = $__z | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $11 = 0, $17 = 0, $19 = 0, $2 = 0, $22 = 0, $27 = 0, $28 = 0, $32 = 0, $36 = 0, $38 = 0, $41 = 0, $42 = 0, $44 = 0, $47 = 0, $5 = 0, $53 = 0, $57 = 0, $6 = 0, $61 = 0, $65 = 0, $69 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $82 = 0, $88 = 0, $92 = 0;
 $0 = $__y;
 $2 = HEAP32[$0 >> 2] | 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $__x;
 $8 = HEAP32[$6 >> 2] | 0;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $17 = $__z;
 $19 = HEAP32[$17 >> 2] | 0;
 $22 = HEAP32[$17 + 4 >> 2] | 0;
 $27 = $22 >>> 0 < $5 >>> 0 | ($22 | 0) == ($5 | 0) & $19 >>> 0 < $2 >>> 0;
 do if ($5 >>> 0 < $11 >>> 0 | ($5 | 0) == ($11 | 0) & $2 >>> 0 < $8 >>> 0) {
  if ($27) {
   $61 = $__x;
   HEAP32[$61 >> 2] = $19;
   HEAP32[$61 + 4 >> 2] = $22;
   $65 = $__z;
   HEAP32[$65 >> 2] = $8;
   HEAP32[$65 + 4 >> 2] = $11;
   $$0 = 1;
   break;
  }
  $69 = $__x;
  HEAP32[$69 >> 2] = $2;
  HEAP32[$69 + 4 >> 2] = $5;
  $73 = $__y;
  HEAP32[$73 >> 2] = $8;
  HEAP32[$73 + 4 >> 2] = $11;
  $77 = $__z;
  $79 = HEAP32[$77 >> 2] | 0;
  $82 = HEAP32[$77 + 4 >> 2] | 0;
  if ($82 >>> 0 < $11 >>> 0 | ($82 | 0) == ($11 | 0) & $79 >>> 0 < $8 >>> 0) {
   $88 = $__y;
   HEAP32[$88 >> 2] = $79;
   HEAP32[$88 + 4 >> 2] = $82;
   $92 = $__z;
   HEAP32[$92 >> 2] = $8;
   HEAP32[$92 + 4 >> 2] = $11;
   $$0 = 2;
  } else $$0 = 1;
 } else if ($27) {
  $28 = $__y;
  HEAP32[$28 >> 2] = $19;
  HEAP32[$28 + 4 >> 2] = $22;
  $32 = $__z;
  HEAP32[$32 >> 2] = $2;
  HEAP32[$32 + 4 >> 2] = $5;
  $36 = $__y;
  $38 = HEAP32[$36 >> 2] | 0;
  $41 = HEAP32[$36 + 4 >> 2] | 0;
  $42 = $__x;
  $44 = HEAP32[$42 >> 2] | 0;
  $47 = HEAP32[$42 + 4 >> 2] | 0;
  if ($41 >>> 0 < $47 >>> 0 | ($41 | 0) == ($47 | 0) & $38 >>> 0 < $44 >>> 0) {
   $53 = $__x;
   HEAP32[$53 >> 2] = $38;
   HEAP32[$53 + 4 >> 2] = $41;
   $57 = $__y;
   HEAP32[$57 >> 2] = $44;
   HEAP32[$57 + 4 >> 2] = $47;
   $$0 = 2;
  } else $$0 = 1;
 } else $$0 = 0; while (0);
 return $$0 | 0;
}

function __ZNSt3__15stackIyNS_5dequeIyNS_9allocatorIyEEEEED2Ev($this) {
 $this = $this | 0;
 var $$lcssa$i = 0, $$ph$i = 0, $$ph1$i = 0, $$pre$i = 0, $$pre2$i = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $31 = 0, $33 = 0, $37 = 0, $40 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $60 = 0, $62 = 0, $7 = 0, $__i$01$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = $1 + ($3 >>> 9 << 2) | 0;
 $6 = $this + 8 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) == ($1 | 0)) {
  $24 = 0;
  $33 = $this + 20 | 0;
  $62 = 0;
 } else {
  $13 = $this + 20 | 0;
  $15 = (HEAP32[$13 >> 2] | 0) + $3 | 0;
  $24 = (HEAP32[$1 + ($15 >>> 9 << 2) >> 2] | 0) + (($15 & 511) << 3) | 0;
  $33 = $13;
  $62 = (HEAP32[$5 >> 2] | 0) + (($3 & 511) << 3) | 0;
 }
 $$ph$i = $62;
 $$ph1$i = $5;
 L5 : while (1) {
  $22 = $$ph$i;
  do {
   $21 = $22;
   if (($21 | 0) == ($24 | 0)) break L5;
   $22 = $21 + 8 | 0;
  } while (($22 - (HEAP32[$$ph1$i >> 2] | 0) | 0) != 4096);
  $31 = $$ph1$i + 4 | 0;
  $$ph$i = HEAP32[$31 >> 2] | 0;
  $$ph1$i = $31;
 }
 HEAP32[$33 >> 2] = 0;
 $37 = $7 - $1 >> 2;
 if ($37 >>> 0 > 2) {
  $40 = $1;
  do {
   __ZdlPv(HEAP32[$40 >> 2] | 0);
   $40 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
   HEAP32[$0 >> 2] = $40;
   $47 = (HEAP32[$6 >> 2] | 0) - $40 >> 2;
  } while ($47 >>> 0 > 2);
  $$lcssa$i = $47;
 } else $$lcssa$i = $37;
 switch ($$lcssa$i | 0) {
 case 1:
  {
   HEAP32[$2 >> 2] = 256;
   break;
  }
 case 2:
  {
   HEAP32[$2 >> 2] = 512;
   break;
  }
 default:
  {}
 }
 $49 = HEAP32[$0 >> 2] | 0;
 $50 = HEAP32[$6 >> 2] | 0;
 if (($49 | 0) != ($50 | 0)) {
  $__i$01$i = $49;
  do {
   __ZdlPv(HEAP32[$__i$01$i >> 2] | 0);
   $__i$01$i = $__i$01$i + 4 | 0;
  } while (($__i$01$i | 0) != ($50 | 0));
  $$pre$i = HEAP32[$0 >> 2] | 0;
  $$pre2$i = HEAP32[$6 >> 2] | 0;
  if (($$pre2$i | 0) != ($$pre$i | 0)) HEAP32[$6 >> 2] = $$pre2$i + (~(($$pre2$i + -4 - $$pre$i | 0) >>> 2) << 2);
 }
 $60 = HEAP32[$this >> 2] | 0;
 if (!$60) return;
 __ZdlPv($60);
 return;
}

function __ZN15google_breakpad11DumpSymbols10IdentifierEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $0 = 0, $14 = 0, $21 = 0, $23 = 0, $7 = 0, $9 = 0, $compacted = 0, $file_id = 0, $i$04 = 0, $identifier_bytes = 0, $identifier_string = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4176 | 0;
 $vararg_buffer = sp;
 $file_id = sp + 72 | 0;
 $identifier_bytes = sp + 16 | 0;
 $identifier_string = sp + 32 | 0;
 $compacted = sp + 4 | 0;
 $0 = $this + 20 | 0;
 if (!(HEAP8[$0 >> 0] & 1)) $7 = $0 + 1 | 0; else $7 = HEAP32[$this + 28 >> 2] | 0;
 __ZN15google_breakpad6FileIDC2EPKc($file_id, $7);
 $9 = HEAP32[$this + 48 >> 2] | 0;
 if (__ZN15google_breakpad6FileID15MachoIdentifierEiiPh($file_id, HEAP32[$9 >> 2] | 0, HEAP32[$9 + 4 >> 2] | 0, $identifier_bytes) | 0) {
  __ZN15google_breakpad6FileID25ConvertIdentifierToStringEPKhPci($identifier_bytes, $identifier_string, 40);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($compacted, $identifier_string, _strlen($identifier_string | 0) | 0);
  $23 = __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcj($compacted, 45, 0) | 0;
  if (($23 | 0) != -1) {
   $i$04 = $23;
   do {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEjj($compacted, $i$04, 1) | 0;
    $i$04 = __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcj($compacted, 45, $i$04) | 0;
   } while (($i$04 | 0) != -1);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $compacted);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($compacted);
  STACKTOP = sp;
  return;
 }
 $14 = HEAP32[_stderr >> 2] | 0;
 if (!(HEAP8[$0 >> 0] & 1)) $21 = $0 + 1 | 0; else $21 = HEAP32[$this + 28 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $21;
 _fprintf($14 | 0, 21852, $vararg_buffer | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 30292, 0);
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule12RegisterRuleEyii($this, $0, $1, $reg, $base_register) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 $base_register = $base_register | 0;
 var $11 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $2 = sp + 160 | 0;
 $s = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $6 = $s + 4 | 0;
 HEAP32[$s >> 2] = 4068;
 HEAP32[$s + 56 >> 2] = 4088;
 __ZNSt3__18ios_base4initEPv($s + 56 | 0, $6);
 HEAP32[$s + 128 >> 2] = 0;
 HEAP32[$s + 132 >> 2] = -1;
 HEAP32[$s >> 2] = 4108;
 HEAP32[$s + 56 >> 2] = 4128;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 4144;
 $11 = $s + 36 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$s + 52 >> 2] = 16;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($3, $this, $base_register);
 $13 = HEAP8[$3 >> 0] | 0;
 $15 = ($13 & 1) == 0;
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($s, $15 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0, $15 ? ($13 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($4, $6);
 __ZN15google_breakpad16DwarfCFIToModule6RecordEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $0, $1, $reg, $4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($s);
 STACKTOP = sp;
 return 1;
}

function __ZN15google_breakpad15DwarfCUToModule16FindChildHandlerEyN12dwarf2reader8DwarfTagE($this, $0, $1, $tag) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $tag = $tag | 0;
 var $$02 = 0, $10 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $25 = 0, $29 = 0, $34 = 0, $35 = 0, $6 = 0;
 switch ($tag | 0) {
 case 46:
  {
   $2 = __Znwj(104) | 0;
   $6 = HEAP32[$this + 12 >> 2] | 0;
   HEAP32[$2 + 4 >> 2] = HEAP32[$this + 8 >> 2];
   HEAP32[$2 + 8 >> 2] = $6;
   $10 = $2 + 16 | 0;
   HEAP32[$10 >> 2] = $0;
   HEAP32[$10 + 4 >> 2] = $1;
   HEAP8[$2 + 24 >> 0] = 0;
   $15 = $2 + 28 | 0;
   HEAP32[$15 >> 2] = 0;
   HEAP32[$15 + 4 >> 2] = 0;
   HEAP32[$15 + 8 >> 2] = 0;
   HEAP32[$15 + 12 >> 2] = 0;
   HEAP32[$15 + 16 >> 2] = 0;
   HEAP32[$15 + 20 >> 2] = 0;
   HEAP32[$15 + 24 >> 2] = 0;
   HEAP32[$2 >> 2] = 4384;
   $16 = $2 + 56 | 0;
   HEAP32[$16 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   $17 = $2 + 72 | 0;
   HEAP32[$17 >> 2] = 0;
   HEAP32[$17 + 4 >> 2] = 0;
   HEAP32[$17 + 8 >> 2] = 0;
   HEAP32[$17 + 12 >> 2] = 0;
   HEAP32[$2 + 88 >> 2] = 1;
   HEAP32[$2 + 92 >> 2] = 0;
   HEAP8[$2 + 96 >> 0] = 0;
   $$02 = $2;
   return $$02 | 0;
  }
 case 23:
 case 19:
 case 2:
 case 57:
  {
   $21 = __Znwj(72) | 0;
   $25 = HEAP32[$this + 12 >> 2] | 0;
   HEAP32[$21 + 4 >> 2] = HEAP32[$this + 8 >> 2];
   HEAP32[$21 + 8 >> 2] = $25;
   $29 = $21 + 16 | 0;
   HEAP32[$29 >> 2] = $0;
   HEAP32[$29 + 4 >> 2] = $1;
   HEAP8[$21 + 24 >> 0] = 0;
   $34 = $21 + 28 | 0;
   HEAP32[$34 >> 2] = 0;
   HEAP32[$34 + 4 >> 2] = 0;
   HEAP32[$34 + 8 >> 2] = 0;
   HEAP32[$34 + 12 >> 2] = 0;
   HEAP32[$34 + 16 >> 2] = 0;
   HEAP32[$34 + 20 >> 2] = 0;
   HEAP32[$34 + 24 >> 2] = 0;
   HEAP32[$21 >> 2] = 4436;
   $35 = $21 + 56 | 0;
   HEAP32[$35 >> 2] = 0;
   HEAP32[$35 + 4 >> 2] = 0;
   HEAP32[$35 + 8 >> 2] = 0;
   $$02 = $21;
   return $$02 | 0;
  }
 default:
  {
   $$02 = 0;
   return $$02 | 0;
  }
 }
 return 0;
}

function ___cxx_global_array_dtor112($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12628);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12616);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12604);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12592);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12580);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12568);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12556);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12544);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12532);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12520);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12508);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12496);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12484);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12472);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12460);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12448);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12436);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12424);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12412);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12400);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12388);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12376);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12364);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12352);
 return;
}

function ___cxx_global_array_dtor109($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12336);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12324);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12312);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12300);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12288);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12276);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12264);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12252);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12240);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12228);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12216);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12204);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12192);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12180);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12168);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12156);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12144);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12132);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12120);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12108);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12096);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12084);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12072);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12060);
 return;
}

function ___cxx_global_array_dtor85($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11524);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11512);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11500);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11488);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11476);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11464);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11452);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11440);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11428);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11416);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11404);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11392);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11380);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11368);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11356);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11344);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11332);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11320);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11308);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11296);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11284);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11272);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11260);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(11248);
 return;
}

function ___cxx_global_array_dtor61($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11232);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11220);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11208);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11196);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11184);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11172);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11160);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11148);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11136);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11124);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11112);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11100);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11088);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11076);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11064);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11052);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11040);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11028);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11016);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11004);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10992);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10980);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10968);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10956);
 return;
}

function __ZN15google_breakpad13StabsToModule11EndFunctionEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $15 = 0, $2 = 0, $20 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $48 = 0, $52 = 0, $53 = 0, $57 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $this + 48 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = $4;
 if (!$4) ___assert_fail(17282, 17158, 106, 17300);
 $8 = $4 + 16 | 0;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $15 = $this + 40 | 0;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 do if ($13 >>> 0 < $20 >>> 0 | (($13 | 0) == ($20 | 0) ? (HEAP32[$8 >> 2] | 0) >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0 : 0)) {
  $35 = HEAP32[$4 + 40 >> 2] | 0;
  $37 = $35;
  if ($35) {
   $38 = $4 + 44 | 0;
   $39 = HEAP32[$38 >> 2] | 0;
   if (($39 | 0) != ($35 | 0)) HEAP32[$38 >> 2] = $39 + (~((($39 + -24 - $37 | 0) >>> 0) / 24 | 0) * 24 | 0);
   __ZdlPv($35);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  __ZdlPv($4);
 } else {
  $26 = $this + 12 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if (($27 | 0) == (HEAP32[$this + 16 >> 2] | 0)) {
   __ZNSt3__16vectorIPN15google_breakpad6Module8FunctionENS_9allocatorIS4_EEE21__push_back_slow_pathIKS4_EEvRT_($this + 8 | 0, $3);
   break;
  } else {
   HEAP32[$27 >> 2] = $6;
   HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 4;
   break;
  }
 } while (0);
 HEAP32[$3 >> 2] = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) {
  STACKTOP = sp;
  return 1;
 }
 $48 = $2;
 HEAP32[$48 >> 2] = $0;
 HEAP32[$48 + 4 >> 2] = $1;
 $52 = $this + 24 | 0;
 $53 = HEAP32[$52 >> 2] | 0;
 if (($53 | 0) == (HEAP32[$this + 28 >> 2] | 0)) {
  __ZNSt3__16vectorIyNS_9allocatorIyEEE21__push_back_slow_pathIKyEEvRT_($this + 20 | 0, $2);
  STACKTOP = sp;
  return 1;
 } else {
  $57 = $53;
  HEAP32[$57 >> 2] = $0;
  HEAP32[$57 + 4 >> 2] = $1;
  HEAP32[$52 >> 2] = $53 + 8;
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $6 = 0, $dst_ptr$0 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 $0 = HEAP32[$static_ptr >> 2] | 0;
 $4 = $static_ptr + (HEAP32[$0 + -8 >> 2] | 0) | 0;
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $10 = $info + 16 | 0;
 $11 = $info + 20 | 0;
 $12 = $info + 24 | 0;
 $13 = $info + 28 | 0;
 $14 = $info + 32 | 0;
 $15 = $info + 40 | 0;
 $16 = ($6 | 0) == ($dst_type | 0);
 dest = $10;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$10 + 36 >> 1] = 0;
 HEAP8[$10 + 38 >> 0] = 0;
 L1 : do if ($16) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$dst_type >> 2] | 0) + 20 >> 2] & 15]($dst_type, $info, $4, $4, 1, 0);
  $dst_ptr$0 = (HEAP32[$12 >> 2] | 0) == 1 ? $4 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 31]($6, $info, $4, 1, 0);
  switch (HEAP32[$info + 36 >> 2] | 0) {
  case 0:
   {
    $dst_ptr$0 = (HEAP32[$15 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1 ? HEAP32[$11 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $dst_ptr$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$12 >> 2] | 0) != 1) if (!((HEAP32[$15 >> 2] | 0) == 0 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1)) {
   $dst_ptr$0 = 0;
   break;
  }
  $dst_ptr$0 = HEAP32[$10 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $dst_ptr$0 | 0;
}

function __ZNSt3__114__split_bufferIPN12dwarf2reader13DIEDispatcher12HandlerStackENS_9allocatorIS4_EEE10push_frontERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$in = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 do if (($1 | 0) == ($2 | 0)) {
  $5 = $this + 8 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = $this + 12 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  $10 = $8;
  if ($6 >>> 0 < $8 >>> 0) {
   $11 = $6;
   $15 = (($10 - $11 >> 2) + 1 | 0) / 2 | 0;
   $17 = $11 - $1 | 0;
   $19 = $6 + ($15 - ($17 >> 2) << 2) | 0;
   _memmove($19 | 0, $1 | 0, $17 | 0) | 0;
   HEAP32[$0 >> 2] = $19;
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($15 << 2);
   $50 = $19;
   break;
  }
  $24 = $10 - $1 >> 1;
  $26 = ($24 | 0) == 0 ? 1 : $24;
  $30 = __Znwj($26 << 2) | 0;
  $31 = $30;
  $32 = $30 + (($26 + 3 | 0) >>> 2 << 2) | 0;
  $33 = $32;
  $35 = $30 + ($26 << 2) | 0;
  if (($1 | 0) == ($6 | 0)) {
   $$pre$phiZ2D = $this;
   $45 = $33;
   $47 = $4;
  } else {
   $$in = $32;
   $38 = $1;
   $40 = $33;
   while (1) {
    HEAP32[$$in >> 2] = HEAP32[$38 >> 2];
    $$in = $40 + 4 | 0;
    $42 = $$in;
    $38 = $38 + 4 | 0;
    if (($38 | 0) == ($6 | 0)) {
     $$lcssa = $42;
     break;
    } else $40 = $42;
   }
   $$pre$phiZ2D = $this;
   $45 = $$lcssa;
   $47 = HEAP32[$this >> 2] | 0;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $31;
  HEAP32[$0 >> 2] = $33;
  HEAP32[$5 >> 2] = $45;
  HEAP32[$7 >> 2] = $35;
  if (!$47) $50 = $32; else {
   __ZdlPv($47);
   $50 = HEAP32[$0 >> 2] | 0;
  }
 } else $50 = $1; while (0);
 HEAP32[$50 + -4 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -4;
 return;
}

function __ZN15google_breakpad30BreakpadGetArchInfoFromCpuTypeEii($cpu_type, $cpu_subtype) {
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 var $$05 = 0, $$mux$mux = 0, $11 = 0, $17 = 0, $23 = 0, $6 = 0, $arch$02$lcssa$i = 0;
 if (($cpu_type | 0) == 16777228 & ($cpu_subtype | 0) == 0) {
  if (!(HEAP8[448] | 0)) if (___cxa_guard_acquire(448) | 0) {
   $6 = __Znwj(20) | 0;
   HEAP32[$6 >> 2] = HEAP32[1277];
   HEAP32[$6 + 4 >> 2] = HEAP32[1278];
   HEAP32[$6 + 8 >> 2] = HEAP32[1279];
   HEAP32[$6 + 12 >> 2] = HEAP32[1280];
   HEAP32[$6 >> 2] = 21210;
   HEAP32[$6 + 4 >> 2] = 16777228;
   HEAP32[$6 + 8 >> 2] = 0;
   HEAP32[$6 + 16 >> 2] = 21216;
   HEAP32[1292] = $6;
   ___cxa_guard_release(448);
  }
  $$05 = HEAP32[1292] | 0;
  return $$05 | 0;
 }
 $11 = ($cpu_type | 0) == 12;
 if ($11 & ($cpu_subtype | 0) == 11) {
  if (!(HEAP8[456] | 0)) if (___cxa_guard_acquire(456) | 0) {
   $17 = __Znwj(20) | 0;
   HEAP32[$17 >> 2] = HEAP32[1277];
   HEAP32[$17 + 4 >> 2] = HEAP32[1278];
   HEAP32[$17 + 8 >> 2] = HEAP32[1279];
   HEAP32[$17 + 12 >> 2] = HEAP32[1280];
   HEAP32[$17 >> 2] = 21223;
   HEAP32[$17 + 8 >> 2] = 11;
   HEAP32[$17 + 16 >> 2] = 21230;
   HEAP32[1293] = $17;
   ___cxa_guard_release(456);
  }
  $$05 = HEAP32[1293] | 0;
  return $$05 | 0;
 }
 L17 : do if (($cpu_type | 0) == 7) $arch$02$lcssa$i = 0; else {
  $23 = ($cpu_type | 0) == 16777223;
  $$mux$mux = $23 | $11 ? ($23 ? 1 : 2) : 3;
  if (($cpu_type | 0) < 16777223) switch ($cpu_type | 0) {
  case 12:
   {
    $arch$02$lcssa$i = $$mux$mux;
    break L17;
    break;
   }
  default:
   {}
  } else switch ($cpu_type | 0) {
  case 16777223:
  case 16777228:
   {
    $arch$02$lcssa$i = $$mux$mux;
    break L17;
    break;
   }
  default:
   {}
  }
  if (($cpu_type | 0) == 18) $arch$02$lcssa$i = 4; else {
   $$05 = 0;
   return $$05 | 0;
  }
 } while (0);
 $$05 = 5068 + ($arch$02$lcssa$i * 20 | 0) | 0;
 return $$05 | 0;
}

function __ZN15google_breakpad11StabsReader13ProcessExternEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$pre1$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $18 = 0, $20 = 0, $22 = 0, $29 = 0, $32 = 0, $33 = 0, $36 = 0, $42 = 0, $43 = 0, $offset$0$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = sp + 4 | 0;
 $1 = $this + 16 | 0;
 if (HEAP8[$this + 32 >> 0] | 0) ___assert_fail(16930, 16769, 373, 17024);
 if ((HEAP8[$this + 44 >> 0] & -18) << 24 >> 24 != 14) ___assert_fail(16930, 16769, 373, 17024);
 $10 = HEAP32[$this + 60 >> 2] | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $13 = HEAP32[$11 + 28 >> 2] | 0;
 $18 = (HEAP32[$this + 40 >> 2] | 0) + (HEAP32[$this + 64 >> 2] | 0) | 0;
 $$pre1$i = $this + 8 | 0;
 do if (($18 | 0) < 0) label = 8; else {
  $20 = HEAP32[$$pre1$i >> 2] | 0;
  $22 = HEAP32[$this + 12 >> 2] | 0;
  if ($20 >>> 0 > $22 >>> 0) ___assert_fail(22901, 22914, 70, 22941); else if ($18 >>> 0 < ($22 - $20 | 0) >>> 0) {
   $33 = $20;
   $offset$0$i = $18;
   break;
  } else {
   label = 8;
   break;
  }
 } while (0);
 if ((label | 0) == 8) {
  $29 = HEAP32[$11 + 32 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[$this + 36 >> 2];
  FUNCTION_TABLE_viii[$29 & 15]($10, 16810, $vararg_buffer);
  $33 = HEAP32[$$pre1$i >> 2] | 0;
  $offset$0$i = 0;
 }
 $32 = $33 + $offset$0$i | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $32, _strlen($32 | 0) | 0);
 $36 = $this + 48 | 0;
 $42 = FUNCTION_TABLE_iiiii[$13 & 31]($10, $0, HEAP32[$36 >> 2] | 0, HEAP32[$36 + 4 >> 2] | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 if (!$42) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($1);
 $43 = $this + 36 | 0;
 HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 1;
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__114__split_bufferIPN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS4_EEE10push_frontERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$in = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 do if (($1 | 0) == ($2 | 0)) {
  $5 = $this + 8 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = $this + 12 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  $10 = $8;
  if ($6 >>> 0 < $8 >>> 0) {
   $11 = $6;
   $15 = (($10 - $11 >> 2) + 1 | 0) / 2 | 0;
   $17 = $11 - $1 | 0;
   $19 = $6 + ($15 - ($17 >> 2) << 2) | 0;
   _memmove($19 | 0, $1 | 0, $17 | 0) | 0;
   HEAP32[$0 >> 2] = $19;
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($15 << 2);
   $50 = $19;
   break;
  }
  $24 = $10 - $1 >> 1;
  $26 = ($24 | 0) == 0 ? 1 : $24;
  $30 = __Znwj($26 << 2) | 0;
  $31 = $30;
  $32 = $30 + (($26 + 3 | 0) >>> 2 << 2) | 0;
  $33 = $32;
  $35 = $30 + ($26 << 2) | 0;
  if (($1 | 0) == ($6 | 0)) {
   $$pre$phiZ2D = $this;
   $45 = $33;
   $47 = $4;
  } else {
   $$in = $32;
   $38 = $1;
   $40 = $33;
   while (1) {
    HEAP32[$$in >> 2] = HEAP32[$38 >> 2];
    $$in = $40 + 4 | 0;
    $42 = $$in;
    $38 = $38 + 4 | 0;
    if (($38 | 0) == ($6 | 0)) {
     $$lcssa = $42;
     break;
    } else $40 = $42;
   }
   $$pre$phiZ2D = $this;
   $45 = $$lcssa;
   $47 = HEAP32[$this >> 2] | 0;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $31;
  HEAP32[$0 >> 2] = $33;
  HEAP32[$5 >> 2] = $45;
  HEAP32[$7 >> 2] = $35;
  if (!$47) $50 = $32; else {
   __ZdlPv($47);
   $50 = HEAP32[$0 >> 2] | 0;
  }
 } else $50 = $1; while (0);
 HEAP32[$50 + -4 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -4;
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this | 0;
 var $8 = 0;
 if (!(HEAP8[2320] | 0)) if (___cxa_guard_acquire(2320) | 0) {
  if (!(HEAP8[2328] | 0)) if (___cxa_guard_acquire(2328) | 0) {
   $8 = 10444;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 10612);
   ___cxa_atexit(168, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2328);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10444, 10612) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10456, 10640) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10468, 10668) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10480, 10700) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10492, 10740) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10504, 10776) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10516, 10804) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10528, 10840) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10540, 10856) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10552, 10872) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10564, 10888) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10576, 10904) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10588, 10920) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(10600, 10936) | 0;
  HEAP32[2738] = 10444;
  ___cxa_guard_release(2320);
 }
 return HEAP32[2738] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this | 0;
 var $8 = 0;
 if (!(HEAP8[2304] | 0)) if (___cxa_guard_acquire(2304) | 0) {
  if (!(HEAP8[2312] | 0)) if (___cxa_guard_acquire(2312) | 0) {
   $8 = 10272;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 10440);
   ___cxa_atexit(167, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2312);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10272, 30522) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10284, 30529) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10296, 30536) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10308, 30544) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10320, 30554) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10332, 30563) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10344, 30570) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10356, 30579) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10368, 30583) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10380, 30587) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10392, 30591) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10404, 30595) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10416, 30599) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(10428, 30603) | 0;
  HEAP32[2610] = 10272;
  ___cxa_guard_release(2304);
 }
 return HEAP32[2610] | 0;
}

function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os, $__str, $__len) {
 $__os = $__os | 0;
 $__str = $__str | 0;
 $__len = $__len | 0;
 var $$byval_copy = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $20 = 0, $21 = 0, $23 = 0, $31 = 0, $5 = 0, $8 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $0 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s, $__os);
 if (!(HEAP8[$__s >> 0] | 0)) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $__os | 0;
 }
 $5 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$__os + ($5 + 24) >> 2];
 $8 = $__os + $5 | 0;
 $10 = HEAP32[$__os + ($5 + 4) >> 2] | 0;
 $11 = $__str + $__len | 0;
 $12 = $__os + ($5 + 76) | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if (($13 | 0) == -1) {
  HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($8) | 0;
  $16 = __ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy, 9452) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 31]($16, 32) | 0;
  __ZNSt3__16localeD2Ev($$byval_copy);
  $21 = $20 << 24 >> 24;
  HEAP32[$12 >> 2] = $21;
  $23 = $21;
 } else $23 = $13;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 if (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__str, ($10 & 176 | 0) == 32 ? $11 : $__str, $11, $8, $23 & 255) | 0) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $__os | 0;
 }
 $31 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 __ZNSt3__18ios_base5clearEj($__os + $31 | 0, HEAP32[$__os + ($31 + 16) >> 2] | 5);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;
 return $__os | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $10 = 0, $17 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $t$0 = 0, $t$0$lcssa = 0, $t$0$looptemp = 0;
 L1 : do if (($first | 0) == ($last | 0)) $$0 = $first; else switch (HEAP8[$first >> 0] | 0) {
 case 88:
  {
   $3 = $first + 1 | 0;
   $4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($3, $last, $db) | 0;
   if (($4 | 0) == ($3 | 0) | ($4 | 0) == ($last | 0)) {
    $$0 = $first;
    break L1;
   }
   $$0 = (HEAP8[$4 >> 0] | 0) == 69 ? $4 + 1 | 0 : $first;
   break L1;
   break;
  }
 case 74:
  {
   $10 = $first + 1 | 0;
   if (($10 | 0) == ($last | 0)) {
    $$0 = $first;
    break L1;
   } else $t$0 = $10;
   while (1) {
    if ((HEAP8[$t$0 >> 0] | 0) == 69) {
     $t$0$lcssa = $t$0;
     break;
    }
    $t$0$looptemp = $t$0;
    $t$0 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($t$0, $last, $db) | 0;
    if (($t$0 | 0) == ($t$0$looptemp | 0)) {
     $$0 = $first;
     break L1;
    }
   }
   $$0 = $t$0$lcssa + 1 | 0;
   break L1;
   break;
  }
 case 76:
  {
   $17 = $first + 1 | 0;
   if (($17 | 0) != ($last | 0)) if ((HEAP8[$17 >> 0] | 0) == 90) {
    $21 = $first + 2 | 0;
    $22 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($21, $last, $db) | 0;
    if (($22 | 0) == ($21 | 0) | ($22 | 0) == ($last | 0)) {
     $$0 = $first;
     break L1;
    }
    return ((HEAP8[$22 >> 0] | 0) == 69 ? $22 + 1 | 0 : $first) | 0;
   }
   $$0 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
   break L1;
   break;
  }
 default:
  {
   $$0 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
   break L1;
  }
 } while (0);
 return $$0 | 0;
}

function __ZN15google_breakpad16DwarfCFIToModule13SameValueRuleEyi($this, $0, $1, $reg) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 var $11 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $2 = sp + 160 | 0;
 $s = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $6 = $s + 4 | 0;
 HEAP32[$s >> 2] = 4068;
 HEAP32[$s + 56 >> 2] = 4088;
 __ZNSt3__18ios_base4initEPv($s + 56 | 0, $6);
 HEAP32[$s + 128 >> 2] = 0;
 HEAP32[$s + 132 >> 2] = -1;
 HEAP32[$s >> 2] = 4108;
 HEAP32[$s + 56 >> 2] = 4128;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($6);
 HEAP32[$6 >> 2] = 4144;
 $11 = $s + 36 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$s + 52 >> 2] = 16;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($6, $2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($3, $this, $reg);
 $13 = HEAP8[$3 >> 0] | 0;
 $15 = ($13 & 1) == 0;
 __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($s, $15 ? $3 + 1 | 0 : HEAP32[$3 + 8 >> 2] | 0, $15 ? ($13 & 255) >>> 1 : HEAP32[$3 + 4 >> 2] | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($4, $6);
 __ZN15google_breakpad16DwarfCFIToModule6RecordEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $0, $1, $reg, $4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($s);
 STACKTOP = sp;
 return 1;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter17UncoveredFunctionERKNS_6Module8FunctionE($this, $function) {
 $this = $this | 0;
 $function = $function | 0;
 var $10 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $43 = 0, $45 = 0, $6 = 0, $61 = 0, $62 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this + 38 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 $3 = $this + 37 | 0;
 if (!(HEAP8[$3 >> 0] | 0)) {
  $6 = $this + 36 | 0;
  $9 = HEAP32[_stderr >> 2] | 0;
  $10 = $this + 4 | 0;
  if (!(HEAP8[$6 >> 0] | 0)) {
   if (!(HEAP8[$10 >> 0] & 1)) $31 = $10 + 1 | 0; else $31 = HEAP32[$this + 12 >> 2] | 0;
   $17 = $this + 24 | 0;
   if (!(HEAP8[$17 >> 0] & 1)) $32 = $17 + 1 | 0; else $32 = HEAP32[$this + 32 >> 2] | 0;
   $25 = $this + 16 | 0;
   $27 = HEAP32[$25 >> 2] | 0;
   $30 = HEAP32[$25 + 4 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = $31;
   HEAP32[$vararg_buffer + 4 >> 2] = $32;
   $33 = $vararg_buffer + 8 | 0;
   HEAP32[$33 >> 2] = $27;
   HEAP32[$33 + 4 >> 2] = $30;
   _fprintf($9 | 0, 15058, $vararg_buffer | 0) | 0;
   HEAP8[$6 >> 0] = 1;
  }
  if (!(HEAP8[$10 >> 0] & 1)) $43 = $10 + 1 | 0; else $43 = HEAP32[$this + 12 >> 2] | 0;
  HEAP32[$vararg_buffer3 >> 2] = $43;
  _fprintf($9 | 0, 15580, $vararg_buffer3 | 0) | 0;
  HEAP8[$3 >> 0] = 1;
  $62 = $9;
 } else $62 = HEAP32[_stderr >> 2] | 0;
 $45 = $function + 24 | 0;
 $61 = (HEAP8[$function >> 0] & 1) == 0 ? $function + 1 | 0 : HEAP32[$function + 8 >> 2] | 0;
 HEAP32[$vararg_buffer6 >> 2] = (HEAP32[$45 >> 2] | 0) == 0 & (HEAP32[$45 + 4 >> 2] | 0) == 0 ? 15629 : 30292;
 HEAP32[$vararg_buffer6 + 4 >> 2] = $61;
 _fprintf($62 | 0, 15644, $vararg_buffer6 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule17NamedScopeHandler16FindChildHandlerEyN12dwarf2reader8DwarfTagE($this, $0, $1, $tag) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $tag = $tag | 0;
 var $$02 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $27 = 0, $32 = 0, $33 = 0, $9 = 0;
 switch ($tag | 0) {
 case 46:
  {
   $2 = __Znwj(104) | 0;
   HEAP32[$2 + 4 >> 2] = HEAP32[$this + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = $this + 56;
   $9 = $2 + 16 | 0;
   HEAP32[$9 >> 2] = $0;
   HEAP32[$9 + 4 >> 2] = $1;
   HEAP8[$2 + 24 >> 0] = 0;
   $14 = $2 + 28 | 0;
   HEAP32[$14 >> 2] = 0;
   HEAP32[$14 + 4 >> 2] = 0;
   HEAP32[$14 + 8 >> 2] = 0;
   HEAP32[$14 + 12 >> 2] = 0;
   HEAP32[$14 + 16 >> 2] = 0;
   HEAP32[$14 + 20 >> 2] = 0;
   HEAP32[$14 + 24 >> 2] = 0;
   HEAP32[$2 >> 2] = 4384;
   $15 = $2 + 56 | 0;
   HEAP32[$15 >> 2] = 0;
   HEAP32[$15 + 4 >> 2] = 0;
   HEAP32[$15 + 8 >> 2] = 0;
   $16 = $2 + 72 | 0;
   HEAP32[$16 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   HEAP32[$16 + 12 >> 2] = 0;
   HEAP32[$2 + 88 >> 2] = 1;
   HEAP32[$2 + 92 >> 2] = 0;
   HEAP8[$2 + 96 >> 0] = 0;
   $$02 = $2;
   return $$02 | 0;
  }
 case 23:
 case 19:
 case 2:
 case 57:
  {
   $20 = __Znwj(72) | 0;
   HEAP32[$20 + 4 >> 2] = HEAP32[$this + 4 >> 2];
   HEAP32[$20 + 8 >> 2] = $this + 56;
   $27 = $20 + 16 | 0;
   HEAP32[$27 >> 2] = $0;
   HEAP32[$27 + 4 >> 2] = $1;
   HEAP8[$20 + 24 >> 0] = 0;
   $32 = $20 + 28 | 0;
   HEAP32[$32 >> 2] = 0;
   HEAP32[$32 + 4 >> 2] = 0;
   HEAP32[$32 + 8 >> 2] = 0;
   HEAP32[$32 + 12 >> 2] = 0;
   HEAP32[$32 + 16 >> 2] = 0;
   HEAP32[$32 + 20 >> 2] = 0;
   HEAP32[$32 + 24 >> 2] = 0;
   HEAP32[$20 >> 2] = 4436;
   $33 = $20 + 56 | 0;
   HEAP32[$33 >> 2] = 0;
   HEAP32[$33 + 4 >> 2] = 0;
   HEAP32[$33 + 8 >> 2] = 0;
   $$02 = $20;
   return $$02 | 0;
  }
 default:
  {
   $$02 = 0;
   return $$02 | 0;
  }
 }
 return 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $$in = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $29 = 0, $3 = 0, $33 = 0, $36 = 0, $42 = 0, $43 = 0, $47 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0;
 $0 = $this + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $__s) | 0;
 $1 = $this + 44 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3 & 8) {
  $6 = HEAP8[$0 >> 0] | 0;
  if (!($6 & 1)) {
   $18 = (($6 & 255) >>> 1) + ($0 + 1) | 0;
   HEAP32[$1 >> 2] = $18;
   $$in = $18;
   $23 = $0 + 1 | 0;
   $25 = $0 + 1 | 0;
  } else {
   $13 = (HEAP32[$this + 40 >> 2] | 0) + (HEAP32[$this + 36 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = $13;
   $15 = HEAP32[$this + 40 >> 2] | 0;
   $$in = $13;
   $23 = $15;
   $25 = $15;
  }
  HEAP32[$this + 8 >> 2] = $23;
  HEAP32[$this + 12 >> 2] = $25;
  HEAP32[$this + 16 >> 2] = $$in;
 }
 if (!($3 & 16)) return;
 $29 = HEAP8[$0 >> 0] | 0;
 if (!($29 & 1)) {
  $33 = ($29 & 255) >>> 1;
  HEAP32[$1 >> 2] = $0 + 1 + $33;
  $42 = 10;
  $65 = $33;
 } else {
  $36 = HEAP32[$this + 36 >> 2] | 0;
  HEAP32[$1 >> 2] = (HEAP32[$this + 40 >> 2] | 0) + $36;
  $42 = (HEAP32[$0 >> 2] & -2) + -1 | 0;
  $65 = $36;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $42, 0);
 $43 = HEAP8[$0 >> 0] | 0;
 if (!($43 & 1)) {
  $55 = $0 + 1 | 0;
  $56 = ($43 & 255) >>> 1;
  $58 = $0 + 1 | 0;
 } else {
  $47 = HEAP32[$this + 40 >> 2] | 0;
  $55 = $47;
  $56 = HEAP32[$this + 36 >> 2] | 0;
  $58 = $47;
 }
 $57 = $this + 24 | 0;
 HEAP32[$57 >> 2] = $58;
 HEAP32[$this + 20 >> 2] = $58;
 HEAP32[$this + 28 >> 2] = $55 + $56;
 if (!(HEAP32[$2 >> 2] & 3)) return;
 HEAP32[$57 >> 2] = $58 + $65;
 return;
}

function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $$sroa$0$1 = 0, $0 = 0, $10 = 0, $2 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 if (!$0) {
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = $2 - $3 | 0;
 $5 = $__iob + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $__ns$0 = ($6 | 0) > ($4 | 0) ? $6 - $4 | 0 : 0;
 $9 = $__op;
 $10 = $9 - $3 | 0;
 if (($10 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, $__ob, $10) | 0) != ($10 | 0)) {
  HEAP32[$__s >> 2] = 0;
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 }
 do if (($__ns$0 | 0) > 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp, $__ns$0, $__fl);
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, (HEAP8[$__sp >> 0] & 1) == 0 ? $__sp + 1 | 0 : HEAP32[$__sp + 8 >> 2] | 0, $__ns$0) | 0) == ($__ns$0 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   break;
  }
  HEAP32[$__s >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 } while (0);
 $30 = $2 - $9 | 0;
 if (($30 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, $__op, $30) | 0) != ($30 | 0)) {
  HEAP32[$__s >> 2] = 0;
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 }
 HEAP32[$5 >> 2] = 0;
 $$sroa$0$1 = $0;
 STACKTOP = sp;
 return $$sroa$0$1 | 0;
}

function __ZNSt3__114__split_bufferIPyNS_9allocatorIS1_EEE10push_frontERKS1_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$in = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 do if (($1 | 0) == ($2 | 0)) {
  $5 = $this + 8 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = $this + 12 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  $10 = $8;
  if ($6 >>> 0 < $8 >>> 0) {
   $11 = $6;
   $15 = (($10 - $11 >> 2) + 1 | 0) / 2 | 0;
   $17 = $11 - $1 | 0;
   $19 = $6 + ($15 - ($17 >> 2) << 2) | 0;
   _memmove($19 | 0, $1 | 0, $17 | 0) | 0;
   HEAP32[$0 >> 2] = $19;
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($15 << 2);
   $50 = $19;
   break;
  }
  $24 = $10 - $1 >> 1;
  $26 = ($24 | 0) == 0 ? 1 : $24;
  $30 = __Znwj($26 << 2) | 0;
  $31 = $30;
  $32 = $30 + (($26 + 3 | 0) >>> 2 << 2) | 0;
  $33 = $32;
  $35 = $30 + ($26 << 2) | 0;
  if (($1 | 0) == ($6 | 0)) {
   $$pre$phiZ2D = $this;
   $45 = $33;
   $47 = $4;
  } else {
   $$in = $32;
   $38 = $1;
   $40 = $33;
   while (1) {
    HEAP32[$$in >> 2] = HEAP32[$38 >> 2];
    $$in = $40 + 4 | 0;
    $42 = $$in;
    $38 = $38 + 4 | 0;
    if (($38 | 0) == ($6 | 0)) {
     $$lcssa = $42;
     break;
    } else $40 = $42;
   }
   $$pre$phiZ2D = $this;
   $45 = $$lcssa;
   $47 = HEAP32[$this >> 2] | 0;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $31;
  HEAP32[$0 >> 2] = $33;
  HEAP32[$5 >> 2] = $45;
  HEAP32[$7 >> 2] = $35;
  if (!$47) $50 = $32; else {
   __ZdlPv($47);
   $50 = HEAP32[$0 >> 2] | 0;
  }
 } else $50 = $1; while (0);
 HEAP32[$50 + -4 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -4;
 return;
}

function __ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i = 0, $$0$i2 = 0, $$0$i34 = 0, $$0$i35 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $13 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $46 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $8 = 0, label = 0;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = $3;
 if (($1 - $5 | 0) >>> 0 >= $__n >>> 0) {
  $$0$i = $__n;
  $8 = $3;
  do {
   HEAP8[$8 >> 0] = 0;
   $8 = (HEAP32[$2 >> 2] | 0) + 1 | 0;
   HEAP32[$2 >> 2] = $8;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  return;
 }
 $13 = HEAP32[$this >> 2] | 0;
 $16 = $5 - $13 + $__n | 0;
 if (($16 | 0) < 0) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $19 = $13;
 $20 = $1 - $19 | 0;
 if ($20 >>> 0 < 1073741823) {
  $25 = $20 << 1;
  $27 = $25 >>> 0 < $16 >>> 0 ? $16 : $25;
  $30 = (HEAP32[$2 >> 2] | 0) - $19 | 0;
  if (!$27) {
   $$0$i35 = 0;
   $34 = 0;
   $35 = $30;
  } else {
   $$0$i34 = $27;
   $54 = $30;
   label = 8;
  }
 } else {
  $$0$i34 = 2147483647;
  $54 = (HEAP32[$2 >> 2] | 0) - $19 | 0;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i35 = $$0$i34;
  $34 = __Znwj($$0$i34) | 0;
  $35 = $54;
 }
 $33 = $34 + $35 | 0;
 $37 = $34 + $$0$i35 | 0;
 $$0$i2 = $__n;
 $38 = $33;
 $40 = $33;
 while (1) {
  HEAP8[$38 >> 0] = 0;
  $38 = $40 + 1 | 0;
  $42 = $38;
  $$0$i2 = $$0$i2 + -1 | 0;
  if (!$$0$i2) {
   $$lcssa = $42;
   break;
  } else $40 = $42;
 }
 $46 = HEAP32[$this >> 2] | 0;
 $50 = (HEAP32[$2 >> 2] | 0) - $46 | 0;
 $51 = $34 + ($35 - $50) | 0;
 _memcpy($51 | 0, $46 | 0, $50 | 0) | 0;
 HEAP32[$this >> 2] = $51;
 HEAP32[$2 >> 2] = $$lcssa;
 HEAP32[$0 >> 2] = $37;
 if (!$46) return;
 __ZdlPv($46);
 return;
}

function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $$sroa$0$1 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $32 = 0, $33 = 0, $5 = 0, $6 = 0, $7 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 L1 : do if (!$0) $$sroa$0$1 = 0; else {
  $2 = $__oe;
  $3 = $__ob;
  $5 = $2 - $3 >> 2;
  $6 = $__iob + 12 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $__ns$0 = ($7 | 0) > ($5 | 0) ? $7 - $5 | 0 : 0;
  $10 = $__op;
  $11 = $10 - $3 | 0;
  $12 = $11 >> 2;
  if (($11 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, $__ob, $12) | 0) != ($12 | 0)) {
   HEAP32[$__s >> 2] = 0;
   $$sroa$0$1 = 0;
   break;
  }
  do if (($__ns$0 | 0) > 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp, $__ns$0, $__fl);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, (HEAP8[$__sp >> 0] & 1) == 0 ? $__sp + 4 | 0 : HEAP32[$__sp + 8 >> 2] | 0, $__ns$0) | 0) == ($__ns$0 | 0)) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    break;
   } else {
    HEAP32[$__s >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    $$sroa$0$1 = 0;
    break L1;
   }
  } while (0);
  $32 = $2 - $10 | 0;
  $33 = $32 >> 2;
  if (($32 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 31]($0, $__op, $33) | 0) != ($33 | 0)) {
   HEAP32[$__s >> 2] = 0;
   $$sroa$0$1 = 0;
   break;
  }
  HEAP32[$6 >> 2] = 0;
  $$sroa$0$1 = $0;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$1 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[30281] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[30282] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[30283] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[30284] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[30285] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[30286] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30287, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar, $8, $7, $__o, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $11 = HEAP32[$__op >> 2] | 0;
 $12 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $13 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $11, $12, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $13 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[30281] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[30282] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[30283] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[30284] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[30285] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[30286] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30287, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar, $8, $7, $__o, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $11 = HEAP32[$__op >> 2] | 0;
 $12 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $13 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $11, $12, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $13 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[30281] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[30282] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[30283] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[30284] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[30285] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[30286] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30287, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar, $8, $7, $__o, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $11 = HEAP32[$__op >> 2] | 0;
 $12 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $13 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $11, $12, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $13 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[30281] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[30282] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[30283] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[30284] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[30285] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[30286] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30287, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar, $8, $7, $__o, $__op, $__oe, $0);
 __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 $11 = HEAP32[$__op >> 2] | 0;
 $12 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $13 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $11, $12, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $13 | 0;
}

function __ZN15google_breakpad13StabsToModuleD2Ev($this) {
 $this = $this | 0;
 var $$sink24 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $36 = 0, $38 = 0, $39 = 0, $40 = 0, $46 = 0, $49 = 0, $5 = 0, $55 = 0, $8 = 0;
 HEAP32[$this >> 2] = 4612;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) != ($3 | 0)) {
  $$sink24 = $1;
  $55 = $3;
  while (1) {
   $5 = HEAP32[$$sink24 >> 2] | 0;
   if (!$5) $20 = $55; else {
    $8 = HEAP32[$5 + 40 >> 2] | 0;
    $10 = $8;
    if ($8) {
     $11 = $5 + 44 | 0;
     $12 = HEAP32[$11 >> 2] | 0;
     if (($12 | 0) != ($8 | 0)) HEAP32[$11 >> 2] = $12 + (~((($12 + -24 - $10 | 0) >>> 0) / 24 | 0) * 24 | 0);
     __ZdlPv($8);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __ZdlPv($5);
    $20 = HEAP32[$2 >> 2] | 0;
   }
   $$sink24 = $$sink24 + 4 | 0;
   if (($$sink24 | 0) == ($20 | 0)) break; else $55 = $20;
  }
 }
 $22 = HEAP32[$this + 48 >> 2] | 0;
 if ($22) {
  $25 = HEAP32[$22 + 40 >> 2] | 0;
  $27 = $25;
  if ($25) {
   $28 = $22 + 44 | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   if (($29 | 0) != ($25 | 0)) HEAP32[$28 >> 2] = $29 + (~((($29 + -24 - $27 | 0) >>> 0) / 24 | 0) * 24 | 0);
   __ZdlPv($25);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($22);
 }
 $36 = HEAP32[$this + 20 >> 2] | 0;
 $38 = $36;
 if ($36) {
  $39 = $this + 24 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  if (($40 | 0) != ($36 | 0)) HEAP32[$39 >> 2] = $40 + (~(($40 + -8 - $38 | 0) >>> 3) << 3);
  __ZdlPv($36);
 }
 $46 = HEAP32[$0 >> 2] | 0;
 if (!$46) return;
 $49 = HEAP32[$2 >> 2] | 0;
 if (($49 | 0) != ($46 | 0)) HEAP32[$2 >> 2] = $49 + (~(($49 + -4 - $46 | 0) >>> 2) << 2);
 __ZdlPv($46);
 return;
}

function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp, $__len, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $11 = 0, $14 = 0, $15 = 0, $23 = 0, $6 = 0, $7 = 0, $8 = 0, $specify_precision$0$off0$ph = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6 | 0) == 260;
 if ($8) {
  $$2$ph = $$1;
  $specify_precision$0$off0$ph = 0;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$2$ph = $$1 + 2 | 0;
  $specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len >> 0] | 0;
 if (!($11 << 24 >> 24)) $$2$lcssa = $$2$ph; else {
  $$012 = $__len;
  $$23 = $$2$ph;
  $15 = $11;
  while (1) {
   $$012 = $$012 + 1 | 0;
   $14 = $$23 + 1 | 0;
   HEAP8[$$23 >> 0] = $15;
   $15 = HEAP8[$$012 >> 0] | 0;
   if (!($15 << 24 >> 24)) {
    $$2$lcssa = $14;
    break;
   } else $$23 = $14;
  }
 }
 L14 : do switch ($6 | 0) {
 case 4:
  {
   if (!($7 & 1)) {
    HEAP8[$$2$lcssa >> 0] = 102;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 70;
    break L14;
   }
   break;
  }
 case 256:
  {
   if (!($7 & 1)) {
    HEAP8[$$2$lcssa >> 0] = 101;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 69;
    break L14;
   }
   break;
  }
 default:
  {
   $23 = ($7 & 1 | 0) != 0;
   if ($8) if ($23) {
    HEAP8[$$2$lcssa >> 0] = 65;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 97;
    break L14;
   } else if ($23) {
    HEAP8[$$2$lcssa >> 0] = 71;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 103;
    break L14;
   }
  }
 } while (0);
 return $specify_precision$0$off0$ph | 0;
}

function __ZNSt3__111__stdoutbufIcE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $20 = 0, $27 = 0, $31 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 L1 : do if ($0) label = 11; else {
  HEAP8[$__1buf >> 0] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf | 0, 1, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 11;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $9 = $__1buf + 1 | 0;
  $10 = $this + 36 | 0;
  $11 = $this + 40 | 0;
  $12 = $__extbuf + 8 | 0;
  $13 = $__extbuf;
  $14 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $15 = HEAP32[$10 >> 2] | 0;
   $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 15]($15, HEAP32[$11 >> 2] | 0, $pbase$0, $9, $__e, $__extbuf, $12, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    $$0 = -1;
    break L1;
   }
   if (($20 | 0) == 3) {
    $pbase$0$lcssa12 = $pbase$0;
    break;
   }
   $27 = ($20 | 0) == 1;
   if ($20 >>> 0 >= 2) {
    $$0 = -1;
    break L1;
   }
   $31 = (HEAP32[$__extbe >> 2] | 0) - $13 | 0;
   if ((_fwrite($__extbuf | 0, 1, $31 | 0, HEAP32[$14 >> 2] | 0) | 0) != ($31 | 0)) {
    $$0 = -1;
    break L1;
   }
   if ($27) $pbase$0 = $27 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break L1;
   }
  }
  if ((_fwrite($pbase$0$lcssa12 | 0, 1, 1, HEAP32[$14 >> 2] | 0) | 0) == 1) label = 11; else $$0 = -1;
 } while (0);
 if ((label | 0) == 11) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIwE8overflowEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $26 = 0, $30 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 L1 : do if ($0) label = 11; else {
  HEAP32[$__1buf >> 2] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf | 0, 4, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 11;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $8 = $__1buf + 4 | 0;
  $9 = $this + 36 | 0;
  $10 = $this + 40 | 0;
  $11 = $__extbuf + 8 | 0;
  $12 = $__extbuf;
  $13 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $14 = HEAP32[$9 >> 2] | 0;
   $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] & 15]($14, HEAP32[$10 >> 2] | 0, $pbase$0, $8, $__e, $__extbuf, $11, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    $$0 = -1;
    break L1;
   }
   if (($19 | 0) == 3) {
    $pbase$0$lcssa12 = $pbase$0;
    break;
   }
   $26 = ($19 | 0) == 1;
   if ($19 >>> 0 >= 2) {
    $$0 = -1;
    break L1;
   }
   $30 = (HEAP32[$__extbe >> 2] | 0) - $12 | 0;
   if ((_fwrite($__extbuf | 0, 1, $30 | 0, HEAP32[$13 >> 2] | 0) | 0) != ($30 | 0)) {
    $$0 = -1;
    break L1;
   }
   if ($26) $pbase$0 = $26 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break L1;
   }
  }
  if ((_fwrite($pbase$0$lcssa12 | 0, 1, 1, HEAP32[$13 >> 2] | 0) | 0) == 1) label = 11; else $$0 = -1;
 } while (0);
 if ((label | 0) == 11) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK12dwarf2reader10ByteReader14ReadEightBytesEPKc($this, $signed_buffer) {
 $this = $this | 0;
 $signed_buffer = $signed_buffer | 0;
 var $1 = 0, $10 = 0, $13 = 0, $16 = 0, $19 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $7 = 0, $74 = 0, $75 = 0;
 $1 = HEAPU8[$signed_buffer >> 0] | 0;
 $4 = HEAPU8[$signed_buffer + 1 >> 0] | 0;
 $7 = HEAPU8[$signed_buffer + 2 >> 0] | 0;
 $10 = HEAPU8[$signed_buffer + 3 >> 0] | 0;
 $13 = HEAPU8[$signed_buffer + 4 >> 0] | 0;
 $16 = HEAPU8[$signed_buffer + 5 >> 0] | 0;
 $19 = HEAPU8[$signed_buffer + 6 >> 0] | 0;
 $22 = HEAPU8[$signed_buffer + 7 >> 0] | 0;
 if ((HEAP32[$this + 20 >> 2] | 0) == 1) {
  $26 = _bitshift64Shl($4 | 0, 0, 8) | 0;
  $27 = tempRet0;
  $29 = _bitshift64Shl($7 | 0, 0, 16) | 0;
  $32 = $27 | tempRet0;
  $33 = _bitshift64Shl($10 | 0, 0, 24) | 0;
  $37 = $32 | tempRet0 | $13;
  $38 = _bitshift64Shl($16 | 0, 0, 40) | 0;
  $41 = $37 | tempRet0;
  $42 = _bitshift64Shl($19 | 0, 0, 48) | 0;
  $45 = $41 | tempRet0;
  $46 = _bitshift64Shl($22 | 0, 0, 56) | 0;
  $74 = $45 | tempRet0;
  $75 = $26 | $1 | $29 | $33 | $38 | $42 | $46;
  tempRet0 = $74;
  return $75 | 0;
 } else {
  $50 = _bitshift64Shl($19 | 0, 0, 8) | 0;
  $51 = tempRet0;
  $52 = _bitshift64Shl($16 | 0, 0, 16) | 0;
  $53 = tempRet0;
  $54 = _bitshift64Shl($13 | 0, 0, 24) | 0;
  $55 = tempRet0;
  $56 = _bitshift64Shl($7 | 0, 0, 40) | 0;
  $57 = tempRet0;
  $58 = _bitshift64Shl($4 | 0, 0, 48) | 0;
  $59 = tempRet0;
  $60 = _bitshift64Shl($1 | 0, 0, 56) | 0;
  $74 = $59 | tempRet0 | $57 | $10 | $55 | $53 | $51;
  $75 = $58 | $60 | $56 | $54 | $52 | $50 | $22;
  tempRet0 = $74;
  return $75 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE15__insert_uniqueENS_21__tree_const_iteratorISG_PNS_11__tree_nodeISG_PvEEiEERKSG_($this, $__p, $__v) {
 $this = $this | 0;
 $__p = $__p | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $11 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $5 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__p >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE12__find_equalISG_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISG_PNS_11__tree_nodeISG_SO_EEiEESR_RKT_($this, $$byval_copy, $__parent, $__v) | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3) {
  $__r$0 = $3;
  STACKTOP = sp;
  return $__r$0 | 0;
 }
 $5 = __Znwj(40) | 0;
 __ZNSt3__14pairIKyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS0_IKS8_S8_EEEEEEEC2ERKSF_($5 + 16 | 0, $__v);
 $7 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = $7;
 HEAP32[$2 >> 2] = $5;
 $11 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$11) $16 = $5; else {
  HEAP32[$this >> 2] = $11;
  $16 = HEAP32[$2 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $16);
 $17 = $this + 8 | 0;
 HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 1;
 $__r$0 = $5;
 STACKTOP = sp;
 return $__r$0 | 0;
}

function __ZNSt3__17__sort4IRNS_6__lessIyyEEPyEEjT0_S5_S5_S5_T_($__x1, $__x2, $__x3, $__x4, $__c) {
 $__x1 = $__x1 | 0;
 $__x2 = $__x2 | 0;
 $__x3 = $__x3 | 0;
 $__x4 = $__x4 | 0;
 $__c = $__c | 0;
 var $0 = 0, $1 = 0, $12 = 0, $18 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $44 = 0, $48 = 0, $53 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $70 = 0, $74 = 0, $9 = 0, $__r$0 = 0;
 $0 = __ZNSt3__17__sort3IRNS_6__lessIyyEEPyEEjT0_S5_S5_T_($__x1, $__x2, $__x3, $__c) | 0;
 $1 = $__x4;
 $3 = HEAP32[$1 >> 2] | 0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $__x3;
 $9 = HEAP32[$7 >> 2] | 0;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 if ($6 >>> 0 < $12 >>> 0 | ($6 | 0) == ($12 | 0) & $3 >>> 0 < $9 >>> 0) {
  $18 = $__x3;
  HEAP32[$18 >> 2] = $3;
  HEAP32[$18 + 4 >> 2] = $6;
  $22 = $__x4;
  HEAP32[$22 >> 2] = $9;
  HEAP32[$22 + 4 >> 2] = $12;
  $26 = $0 + 1 | 0;
  $27 = $__x3;
  $29 = HEAP32[$27 >> 2] | 0;
  $32 = HEAP32[$27 + 4 >> 2] | 0;
  $33 = $__x2;
  $35 = HEAP32[$33 >> 2] | 0;
  $38 = HEAP32[$33 + 4 >> 2] | 0;
  if ($32 >>> 0 < $38 >>> 0 | ($32 | 0) == ($38 | 0) & $29 >>> 0 < $35 >>> 0) {
   $44 = $__x2;
   HEAP32[$44 >> 2] = $29;
   HEAP32[$44 + 4 >> 2] = $32;
   $48 = $__x3;
   HEAP32[$48 >> 2] = $35;
   HEAP32[$48 + 4 >> 2] = $38;
   $53 = $__x2;
   $55 = HEAP32[$53 >> 2] | 0;
   $58 = HEAP32[$53 + 4 >> 2] | 0;
   $59 = $__x1;
   $61 = HEAP32[$59 >> 2] | 0;
   $64 = HEAP32[$59 + 4 >> 2] | 0;
   if ($58 >>> 0 < $64 >>> 0 | ($58 | 0) == ($64 | 0) & $55 >>> 0 < $61 >>> 0) {
    $70 = $__x1;
    HEAP32[$70 >> 2] = $55;
    HEAP32[$70 + 4 >> 2] = $58;
    $74 = $__x2;
    HEAP32[$74 >> 2] = $61;
    HEAP32[$74 + 4 >> 2] = $64;
    $__r$0 = $0 + 3 | 0;
   } else $__r$0 = $0 + 2 | 0;
  } else $__r$0 = $26;
 } else $__r$0 = $0;
 return $__r$0 | 0;
}

function __ZNSt3__16vectorIN15google_breakpad6Module4LineENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = (((HEAP32[$0 >> 2] | 0) - $4 | 0) / 24 | 0) + 1 | 0;
 if ($7 >>> 0 > 178956970) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = $this + 8 | 0;
 $12 = $2;
 $14 = ((HEAP32[$9 >> 2] | 0) - $12 | 0) / 24 | 0;
 if ($14 >>> 0 < 89478485) {
  $20 = $14 << 1;
  $22 = $20 >>> 0 < $7 >>> 0 ? $7 : $20;
  $25 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $26 = ($25 | 0) / 24 | 0;
  if (!$22) {
   $$0$i3 = 0;
   $31 = 0;
   $32 = $26;
   $38 = $25;
  } else {
   $$0$i2 = $22;
   $43 = $26;
   $44 = $25;
   label = 6;
  }
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $$0$i2 = 178956970;
  $43 = ($18 | 0) / 24 | 0;
  $44 = $18;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $31 = __Znwj($$0$i2 * 24 | 0) | 0;
  $32 = $43;
  $38 = $44;
 }
 $30 = $31 + ($32 * 24 | 0) | 0;
 HEAP32[$30 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$30 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
 HEAP32[$30 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
 HEAP32[$30 + 12 >> 2] = HEAP32[$__x + 12 >> 2];
 HEAP32[$30 + 16 >> 2] = HEAP32[$__x + 16 >> 2];
 HEAP32[$30 + 20 >> 2] = HEAP32[$__x + 20 >> 2];
 $39 = $31 + (((($38 | 0) / -24 | 0) + $32 | 0) * 24 | 0) | 0;
 _memcpy($39 | 0, $2 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $39;
 HEAP32[$0 >> 2] = $31 + (($32 + 1 | 0) * 24 | 0);
 HEAP32[$9 >> 2] = $31 + ($$0$i3 * 24 | 0);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKS8_($this, $__p, $__v) {
 $this = $this | 0;
 $__p = $__p | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $5 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__p >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $$byval_copy, $__parent, $__v) | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3) {
  $__r$0 = $3;
  STACKTOP = sp;
  return $__r$0 | 0;
 }
 $5 = __Znwj(40) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5 + 16 | 0, $__v);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5 + 28 | 0, $__v + 12 | 0);
 $9 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = $9;
 HEAP32[$2 >> 2] = $5;
 $13 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$13) $18 = $5; else {
  HEAP32[$this >> 2] = $13;
  $18 = HEAP32[$2 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
 $__r$0 = $5;
 STACKTOP = sp;
 return $__r$0 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 180 | 0;
 $__nar = sp + 160 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[30295] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[30296] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[30297] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[30298] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[30299] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[30300] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 $6 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $6;
 $7 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9444) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($6) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 31]($7, $__nar, $4, $__o) | 0;
 $11 = $__o + ($3 << 2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $18 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, ($5 | 0) == ($4 | 0) ? $11 : $__o + ($5 - $__nar << 2) | 0, $11, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $18 | 0;
}

function __ZN15google_breakpad9MD5UpdateEPNS_10MD5ContextEPKhj($ctx, $buf, $len) {
 $ctx = $ctx | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $$0$lcssa = 0, $$0$ph = 0, $$01$lcssa = 0, $$01$ph = 0, $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, dest = 0, src = 0, stop = 0;
 $0 = $ctx + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = $1 + ($len << 3) | 0;
 HEAP32[$0 >> 2] = $3;
 $5 = $ctx + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ($3 >>> 0 < $1 >>> 0) {
  $7 = $6 + 1 | 0;
  HEAP32[$5 >> 2] = $7;
  $10 = $7;
 } else $10 = $6;
 HEAP32[$5 >> 2] = $10 + ($len >>> 29);
 $12 = $1 >>> 3 & 63;
 do if (!$12) {
  $$0$ph = $buf;
  $$01$ph = $len;
 } else {
  $14 = $ctx + 24 + $12 | 0;
  $15 = 64 - $12 | 0;
  if ($15 >>> 0 <= $len >>> 0) {
   _memcpy($14 | 0, $buf | 0, $15 | 0) | 0;
   __ZN15google_breakpadL12MD5TransformEPjPKj($ctx, $ctx + 24 | 0);
   $$0$ph = $buf + $15 | 0;
   $$01$ph = $len - $15 | 0;
   break;
  }
  _memcpy($14 | 0, $buf | 0, $len | 0) | 0;
  return;
 } while (0);
 $21 = $ctx + 24 | 0;
 if ($$01$ph >>> 0 > 63) {
  $22 = $$01$ph + -64 | 0;
  $23 = $22 & -64;
  $24 = $23 + 64 | 0;
  $$012 = $$01$ph;
  $$03 = $$0$ph;
  while (1) {
   dest = $21;
   src = $$03;
   stop = dest + 64 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   __ZN15google_breakpadL12MD5TransformEPjPKj($ctx, $21);
   $$012 = $$012 + -64 | 0;
   if ($$012 >>> 0 <= 63) break; else $$03 = $$03 + 64 | 0;
  }
  $$0$lcssa = $$0$ph + $24 | 0;
  $$01$lcssa = $22 - $23 | 0;
 } else {
  $$0$lcssa = $$0$ph;
  $$01$lcssa = $$01$ph;
 }
 _memcpy($21 | 0, $$0$lcssa | 0, $$01$lcssa | 0) | 0;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $38 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $2 = sp + 4 | 0;
 $__s = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s, $this);
 if (HEAP8[$__s >> 0] | 0) {
  HEAP32[$3 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $11 = __ZNKSt3__16locale9use_facetERNS0_2idE($3, 8624) | 0;
  __ZNSt3__16localeD2Ev($3);
  $14 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
  $16 = HEAP32[$this + ($14 + 24) >> 2] | 0;
  $17 = $this + $14 | 0;
  $18 = $this + ($14 + 76) | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  if (($19 | 0) == -1) {
   HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($17) | 0;
   $22 = __ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy, 9452) | 0;
   $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 31]($22, 32) | 0;
   __ZNSt3__16localeD2Ev($$byval_copy);
   $27 = $26 << 24 >> 24;
   HEAP32[$18 >> 2] = $27;
   $29 = $27;
  } else $29 = $19;
  $32 = HEAP32[(HEAP32[$11 >> 2] | 0) + 28 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiiii[$32 & 63]($11, $$byval_copy, $17, $29 & 255, $0, $1) | 0)) {
   $38 = $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
   HEAP32[$38 >> 2] = HEAP32[$38 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 70 | 0;
 $__nar = sp + 12 | 0;
 $__o = sp + 32 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[30295] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[30296] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[30297] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[30298] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[30299] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[30300] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 $6 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $6;
 $7 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($6) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 32 >> 2] & 31]($7, $__nar, $4, $__o) | 0;
 $11 = $__o + $3 | 0;
 HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 $18 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, ($5 | 0) == ($4 | 0) ? $11 : $__o + ($5 - $__nar) | 0, $11, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $18 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 204 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30289, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar, $18, $17, $__o, $__op, $__oe, $2);
 __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
 HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
 $21 = HEAP32[$__op >> 2] | 0;
 $22 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 $23 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $21, $22, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 196 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30289, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar, $18, $17, $__o, $__op, $__oe, $2);
 __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
 HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
 $21 = HEAP32[$__op >> 2] | 0;
 $22 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 $23 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $21, $22, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 75 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30289, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar, $18, $17, $__o, $__op, $__oe, $2);
 __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
 HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
 $21 = HEAP32[$__op >> 2] | 0;
 $22 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 $23 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $21, $22, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $10 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $3 = $info + 52 | 0;
  $4 = HEAP8[$3 >> 0] | 0;
  $5 = $info + 53 | 0;
  $6 = HEAP8[$5 >> 0] | 0;
  $9 = HEAP32[$this + 12 >> 2] | 0;
  $10 = $this + 16 + ($9 << 3) | 0;
  HEAP8[$3 >> 0] = 0;
  HEAP8[$5 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this + 16 | 0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  L4 : do if (($9 | 0) > 1) {
   $13 = $info + 24 | 0;
   $14 = $this + 8 | 0;
   $15 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    if (HEAP8[$15 >> 0] | 0) break L4;
    if (!(HEAP8[$3 >> 0] | 0)) {
     if (HEAP8[$5 >> 0] | 0) if (!(HEAP32[$14 >> 2] & 1)) break L4;
    } else {
     if ((HEAP32[$13 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[$14 >> 2] & 2)) break L4;
    }
    HEAP8[$3 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $10 >>> 0);
  } while (0);
  HEAP8[$3 >> 0] = $4;
  HEAP8[$5 >> 0] = $6;
 }
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 74 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 30289, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar, $18, $17, $__o, $__op, $__oe, $2);
 __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
 HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
 $21 = HEAP32[$__op >> 2] | 0;
 $22 = HEAP32[$__oe >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 $23 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $21, $22, $__iob, $__fl) | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter15UnnamedFunctionEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = $this + 36 | 0;
 $5 = HEAP32[_stderr >> 2] | 0;
 $6 = $this + 4 | 0;
 if (!(HEAP8[$2 >> 0] | 0)) {
  if (!(HEAP8[$6 >> 0] & 1)) $27 = $6 + 1 | 0; else $27 = HEAP32[$this + 12 >> 2] | 0;
  $13 = $this + 24 | 0;
  if (!(HEAP8[$13 >> 0] & 1)) $28 = $13 + 1 | 0; else $28 = HEAP32[$this + 32 >> 2] | 0;
  $21 = $this + 16 | 0;
  $23 = HEAP32[$21 >> 2] | 0;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $27;
  HEAP32[$vararg_buffer + 4 >> 2] = $28;
  $29 = $vararg_buffer + 8 | 0;
  HEAP32[$29 >> 2] = $23;
  HEAP32[$29 + 4 >> 2] = $26;
  _fprintf($5 | 0, 15058, $vararg_buffer | 0) | 0;
  HEAP8[$2 >> 0] = 1;
 }
 if (!(HEAP8[$6 >> 0] & 1)) {
  $39 = $6 + 1 | 0;
  HEAP32[$vararg_buffer3 >> 2] = $39;
  $vararg_ptr6 = $vararg_buffer3 + 8 | 0;
  $40 = $vararg_ptr6;
  $41 = $40;
  HEAP32[$41 >> 2] = $0;
  $42 = $40 + 4 | 0;
  $43 = $42;
  HEAP32[$43 >> 2] = $1;
  _fprintf($5 | 0, 15693, $vararg_buffer3 | 0) | 0;
  STACKTOP = sp;
  return;
 } else {
  $39 = HEAP32[$this + 12 >> 2] | 0;
  HEAP32[$vararg_buffer3 >> 2] = $39;
  $vararg_ptr6 = $vararg_buffer3 + 8 | 0;
  $40 = $vararg_ptr6;
  $41 = $40;
  HEAP32[$41 >> 2] = $0;
  $42 = $40 + 4 | 0;
  $43 = $42;
  HEAP32[$43 >> 2] = $1;
  _fprintf($5 | 0, 15693, $vararg_buffer3 | 0) | 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $28 = 0, $4 = 0, $41 = 0, $8 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 10;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $15 = ($8 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $15 >>> 0 > $__res_arg >>> 0 ? $15 : $__res_arg;
 if ($16 >>> 0 < 11) $21 = 10; else $21 = ($16 + 16 & -16) + -1 | 0;
 do if (($21 | 0) != ($22 | 0)) {
  do if (($21 | 0) == 10) {
   $__new_data$0 = $this + 1 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $28 = __Znwj($21 + 1 | 0) | 0;
   if (!($8 & 1)) {
    $__new_data$0 = $28;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 1 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$0 = $28;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $41 = ($8 & 255) >>> 1; else $41 = HEAP32[$this + 4 >> 2] | 0;
  _memcpy($__new_data$0 | 0, $__p$0 | 0, $41 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $21 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $15;
   HEAP32[$this + 8 >> 2] = $__new_data$0;
   break;
  } else {
   HEAP8[$this >> 0] = $15 << 1;
   break;
  }
 } while (0);
 return;
}
function __ZNSt3__118__insertion_sort_3IRNS_6__lessIyyEEPyEEvT0_S5_T_($__first, $__last, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__comp = $__comp | 0;
 var $0 = 0, $10 = 0, $12 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $28 = 0, $29 = 0, $4 = 0, $40 = 0, $44 = 0, $6 = 0, $9 = 0, $__i$02 = 0, $__j$01 = 0, $__j$01$phi = 0, $__j$1 = 0, $__j$1$phi = 0, $__k$0 = 0, $__k$0$lcssa = 0;
 $0 = $__first + 16 | 0;
 __ZNSt3__17__sort3IRNS_6__lessIyyEEPyEEjT0_S5_S5_T_($__first, $__first + 8 | 0, $0, $__comp) | 0;
 $2 = $__first + 24 | 0;
 if (($2 | 0) != ($__last | 0)) {
  $__i$02 = $2;
  $__j$01 = $0;
  while (1) {
   $4 = $__i$02;
   $6 = HEAP32[$4 >> 2] | 0;
   $9 = HEAP32[$4 + 4 >> 2] | 0;
   $10 = $__j$01;
   $12 = HEAP32[$10 >> 2] | 0;
   $15 = HEAP32[$10 + 4 >> 2] | 0;
   if ($9 >>> 0 < $15 >>> 0 | ($9 | 0) == ($15 | 0) & $6 >>> 0 < $12 >>> 0) {
    $23 = $12;
    $26 = $15;
    $__j$1 = $__i$02;
    $__k$0 = $__j$01;
    while (1) {
     $21 = $__j$1;
     HEAP32[$21 >> 2] = $23;
     HEAP32[$21 + 4 >> 2] = $26;
     if (($__k$0 | 0) == ($__first | 0)) {
      $__k$0$lcssa = $__first;
      break;
     }
     $28 = $__k$0 + -8 | 0;
     $29 = $28;
     $23 = HEAP32[$29 >> 2] | 0;
     $26 = HEAP32[$29 + 4 >> 2] | 0;
     if (!($9 >>> 0 < $26 >>> 0 | ($9 | 0) == ($26 | 0) & $6 >>> 0 < $23 >>> 0)) {
      $__k$0$lcssa = $__k$0;
      break;
     } else {
      $__j$1$phi = $__k$0;
      $__k$0 = $28;
      $__j$1 = $__j$1$phi;
     }
    }
    $40 = $__k$0$lcssa;
    HEAP32[$40 >> 2] = $6;
    HEAP32[$40 + 4 >> 2] = $9;
   }
   $44 = $__i$02 + 8 | 0;
   if (($44 | 0) == ($__last | 0)) break; else {
    $__j$01$phi = $__i$02;
    $__i$02 = $44;
    $__j$01 = $__j$01$phi;
   }
  }
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $30 = 0, $36 = 0, $9 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 4 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s, $this);
 if (HEAP8[$__s >> 0] | 0) {
  HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $9 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 8624) | 0;
  __ZNSt3__16localeD2Ev($1);
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
  $14 = HEAP32[$this + ($12 + 24) >> 2] | 0;
  $15 = $this + $12 | 0;
  $16 = $this + ($12 + 76) | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == -1) {
   HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($15) | 0;
   $20 = __ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy, 9452) | 0;
   $24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 31]($20, 32) | 0;
   __ZNSt3__16localeD2Ev($$byval_copy);
   $25 = $24 << 24 >> 24;
   HEAP32[$16 >> 2] = $25;
   $27 = $25;
  } else $27 = $17;
  $30 = HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$0 >> 2] = $14;
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$30 & 63]($9, $$byval_copy, $15, $27 & 255, $__n) | 0)) {
   $36 = $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
   HEAP32[$36 >> 2] = HEAP32[$36 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $30 = 0, $36 = 0, $9 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 4 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s, $this);
 if (HEAP8[$__s >> 0] | 0) {
  HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  $9 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 8624) | 0;
  __ZNSt3__16localeD2Ev($1);
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
  $14 = HEAP32[$this + ($12 + 24) >> 2] | 0;
  $15 = $this + $12 | 0;
  $16 = $this + ($12 + 76) | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == -1) {
   HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($15) | 0;
   $20 = __ZNKSt3__16locale9use_facetERNS0_2idE($$byval_copy, 9452) | 0;
   $24 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 31]($20, 32) | 0;
   __ZNSt3__16localeD2Ev($$byval_copy);
   $25 = $24 << 24 >> 24;
   HEAP32[$16 >> 2] = $25;
   $27 = $25;
  } else $27 = $17;
  $30 = HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$0 >> 2] = $14;
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$30 & 63]($9, $$byval_copy, $15, $27 & 255, $__n) | 0)) {
   $36 = $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
   HEAP32[$36 >> 2] = HEAP32[$36 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $42 = 0, $8 = 0, $__new_data$0 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 1;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $15 = ($8 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $15 >>> 0 > $__res_arg >>> 0 ? $15 : $__res_arg;
 if ($16 >>> 0 < 2) $21 = 1; else $21 = ($16 + 4 & -4) + -1 | 0;
 do if (($21 | 0) != ($22 | 0)) {
  do if (($21 | 0) == 1) {
   $__new_data$0 = $this + 4 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $29 = __Znwj(($21 << 2) + 4 | 0) | 0;
   if (!($8 & 1)) {
    $__new_data$0 = $29;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 4 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$0 = $29;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $42 = ($8 & 255) >>> 1; else $42 = HEAP32[$this + 4 >> 2] | 0;
  _wmemcpy($__new_data$0, $__p$0, $42 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $21 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $15;
   HEAP32[$this + 8 >> 2] = $__new_data$0;
   break;
  } else {
   HEAP8[$this >> 0] = $15 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__16vectorI8fat_archNS_9allocatorIS1_EEE21__push_back_slow_pathIKS1_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = (((HEAP32[$0 >> 2] | 0) - $4 | 0) / 20 | 0) + 1 | 0;
 if ($7 >>> 0 > 214748364) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = $this + 8 | 0;
 $12 = $2;
 $14 = ((HEAP32[$9 >> 2] | 0) - $12 | 0) / 20 | 0;
 if ($14 >>> 0 < 107374182) {
  $20 = $14 << 1;
  $22 = $20 >>> 0 < $7 >>> 0 ? $7 : $20;
  $25 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $26 = ($25 | 0) / 20 | 0;
  if (!$22) {
   $$0$i3 = 0;
   $31 = 0;
   $32 = $26;
   $38 = $25;
  } else {
   $$0$i2 = $22;
   $43 = $26;
   $44 = $25;
   label = 6;
  }
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $$0$i2 = 214748364;
  $43 = ($18 | 0) / 20 | 0;
  $44 = $18;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $31 = __Znwj($$0$i2 * 20 | 0) | 0;
  $32 = $43;
  $38 = $44;
 }
 $30 = $31 + ($32 * 20 | 0) | 0;
 HEAP32[$30 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$30 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
 HEAP32[$30 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
 HEAP32[$30 + 12 >> 2] = HEAP32[$__x + 12 >> 2];
 HEAP32[$30 + 16 >> 2] = HEAP32[$__x + 16 >> 2];
 $39 = $31 + (((($38 | 0) / -20 | 0) + $32 | 0) * 20 | 0) | 0;
 _memcpy($39 | 0, $2 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $39;
 HEAP32[$0 >> 2] = $31 + (($32 + 1 | 0) * 20 | 0);
 HEAP32[$9 >> 2] = $31 + ($$0$i3 * 20 | 0);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZN15google_breakpad13StabsToModule4LineEyPKci($this, $0, $1, $name, $number) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $name = $name | 0;
 $number = $number | 0;
 var $$in = 0, $13 = 0, $15 = 0, $2 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $5 = 0, $6 = 0, $8 = 0, $line = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $line = sp;
 $2 = $this + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) ___assert_fail(17282, 17158, 122, 17312);
 $5 = $this + 52 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) ___assert_fail(17317, 17158, 123, 17312);
 $8 = $this + 56 | 0;
 if ((HEAP32[$8 >> 2] | 0) == ($name | 0)) {
  $$in = $6;
  $27 = $3;
 } else {
  $13 = __ZN15google_breakpad6Module8FindFileEPKc(HEAP32[$this + 4 >> 2] | 0, $name) | 0;
  HEAP32[$5 >> 2] = $13;
  HEAP32[$8 >> 2] = $name;
  $$in = $13;
  $27 = HEAP32[$2 >> 2] | 0;
 }
 $15 = $line;
 HEAP32[$15 >> 2] = $0;
 HEAP32[$15 + 4 >> 2] = $1;
 $20 = $line + 8 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$line + 16 >> 2] = $$in;
 HEAP32[$line + 20 >> 2] = $number;
 $26 = $27 + 44 | 0;
 $28 = HEAP32[$26 >> 2] | 0;
 if (($28 | 0) == (HEAP32[$27 + 48 >> 2] | 0)) {
  __ZNSt3__16vectorIN15google_breakpad6Module4LineENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($27 + 40 | 0, $line);
  STACKTOP = sp;
  return 1;
 } else {
  HEAP32[$28 >> 2] = HEAP32[$line >> 2];
  HEAP32[$28 + 4 >> 2] = HEAP32[$line + 4 >> 2];
  HEAP32[$28 + 8 >> 2] = HEAP32[$line + 8 >> 2];
  HEAP32[$28 + 12 >> 2] = HEAP32[$line + 12 >> 2];
  HEAP32[$28 + 16 >> 2] = HEAP32[$line + 16 >> 2];
  HEAP32[$28 + 20 >> 2] = HEAP32[$line + 20 >> 2];
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 24;
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i12 = 0, $$0$i614 = 0, $13 = 0, $14 = 0, $2 = 0, $30 = 0, $33 = 0, $34 = 0, $4 = 0, $8 = 0, $__ndflt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__ndflt = sp;
 HEAP32[$__ndflt >> 2] = 0;
 HEAP32[$__ndflt + 4 >> 2] = 0;
 HEAP32[$__ndflt + 8 >> 2] = 0;
 $2 = HEAP8[$__dflt >> 0] | 0;
 $4 = ($2 & 1) == 0;
 $8 = $4 ? $__dflt + 1 | 0 : HEAP32[$__dflt + 8 >> 2] | 0;
 $13 = $4 ? ($2 & 255) >>> 1 : HEAP32[$__dflt + 4 >> 2] | 0;
 $14 = $8 + $13 | 0;
 if (($13 | 0) > 0) {
  $$0$i614 = $8;
  do {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt, HEAP8[$$0$i614 >> 0] | 0);
   $$0$i614 = $$0$i614 + 1 | 0;
  } while ($$0$i614 >>> 0 < $14 >>> 0);
 }
 $30 = _catgets((($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, ((HEAP8[$__ndflt >> 0] & 1) == 0 ? $__ndflt + 1 | 0 : HEAP32[$__ndflt + 8 >> 2] | 0) | 0) | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $33 = _strlen($30 | 0) | 0;
 $34 = $30 + $33 | 0;
 if (($33 | 0) > 0) {
  $$0$i12 = $30;
  do {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg$result, HEAP8[$$0$i12 >> 0] | 0);
   $$0$i12 = $$0$i12 + 1 | 0;
  } while ($$0$i12 >>> 0 < $34 >>> 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) {
 $first = $first | 0;
 $last = $last | 0;
 $db = $db | 0;
 var $$0 = 0, $1 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $3 = 0, $5 = 0, $6 = 0, $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 if (($first | 0) == ($last | 0)) $$0 = $first; else {
  $1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first, $last, $db) | 0;
  if (($1 | 0) == ($first | 0)) $$0 = $first; else {
   $3 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($1, $last, $db) | 0;
   if (($3 | 0) == ($1 | 0)) $$0 = $1; else {
    $5 = $db + 4 | 0;
    $6 = HEAP32[$5 >> 2] | 0;
    if ((($6 - (HEAP32[$db >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$0 = $first; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args, $6 + -24 | 0);
     $14 = HEAP32[$5 >> 2] | 0;
     $15 = $14 + -24 | 0;
     $17 = $14;
     do {
      $16 = $17 + -24 | 0;
      HEAP32[$5 >> 2] = $16;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
      $17 = HEAP32[$5 >> 2] | 0;
     } while (($17 | 0) != ($15 | 0));
     $20 = HEAP8[$args >> 0] | 0;
     $22 = ($20 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($14 + -48 | 0, $22 ? $args + 1 | 0 : HEAP32[$args + 8 >> 2] | 0, $22 ? ($20 & 255) >>> 1 : HEAP32[$args + 4 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($args);
     $$0 = $3;
    }
   }
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo7RuleMapD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $0 = 0, $10 = 0, $11 = 0, $17 = 0, $19 = 0, $22 = 0, $5 = 0, $6 = 0, $7 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0);
 HEAP32[$this >> 2] = 0;
 $5 = $this + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $this + 8 | 0;
 if (($6 | 0) != ($7 | 0)) {
  $10 = $6;
  while (1) {
   $11 = HEAP32[$10 + 20 >> 2] | 0;
   if ($11) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$11 >> 2] | 0) + 4 >> 2] & 255]($11);
   $17 = HEAP32[$10 + 4 >> 2] | 0;
   if (!$17) {
    $$01$i$i$i$i$i = $10;
    while (1) {
     $22 = HEAP32[$$01$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$22 >> 2] | 0) == ($$01$i$i$i$i$i | 0)) {
      $$0$i$i$i$i$i = $22;
      break;
     } else $$01$i$i$i$i$i = $22;
    }
   } else {
    $$0$i$i$i$i$i$i = $17;
    while (1) {
     $19 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$19) {
      $$0$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $19;
    }
   }
   if (($$0$i$i$i$i$i | 0) == ($7 | 0)) break; else $10 = $$0$i$i$i$i$i;
  }
 }
 __ZNSt3__16__treeINS_12__value_typeIiPN12dwarf2reader13CallFrameInfo4RuleEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($5, HEAP32[$7 >> 2] | 0);
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$5 >> 2] = $7;
 HEAP32[$7 >> 2] = 0;
 __ZNSt3__16__treeINS_12__value_typeIiPN12dwarf2reader13CallFrameInfo4RuleEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($5, 0);
 return;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $11 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $34 = 0, $6 = 0, $8 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36 | 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2) {
   $6 = $2 + 48 | 0;
   $8 = HEAP32[$6 >> 2] | 0;
   $11 = HEAP32[$6 + 4 >> 2] | 0;
   if (!(($8 & -256 | 0) == 1126902528 & ($11 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = HEAP32[1432];
    _abort_message(27499, $vararg_buffer7);
   }
   if (($8 | 0) == 1126902529 & ($11 | 0) == 1129074247) $21 = HEAP32[$2 + 44 >> 2] | 0; else $21 = $2 + 80 | 0;
   HEAP32[$thrown_object >> 2] = $21;
   $22 = HEAP32[$2 >> 2] | 0;
   $24 = HEAP32[$22 + 4 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[568 >> 2] | 0) + 16 >> 2] & 31](568, $22, $thrown_object) | 0) {
    $29 = HEAP32[$thrown_object >> 2] | 0;
    $30 = HEAP32[1432] | 0;
    $34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] & 127]($29) | 0;
    HEAP32[$vararg_buffer >> 2] = $30;
    HEAP32[$vararg_buffer + 4 >> 2] = $24;
    HEAP32[$vararg_buffer + 8 >> 2] = $34;
    _abort_message(27413, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = HEAP32[1432];
    HEAP32[$vararg_buffer3 + 4 >> 2] = $24;
    _abort_message(27458, $vararg_buffer3);
   }
  }
 }
 _abort_message(27537, $vararg_buffer10);
}

function __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($agg$result, $this, $i) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $i = $i | 0;
 var $11 = 0, $14 = 0, $20 = 0, $21 = 0, $29 = 0, $31 = 0, $buf = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $buf = sp + 4 | 0;
 if (!(HEAP32[$this + 16 >> 2] | 0)) ___assert_fail(13177, 13137, 173, 13184);
 if (($i | 0) < 0) {
  if (($i | 0) != -1) ___assert_fail(13197, 13137, 175, 13184);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 28 | 0);
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$this + 24 >> 2] | 0) == ($i | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 40 | 0);
  STACKTOP = sp;
  return;
 }
 $11 = HEAP32[$this + 8 >> 2] | 0;
 $14 = HEAP32[$11 >> 2] | 0;
 if ((((HEAP32[$11 + 4 >> 2] | 0) - $14 | 0) / 12 | 0) >>> 0 > $i >>> 0) {
  $20 = $14 + ($i * 12 | 0) | 0;
  $21 = HEAP8[$20 >> 0] | 0;
  if (!($21 & 1)) $29 = ($21 & 255) >>> 1; else $29 = HEAP32[$14 + ($i * 12 | 0) + 4 >> 2] | 0;
  if ($29) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $20);
   STACKTOP = sp;
   return;
  }
 }
 $31 = HEAP32[$this + 12 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$31 >> 2] | 0) + 8 >> 2] & 15]($31, HEAP32[$this + 20 >> 2] | 0, $i);
 HEAP32[$vararg_buffer >> 2] = $i;
 _sprintf($buf, 13215, $vararg_buffer) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, $buf, _strlen($buf | 0) | 0);
 STACKTOP = sp;
 return;
}

function __Z32breakpad_swap_segment_command_64P18segment_command_64($sg) {
 $sg = $sg | 0;
 var $11 = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $37 = 0, $38 = 0, $40 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $57 = 0, $6 = 0, $60 = 0, $63 = 0, $66 = 0;
 HEAP32[$sg >> 2] = _llvm_bswap_i32(HEAP32[$sg >> 2] | 0) | 0;
 $2 = $sg + 4 | 0;
 HEAP32[$2 >> 2] = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
 $5 = $sg + 24 | 0;
 $6 = $5;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = _llvm_bswap_i32(HEAP32[$6 >> 2] | 0) | 0;
 $14 = $5;
 HEAP32[$14 >> 2] = _llvm_bswap_i32($11 | 0) | 0;
 HEAP32[$14 + 4 >> 2] = $12;
 $18 = $sg + 32 | 0;
 $19 = $18;
 $24 = HEAP32[$19 + 4 >> 2] | 0;
 $25 = _llvm_bswap_i32(HEAP32[$19 >> 2] | 0) | 0;
 $27 = $18;
 HEAP32[$27 >> 2] = _llvm_bswap_i32($24 | 0) | 0;
 HEAP32[$27 + 4 >> 2] = $25;
 $31 = $sg + 40 | 0;
 $32 = $31;
 $37 = HEAP32[$32 + 4 >> 2] | 0;
 $38 = _llvm_bswap_i32(HEAP32[$32 >> 2] | 0) | 0;
 $40 = $31;
 HEAP32[$40 >> 2] = _llvm_bswap_i32($37 | 0) | 0;
 HEAP32[$40 + 4 >> 2] = $38;
 $44 = $sg + 48 | 0;
 $45 = $44;
 $50 = HEAP32[$45 + 4 >> 2] | 0;
 $51 = _llvm_bswap_i32(HEAP32[$45 >> 2] | 0) | 0;
 $53 = $44;
 HEAP32[$53 >> 2] = _llvm_bswap_i32($50 | 0) | 0;
 HEAP32[$53 + 4 >> 2] = $51;
 $57 = $sg + 56 | 0;
 HEAP32[$57 >> 2] = _llvm_bswap_i32(HEAP32[$57 >> 2] | 0) | 0;
 $60 = $sg + 60 | 0;
 HEAP32[$60 >> 2] = _llvm_bswap_i32(HEAP32[$60 >> 2] | 0) | 0;
 $63 = $sg + 64 | 0;
 HEAP32[$63 >> 2] = _llvm_bswap_i32(HEAP32[$63 >> 2] | 0) | 0;
 $66 = $sg + 68 | 0;
 HEAP32[$66 >> 2] = _llvm_bswap_i32(HEAP32[$66 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$i1 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0, $$0$i1$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 if (($2 | 0) != ($0 | 0)) {
  $$0$i1 = $2;
  do {
   $5 = HEAP32[$3 >> 2] | 0;
   $6 = $5 + -16 | 0;
   $$0$i1$looptemp = $$0$i1;
   $$0$i1 = $$0$i1 + -16 | 0;
   HEAP32[$6 >> 2] = 0;
   $9 = $5 + -12 | 0;
   HEAP32[$9 >> 2] = 0;
   $11 = HEAP32[$$0$i1$looptemp + -4 >> 2] | 0;
   HEAP32[$5 + -8 >> 2] = 0;
   HEAP32[$5 + -4 >> 2] = $11;
   HEAP32[$6 >> 2] = HEAP32[$$0$i1 >> 2];
   $14 = $$0$i1$looptemp + -12 | 0;
   HEAP32[$9 >> 2] = HEAP32[$14 >> 2];
   $16 = $$0$i1$looptemp + -8 | 0;
   HEAP32[$5 + -8 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$16 >> 2] = 0;
   HEAP32[$14 >> 2] = 0;
   HEAP32[$$0$i1 >> 2] = 0;
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -16;
  } while (($$0$i1 | 0) != ($0 | 0));
 }
 $22 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $22;
 $24 = $__v + 8 | 0;
 $25 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$24 >> 2] = $25;
 $27 = $this + 8 | 0;
 $28 = $__v + 12 | 0;
 $29 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$28 >> 2] = $29;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 return;
}

function __ZN16MacFileUtilities11MachoWalker20WalkHeader64AtOffsetEi($this, $offset) {
 $this = $this | 0;
 $offset = $offset | 0;
 var $$0 = 0, $1 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $23 = 0, $6 = 0, $header = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $header = sp;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 do if (!$1) {
  if ((_pread(HEAP32[$this >> 2] | 0, $header | 0, 32, $offset | 0) | 0) != 32) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  if (($offset | 0) < 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $6 = HEAP32[$this + 8 >> 2] | 0;
  if (($offset + 32 | 0) >>> 0 <= $6 >>> 0) {
   dest = $header;
   src = $1 + $offset | 0;
   stop = dest + 32 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   break;
  }
  if ($6 >>> 0 <= $offset >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  _memcpy($header | 0, $1 + $offset | 0, $6 - $offset | 0) | 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $16 = (HEAP32[$header >> 2] | 0) == -805638658;
 if ($16) __Z28breakpad_swap_mach_header_64P14mach_header_64($header);
 $17 = $this + 20 | 0;
 HEAP32[$17 >> 2] = $header;
 $18 = $this + 24 | 0;
 HEAP32[$18 >> 2] = 32;
 $19 = $this + 28 | 0;
 HEAP32[$19 >> 2] = $offset;
 $23 = __ZN16MacFileUtilities11MachoWalker14WalkHeaderCoreEijb($this, $offset + 32 | 0, HEAP32[$header + 16 >> 2] | 0, $16) | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$19 >> 2] = 0;
 $$0 = $23;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad13StabsToModule13StartFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy($this, $name, $0, $1) {
 $this = $this | 0;
 $name = $name | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 $4 = $this + 48 | 0;
 if (HEAP32[$4 >> 2] | 0) ___assert_fail(17249, 17158, 96, 17268);
 $7 = __Znwj(56) | 0;
 __ZN15google_breakpadL8DemangleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($2, $name);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($7, $2);
 $9 = $7 + 16 | 0;
 HEAP32[$9 >> 2] = $0;
 HEAP32[$9 + 4 >> 2] = $1;
 $13 = $7 + 24 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$13 + 16 >> 2] = 0;
 HEAP32[$13 + 20 >> 2] = 0;
 HEAP32[$13 + 24 >> 2] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$4 >> 2] = $7;
 $14 = $3;
 HEAP32[$14 >> 2] = $0;
 HEAP32[$14 + 4 >> 2] = $1;
 $18 = $this + 24 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (($19 | 0) == (HEAP32[$this + 28 >> 2] | 0)) {
  __ZNSt3__16vectorIyNS_9allocatorIyEEE21__push_back_slow_pathIKyEEvRT_($this + 20 | 0, $3);
  STACKTOP = sp;
  return 1;
 } else {
  $23 = $19;
  HEAP32[$23 >> 2] = $0;
  HEAP32[$23 + 4 >> 2] = $1;
  HEAP32[$18 >> 2] = $19 + 8;
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZNSt3__112__deque_baseIN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$ph = 0, $$ph1 = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $39 = 0, $42 = 0, $49 = 0, $5 = 0, $51 = 0, $6 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = $1 + ($3 >>> 8 << 2) | 0;
 $6 = $this + 8 | 0;
 if ((HEAP32[$6 >> 2] | 0) == ($1 | 0)) {
  $24 = 0;
  $33 = $this + 20 | 0;
  $51 = 0;
 } else {
  $13 = $this + 20 | 0;
  $15 = $3 + (HEAP32[$13 >> 2] | 0) | 0;
  $24 = (HEAP32[$1 + ($15 >>> 8 << 2) >> 2] | 0) + (($15 & 255) << 4) | 0;
  $33 = $13;
  $51 = (HEAP32[$5 >> 2] | 0) + (($3 & 255) << 4) | 0;
 }
 $$ph = $51;
 $$ph1 = $5;
 L5 : while (1) {
  $22 = $$ph;
  do {
   $21 = $22;
   if (($21 | 0) == ($24 | 0)) break L5;
   __ZN12dwarf2reader13CallFrameInfo7RuleMapD2Ev($21);
   $22 = $21 + 16 | 0;
  } while (($22 - (HEAP32[$$ph1 >> 2] | 0) | 0) != 4096);
  $31 = $$ph1 + 4 | 0;
  $$ph = HEAP32[$31 >> 2] | 0;
  $$ph1 = $31;
 }
 HEAP32[$33 >> 2] = 0;
 $35 = HEAP32[$0 >> 2] | 0;
 $39 = (HEAP32[$6 >> 2] | 0) - $35 >> 2;
 if ($39 >>> 0 > 2) {
  $42 = $35;
  do {
   __ZdlPv(HEAP32[$42 >> 2] | 0);
   $42 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
   HEAP32[$0 >> 2] = $42;
   $49 = (HEAP32[$6 >> 2] | 0) - $42 >> 2;
  } while ($49 >>> 0 > 2);
  $$lcssa = $49;
 } else $$lcssa = $39;
 switch ($$lcssa | 0) {
 case 1:
  {
   HEAP32[$2 >> 2] = 128;
   return;
  }
 case 2:
  {
   HEAP32[$2 >> 2] = 256;
   return;
  }
 default:
  return;
 }
}

function __ZN12dwarf2reader13DIEDispatcher6EndDIEEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $27 = 0, $3 = 0, $35 = 0, $38 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $8 = 0, $9 = 0;
 $2 = $this + 24 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) ___assert_fail(17654, 17677, 116, 17714);
 $5 = $this + 20 | 0;
 $8 = $3 + -1 + (HEAP32[$5 >> 2] | 0) | 0;
 $9 = $this + 8 | 0;
 $13 = HEAP32[(HEAP32[$9 >> 2] | 0) + ($8 >>> 8 << 2) >> 2] | 0;
 $14 = $8 & 255;
 $15 = $13 + ($14 << 4) + 8 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $19 = $13 + ($14 << 4) | 0;
 $27 = (HEAP32[$19 >> 2] | 0) == ($0 | 0) ? (HEAP32[$19 + 4 >> 2] | 0) == ($1 | 0) : 0;
 if (!$16) {
  if (!$27) return;
 } else {
  if (!$27) ___assert_fail(17721, 17677, 120, 17714);
  if (!(HEAP8[$13 + ($14 << 4) + 12 >> 0] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 32 >> 2] & 127]($16) | 0;
   $35 = HEAP32[$15 >> 2] | 0;
  } else $35 = $16;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 40 >> 2] & 255]($35);
  $38 = HEAP32[$15 >> 2] | 0;
  if (!(($38 | 0) == 0 ? 1 : ($38 | 0) == (HEAP32[$this + 28 >> 2] | 0))) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$38 >> 2] | 0) + 4 >> 2] & 255]($38);
 }
 $46 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = $46 + -1;
 $48 = $this + 12 | 0;
 $49 = HEAP32[$48 >> 2] | 0;
 $50 = HEAP32[$9 >> 2] | 0;
 if ((1 - $46 - (HEAP32[$5 >> 2] | 0) + (($49 | 0) == ($50 | 0) ? 0 : ($49 - $50 << 6) + -1 | 0) | 0) >>> 0 <= 511) return;
 __ZdlPv(HEAP32[$49 + -4 >> 2] | 0);
 HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + -4;
 return;
}

function __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$i1 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0, $$0$i1$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 if (($2 | 0) != ($0 | 0)) {
  $$0$i1 = $2;
  do {
   $5 = HEAP32[$3 >> 2] | 0;
   $6 = $5 + -16 | 0;
   $$0$i1$looptemp = $$0$i1;
   $$0$i1 = $$0$i1 + -16 | 0;
   HEAP32[$6 >> 2] = 0;
   $9 = $5 + -12 | 0;
   HEAP32[$9 >> 2] = 0;
   $11 = HEAP32[$$0$i1$looptemp + -4 >> 2] | 0;
   HEAP32[$5 + -8 >> 2] = 0;
   HEAP32[$5 + -4 >> 2] = $11;
   HEAP32[$6 >> 2] = HEAP32[$$0$i1 >> 2];
   $14 = $$0$i1$looptemp + -12 | 0;
   HEAP32[$9 >> 2] = HEAP32[$14 >> 2];
   $16 = $$0$i1$looptemp + -8 | 0;
   HEAP32[$5 + -8 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$16 >> 2] = 0;
   HEAP32[$14 >> 2] = 0;
   HEAP32[$$0$i1 >> 2] = 0;
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -16;
  } while (($$0$i1 | 0) != ($0 | 0));
 }
 $22 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $22;
 $24 = $__v + 8 | 0;
 $25 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$24 >> 2] = $25;
 $27 = $this + 8 | 0;
 $28 = $__v + 12 | 0;
 $29 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$28 >> 2] = $29;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 return;
}

function _mbtowc($wc, $src, $n) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $23 = 0, $31 = 0, $35 = 0, $4 = 0, $40 = 0, $44 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 if (!$src) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 do if ($n) {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $7 = $0;
  } else $7 = $wc;
  $4 = HEAP8[$src >> 0] | 0;
  $5 = $4 & 255;
  if ($4 << 24 >> 24 > -1) {
   HEAP32[$7 >> 2] = $5;
   $$0 = $4 << 24 >> 24 != 0 & 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $10 = $5 + -194 | 0;
  if ($10 >>> 0 <= 50) {
   $12 = $src + 1 | 0;
   $14 = HEAP32[5360 + ($10 << 2) >> 2] | 0;
   if ($n >>> 0 < 4) if ($14 & -2147483648 >>> (($n * 6 | 0) + -6 | 0)) break;
   $22 = HEAPU8[$12 >> 0] | 0;
   $23 = $22 >>> 3;
   if (($23 + -16 | $23 + ($14 >> 26)) >>> 0 <= 7) {
    $31 = $22 + -128 | $14 << 6;
    if (($31 | 0) >= 0) {
     HEAP32[$7 >> 2] = $31;
     $$0 = 2;
     STACKTOP = sp;
     return $$0 | 0;
    }
    $35 = HEAPU8[$src + 2 >> 0] | 0;
    if (($35 & 192 | 0) == 128) {
     $40 = $35 + -128 | $31 << 6;
     if (($40 | 0) >= 0) {
      HEAP32[$7 >> 2] = $40;
      $$0 = 3;
      STACKTOP = sp;
      return $$0 | 0;
     }
     $44 = HEAPU8[$src + 3 >> 0] | 0;
     if (($44 & 192 | 0) == 128) {
      HEAP32[$7 >> 2] = $44 + -128 | $40 << 6;
      $$0 = 4;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z24breakpad_swap_section_64P10section_64j($s, $nsects) {
 $s = $s | 0;
 $nsects = $nsects | 0;
 var $1 = 0, $10 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $27 = 0, $30 = 0, $33 = 0, $36 = 0, $39 = 0, $42 = 0, $45 = 0, $7 = 0, $8 = 0, $i$01 = 0;
 if (!$nsects) return; else $i$01 = 0;
 do {
  $1 = $s + ($i$01 * 80 | 0) + 32 | 0;
  $2 = $1;
  $7 = HEAP32[$2 + 4 >> 2] | 0;
  $8 = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
  $10 = $1;
  HEAP32[$10 >> 2] = _llvm_bswap_i32($7 | 0) | 0;
  HEAP32[$10 + 4 >> 2] = $8;
  $14 = $s + ($i$01 * 80 | 0) + 40 | 0;
  $15 = $14;
  $20 = HEAP32[$15 + 4 >> 2] | 0;
  $21 = _llvm_bswap_i32(HEAP32[$15 >> 2] | 0) | 0;
  $23 = $14;
  HEAP32[$23 >> 2] = _llvm_bswap_i32($20 | 0) | 0;
  HEAP32[$23 + 4 >> 2] = $21;
  $27 = $s + ($i$01 * 80 | 0) + 48 | 0;
  HEAP32[$27 >> 2] = _llvm_bswap_i32(HEAP32[$27 >> 2] | 0) | 0;
  $30 = $s + ($i$01 * 80 | 0) + 52 | 0;
  HEAP32[$30 >> 2] = _llvm_bswap_i32(HEAP32[$30 >> 2] | 0) | 0;
  $33 = $s + ($i$01 * 80 | 0) + 56 | 0;
  HEAP32[$33 >> 2] = _llvm_bswap_i32(HEAP32[$33 >> 2] | 0) | 0;
  $36 = $s + ($i$01 * 80 | 0) + 60 | 0;
  HEAP32[$36 >> 2] = _llvm_bswap_i32(HEAP32[$36 >> 2] | 0) | 0;
  $39 = $s + ($i$01 * 80 | 0) + 64 | 0;
  HEAP32[$39 >> 2] = _llvm_bswap_i32(HEAP32[$39 >> 2] | 0) | 0;
  $42 = $s + ($i$01 * 80 | 0) + 68 | 0;
  HEAP32[$42 >> 2] = _llvm_bswap_i32(HEAP32[$42 >> 2] | 0) | 0;
  $45 = $s + ($i$01 * 80 | 0) + 72 | 0;
  HEAP32[$45 >> 2] = _llvm_bswap_i32(HEAP32[$45 >> 2] | 0) | 0;
  $i$01 = $i$01 + 1 | 0;
 } while (($i$01 | 0) != ($nsects | 0));
 return;
}

function __ZNSt3__16vectorIN15google_breakpad11StabsReader4LineENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 4) + 1 | 0;
 if ($7 >>> 0 > 268435455) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = $this + 8 | 0;
 $12 = $2;
 $13 = (HEAP32[$9 >> 2] | 0) - $12 | 0;
 if ($13 >> 4 >>> 0 < 134217727) {
  $20 = $13 >> 3;
  $22 = $20 >>> 0 < $7 >>> 0 ? $7 : $20;
  $25 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $26 = $25 >> 4;
  if (!$22) {
   $$0$i3 = 0;
   $31 = 0;
   $32 = $26;
   $38 = $25;
  } else {
   $$0$i2 = $22;
   $41 = $26;
   $42 = $25;
   label = 6;
  }
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $$0$i2 = 268435455;
  $41 = $18 >> 4;
  $42 = $18;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $31 = __Znwj($$0$i2 << 4) | 0;
  $32 = $41;
  $38 = $42;
 }
 $30 = $31 + ($32 << 4) | 0;
 HEAP32[$30 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$30 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
 HEAP32[$30 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
 HEAP32[$30 + 12 >> 2] = HEAP32[$__x + 12 >> 2];
 _memcpy($31 | 0, $2 | 0, $38 | 0) | 0;
 HEAP32[$this >> 2] = $31;
 HEAP32[$0 >> 2] = $31 + ($32 + 1 << 4);
 HEAP32[$9 >> 2] = $31 + ($$0$i3 << 4);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$03 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $21 = 0, $29 = 0, $34 = 0, $41 = 0, $8 = 0, $__p$04 = 0, $scevgep1 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $15 = 10;
  $16 = ($1 & 255) >>> 1;
  $41 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $15 = ($8 & -2) + -1 | 0;
  $16 = HEAP32[$this + 4 >> 2] | 0;
  $41 = $8 & 255;
 }
 $12 = $__last - $0 | 0;
 do if (($__last | 0) != ($__first | 0)) {
  if (($15 - $16 | 0) >>> 0 < $12 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this, $15, $16 + $12 - $15 | 0, $16, $16, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $41;
  if (!($21 & 1)) $29 = $this + 1 | 0; else $29 = HEAP32[$this + 8 >> 2] | 0;
  $scevgep1 = $__last + ($16 - $0) | 0;
  if (($__first | 0) != ($__last | 0)) {
   $$03 = $__first;
   $__p$04 = $29 + $16 | 0;
   while (1) {
    HEAP8[$__p$04 >> 0] = HEAP8[$$03 >> 0] | 0;
    $$03 = $$03 + 1 | 0;
    if (($$03 | 0) == ($__last | 0)) break; else $__p$04 = $__p$04 + 1 | 0;
   }
  }
  HEAP8[$29 + $scevgep1 >> 0] = 0;
  $34 = $16 + $12 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $34 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $34;
   break;
  }
 } while (0);
 return;
}

function __ZN15google_breakpad6FileID25ConvertIdentifierToStringEPKhPci($identifier, $buffer, $buffer_length) {
 $identifier = $identifier | 0;
 $buffer = $buffer | 0;
 $buffer_length = $buffer_length | 0;
 var $$lcssa = 0, $$lcssa17 = 0, $$lcssa18 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $buffer_idx$0$lcssa = 0, $buffer_idx$07 = 0, $buffer_idx$1 = 0, $idx$06 = 0;
 if (($buffer_length | 0) > 0) {
  $buffer_idx$07 = 0;
  $idx$06 = 0;
 } else {
  $$lcssa = 1;
  $buffer_idx$0$lcssa = 0;
  $26 = $$lcssa << 31 >> 31;
  $27 = $26 + $buffer_idx$0$lcssa | 0;
  $28 = $buffer + $27 | 0;
  HEAP8[$28 >> 0] = 0;
  return;
 }
 while (1) {
  $2 = HEAP8[$identifier + $idx$06 >> 0] | 0;
  $3 = $2 & 255;
  $4 = $3 >>> 4;
  $5 = $3 & 15;
  switch ($idx$06 | 0) {
  case 4:
  case 6:
  case 8:
  case 10:
   {
    HEAP8[$buffer + $buffer_idx$07 >> 0] = 45;
    $buffer_idx$1 = $buffer_idx$07 + 1 | 0;
    break;
   }
  default:
   $buffer_idx$1 = $buffer_idx$07;
  }
  HEAP8[$buffer + $buffer_idx$1 >> 0] = ($2 & 255) > 159 ? $4 + 55 | 0 : $4 | 48;
  $20 = $buffer_idx$1 + 2 | 0;
  HEAP8[$buffer + ($buffer_idx$1 + 1) >> 0] = $5 >>> 0 > 9 ? $5 + 55 | 0 : $5 | 48;
  $idx$06 = $idx$06 + 1 | 0;
  $23 = ($20 | 0) < ($buffer_length | 0);
  if (!(($idx$06 | 0) < 16 & $23)) {
   $$lcssa17 = $20;
   $$lcssa18 = $23;
   break;
  } else $buffer_idx$07 = $20;
 }
 $$lcssa = $$lcssa18 ^ 1;
 $buffer_idx$0$lcssa = $$lcssa17;
 $26 = $$lcssa << 31 >> 31;
 $27 = $26 + $buffer_idx$0$lcssa | 0;
 $28 = $buffer + $27 | 0;
 HEAP8[$28 >> 0] = 0;
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule5EntryEjyyhRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj($this, $offset, $0, $1, $2, $3, $version, $augmentation, $return_address) {
 $this = $this | 0;
 $offset = $offset | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $version = $version | 0;
 $augmentation = $augmentation | 0;
 $return_address = $return_address | 0;
 var $12 = 0, $14 = 0, $19 = 0, $24 = 0, $25 = 0, $26 = 0, $37 = 0, $4 = 0, $7 = 0, $9 = 0;
 $4 = $this + 16 | 0;
 if (HEAP32[$4 >> 2] | 0) ___assert_fail(13129, 13137, 148, 13171);
 $7 = __Znwj(40) | 0;
 $9 = $7 + 20 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$7 + 24 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = $9;
 $12 = $7 + 32 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$7 + 36 >> 2] = 0;
 HEAP32[$7 + 28 >> 2] = $12;
 HEAP32[$4 >> 2] = $7;
 $14 = $7;
 HEAP32[$14 >> 2] = $0;
 HEAP32[$14 + 4 >> 2] = $1;
 $19 = $7 + 8 | 0;
 HEAP32[$19 >> 2] = $2;
 HEAP32[$19 + 4 >> 2] = $3;
 HEAP32[$this + 20 >> 2] = $offset;
 $24 = $this + 24 | 0;
 HEAP32[$24 >> 2] = $return_address;
 $25 = $this + 8 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 if ((((HEAP32[$26 + 4 >> 2] | 0) - (HEAP32[$26 >> 2] | 0) | 0) / 12 | 0) >>> 0 <= $return_address >>> 0) return 1;
 $37 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($7 + 16 | 0, $this + 40 | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($37, (HEAP32[HEAP32[$25 >> 2] >> 2] | 0) + ((HEAP32[$24 >> 2] | 0) * 12 | 0) | 0) | 0;
 return 1;
}

function __ZL10ExpandPathRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_($agg$result, $path, $base) {
 $agg$result = $agg$result | 0;
 $path = $path | 0;
 $base = $base | 0;
 var $0 = 0, $1 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP8[$path >> 0] | 0;
 $3 = ($1 & 1) == 0;
 if (!(($3 ? ($1 & 255) >>> 1 : HEAP32[$path + 4 >> 2] | 0) | 0)) label = 3; else if ((HEAP8[($3 ? $path + 1 | 0 : HEAP32[$path + 8 >> 2] | 0) >> 0] | 0) != 47) label = 3;
 if ((label | 0) == 3) {
  $16 = HEAP8[$base >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$base + 4 >> 2] | 0;
  if ($23) {
   $27 = HEAP32[$base + 8 >> 2] | 0;
   $28 = $base + 1 | 0;
   $32 = (HEAP8[($18 ? $28 : $27) + ($23 + -1) >> 0] | 0) == 47;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   $34 = $32 & 1 ^ 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($0, $18 ? $28 : $27, $23, $23 + $34 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $32 ? 30292 : 26801, $34) | 0;
   __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_($agg$result, $0, $path);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   STACKTOP = sp;
   return;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $path);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIwE9pbackfailEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $11 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 8 | 0;
 $__ci = sp + 4 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  L5 : do if ($3) {
   HEAP32[$__ci >> 2] = HEAP32[$8 >> 2];
   $11 = HEAP32[$this + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 4 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0) {
   case 1:
   case 2:
    {
     $$01 = -1;
     break L1;
     break;
    }
   case 3:
    {
     HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
     HEAP32[$__enxt >> 2] = $__extbuf + 1;
     break;
    }
   default:
    {}
   }
   $23 = $this + 32 | 0;
   while (1) {
    $24 = HEAP32[$__enxt >> 2] | 0;
    if ($24 >>> 0 <= $__extbuf >>> 0) break L5;
    $26 = $24 + -1 | 0;
    HEAP32[$__enxt >> 2] = $26;
    if ((_ungetc(HEAP8[$26 >> 0] | 0, HEAP32[$23 >> 2] | 0) | 0) == -1) {
     $$01 = -1;
     break L1;
    }
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZNSt3__110__stdinbufIcE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $12 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 4 | 0;
 $__ci = sp + 8 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  L5 : do if ($3) {
   HEAP8[$__ci >> 0] = HEAP32[$8 >> 2];
   $12 = HEAP32[$this + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 15]($12, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 1 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0) {
   case 1:
   case 2:
    {
     $$01 = -1;
     break L1;
     break;
    }
   case 3:
    {
     HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
     HEAP32[$__enxt >> 2] = $__extbuf + 1;
     break;
    }
   default:
    {}
   }
   $24 = $this + 32 | 0;
   while (1) {
    $25 = HEAP32[$__enxt >> 2] | 0;
    if ($25 >>> 0 <= $__extbuf >>> 0) break L5;
    $27 = $25 + -1 | 0;
    HEAP32[$__enxt >> 2] = $27;
    if ((_ungetc(HEAP8[$27 >> 0] | 0, HEAP32[$24 >> 2] | 0) | 0) == -1) {
     $$01 = -1;
     break L1;
    }
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($this, $__pos, $__s, $__n) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$1 = 0, $$pre$phiZ2D = 0, $0 = 0, $13 = 0, $17 = 0, $2 = 0, $23 = 0, $25 = 0, $31 = 0, $8 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $8 = ($0 & 255) >>> 1; else $8 = HEAP32[$this + 4 >> 2] | 0;
 if ($8 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) {
  $13 = 10;
  $17 = $0;
 } else {
  $9 = HEAP32[$this >> 2] | 0;
  $13 = ($9 & -2) + -1 | 0;
  $17 = $9 & 255;
 }
 if (($13 - $8 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $13, $8 + $__n - $13 | 0, $8, $__pos, 0, $__n, $__s); else if ($__n) {
  if (!($17 & 1)) $23 = $this + 1 | 0; else $23 = HEAP32[$this + 8 >> 2] | 0;
  if (($8 | 0) == ($__pos | 0)) {
   $$1 = $__s;
   $$pre$phiZ2D = $23 + $__pos | 0;
  } else {
   $25 = $23 + $__pos | 0;
   _memmove($23 + ($__n + $__pos) | 0, $25 | 0, $8 - $__pos | 0) | 0;
   $$1 = $25 >>> 0 <= $__s >>> 0 & ($23 + $8 | 0) >>> 0 > $__s >>> 0 ? $__s + $__n | 0 : $__s;
   $$pre$phiZ2D = $25;
  }
  _memmove($$pre$phiZ2D | 0, $$1 | 0, $__n | 0) | 0;
  $31 = $8 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $31 << 1; else HEAP32[$this + 4 >> 2] = $31;
  HEAP8[$23 + $31 >> 0] = 0;
 }
 return $this | 0;
}

function __ZN15google_breakpad27BreakpadGetArchInfoFromNameEPKc($arch_name) {
 $arch_name = $arch_name | 0;
 var $$0 = 0, $17 = 0, $30 = 0, $6 = 0;
 if (!(_strcmp(21210, $arch_name) | 0)) {
  if (!(HEAP8[448] | 0)) if (___cxa_guard_acquire(448) | 0) {
   $6 = __Znwj(20) | 0;
   HEAP32[$6 >> 2] = HEAP32[1277];
   HEAP32[$6 + 4 >> 2] = HEAP32[1278];
   HEAP32[$6 + 8 >> 2] = HEAP32[1279];
   HEAP32[$6 + 12 >> 2] = HEAP32[1280];
   HEAP32[$6 >> 2] = 21210;
   HEAP32[$6 + 4 >> 2] = 16777228;
   HEAP32[$6 + 8 >> 2] = 0;
   HEAP32[$6 + 16 >> 2] = 21216;
   HEAP32[1292] = $6;
   ___cxa_guard_release(448);
  }
  $$0 = HEAP32[1292] | 0;
  return $$0 | 0;
 }
 if (!(_strcmp(21223, $arch_name) | 0)) {
  if (!(HEAP8[456] | 0)) if (___cxa_guard_acquire(456) | 0) {
   $17 = __Znwj(20) | 0;
   HEAP32[$17 >> 2] = HEAP32[1277];
   HEAP32[$17 + 4 >> 2] = HEAP32[1278];
   HEAP32[$17 + 8 >> 2] = HEAP32[1279];
   HEAP32[$17 + 12 >> 2] = HEAP32[1280];
   HEAP32[$17 >> 2] = 21223;
   HEAP32[$17 + 8 >> 2] = 11;
   HEAP32[$17 + 16 >> 2] = 21230;
   HEAP32[1293] = $17;
   ___cxa_guard_release(456);
  }
  $$0 = HEAP32[1293] | 0;
  return $$0 | 0;
 }
 if (!(_strcmp($arch_name, 22433) | 0)) {
  $$0 = 5068;
  return $$0 | 0;
 }
 if (!(_strcmp($arch_name, 21238) | 0)) {
  $$0 = 5088;
  return $$0 | 0;
 }
 if (!(_strcmp($arch_name, 21245) | 0)) {
  $$0 = 5108;
  return $$0 | 0;
 }
 if (!(_strcmp($arch_name, 21210) | 0)) {
  $$0 = 5128;
  return $$0 | 0;
 }
 $30 = (_strcmp($arch_name, 21249) | 0) == 0;
 $$0 = $30 ? 5148 : 0;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$03 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $21 = 0, $29 = 0, $34 = 0, $41 = 0, $8 = 0, $__p$04 = 0, $scevgep1 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $15 = 10;
  $16 = ($1 & 255) >>> 1;
  $41 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $15 = ($8 & -2) + -1 | 0;
  $16 = HEAP32[$this + 4 >> 2] | 0;
  $41 = $8 & 255;
 }
 $12 = $__last - $0 | 0;
 do if (($__last | 0) != ($__first | 0)) {
  if (($15 - $16 | 0) >>> 0 < $12 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $15, $16 + $12 - $15 | 0, $16, $16, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $41;
  if (!($21 & 1)) $29 = $this + 1 | 0; else $29 = HEAP32[$this + 8 >> 2] | 0;
  $scevgep1 = $__last + ($16 - $0) | 0;
  if (($__first | 0) != ($__last | 0)) {
   $$03 = $__first;
   $__p$04 = $29 + $16 | 0;
   while (1) {
    HEAP8[$__p$04 >> 0] = HEAP8[$$03 >> 0] | 0;
    $$03 = $$03 + 1 | 0;
    if (($$03 | 0) == ($__last | 0)) break; else $__p$04 = $__p$04 + 1 | 0;
   }
  }
  HEAP8[$29 + $scevgep1 >> 0] = 0;
  $34 = $16 + $12 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $34 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $34;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $19 = 0, $3 = 0, $6 = 0, $__parent = 0, $__r$0 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $19 = $__r$0 + 32 | 0;
  STACKTOP = sp;
  return $19 | 0;
 }
 $3 = __Znwj(88) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3 + 16 | 0, $__k);
 dest = $3 + 32 | 0;
 stop = dest + 56 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $6 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $6;
 HEAP32[$0 >> 2] = $3;
 $10 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$10) $15 = $3; else {
  HEAP32[$this >> 2] = $10;
  $15 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $15);
 $16 = $this + 8 | 0;
 HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
 $__r$0 = $3;
 $19 = $__r$0 + 32 | 0;
 STACKTOP = sp;
 return $19 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($first, $last) {
 $first = $first | 0;
 $last = $last | 0;
 var $$0 = 0, $$lcssa = 0, $1 = 0, $11 = 0, $3 = 0, $5 = 0, $9 = 0, $first$pn = 0, $t1$016 = 0, $t1$016$lcssa = 0, $t11$0 = 0;
 L1 : do if (($first | 0) == ($last | 0)) $$0 = $first; else {
  $1 = HEAP8[$first >> 0] | 0;
  if ($1 << 24 >> 24 != 95) {
   if ((($1 << 24 >> 24) + -48 | 0) >>> 0 < 10) $first$pn = $first; else {
    $$0 = $first;
    break;
   }
   while (1) {
    $t11$0 = $first$pn + 1 | 0;
    if (($t11$0 | 0) == ($last | 0)) {
     $$0 = $last;
     break L1;
    }
    if (((HEAP8[$t11$0 >> 0] | 0) + -48 | 0) >>> 0 < 10) $first$pn = $t11$0; else {
     $$0 = $t11$0;
     break L1;
    }
   }
  }
  $3 = $first + 1 | 0;
  if (($3 | 0) == ($last | 0)) $$0 = $first; else {
   $5 = HEAP8[$3 >> 0] | 0;
   if ((($5 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    $$0 = $first + 2 | 0;
    break;
   }
   if ($5 << 24 >> 24 == 95) {
    $9 = $first + 2 | 0;
    if (($9 | 0) == ($last | 0)) $$0 = $first; else {
     $t1$016 = $9;
     while (1) {
      $11 = HEAP8[$t1$016 >> 0] | 0;
      if ((($11 << 24 >> 24) + -48 | 0) >>> 0 >= 10) {
       $$lcssa = $11;
       $t1$016$lcssa = $t1$016;
       break;
      }
      $t1$016 = $t1$016 + 1 | 0;
      if (($t1$016 | 0) == ($last | 0)) {
       $$0 = $first;
       break L1;
      }
     }
     return ($$lcssa << 24 >> 24 == 95 ? $t1$016$lcssa + 1 | 0 : $first) | 0;
    }
   } else $$0 = $first;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $5 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $20 = 0;
  $__r$0 = $1;
  $18 = $__r$0;
  HEAP32[$agg$result >> 2] = $18;
  $19 = $agg$result + 4 | 0;
  HEAP8[$19 >> 0] = $20;
  STACKTOP = sp;
  return;
 }
 $3 = __Znwj(28) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3 + 16 | 0, $__v);
 $5 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $5;
 HEAP32[$0 >> 2] = $3;
 $9 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$9) $14 = $3; else {
  HEAP32[$this >> 2] = $9;
  $14 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $14);
 $15 = $this + 8 | 0;
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 1;
 $20 = 1;
 $__r$0 = $3;
 $18 = $__r$0;
 HEAP32[$agg$result >> 2] = $18;
 $19 = $agg$result + 4 | 0;
 HEAP8[$19 >> 0] = $20;
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13DIEDispatcherD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $18 = 0, $2 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $36 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 4672;
 $0 = $this + 4 | 0;
 $1 = $this + 24 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) {
  __ZNSt3__15stackIN12dwarf2reader13DIEDispatcher12HandlerStackENS_5dequeIS3_NS_9allocatorIS3_EEEEED2Ev($0);
  return;
 }
 $4 = $this + 20 | 0;
 $5 = $this + 8 | 0;
 $6 = $this + 28 | 0;
 $7 = $this + 12 | 0;
 $10 = $2;
 while (1) {
  $8 = HEAP32[$4 >> 2] | 0;
  $11 = $10 + -1 + $8 | 0;
  $12 = HEAP32[$5 >> 2] | 0;
  $18 = HEAP32[(HEAP32[$12 + ($11 >>> 8 << 2) >> 2] | 0) + (($11 & 255) << 4) + 8 >> 2] | 0;
  if (($18 | 0) == 0 ? 1 : ($18 | 0) == (HEAP32[$6 >> 2] | 0)) {
   $26 = $10;
   $30 = $12;
   $36 = $8;
  } else {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$18 >> 2] | 0) + 4 >> 2] & 255]($18);
   $26 = HEAP32[$1 >> 2] | 0;
   $30 = HEAP32[$5 >> 2] | 0;
   $36 = HEAP32[$4 >> 2] | 0;
  }
  $25 = $26 + -1 | 0;
  HEAP32[$1 >> 2] = $25;
  $27 = HEAP32[$7 >> 2] | 0;
  if ((1 - $26 - $36 + (($27 | 0) == ($30 | 0) ? 0 : ($27 - $30 << 6) + -1 | 0) | 0) >>> 0 > 511) {
   __ZdlPv(HEAP32[$27 + -4 >> 2] | 0);
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -4;
   $40 = HEAP32[$1 >> 2] | 0;
  } else $40 = $25;
  if (!$40) break; else $10 = $40;
 }
 __ZNSt3__15stackIN12dwarf2reader13DIEDispatcher12HandlerStackENS_5dequeIS3_NS_9allocatorIS3_EEEEED2Ev($0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$03 = 0, $0 = 0, $1 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $30 = 0, $33 = 0, $38 = 0, $45 = 0, $8 = 0, $__p$04 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $16 = 1;
  $17 = ($1 & 255) >>> 1;
  $45 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $16 = ($8 & -2) + -1 | 0;
  $17 = HEAP32[$this + 4 >> 2] | 0;
  $45 = $8 & 255;
 }
 $13 = $__last - $0 >> 2;
 do if ($13) {
  if (($16 - $17 | 0) >>> 0 < $13 >>> 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $16, $17 + $13 - $16 | 0, $17, $17, 0, 0);
   $22 = HEAP8[$this >> 0] | 0;
  } else $22 = $45;
  if (!($22 & 1)) $33 = $this + 4 | 0; else $33 = HEAP32[$this + 8 >> 2] | 0;
  $30 = $17 + (($__last - $0 | 0) >>> 2) | 0;
  if (($__first | 0) != ($__last | 0)) {
   $$03 = $__first;
   $__p$04 = $33 + ($17 << 2) | 0;
   while (1) {
    HEAP32[$__p$04 >> 2] = HEAP32[$$03 >> 2];
    $$03 = $$03 + 4 | 0;
    if (($$03 | 0) == ($__last | 0)) break; else $__p$04 = $__p$04 + 4 | 0;
   }
  }
  HEAP32[$33 + ($30 << 2) >> 2] = 0;
  $38 = $17 + $13 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $38 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $38;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter13DemangleErrorERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi($this, $input, $error) {
 $this = $this | 0;
 $input = $input | 0;
 $error = $error | 0;
 var $0 = 0, $11 = 0, $19 = 0, $21 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $43 = 0, $44 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = $this + 36 | 0;
 $3 = HEAP32[_stderr >> 2] | 0;
 $4 = $this + 4 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  if (!(HEAP8[$4 >> 0] & 1)) $25 = $4 + 1 | 0; else $25 = HEAP32[$this + 12 >> 2] | 0;
  $11 = $this + 24 | 0;
  if (!(HEAP8[$11 >> 0] & 1)) $26 = $11 + 1 | 0; else $26 = HEAP32[$this + 32 >> 2] | 0;
  $19 = $this + 16 | 0;
  $21 = HEAP32[$19 >> 2] | 0;
  $24 = HEAP32[$19 + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $25;
  HEAP32[$vararg_buffer + 4 >> 2] = $26;
  $27 = $vararg_buffer + 8 | 0;
  HEAP32[$27 >> 2] = $21;
  HEAP32[$27 + 4 >> 2] = $24;
  _fprintf($3 | 0, 15058, $vararg_buffer | 0) | 0;
  HEAP8[$0 >> 0] = 1;
 }
 if (!(HEAP8[$4 >> 0] & 1)) $44 = $4 + 1 | 0; else $44 = HEAP32[$this + 12 >> 2] | 0;
 $43 = (HEAP8[$input >> 0] & 1) == 0 ? $input + 1 | 0 : HEAP32[$input + 8 >> 2] | 0;
 HEAP32[$vararg_buffer3 >> 2] = $44;
 HEAP32[$vararg_buffer3 + 4 >> 2] = $43;
 HEAP32[$vararg_buffer3 + 8 >> 2] = $error;
 _fprintf($3 | 0, 15745, $vararg_buffer3 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $31 = 0, $9 = 0;
 if ((-18 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 1 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $17 = $12 >>> 0 < 11 ? 11 : $12 + 16 & -16;
 } else $17 = -17;
 $18 = _malloc($17) | 0;
 if ($__n_copy) _memcpy($18 | 0, $20 | 0, $__n_copy | 0) | 0;
 if ($__n_add) _memcpy($18 + $__n_copy | 0, $__p_new_stuff | 0, $__n_add | 0) | 0;
 $23 = $__old_sz - $__n_del | 0;
 if (($23 | 0) != ($__n_copy | 0)) _memcpy($18 + ($__n_add + $__n_copy) | 0, $20 + ($__n_del + $__n_copy) | 0, $23 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) _free($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 $31 = $23 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $31;
 HEAP8[$18 + $31 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $24 = 0, $32 = 0, $9 = 0;
 if ((1073741806 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $21 = $this + 4 | 0; else $21 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $18 = $12 >>> 0 < 2 ? 2 : $12 + 4 & -4;
 } else $18 = 1073741807;
 $19 = __Znwj($18 << 2) | 0;
 if ($__n_copy) _wmemcpy($19, $21, $__n_copy) | 0;
 if ($__n_add) _wmemcpy($19 + ($__n_copy << 2) | 0, $__p_new_stuff, $__n_add) | 0;
 $24 = $__old_sz - $__n_del | 0;
 if (($24 | 0) != ($__n_copy | 0)) _wmemcpy($19 + ($__n_add + $__n_copy << 2) | 0, $21 + ($__n_del + $__n_copy << 2) | 0, $24 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($21);
 HEAP32[$this + 8 >> 2] = $19;
 HEAP32[$this >> 2] = $18 | 1;
 $32 = $24 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $32;
 HEAP32[$19 + ($32 << 2) >> 2] = 0;
 return;
}

function _MUSL_vfprintf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$0 = 0, $11 = 0, $12 = 0, $2 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $ap2 = sp + 80 | 0;
 $nl_type = sp + 96 | 0;
 $nl_arg = sp;
 $internal_buf = sp + 136 | 0;
 dest = $nl_type;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
 if ((_printf_core(0, $fmt, $ap2, $nl_arg, $nl_type) | 0) < 0) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $2 = $f + 48 | 0;
 if (!(HEAP32[$2 >> 2] | 0)) {
  $6 = $f + 44 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = $internal_buf;
  $8 = $f + 28 | 0;
  HEAP32[$8 >> 2] = $internal_buf;
  $9 = $f + 20 | 0;
  HEAP32[$9 >> 2] = $internal_buf;
  HEAP32[$2 >> 2] = 80;
  $11 = $f + 16 | 0;
  HEAP32[$11 >> 2] = $internal_buf + 80;
  $12 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
  if (!$7) $ret$1 = $12; else {
   FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, 0, 0) | 0;
   $$ = (HEAP32[$9 >> 2] | 0) == 0 ? -1 : $12;
   HEAP32[$6 >> 2] = $7;
   HEAP32[$2 >> 2] = 0;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$8 >> 2] = 0;
   HEAP32[$9 >> 2] = 0;
   $ret$1 = $$;
  }
 } else $ret$1 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
 $$0 = $ret$1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16vectorIyNS_9allocatorIyEEE21__push_back_slow_pathIKyEEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $32 = 0, $35 = 0, $4 = 0, $40 = 0, $41 = 0, $48 = 0, $51 = 0, $52 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 3) + 1 | 0;
 if ($7 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = $this + 8 | 0;
 $12 = $2;
 $13 = (HEAP32[$9 >> 2] | 0) - $12 | 0;
 if ($13 >> 3 >>> 0 < 268435455) {
  $20 = $13 >> 2;
  $22 = $20 >>> 0 < $7 >>> 0 ? $7 : $20;
  $25 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $26 = $25 >> 3;
  if (!$22) {
   $$0$i3 = 0;
   $31 = 0;
   $32 = $26;
   $48 = $25;
  } else {
   $$0$i2 = $22;
   $51 = $26;
   $52 = $25;
   label = 6;
  }
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $$0$i2 = 536870911;
  $51 = $18 >> 3;
  $52 = $18;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $31 = __Znwj($$0$i2 << 3) | 0;
  $32 = $51;
  $48 = $52;
 }
 $35 = $__x;
 $40 = HEAP32[$35 + 4 >> 2] | 0;
 $41 = $31 + ($32 << 3) | 0;
 HEAP32[$41 >> 2] = HEAP32[$35 >> 2];
 HEAP32[$41 + 4 >> 2] = $40;
 _memcpy($31 | 0, $2 | 0, $48 | 0) | 0;
 HEAP32[$this >> 2] = $31;
 HEAP32[$0 >> 2] = $31 + ($32 + 1 << 3);
 HEAP32[$9 >> 2] = $31 + ($$0$i3 << 3);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $31 = 0, $9 = 0;
 if ((-18 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 1 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $17 = $12 >>> 0 < 11 ? 11 : $12 + 16 & -16;
 } else $17 = -17;
 $18 = __Znwj($17) | 0;
 if ($__n_copy) _memcpy($18 | 0, $20 | 0, $__n_copy | 0) | 0;
 if ($__n_add) _memcpy($18 + $__n_copy | 0, $__p_new_stuff | 0, $__n_add | 0) | 0;
 $23 = $__old_sz - $__n_del | 0;
 if (($23 | 0) != ($__n_copy | 0)) _memcpy($18 + ($__n_add + $__n_copy) | 0, $20 + ($__n_del + $__n_copy) | 0, $23 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 $31 = $23 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $31;
 HEAP8[$18 + $31 >> 0] = 0;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter25UnhandledInterCUReferenceEyy($this, $0, $1, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $15 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $4 = 0, $41 = 0, $42 = 0, $46 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $4 = $this + 36 | 0;
 $7 = HEAP32[_stderr >> 2] | 0;
 $8 = $this + 4 | 0;
 if (!(HEAP8[$4 >> 0] | 0)) {
  if (!(HEAP8[$8 >> 0] & 1)) $29 = $8 + 1 | 0; else $29 = HEAP32[$this + 12 >> 2] | 0;
  $15 = $this + 24 | 0;
  if (!(HEAP8[$15 >> 0] & 1)) $30 = $15 + 1 | 0; else $30 = HEAP32[$this + 32 >> 2] | 0;
  $23 = $this + 16 | 0;
  $25 = HEAP32[$23 >> 2] | 0;
  $28 = HEAP32[$23 + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $29;
  HEAP32[$vararg_buffer + 4 >> 2] = $30;
  $31 = $vararg_buffer + 8 | 0;
  HEAP32[$31 >> 2] = $25;
  HEAP32[$31 + 4 >> 2] = $28;
  _fprintf($7 | 0, 15058, $vararg_buffer | 0) | 0;
  HEAP8[$4 >> 0] = 1;
 }
 if (!(HEAP8[$8 >> 0] & 1)) $41 = $8 + 1 | 0; else $41 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer3 >> 2] = $41;
 $42 = $vararg_buffer3 + 8 | 0;
 HEAP32[$42 >> 2] = $0;
 HEAP32[$42 + 4 >> 2] = $1;
 $46 = $vararg_buffer3 + 16 | 0;
 HEAP32[$46 >> 2] = $2;
 HEAP32[$46 + 4 >> 2] = $3;
 _fprintf($7 | 0, 15795, $vararg_buffer3 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader15CompilationUnitD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $__f$01$i$i$i$i$i$i$i$i$i = 0, $__f$01$i$i$i$i$i$i$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 4792;
 $1 = HEAP32[$this + 80 >> 2] | 0;
 if (!$1) {
  __ZdlPv($this);
  return;
 }
 $3 = HEAP32[$1 >> 2] | 0;
 if ($3) {
  $5 = $1 + 4 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (($6 | 0) == ($3 | 0)) $29 = $3; else {
   $9 = $6;
   while (1) {
    $8 = $9 + -32 | 0;
    HEAP32[$5 >> 2] = $8;
    $10 = $9 + -16 | 0;
    $11 = $9 + -8 | 0;
    if (!(HEAP32[$11 >> 2] | 0)) $15 = $8; else {
     $17 = HEAP32[$9 + -12 >> 2] | 0;
     $19 = (HEAP32[$10 >> 2] | 0) + 4 | 0;
     $21 = HEAP32[$17 >> 2] | 0;
     HEAP32[$21 + 4 >> 2] = HEAP32[$19 >> 2];
     HEAP32[HEAP32[$19 >> 2] >> 2] = $21;
     HEAP32[$11 >> 2] = 0;
     if (($17 | 0) == ($10 | 0)) $15 = $8; else {
      $__f$01$i$i$i$i$i$i$i$i$i = $17;
      do {
       $__f$01$i$i$i$i$i$i$i$i$i$looptemp = $__f$01$i$i$i$i$i$i$i$i$i;
       $__f$01$i$i$i$i$i$i$i$i$i = HEAP32[$__f$01$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$i$i$i$i$i$i$i$looptemp);
      } while (($__f$01$i$i$i$i$i$i$i$i$i | 0) != ($10 | 0));
      $15 = HEAP32[$5 >> 2] | 0;
     }
    }
    if (($15 | 0) == ($3 | 0)) break; else $9 = $15;
   }
   $29 = HEAP32[$1 >> 2] | 0;
  }
  __ZdlPv($29);
 }
 __ZdlPv($1);
 __ZdlPv($this);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter21UnknownAbstractOriginEyy($this, $0, $1, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $15 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $4 = 0, $41 = 0, $42 = 0, $46 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $4 = $this + 36 | 0;
 $7 = HEAP32[_stderr >> 2] | 0;
 $8 = $this + 4 | 0;
 if (!(HEAP8[$4 >> 0] | 0)) {
  if (!(HEAP8[$8 >> 0] & 1)) $29 = $8 + 1 | 0; else $29 = HEAP32[$this + 12 >> 2] | 0;
  $15 = $this + 24 | 0;
  if (!(HEAP8[$15 >> 0] & 1)) $30 = $15 + 1 | 0; else $30 = HEAP32[$this + 32 >> 2] | 0;
  $23 = $this + 16 | 0;
  $25 = HEAP32[$23 >> 2] | 0;
  $28 = HEAP32[$23 + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $29;
  HEAP32[$vararg_buffer + 4 >> 2] = $30;
  $31 = $vararg_buffer + 8 | 0;
  HEAP32[$31 >> 2] = $25;
  HEAP32[$31 + 4 >> 2] = $28;
  _fprintf($7 | 0, 15058, $vararg_buffer | 0) | 0;
  HEAP8[$4 >> 0] = 1;
 }
 if (!(HEAP8[$8 >> 0] & 1)) $41 = $8 + 1 | 0; else $41 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer3 >> 2] = $41;
 $42 = $vararg_buffer3 + 8 | 0;
 HEAP32[$42 >> 2] = $0;
 HEAP32[$42 + 4 >> 2] = $1;
 $46 = $vararg_buffer3 + 16 | 0;
 HEAP32[$46 >> 2] = $2;
 HEAP32[$46 + 4 >> 2] = $3;
 _fprintf($7 | 0, 15283, $vararg_buffer3 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter20UnknownSpecificationEyy($this, $0, $1, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $15 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $4 = 0, $41 = 0, $42 = 0, $46 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $4 = $this + 36 | 0;
 $7 = HEAP32[_stderr >> 2] | 0;
 $8 = $this + 4 | 0;
 if (!(HEAP8[$4 >> 0] | 0)) {
  if (!(HEAP8[$8 >> 0] & 1)) $29 = $8 + 1 | 0; else $29 = HEAP32[$this + 12 >> 2] | 0;
  $15 = $this + 24 | 0;
  if (!(HEAP8[$15 >> 0] & 1)) $30 = $15 + 1 | 0; else $30 = HEAP32[$this + 32 >> 2] | 0;
  $23 = $this + 16 | 0;
  $25 = HEAP32[$23 >> 2] | 0;
  $28 = HEAP32[$23 + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $29;
  HEAP32[$vararg_buffer + 4 >> 2] = $30;
  $31 = $vararg_buffer + 8 | 0;
  HEAP32[$31 >> 2] = $25;
  HEAP32[$31 + 4 >> 2] = $28;
  _fprintf($7 | 0, 15058, $vararg_buffer | 0) | 0;
  HEAP8[$4 >> 0] = 1;
 }
 if (!(HEAP8[$8 >> 0] & 1)) $41 = $8 + 1 | 0; else $41 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer3 >> 2] = $41;
 $42 = $vararg_buffer3 + 8 | 0;
 HEAP32[$42 >> 2] = $0;
 HEAP32[$42 + 4 >> 2] = $1;
 $46 = $vararg_buffer3 + 16 | 0;
 HEAP32[$46 >> 2] = $2;
 HEAP32[$46 + 4 >> 2] = $3;
 _fprintf($7 | 0, 15105, $vararg_buffer3 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule11FileContextD2Ev($this) {
 $this = $this | 0;
 var $$01$i$i$i$i = 0, $1 = 0, $10 = 0, $15 = 0, $$01$i$i$i$i$looptemp = 0;
 $1 = HEAP32[$this + 32 >> 2] | 0;
 if ($1) {
  __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad14AbstractOriginEEENS_19__map_value_compareIyS4_NS_4lessIyEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($1 + 32 | 0, HEAP32[$1 + 36 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad15DwarfCUToModule13SpecificationEEENS_19__map_value_compareIyS5_NS_4lessIyEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE($1 + 20 | 0, HEAP32[$1 + 24 >> 2] | 0);
  $10 = HEAP32[$1 + 8 >> 2] | 0;
  if ($10) {
   $$01$i$i$i$i = $10;
   do {
    $$01$i$i$i$i$looptemp = $$01$i$i$i$i;
    $$01$i$i$i$i = HEAP32[$$01$i$i$i$i >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$01$i$i$i$i$looptemp + 8 | 0);
    __ZdlPv($$01$i$i$i$i$looptemp);
   } while (($$01$i$i$i$i | 0) != 0);
  }
  $15 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  if ($15) __ZdlPv($15);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this + 12 | 0, HEAP32[$this + 16 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 return;
}

function ___strchrnul($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $$0 = 0, $$02$lcssa = 0, $$0211 = 0, $$1 = 0, $0 = 0, $11 = 0, $15 = 0, $16 = 0, $22 = 0, $23 = 0, $29 = 0, $36 = 0, $37 = 0, $5 = 0, $8 = 0, $w$0$lcssa = 0, $w$08 = 0;
 $0 = $c & 255;
 if (!$0) {
  $$0 = $s + (_strlen($s | 0) | 0) | 0;
  return $$0 | 0;
 }
 L5 : do if (!($s & 3)) $$02$lcssa = $s; else {
  $5 = $c & 255;
  $$0211 = $s;
  while (1) {
   $8 = HEAP8[$$0211 >> 0] | 0;
   if ($8 << 24 >> 24 == 0 ? 1 : $8 << 24 >> 24 == $5 << 24 >> 24) {
    $$0 = $$0211;
    break;
   }
   $11 = $$0211 + 1 | 0;
   if (!($11 & 3)) {
    $$02$lcssa = $11;
    break L5;
   } else $$0211 = $11;
  }
  return $$0 | 0;
 } while (0);
 $15 = Math_imul($0, 16843009) | 0;
 $16 = HEAP32[$$02$lcssa >> 2] | 0;
 L12 : do if (!(($16 & -2139062144 ^ -2139062144) & $16 + -16843009)) {
  $23 = $16;
  $w$08 = $$02$lcssa;
  while (1) {
   $22 = $23 ^ $15;
   if (($22 & -2139062144 ^ -2139062144) & $22 + -16843009) {
    $w$0$lcssa = $w$08;
    break L12;
   }
   $29 = $w$08 + 4 | 0;
   $23 = HEAP32[$29 >> 2] | 0;
   if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009) {
    $w$0$lcssa = $29;
    break;
   } else $w$08 = $29;
  }
 } else $w$0$lcssa = $$02$lcssa; while (0);
 $36 = $c & 255;
 $$1 = $w$0$lcssa;
 while (1) {
  $37 = HEAP8[$$1 >> 0] | 0;
  if ($37 << 24 >> 24 == 0 ? 1 : $37 << 24 >> 24 == $36 << 24 >> 24) {
   $$0 = $$1;
   break;
  } else $$1 = $$1 + 1 | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEENS_4lessIS6_EENS4_INS7_IKS6_SA_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $11 = 0, $15 = 0, $20 = 0, $21 = 0, $24 = 0, $3 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEENS_4lessIS6_EENS4_INS7_IKS6_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $24 = $__r$0 + 32 | 0;
  STACKTOP = sp;
  return $24 | 0;
 }
 $3 = __Znwj(48) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3 + 16 | 0, $__k);
 HEAP32[$3 + 32 >> 2] = 0;
 $7 = $3 + 40 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 $11 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $11;
 HEAP32[$0 >> 2] = $3;
 $15 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$15) $20 = $3; else {
  HEAP32[$this >> 2] = $15;
  $20 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $20);
 $21 = $this + 8 | 0;
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 1;
 $__r$0 = $3;
 $24 = $__r$0 + 32 | 0;
 STACKTOP = sp;
 return $24 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter14MissingSectionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $0 = 0, $11 = 0, $19 = 0, $21 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $43 = 0, $44 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = $this + 36 | 0;
 $3 = HEAP32[_stderr >> 2] | 0;
 $4 = $this + 4 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  if (!(HEAP8[$4 >> 0] & 1)) $25 = $4 + 1 | 0; else $25 = HEAP32[$this + 12 >> 2] | 0;
  $11 = $this + 24 | 0;
  if (!(HEAP8[$11 >> 0] & 1)) $26 = $11 + 1 | 0; else $26 = HEAP32[$this + 32 >> 2] | 0;
  $19 = $this + 16 | 0;
  $21 = HEAP32[$19 >> 2] | 0;
  $24 = HEAP32[$19 + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $25;
  HEAP32[$vararg_buffer + 4 >> 2] = $26;
  $27 = $vararg_buffer + 8 | 0;
  HEAP32[$27 >> 2] = $21;
  HEAP32[$27 + 4 >> 2] = $24;
  _fprintf($3 | 0, 15058, $vararg_buffer | 0) | 0;
  HEAP8[$0 >> 0] = 1;
 }
 if (!(HEAP8[$4 >> 0] & 1)) $44 = $4 + 1 | 0; else $44 = HEAP32[$this + 12 >> 2] | 0;
 $43 = (HEAP8[$name >> 0] & 1) == 0 ? $name + 1 | 0 : HEAP32[$name + 8 >> 2] | 0;
 HEAP32[$vararg_buffer3 >> 2] = $44;
 HEAP32[$vararg_buffer3 + 4 >> 2] = $43;
 _fprintf($3 | 0, 15459, $vararg_buffer3 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $24 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $24 = ($6 & 255) >>> 1; else $24 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($24 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $24 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $24 = ($6 & 255) >>> 1; else $24 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($24 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPN15google_breakpad6Module15StackFrameEntryENS_9allocatorIS4_EEE21__push_back_slow_pathIKS4_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $32 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = $this + 8 | 0;
 $12 = $2;
 $13 = (HEAP32[$9 >> 2] | 0) - $12 | 0;
 if ($13 >> 2 >>> 0 < 536870911) {
  $20 = $13 >> 1;
  $22 = $20 >>> 0 < $7 >>> 0 ? $7 : $20;
  $25 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $26 = $25 >> 2;
  if (!$22) {
   $$0$i3 = 0;
   $31 = 0;
   $32 = $26;
   $39 = $25;
  } else {
   $$0$i2 = $22;
   $42 = $26;
   $43 = $25;
   label = 6;
  }
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $$0$i2 = 1073741823;
  $42 = $18 >> 2;
  $43 = $18;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $31 = __Znwj($$0$i2 << 2) | 0;
  $32 = $42;
  $39 = $43;
 }
 HEAP32[$31 + ($32 << 2) >> 2] = HEAP32[$__x >> 2];
 _memcpy($31 | 0, $2 | 0, $39 | 0) | 0;
 HEAP32[$this >> 2] = $31;
 HEAP32[$0 >> 2] = $31 + ($32 + 1 << 2);
 HEAP32[$9 >> 2] = $31 + ($$0$i3 << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $19 = 0, $3 = 0, $5 = 0, $6 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $19 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $19 | 0;
 }
 $3 = __Znwj(40) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3 + 16 | 0, $__k);
 $5 = $3 + 28 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 $6 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $6;
 HEAP32[$0 >> 2] = $3;
 $10 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$10) $15 = $3; else {
  HEAP32[$this >> 2] = $10;
  $15 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $15);
 $16 = $this + 8 | 0;
 HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
 $__r$0 = $3;
 $19 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $19 | 0;
}

function __ZN12dwarf2reader15CompilationUnitD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $__f$01$i$i$i$i$i$i$i$i = 0, $__f$01$i$i$i$i$i$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 4792;
 $1 = HEAP32[$this + 80 >> 2] | 0;
 if (!$1) return;
 $3 = HEAP32[$1 >> 2] | 0;
 if ($3) {
  $5 = $1 + 4 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (($6 | 0) == ($3 | 0)) $29 = $3; else {
   $9 = $6;
   while (1) {
    $8 = $9 + -32 | 0;
    HEAP32[$5 >> 2] = $8;
    $10 = $9 + -16 | 0;
    $11 = $9 + -8 | 0;
    if (!(HEAP32[$11 >> 2] | 0)) $15 = $8; else {
     $17 = HEAP32[$9 + -12 >> 2] | 0;
     $19 = (HEAP32[$10 >> 2] | 0) + 4 | 0;
     $21 = HEAP32[$17 >> 2] | 0;
     HEAP32[$21 + 4 >> 2] = HEAP32[$19 >> 2];
     HEAP32[HEAP32[$19 >> 2] >> 2] = $21;
     HEAP32[$11 >> 2] = 0;
     if (($17 | 0) == ($10 | 0)) $15 = $8; else {
      $__f$01$i$i$i$i$i$i$i$i = $17;
      do {
       $__f$01$i$i$i$i$i$i$i$i$looptemp = $__f$01$i$i$i$i$i$i$i$i;
       $__f$01$i$i$i$i$i$i$i$i = HEAP32[$__f$01$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$i$i$i$i$i$i$looptemp);
      } while (($__f$01$i$i$i$i$i$i$i$i | 0) != ($10 | 0));
      $15 = HEAP32[$5 >> 2] | 0;
     }
    }
    if (($15 | 0) == ($3 | 0)) break; else $9 = $15;
   }
   $29 = HEAP32[$1 >> 2] | 0;
  }
  __ZdlPv($29);
 }
 __ZdlPv($1);
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i1 = 0, $$pre$i = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $22 = 0, $4 = 0, $5 = 0, $__v = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v = sp;
 $4 = HEAP32[$this + 8 >> 2] | 0;
 $5 = HEAP32[$this + 4 >> 2] | 0;
 if ($4 - $5 >> 2 >>> 0 < $__n >>> 0) {
  $11 = HEAP32[$this >> 2] | 0;
  $13 = $5 - $11 >> 2;
  $14 = $13 + $__n | 0;
  if ($14 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $16 = $4 - $11 | 0;
  if ($16 >> 2 >>> 0 < 536870911) {
   $19 = $16 >> 1;
   $$0$i1 = $19 >>> 0 < $14 >>> 0 ? $14 : $19;
  } else $$0$i1 = 1073741823;
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v, $$0$i1, $13, $this + 16 | 0);
  $22 = $__v + 8 | 0;
  $$pre$i = HEAP32[$22 >> 2] | 0;
  _memset($$pre$i | 0, 0, $__n << 2 | 0) | 0;
  HEAP32[$22 >> 2] = $$pre$i + ($__n << 2);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPN15google_breakpad6Module8FunctionENS_9allocatorIS4_EEE21__push_back_slow_pathIKS4_EEvRT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $32 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $7 = 0, $9 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = $this + 8 | 0;
 $12 = $2;
 $13 = (HEAP32[$9 >> 2] | 0) - $12 | 0;
 if ($13 >> 2 >>> 0 < 536870911) {
  $20 = $13 >> 1;
  $22 = $20 >>> 0 < $7 >>> 0 ? $7 : $20;
  $25 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $26 = $25 >> 2;
  if (!$22) {
   $$0$i3 = 0;
   $31 = 0;
   $32 = $26;
   $39 = $25;
  } else {
   $$0$i2 = $22;
   $42 = $26;
   $43 = $25;
   label = 6;
  }
 } else {
  $18 = (HEAP32[$0 >> 2] | 0) - $12 | 0;
  $$0$i2 = 1073741823;
  $42 = $18 >> 2;
  $43 = $18;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $31 = __Znwj($$0$i2 << 2) | 0;
  $32 = $42;
  $39 = $43;
 }
 HEAP32[$31 + ($32 << 2) >> 2] = HEAP32[$__x >> 2];
 _memcpy($31 | 0, $2 | 0, $39 | 0) | 0;
 HEAP32[$this >> 2] = $31;
 HEAP32[$0 >> 2] = $31 + ($32 + 1 << 2);
 HEAP32[$9 >> 2] = $31 + ($$0$i3 << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $22 = 0, $25 = 0, $4 = 0, $6 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__nar = sp + 4 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $6 = HEAP32[$__s >> 2] | 0;
 if (($__nar | 0) == ($4 | 0)) $$lcssa = $6; else {
  $$0$i$i2 = $__nar;
  $10 = $6;
  while (1) {
   $8 = HEAP8[$$0$i$i2 >> 0] | 0;
   do if (!$10) $25 = 0; else {
    $11 = $10 + 24 | 0;
    $12 = HEAP32[$11 >> 2] | 0;
    if (($12 | 0) == (HEAP32[$10 + 28 >> 2] | 0)) {
     $22 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 31]($10, $8 & 255) | 0) == -1;
     $25 = $22 ? 0 : $10;
     break;
    } else {
     HEAP32[$11 >> 2] = $12 + 1;
     HEAP8[$12 >> 0] = $8;
     $25 = $10;
     break;
    }
   } while (0);
   $$0$i$i2 = $$0$i$i2 + 1 | 0;
   if (($$0$i$i2 | 0) == ($4 | 0)) {
    $$lcssa = $25;
    break;
   } else $10 = $25;
  }
 }
 STACKTOP = sp;
 return $$lcssa | 0;
}

function ___shgetc($f) {
 $f = $f | 0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $21 = 0, $26 = 0, $28 = 0, $31 = 0, $36 = 0, $41 = 0, $6 = 0, $9 = 0, label = 0;
 $0 = $f + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) label = 3; else if ((HEAP32[$f + 108 >> 2] | 0) < ($1 | 0)) label = 3;
 if ((label | 0) == 3) {
  $6 = ___uflow($f) | 0;
  if (($6 | 0) >= 0) {
   $9 = HEAP32[$0 >> 2] | 0;
   $$phi$trans$insert = $f + 8 | 0;
   if (!$9) {
    $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
    $26 = $$pre;
    $41 = $$pre;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert >> 2] | 0;
    $14 = HEAP32[$f + 4 >> 2] | 0;
    $15 = $12;
    $21 = $9 - (HEAP32[$f + 108 >> 2] | 0) + -1 | 0;
    if (($15 - $14 | 0) > ($21 | 0)) {
     HEAP32[$f + 100 >> 2] = $14 + $21;
     $28 = $12;
    } else {
     $26 = $15;
     $41 = $12;
     label = 9;
    }
   }
   if ((label | 0) == 9) {
    HEAP32[$f + 100 >> 2] = $26;
    $28 = $41;
   }
   $$pre4 = HEAP32[$f + 4 >> 2] | 0;
   if ($28) {
    $31 = $f + 108 | 0;
    HEAP32[$31 >> 2] = $28 + 1 - $$pre4 + (HEAP32[$31 >> 2] | 0);
   }
   $36 = $$pre4 + -1 | 0;
   if ((HEAPU8[$36 >> 0] | 0 | 0) == ($6 | 0)) {
    $$0 = $6;
    return $$0 | 0;
   }
   HEAP8[$36 >> 0] = $6;
   $$0 = $6;
   return $$0 | 0;
  }
 }
 HEAP32[$f + 100 >> 2] = 0;
 $$0 = -1;
 return $$0 | 0;
}

function __ZN15google_breakpadL8DemangleERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($agg$result, $mangled) {
 $agg$result = $agg$result | 0;
 $mangled = $mangled | 0;
 var $10 = 0, $12 = 0, $20 = 0, $24 = 0, $26 = 0, $3 = 0, $5 = 0, $7 = 0, $demangled$0 = 0, $status = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $status = sp;
 HEAP32[$status >> 2] = 0;
 $3 = $mangled + 8 | 0;
 $5 = $mangled + 1 | 0;
 $7 = ___cxa_demangle((HEAP8[$mangled >> 0] & 1) == 0 ? $5 : HEAP32[$3 >> 2] | 0, 0, 0, $status) | 0;
 if (!(HEAP32[$status >> 2] | 0)) {
  $26 = 1;
  $demangled$0 = $7;
  label = 5;
 } else {
  $10 = HEAP8[$mangled >> 0] | 0;
  $12 = ($10 & 1) == 0;
  if (($12 ? ($10 & 255) >>> 1 : HEAP32[$mangled + 4 >> 2] | 0) >>> 0 > 1) {
   $20 = $12 ? $5 : HEAP32[$3 >> 2] | 0;
   if ((HEAP8[$20 >> 0] | 0) == 95) {
    $24 = ___cxa_demangle($20 + 1 | 0, 0, 0, $status) | 0;
    $26 = (HEAP32[$status >> 2] | 0) == 0;
    $demangled$0 = $24;
    label = 5;
   }
  }
 }
 if ((label | 0) == 5) if (($demangled$0 | 0) != 0 & $26) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, $demangled$0, _strlen($demangled$0 | 0) | 0);
  _free($demangled$0);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $mangled);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $24 = 0, $4 = 0, $6 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $__nar = sp + 8 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $6 = HEAP32[$__s >> 2] | 0;
 if (($__nar | 0) == ($4 | 0)) $$lcssa = $6; else {
  $$0$i$i2 = $__nar;
  $10 = $6;
  while (1) {
   $8 = HEAP32[$$0$i$i2 >> 2] | 0;
   if (!$10) $24 = 0; else {
    $11 = $10 + 24 | 0;
    $12 = HEAP32[$11 >> 2] | 0;
    if (($12 | 0) == (HEAP32[$10 + 28 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 31]($10, $8) | 0; else {
     HEAP32[$11 >> 2] = $12 + 4;
     HEAP32[$12 >> 2] = $8;
     $$0$i$i$i$i = $8;
    }
    $24 = ($$0$i$i$i$i | 0) == -1 ? 0 : $10;
   }
   $$0$i$i2 = $$0$i$i2 + 4 | 0;
   if (($$0$i$i2 | 0) == ($4 | 0)) {
    $$lcssa = $24;
    break;
   } else $10 = $24;
  }
 }
 STACKTOP = sp;
 return $$lcssa | 0;
}

function ___fwritex($s, $l, $f) {
 $s = $s | 0;
 $l = $l | 0;
 $f = $f | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $19 = 0, $29 = 0, $5 = 0, $6 = 0, $8 = 0, $i$0 = 0, $i$0$lcssa10 = 0, $i$1 = 0;
 $0 = $f + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) if (!(___towrite($f) | 0)) {
  $8 = HEAP32[$0 >> 2] | 0;
  break;
 } else {
  $$0 = 0;
  return $$0 | 0;
 } else $8 = $1; while (0);
 $5 = $f + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($8 - $6 | 0) >>> 0 < $l >>> 0) {
  $$0 = FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, $s, $l) | 0;
  return $$0 | 0;
 }
 L11 : do if ((HEAP8[$f + 75 >> 0] | 0) > -1) {
  $i$0 = $l;
  while (1) {
   if (!$i$0) {
    $$01 = $l;
    $$02 = $s;
    $29 = $6;
    $i$1 = 0;
    break L11;
   }
   $19 = $i$0 + -1 | 0;
   if ((HEAP8[$s + $19 >> 0] | 0) == 10) {
    $i$0$lcssa10 = $i$0;
    break;
   } else $i$0 = $19;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, $s, $i$0$lcssa10) | 0) >>> 0 < $i$0$lcssa10 >>> 0) {
   $$0 = $i$0$lcssa10;
   return $$0 | 0;
  } else {
   $$01 = $l - $i$0$lcssa10 | 0;
   $$02 = $s + $i$0$lcssa10 | 0;
   $29 = HEAP32[$5 >> 2] | 0;
   $i$1 = $i$0$lcssa10;
   break;
  }
 } else {
  $$01 = $l;
  $$02 = $s;
  $29 = $6;
  $i$1 = 0;
 } while (0);
 _memcpy($29 | 0, $$02 | 0, $$01 | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$01;
 $$0 = $i$1 + $$01 | 0;
 return $$0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter17BadLineInfoOffsetEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $39 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = $this + 36 | 0;
 $5 = HEAP32[_stderr >> 2] | 0;
 $6 = $this + 4 | 0;
 if (!(HEAP8[$2 >> 0] | 0)) {
  if (!(HEAP8[$6 >> 0] & 1)) $27 = $6 + 1 | 0; else $27 = HEAP32[$this + 12 >> 2] | 0;
  $13 = $this + 24 | 0;
  if (!(HEAP8[$13 >> 0] & 1)) $28 = $13 + 1 | 0; else $28 = HEAP32[$this + 32 >> 2] | 0;
  $21 = $this + 16 | 0;
  $23 = HEAP32[$21 >> 2] | 0;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = $27;
  HEAP32[$vararg_buffer + 4 >> 2] = $28;
  $29 = $vararg_buffer + 8 | 0;
  HEAP32[$29 >> 2] = $23;
  HEAP32[$29 + 4 >> 2] = $26;
  _fprintf($5 | 0, 15058, $vararg_buffer | 0) | 0;
  HEAP8[$2 >> 0] = 1;
 }
 if (!(HEAP8[$6 >> 0] & 1)) {
  $39 = $6 + 1 | 0;
  HEAP32[$vararg_buffer3 >> 2] = $39;
  _fprintf($5 | 0, 15506, $vararg_buffer3 | 0) | 0;
  STACKTOP = sp;
  return;
 } else {
  $39 = HEAP32[$this + 12 >> 2] | 0;
  HEAP32[$vararg_buffer3 >> 2] = $39;
  _fprintf($5 | 0, 15506, $vararg_buffer3 | 0) | 0;
  STACKTOP = sp;
  return;
 }
}

function __ZN15google_breakpad11StabsReader7ProcessEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 $0 = $this + 16 | 0;
 $1 = $this + 32 | 0;
 if (HEAP8[$1 >> 0] | 0) {
  $$0 = 1;
  return $$0 | 0;
 }
 $4 = $this + 44 | 0;
 $5 = $this + 36 | 0;
 $6 = $this + 56 | 0;
 $7 = $this + 68 | 0;
 $8 = $this + 64 | 0;
 $9 = $this + 48 | 0;
 L4 : while (1) {
  $10 = HEAP8[$4 >> 0] | 0;
  switch ($10 << 24 >> 24) {
  case 100:
   {
    if (!(__ZN15google_breakpad11StabsReader22ProcessCompilationUnitEv($this) | 0)) {
     $$0 = 0;
     label = 11;
     break L4;
    }
    break;
   }
  case 0:
   {
    if (!(HEAP8[$6 >> 0] | 0)) label = 10; else {
     HEAP32[$8 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
     __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
     HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
    }
    break;
   }
  default:
   if (($10 & -18) << 24 >> 24 == 14) __ZN15google_breakpad11StabsReader13ProcessExternEv($this) | 0; else label = 10;
  }
  if ((label | 0) == 10) {
   label = 0;
   __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($0);
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
  }
  if (HEAP8[$1 >> 0] | 0) {
   $$0 = 1;
   label = 11;
   break;
  }
 }
 if ((label | 0) == 11) return $$0 | 0;
 return 0;
}

function __ZNK12dwarf2reader13CallFrameInfo17ValExpressionRuleeqERKNS0_4RuleE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $11 = 0, $12 = 0, $14 = 0, $2 = 0, $24 = 0, $28 = 0, $39 = 0, $4 = 0, $6 = 0, $__lhs_sz$05$i = 0, $__lp$03$i = 0, $__rp$04$i = 0, label = 0;
 $0 = ___dynamic_cast($rhs, 312, 416, 0) | 0;
 if (!$0) {
  $39 = 0;
  return $39 | 0;
 }
 $2 = $this + 4 | 0;
 $4 = HEAP8[$2 >> 0] | 0;
 $6 = ($4 & 1) == 0;
 $11 = $6 ? ($4 & 255) >>> 1 : HEAP32[$this + 8 >> 2] | 0;
 $12 = HEAP8[$0 + 4 >> 0] | 0;
 $14 = ($12 & 1) == 0;
 if (($11 | 0) != (($14 ? ($12 & 255) >>> 1 : HEAP32[$0 + 8 >> 2] | 0) | 0)) {
  $39 = 0;
  return $39 | 0;
 }
 $24 = $6 ? $2 + 1 | 0 : HEAP32[$this + 12 >> 2] | 0;
 $28 = $14 ? $0 + 5 | 0 : HEAP32[$0 + 12 >> 2] | 0;
 if (!$6) {
  $39 = (_memcmp($24, $28, $11) | 0) == 0;
  return $39 | 0;
 }
 if (!$11) {
  $39 = 1;
  return $39 | 0;
 } else {
  $__lhs_sz$05$i = $11;
  $__lp$03$i = $24;
  $__rp$04$i = $28;
 }
 while (1) {
  if ((HEAP8[$__lp$03$i >> 0] | 0) != (HEAP8[$__rp$04$i >> 0] | 0)) {
   $39 = 0;
   label = 8;
   break;
  }
  $__lhs_sz$05$i = $__lhs_sz$05$i + -1 | 0;
  if (!$__lhs_sz$05$i) {
   $39 = 1;
   label = 8;
   break;
  } else {
   $__lp$03$i = $__lp$03$i + 1 | 0;
   $__rp$04$i = $__rp$04$i + 1 | 0;
  }
 }
 if ((label | 0) == 8) return $39 | 0;
 return 0;
}

function __ZNK12dwarf2reader13CallFrameInfo14ExpressionRuleeqERKNS0_4RuleE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $11 = 0, $12 = 0, $14 = 0, $2 = 0, $24 = 0, $28 = 0, $39 = 0, $4 = 0, $6 = 0, $__lhs_sz$05$i = 0, $__lp$03$i = 0, $__rp$04$i = 0, label = 0;
 $0 = ___dynamic_cast($rhs, 312, 352, 0) | 0;
 if (!$0) {
  $39 = 0;
  return $39 | 0;
 }
 $2 = $this + 4 | 0;
 $4 = HEAP8[$2 >> 0] | 0;
 $6 = ($4 & 1) == 0;
 $11 = $6 ? ($4 & 255) >>> 1 : HEAP32[$this + 8 >> 2] | 0;
 $12 = HEAP8[$0 + 4 >> 0] | 0;
 $14 = ($12 & 1) == 0;
 if (($11 | 0) != (($14 ? ($12 & 255) >>> 1 : HEAP32[$0 + 8 >> 2] | 0) | 0)) {
  $39 = 0;
  return $39 | 0;
 }
 $24 = $6 ? $2 + 1 | 0 : HEAP32[$this + 12 >> 2] | 0;
 $28 = $14 ? $0 + 5 | 0 : HEAP32[$0 + 12 >> 2] | 0;
 if (!$6) {
  $39 = (_memcmp($24, $28, $11) | 0) == 0;
  return $39 | 0;
 }
 if (!$11) {
  $39 = 1;
  return $39 | 0;
 } else {
  $__lhs_sz$05$i = $11;
  $__lp$03$i = $24;
  $__rp$04$i = $28;
 }
 while (1) {
  if ((HEAP8[$__lp$03$i >> 0] | 0) != (HEAP8[$__rp$04$i >> 0] | 0)) {
   $39 = 0;
   label = 8;
   break;
  }
  $__lhs_sz$05$i = $__lhs_sz$05$i + -1 | 0;
  if (!$__lhs_sz$05$i) {
   $39 = 1;
   label = 8;
   break;
  } else {
   $__lp$03$i = $__lp$03$i + 1 | 0;
   $__rp$04$i = $__rp$04$i + 1 | 0;
  }
 }
 if ((label | 0) == 8) return $39 | 0;
 return 0;
}

function __ZN15google_breakpad8MD5FinalEPhPNS_10MD5ContextE($digest, $ctx) {
 $digest = $digest | 0;
 $ctx = $ctx | 0;
 var $$pre$phi3Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, dest = 0, src = 0, stop = 0;
 $0 = $ctx + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = $1 >>> 3 & 63;
 $4 = $ctx + 24 | 0;
 $6 = $3 + 1 + ($ctx + 24) | 0;
 HEAP8[$ctx + 24 + $3 >> 0] = -128;
 $7 = $3 ^ 63;
 if ($7 >>> 0 < 8) {
  _memset($6 | 0, 0, $7 | 0) | 0;
  __ZN15google_breakpadL12MD5TransformEPjPKj($ctx, $4);
  dest = $4;
  stop = dest + 56 | 0;
  do {
   HEAP8[dest >> 0] = 0;
   dest = dest + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $$pre$phi3Z2D = $ctx;
  $$pre$phiZ2D = $4;
  $11 = HEAP32[$0 >> 2] | 0;
 } else {
  _memset($6 | 0, 0, $7 + -8 | 0) | 0;
  $$pre$phi3Z2D = $ctx;
  $$pre$phiZ2D = $4;
  $11 = $1;
 }
 HEAP32[$ctx + 80 >> 2] = $11;
 HEAP32[$ctx + 84 >> 2] = HEAP32[$ctx + 20 >> 2];
 __ZN15google_breakpadL12MD5TransformEPjPKj($$pre$phi3Z2D, $$pre$phiZ2D);
 dest = $digest;
 src = $ctx;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $ctx;
 stop = dest + 88 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZN15google_breakpad11StabsReaderC2EPKhjS2_jbjbPNS_12StabsHandlerE($this, $stab, $stab_size, $stabstr, $stabstr_size, $big_endian, $value_size, $unitized, $handler) {
 $this = $this | 0;
 $stab = $stab | 0;
 $stab_size = $stab_size | 0;
 $stabstr = $stabstr | 0;
 $stabstr_size = $stabstr_size | 0;
 $big_endian = $big_endian | 0;
 $value_size = $value_size | 0;
 $unitized = $unitized | 0;
 $handler = $handler | 0;
 var $16 = 0, $5 = 0;
 HEAP32[$this >> 2] = $stab;
 HEAP32[$this + 4 >> 2] = $stab + $stab_size;
 HEAP32[$this + 8 >> 2] = $stabstr;
 HEAP32[$this + 12 >> 2] = $stabstr + $stabstr_size;
 $5 = $this + 16 | 0;
 HEAP32[$5 >> 2] = $value_size;
 HEAP32[$this + 20 >> 2] = $this;
 HEAP32[$this + 24 >> 2] = $stab;
 HEAP8[$this + 28 >> 0] = $big_endian & 1;
 HEAP8[$this + 29 >> 0] = 1;
 switch ($value_size | 0) {
 case 4:
 case 8:
  {
   HEAP32[$this + 36 >> 2] = 0;
   __ZN15google_breakpad11StabsReader13EntryIterator5FetchEv($5);
   HEAP8[$this + 56 >> 0] = $unitized & 1;
   HEAP32[$this + 60 >> 2] = $handler;
   $16 = $this + 64 | 0;
   HEAP32[$16 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   HEAP32[$16 + 12 >> 2] = 0;
   HEAP32[$16 + 16 >> 2] = 0;
   HEAP32[$16 + 20 >> 2] = 0;
   return;
  }
 default:
  ___assert_fail(16734, 16769, 122, 16796);
 }
}

function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 L1 : do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  do if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0) {
    $$0 = 2147483647;
    break L1;
   }
  } else {
   if (($5 | 0) < -1 | ($5 | 0) == -1 & $4 >>> 0 < 2147483648) {
    HEAP32[$__err >> 2] = 4;
    break;
   }
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 2147483647) {
    HEAP32[$__err >> 2] = 4;
    $$0 = 2147483647;
    break L1;
   } else {
    $$0 = $4;
    break L1;
   }
  } while (0);
  $$0 = -2147483648;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter15EmptyStateStackEyNS0_9EntryKindEy($this, $0, $1, $kind, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $kind = $kind | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[_stderr >> 2] | 0;
 $5 = $this + 4 | 0;
 if (!(HEAP8[$5 >> 0] & 1)) $19 = $5 + 1 | 0; else $19 = HEAP32[$this + 12 >> 2] | 0;
 switch ($kind | 0) {
 case 0:
  {
   $$0$i = 19278;
   break;
  }
 case 1:
  {
   $$0$i = 19199;
   break;
  }
 case 2:
  {
   $$0$i = 19224;
   break;
  }
 case 3:
  {
   $$0$i = 19248;
   break;
  }
 default:
  ___assert_fail(19155, 18044, 2221, 19190);
 }
 $12 = $this + 16 | 0;
 if (!(HEAP8[$12 >> 0] & 1)) $24 = $12 + 1 | 0; else $24 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $19;
 HEAP32[$vararg_buffer + 4 >> 2] = $$0$i;
 $20 = $vararg_buffer + 8 | 0;
 HEAP32[$20 >> 2] = $0;
 HEAP32[$20 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $24;
 $25 = $vararg_buffer + 24 | 0;
 HEAP32[$25 >> 2] = $2;
 HEAP32[$25 + 4 >> 2] = $3;
 _fprintf($4 | 0, 20484, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter15ClearingCFARuleEyNS0_9EntryKindEy($this, $0, $1, $kind, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $kind = $kind | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[_stderr >> 2] | 0;
 $5 = $this + 4 | 0;
 if (!(HEAP8[$5 >> 0] & 1)) $19 = $5 + 1 | 0; else $19 = HEAP32[$this + 12 >> 2] | 0;
 switch ($kind | 0) {
 case 0:
  {
   $$0$i = 19278;
   break;
  }
 case 1:
  {
   $$0$i = 19199;
   break;
  }
 case 2:
  {
   $$0$i = 19224;
   break;
  }
 case 3:
  {
   $$0$i = 19248;
   break;
  }
 default:
  ___assert_fail(19155, 18044, 2221, 19190);
 }
 $12 = $this + 16 | 0;
 if (!(HEAP8[$12 >> 0] & 1)) $24 = $12 + 1 | 0; else $24 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $19;
 HEAP32[$vararg_buffer + 4 >> 2] = $$0$i;
 $20 = $vararg_buffer + 8 | 0;
 HEAP32[$20 >> 2] = $0;
 HEAP32[$20 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $24;
 $25 = $vararg_buffer + 24 | 0;
 HEAP32[$25 >> 2] = $2;
 HEAP32[$25 + 4 >> 2] = $3;
 _fprintf($4 | 0, 20648, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter14BadInstructionEyNS0_9EntryKindEy($this, $0, $1, $kind, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $kind = $kind | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[_stderr >> 2] | 0;
 $5 = $this + 4 | 0;
 if (!(HEAP8[$5 >> 0] & 1)) $19 = $5 + 1 | 0; else $19 = HEAP32[$this + 12 >> 2] | 0;
 switch ($kind | 0) {
 case 0:
  {
   $$0$i = 19278;
   break;
  }
 case 1:
  {
   $$0$i = 19199;
   break;
  }
 case 2:
  {
   $$0$i = 19224;
   break;
  }
 case 3:
  {
   $$0$i = 19248;
   break;
  }
 default:
  ___assert_fail(19155, 18044, 2221, 19190);
 }
 $12 = $this + 16 | 0;
 if (!(HEAP8[$12 >> 0] & 1)) $24 = $12 + 1 | 0; else $24 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $19;
 HEAP32[$vararg_buffer + 4 >> 2] = $$0$i;
 $20 = $vararg_buffer + 8 | 0;
 HEAP32[$20 >> 2] = $0;
 HEAP32[$20 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $24;
 $25 = $vararg_buffer + 24 | 0;
 HEAP32[$25 >> 2] = $2;
 HEAP32[$25 + 4 >> 2] = $3;
 _fprintf($4 | 0, 20250, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter9NoCFARuleEyNS0_9EntryKindEy($this, $0, $1, $kind, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $kind = $kind | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[_stderr >> 2] | 0;
 $5 = $this + 4 | 0;
 if (!(HEAP8[$5 >> 0] & 1)) $19 = $5 + 1 | 0; else $19 = HEAP32[$this + 12 >> 2] | 0;
 switch ($kind | 0) {
 case 0:
  {
   $$0$i = 19278;
   break;
  }
 case 1:
  {
   $$0$i = 19199;
   break;
  }
 case 2:
  {
   $$0$i = 19224;
   break;
  }
 case 3:
  {
   $$0$i = 19248;
   break;
  }
 default:
  ___assert_fail(19155, 18044, 2221, 19190);
 }
 $12 = $this + 16 | 0;
 if (!(HEAP8[$12 >> 0] & 1)) $24 = $12 + 1 | 0; else $24 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $19;
 HEAP32[$vararg_buffer + 4 >> 2] = $$0$i;
 $20 = $vararg_buffer + 8 | 0;
 HEAP32[$20 >> 2] = $0;
 HEAP32[$20 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $24;
 $25 = $vararg_buffer + 24 | 0;
 HEAP32[$25 >> 2] = $2;
 HEAP32[$25 + 4 >> 2] = $3;
 _fprintf($4 | 0, 20345, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function _vsnprintf($s, $n, $fmt, $ap) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $5 = 0, $8 = 0, $b = 0, $f = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $b = sp + 112 | 0;
 $f = sp;
 dest = $f;
 src = 5764;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($n + -1 | 0) >>> 0 > 2147483646) if (!$n) {
  $$01 = $b;
  $$02 = 1;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$01 = $s;
  $$02 = $n;
 }
 $5 = -2 - $$01 | 0;
 $$$02 = $$02 >>> 0 > $5 >>> 0 ? $5 : $$02;
 HEAP32[$f + 48 >> 2] = $$$02;
 $8 = $f + 20 | 0;
 HEAP32[$8 >> 2] = $$01;
 HEAP32[$f + 44 >> 2] = $$01;
 $10 = $$01 + $$$02 | 0;
 $11 = $f + 16 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$f + 28 >> 2] = $10;
 $13 = _MUSL_vfprintf($f, $fmt, $ap) | 0;
 if (!$$$02) {
  $$0 = $13;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $15 = HEAP32[$8 >> 2] | 0;
 HEAP8[$15 + ((($15 | 0) == (HEAP32[$11 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
 $$0 = $13;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$in = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $19 = 0, $20 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $$in = $3;
 } else $$in = $1;
 $5 = $$in;
 $6 = $this + 8 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $this + 12 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $11 = $7;
 if ($7 >>> 0 >= $9 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$6 >> 2] = $7;
  HEAP32[$8 >> 2] = $9 + -1;
  HEAP32[$this + 16 >> 2] = $5;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 48 >> 2] & 16)) {
  $19 = $__c & 255;
  $20 = $9 + -1 | 0;
  if ($19 << 24 >> 24 == (HEAP8[$20 >> 0] | 0)) {
   $$pre$phi2Z2D = $19;
   $$pre$phiZ2D = $20;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $9 + -1 | 0;
 }
 HEAP32[$6 >> 2] = $11;
 HEAP32[$8 >> 2] = $$pre$phiZ2D;
 HEAP32[$this + 16 >> 2] = $5;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 return $$0 | 0;
}

function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp, $__len, $__signd, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__signd = $__signd | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $10 = 0, $6 = 0, $9 = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 512)) $$1$ph = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1$ph = $$0 + 1 | 0;
 }
 $6 = HEAP8[$__len >> 0] | 0;
 if (!($6 << 24 >> 24)) $$1$lcssa = $$1$ph; else {
  $$012 = $__len;
  $$13 = $$1$ph;
  $10 = $6;
  while (1) {
   $$012 = $$012 + 1 | 0;
   $9 = $$13 + 1 | 0;
   HEAP8[$$13 >> 0] = $10;
   $10 = HEAP8[$$012 >> 0] | 0;
   if (!($10 << 24 >> 24)) {
    $$1$lcssa = $9;
    break;
   } else $$13 = $9;
  }
 }
 L11 : do switch ($__flags & 74 | 0) {
 case 64:
  {
   HEAP8[$$1$lcssa >> 0] = 111;
   break;
  }
 case 8:
  {
   if (!($__flags & 16384)) {
    HEAP8[$$1$lcssa >> 0] = 120;
    break L11;
   } else {
    HEAP8[$$1$lcssa >> 0] = 88;
    break L11;
   }
   break;
  }
 default:
  if ($__signd) {
   HEAP8[$$1$lcssa >> 0] = 100;
   break L11;
  } else {
   HEAP8[$$1$lcssa >> 0] = 117;
   break L11;
  }
 } while (0);
 return;
}

function __Z21breakpad_swap_sectionP7sectionj($s, $nsects) {
 $s = $s | 0;
 $nsects = $nsects | 0;
 var $1 = 0, $10 = 0, $13 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $4 = 0, $7 = 0, $i$01 = 0;
 if (!$nsects) return; else $i$01 = 0;
 do {
  $1 = $s + ($i$01 * 68 | 0) + 32 | 0;
  HEAP32[$1 >> 2] = _llvm_bswap_i32(HEAP32[$1 >> 2] | 0) | 0;
  $4 = $s + ($i$01 * 68 | 0) + 36 | 0;
  HEAP32[$4 >> 2] = _llvm_bswap_i32(HEAP32[$4 >> 2] | 0) | 0;
  $7 = $s + ($i$01 * 68 | 0) + 40 | 0;
  HEAP32[$7 >> 2] = _llvm_bswap_i32(HEAP32[$7 >> 2] | 0) | 0;
  $10 = $s + ($i$01 * 68 | 0) + 44 | 0;
  HEAP32[$10 >> 2] = _llvm_bswap_i32(HEAP32[$10 >> 2] | 0) | 0;
  $13 = $s + ($i$01 * 68 | 0) + 48 | 0;
  HEAP32[$13 >> 2] = _llvm_bswap_i32(HEAP32[$13 >> 2] | 0) | 0;
  $16 = $s + ($i$01 * 68 | 0) + 52 | 0;
  HEAP32[$16 >> 2] = _llvm_bswap_i32(HEAP32[$16 >> 2] | 0) | 0;
  $19 = $s + ($i$01 * 68 | 0) + 56 | 0;
  HEAP32[$19 >> 2] = _llvm_bswap_i32(HEAP32[$19 >> 2] | 0) | 0;
  $22 = $s + ($i$01 * 68 | 0) + 60 | 0;
  HEAP32[$22 >> 2] = _llvm_bswap_i32(HEAP32[$22 >> 2] | 0) | 0;
  $25 = $s + ($i$01 * 68 | 0) + 64 | 0;
  HEAP32[$25 >> 2] = _llvm_bswap_i32(HEAP32[$25 >> 2] | 0) | 0;
  $i$01 = $i$01 + 1 | 0;
 } while (($i$01 | 0) != ($nsects | 0));
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $9 = 0;
 if ((1073741807 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $21 = $this + 4 | 0; else $21 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $18 = $12 >>> 0 < 2 ? 2 : $12 + 4 & -4;
 } else $18 = 1073741807;
 $19 = __Znwj($18 << 2) | 0;
 if ($__n_copy) _wmemcpy($19, $21, $__n_copy) | 0;
 $22 = $__old_sz - $__n_del | 0;
 if (($22 | 0) != ($__n_copy | 0)) _wmemcpy($19 + ($__n_add + $__n_copy << 2) | 0, $21 + ($__n_del + $__n_copy << 2) | 0, $22 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($21);
 HEAP32[$this + 8 >> 2] = $19;
 HEAP32[$this >> 2] = $18 | 1;
 return;
}

function __ZNSt3__15dequeIN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS3_EEE9push_backERKS3_($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $3 = 0;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $11 = $this + 16 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = $this + 20 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (((($1 | 0) == ($3 | 0) ? 0 : ($1 - $3 << 6) + -1 | 0) | 0) == ($14 + $12 | 0)) {
  __ZNSt3__15dequeIN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS3_EEE19__add_back_capacityEv($this);
  $17 = HEAP32[$11 >> 2] | 0;
  $18 = HEAP32[$13 >> 2] | 0;
  $20 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$2 >> 2] | 0;
 } else {
  $17 = $12;
  $18 = $14;
  $20 = $1;
  $21 = $3;
 }
 $16 = $17 + $18 | 0;
 if (($20 | 0) == ($21 | 0)) $27 = 0; else $27 = (HEAP32[$21 + ($16 >>> 8 << 2) >> 2] | 0) + (($16 & 255) << 4) | 0;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$27 + 8 >> 2] = 0;
 HEAP32[$27 + 12 >> 2] = 0;
 HEAP32[$27 + 4 >> 2] = $27 + 8;
 __ZN12dwarf2reader13CallFrameInfo7RuleMapaSERKS1_($27, $__v) | 0;
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $st, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $$013 = 0, $$1 = 0, $$pn = 0, $0 = 0, $1 = 0, $7 = 0, $8 = 0, $nbytes$0$lcssa = 0, $nbytes$04 = 0, $nbytes$1 = 0, $nwchar_t$05 = 0;
 $0 = $frm_end;
 $1 = $this + 8 | 0;
 L1 : do if (($frm | 0) == ($frm_end | 0) | ($mx | 0) == 0) $nbytes$0$lcssa = 0; else {
  $$013 = $frm;
  $nbytes$04 = 0;
  $nwchar_t$05 = 0;
  while (1) {
   $7 = _uselocale(HEAP32[$1 >> 2] | 0) | 0;
   $8 = _mbrlen($$013, $0 - $$013 | 0, $st) | 0;
   if ($7) _uselocale($7 | 0) | 0;
   switch ($8 | 0) {
   case -2:
   case -1:
    {
     $nbytes$0$lcssa = $nbytes$04;
     break L1;
     break;
    }
   case 0:
    {
     $$1 = $$013 + 1 | 0;
     $$pn = 1;
     break;
    }
   default:
    {
     $$1 = $$013 + $8 | 0;
     $$pn = $8;
    }
   }
   $nbytes$1 = $$pn + $nbytes$04 | 0;
   $nwchar_t$05 = $nwchar_t$05 + 1 | 0;
   if (($$1 | 0) == ($frm_end | 0) | $nwchar_t$05 >>> 0 >= $mx >>> 0) {
    $nbytes$0$lcssa = $nbytes$1;
    break L1;
   } else {
    $$013 = $$1;
    $nbytes$04 = $nbytes$1;
   }
  }
 } while (0);
 return $nbytes$0$lcssa | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 $11 = ($9 & 1) == 0;
 $14 = $6 + 4 | 0;
 $15 = $11 ? $14 : HEAP32[$6 + 8 >> 2] | 0;
 $20 = $15 + (($11 ? ($9 & 255) >>> 1 : HEAP32[$14 >> 2] | 0) << 2) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $21 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $15, $20) | 0;
 STACKTOP = sp;
 return $21 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $9 = 0;
 if ((-17 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 1 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $17 = $12 >>> 0 < 11 ? 11 : $12 + 16 & -16;
 } else $17 = -17;
 $18 = __Znwj($17) | 0;
 if ($__n_copy) _memcpy($18 | 0, $20 | 0, $__n_copy | 0) | 0;
 $21 = $__old_sz - $__n_del | 0;
 if (($21 | 0) != ($__n_copy | 0)) _memcpy($18 + ($__n_add + $__n_copy) | 0, $20 + ($__n_del + $__n_copy) | 0, $21 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 return;
}

function __ZNK15google_breakpad12JavaLanguage17MakeQualifiedNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_($agg$result, $this, $parent_name, $name) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $parent_name = $parent_name | 0;
 $name = $name | 0;
 var $0 = 0, $1 = 0, $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP8[$parent_name >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $8 = $3 ? ($1 & 255) >>> 1 : HEAP32[$parent_name + 4 >> 2] | 0;
 if (!$8) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $name);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($0, $3 ? $parent_name + 1 | 0 : HEAP32[$parent_name + 8 >> 2] | 0, $8, $8 + 1 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, 28365, 1) | 0;
  __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_($agg$result, $0, $name);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNK15google_breakpad11CPPLanguage17MakeQualifiedNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_($agg$result, $this, $parent_name, $name) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $parent_name = $parent_name | 0;
 $name = $name | 0;
 var $0 = 0, $1 = 0, $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP8[$parent_name >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $8 = $3 ? ($1 & 255) >>> 1 : HEAP32[$parent_name + 4 >> 2] | 0;
 if (!$8) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $name);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($0, $3 ? $parent_name + 1 | 0 : HEAP32[$parent_name + 8 >> 2] | 0, $8, $8 + 2 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, 25761, 2) | 0;
  __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_($agg$result, $0, $name);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $11 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 $11 = ($9 & 1) == 0;
 $15 = $11 ? $6 + 1 | 0 : HEAP32[$6 + 8 >> 2] | 0;
 $21 = $15 + ($11 ? ($9 & 255) >>> 1 : HEAP32[$6 + 4 >> 2] | 0) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $22 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $15, $21) | 0;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 10;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 1 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP8[$$pn + $__sz$0 >> 0] = $__c;
 HEAP8[$$pn + $__p$0$sum$pre$phiZZZ2D >> 0] = 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 var $16 = 0, $17 = 0, $23 = 0, $25 = 0, $5 = 0, $6 = 0;
 HEAP8[$info + 53 >> 0] = 1;
 do if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
  HEAP8[$info + 52 >> 0] = 1;
  $5 = $info + 16 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (!$6) {
   HEAP32[$5 >> 2] = $dst_ptr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   if (!(($path_below | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  if (($6 | 0) != ($dst_ptr | 0)) {
   $25 = $info + 36 | 0;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $16 = $info + 24 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == 2) {
   HEAP32[$16 >> 2] = $path_below;
   $23 = $path_below;
  } else $23 = $17;
  if (($23 | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0) HEAP8[$info + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo5StateD2Ev($this) {
 $this = $this | 0;
 var $$pre$i$i = 0, $$pre2$i$i = 0, $0 = 0, $1 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $__i$01$i$i = 0;
 $0 = $this + 64 | 0;
 __ZNSt3__112__deque_baseIN12dwarf2reader13CallFrameInfo7RuleMapENS_9allocatorIS3_EEE5clearEv($0);
 $1 = $this + 68 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $this + 72 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($2 | 0) != ($4 | 0)) {
  $__i$01$i$i = $2;
  do {
   __ZdlPv(HEAP32[$__i$01$i$i >> 2] | 0);
   $__i$01$i$i = $__i$01$i$i + 4 | 0;
  } while (($__i$01$i$i | 0) != ($4 | 0));
  $$pre$i$i = HEAP32[$1 >> 2] | 0;
  $$pre2$i$i = HEAP32[$3 >> 2] | 0;
  if (($$pre2$i$i | 0) != ($$pre$i$i | 0)) HEAP32[$3 >> 2] = $$pre2$i$i + (~(($$pre2$i$i + -4 - $$pre$i$i | 0) >>> 2) << 2);
 }
 $14 = HEAP32[$0 >> 2] | 0;
 if (!$14) {
  $16 = $this + 48 | 0;
  __ZN12dwarf2reader13CallFrameInfo7RuleMapD2Ev($16);
  $17 = $this + 32 | 0;
  __ZN12dwarf2reader13CallFrameInfo7RuleMapD2Ev($17);
  return;
 }
 __ZdlPv($14);
 $16 = $this + 48 | 0;
 __ZN12dwarf2reader13CallFrameInfo7RuleMapD2Ev($16);
 $17 = $this + 32 | 0;
 __ZN12dwarf2reader13CallFrameInfo7RuleMapD2Ev($17);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($first, $last) {
 $first = $first | 0;
 $last = $last | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0;
 L1 : do if (($first | 0) == ($last | 0)) $$0 = $first; else {
  switch (HEAP8[$first >> 0] | 0) {
  case 104:
   {
    $3 = $first + 1 | 0;
    $4 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($3, $last) | 0;
    if (($4 | 0) == ($3 | 0) | ($4 | 0) == ($last | 0)) {
     $$0 = $first;
     break L1;
    }
    $$0 = (HEAP8[$4 >> 0] | 0) == 95 ? $4 + 1 | 0 : $first;
    break L1;
    break;
   }
  case 118:
   break;
  default:
   {
    $$0 = $first;
    break L1;
   }
  }
  $10 = $first + 1 | 0;
  $11 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($10, $last) | 0;
  if (($11 | 0) == ($10 | 0) | ($11 | 0) == ($last | 0)) $$0 = $first; else if ((HEAP8[$11 >> 0] | 0) == 95) {
   $16 = $11 + 1 | 0;
   $17 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($16, $last) | 0;
   if (($17 | 0) == ($16 | 0) | ($17 | 0) == ($last | 0)) $$0 = $first; else return ((HEAP8[$17 >> 0] | 0) == 95 ? $17 + 1 | 0 : $first) | 0;
  } else $$0 = $first;
 } while (0);
 return $$0 | 0;
}

function __ZN16MacFileUtilities7MachoID10WalkHeaderEiiPFbPNS_11MachoWalkerEP12load_commandibPvES5_($this, $cpu_type, $cpu_subtype, $callback, $context) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 $callback = $callback | 0;
 $context = $context | 0;
 var $$02 = 0, $1 = 0, $5 = 0, $6 = 0, $walker = 0, $walker1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $walker = sp + 32 | 0;
 $walker1 = sp;
 $1 = HEAP32[$this + 4096 >> 2] | 0;
 if (!$1) {
  __ZN16MacFileUtilities11MachoWalkerC2EPKcPFbPS0_P12load_commandibPvES6_($walker1, $this, $callback, $context);
  $6 = __ZN16MacFileUtilities11MachoWalker10WalkHeaderEii($walker1, $cpu_type, $cpu_subtype) | 0;
  __ZN16MacFileUtilities11MachoWalkerD2Ev($walker1);
  $$02 = $6;
  STACKTOP = sp;
  return $$02 | 0;
 } else {
  __ZN16MacFileUtilities11MachoWalkerC2EPvjPFbPS0_P12load_commandibS1_ES1_($walker, $1, HEAP32[$this + 4100 >> 2] | 0, $callback, $context);
  $5 = __ZN16MacFileUtilities11MachoWalker10WalkHeaderEii($walker, $cpu_type, $cpu_subtype) | 0;
  __ZN16MacFileUtilities11MachoWalkerD2Ev($walker);
  $$02 = $5;
  STACKTOP = sp;
  return $$02 | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $9 = 0;
 if ((-17 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 1 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $17 = $12 >>> 0 < 11 ? 11 : $12 + 16 & -16;
 } else $17 = -17;
 $18 = _malloc($17) | 0;
 if ($__n_copy) _memcpy($18 | 0, $20 | 0, $__n_copy | 0) | 0;
 if (($__old_sz | 0) != ($__n_copy | 0)) _memcpy($18 + ($__n_add + $__n_copy) | 0, $20 + $__n_copy | 0, $__old_sz - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) _free($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 return;
}

function __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $20 = 0, $27 = 0, $28 = 0, $30 = 0, $6 = 0, $__n1 = 0;
 if (($__n | 0) == 1) $__n1 = 2; else if (!($__n + -1 & $__n)) $__n1 = $__n; else $__n1 = __ZNSt3__112__next_primeEj($__n) | 0;
 $6 = HEAP32[$this + 4 >> 2] | 0;
 if ($__n1 >>> 0 > $6 >>> 0) {
  __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEj($this, $__n1);
  return;
 }
 if ($__n1 >>> 0 >= $6 >>> 0) return;
 if ($6 >>> 0 > 2) $30 = ($6 + -1 & $6 | 0) == 0; else $30 = 0;
 $20 = ~~+Math_ceil(+(+((HEAP32[$this + 12 >> 2] | 0) >>> 0) / +HEAPF32[$this + 16 >> 2])) >>> 0;
 if ($30) $27 = 1 << 32 - (Math_clz32($20 + -1 | 0) | 0); else $27 = __ZNSt3__112__next_primeEj($20) | 0;
 $28 = $__n1 >>> 0 < $27 >>> 0 ? $27 : $__n1;
 if ($28 >>> 0 >= $6 >>> 0) return;
 __ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEj($this, $28);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule9CUContextD2Ev($this) {
 $this = $this | 0;
 var $$lcssa15 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $3 = 0, $31 = 0, $5 = 0, $6 = 0, $9 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) == ($3 | 0)) {
  $23 = $1;
  $26 = $1;
 } else {
  $31 = $3;
  $6 = $1;
  while (1) {
   $5 = HEAP32[$6 >> 2] | 0;
   if (!$5) $21 = $31; else {
    $9 = HEAP32[$5 + 40 >> 2] | 0;
    $11 = $9;
    if ($9) {
     $12 = $5 + 44 | 0;
     $13 = HEAP32[$12 >> 2] | 0;
     if (($13 | 0) != ($9 | 0)) HEAP32[$12 >> 2] = $13 + (~((($13 + -24 - $11 | 0) >>> 0) / 24 | 0) * 24 | 0);
     __ZdlPv($9);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __ZdlPv($5);
    $21 = HEAP32[$2 >> 2] | 0;
   }
   $6 = $6 + 4 | 0;
   if (($6 | 0) == ($21 | 0)) {
    $$lcssa15 = $21;
    break;
   } else $31 = $21;
  }
  $23 = HEAP32[$0 >> 2] | 0;
  $26 = $$lcssa15;
 }
 if (!$23) return;
 if (($26 | 0) != ($23 | 0)) HEAP32[$2 >> 2] = $26 + (~(($26 + -4 - $23 | 0) >>> 2) << 2);
 __ZdlPv($23);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 1;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 4 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP32[$$pn + ($__sz$0 << 2) >> 2] = $__c;
 HEAP32[$$pn + ($__p$0$sum$pre$phiZZZ2D << 2) >> 2] = 0;
 return;
}

function ___cxx_global_array_dtor46($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10600);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10588);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10576);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10564);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10552);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10540);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10528);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10516);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10504);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10492);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10480);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10468);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10456);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(10444);
 return;
}

function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10428);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10416);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10404);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10392);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10380);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10368);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10356);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10344);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10332);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10320);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10308);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10296);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10284);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(10272);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($__nd + 24 | 0, HEAP32[$__nd + 28 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN15google_breakpad15DwarfCUToModule24ProcessAttributeUnsignedEN12dwarf2reader14DwarfAttributeENS1_9DwarfFormEy($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $19 = 0, $4 = 0, $9 = 0;
 switch ($attr | 0) {
 case 16:
  {
   HEAP8[$this + 16 >> 0] = 1;
   $4 = $this + 24 | 0;
   HEAP32[$4 >> 2] = $0;
   HEAP32[$4 + 4 >> 2] = $1;
   return;
  }
 case 19:
  {
   L5 : do if (($0 | 0) < 32769) {
    switch ($0 | 0) {
    case 11:
     break;
    default:
     break L5;
    }
    $9 = HEAP32[$this + 8 >> 2] | 0;
    if (!$9) ___assert_fail(15030, 21517, 119, 26244);
    HEAP32[$9 + 8 >> 2] = HEAP32[1131];
    return;
   } else {
    switch ($0 | 0) {
    case 32769:
     break;
    default:
     break L5;
    }
    $14 = HEAP32[$this + 8 >> 2] | 0;
    if (!$14) ___assert_fail(15030, 21517, 119, 26244);
    HEAP32[$14 + 8 >> 2] = HEAP32[1132];
    return;
   } while (0);
   $19 = HEAP32[$this + 8 >> 2] | 0;
   if (!$19) ___assert_fail(15030, 21517, 119, 26244);
   HEAP32[$19 + 8 >> 2] = HEAP32[1130];
   return;
  }
 default:
  return;
 }
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 10;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 1 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP8[$$pn + $__sz$0 >> 0] = $__c;
 HEAP8[$$pn + $__p$0$sum$pre$phiZZZ2D >> 0] = 0;
 return;
}

function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2IPKPKcEET_NS_9enable_ifIXaasr21__is_forward_iteratorISE_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESE_E4typeE($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$01$i = 0, $0 = 0, $13 = 0, $15 = 0, $5 = 0, $9 = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 $5 = $__last - $__first >> 2;
 if (!$5) return;
 if ($5 >>> 0 > 357913941) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $9 = __Znwj($5 * 12 | 0) | 0;
 HEAP32[$0 >> 2] = $9;
 HEAP32[$this >> 2] = $9;
 HEAP32[$this + 8 >> 2] = $9 + ($5 * 12 | 0);
 if (($__first | 0) == ($__last | 0)) return;
 $$01$i = $__first;
 $15 = $9;
 do {
  $13 = HEAP32[$$01$i >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($15, $13, _strlen($13 | 0) | 0);
  $15 = (HEAP32[$0 >> 2] | 0) + 12 | 0;
  HEAP32[$0 >> 2] = $15;
  $$01$i = $$01$i + 4 | 0;
 } while (($$01$i | 0) != ($__last | 0));
 return;
}

function __ZN16MacFileUtilities11MachoWalker10WalkHeaderEii($this, $cpu_type, $cpu_subtype) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 var $$0 = 0, $1 = 0, $8 = 0, $offset = 0, $valid_cpu_subtype$0 = 0, $valid_cpu_type$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $offset = sp;
 do if (!$cpu_type) {
  $1 = _NXGetLocalArchInfo() | 0;
  if (!$1) ___assert_fail(24047, 24052, 86, 24083); else {
   $valid_cpu_subtype$0 = -1;
   $valid_cpu_type$0 = HEAP32[$1 + 4 >> 2] | 0;
   break;
  }
 } else {
  $valid_cpu_subtype$0 = $cpu_subtype;
  $valid_cpu_type$0 = $cpu_type;
 } while (0);
 if (!(__ZN16MacFileUtilities11MachoWalker10FindHeaderEiiRi($this, $valid_cpu_type$0, $valid_cpu_subtype$0, $offset) | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $8 = HEAP32[$offset >> 2] | 0;
 if (!($cpu_type & 16777216)) {
  $$0 = __ZN16MacFileUtilities11MachoWalker18WalkHeaderAtOffsetEi($this, $8) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$0 = __ZN16MacFileUtilities11MachoWalker20WalkHeader64AtOffsetEi($this, $8) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN15google_breakpad6ModuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_($this, $name, $os, $architecture, $id) {
 $this = $this | 0;
 $name = $name | 0;
 $os = $os | 0;
 $architecture = $architecture | 0;
 $id = $id | 0;
 var $4 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $name);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this + 12 | 0, $os);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this + 24 | 0, $architecture);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this + 36 | 0, $id);
 $4 = $this + 48 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$this + 60 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = 0;
 HEAP32[$this + 56 >> 2] = $this + 60;
 HEAP32[$this + 72 >> 2] = 0;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 68 >> 2] = $this + 72;
 HEAP32[$this + 80 >> 2] = 0;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP32[$this + 88 >> 2] = 0;
 HEAP32[$this + 96 >> 2] = 0;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP32[$this + 92 >> 2] = $this + 96;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $6 = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else if (($this | 0) == (HEAP32[$info >> 2] | 0)) {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    HEAP32[$14 >> 2] = $current_ptr;
    $20 = $info + 40 | 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) HEAP8[$info + 54 >> 0] = 1;
    HEAP32[$info + 44 >> 2] = 4;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter10IncompleteEyNS0_9EntryKindE($this, $0, $1, $kind) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $kind = $kind | 0;
 var $$0$i = 0, $10 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[_stderr >> 2] | 0;
 $3 = $this + 4 | 0;
 if (!(HEAP8[$3 >> 0] & 1)) $17 = $3 + 1 | 0; else $17 = HEAP32[$this + 12 >> 2] | 0;
 switch ($kind | 0) {
 case 0:
  {
   $$0$i = 19278;
   break;
  }
 case 1:
  {
   $$0$i = 19199;
   break;
  }
 case 2:
  {
   $$0$i = 19224;
   break;
  }
 case 3:
  {
   $$0$i = 19248;
   break;
  }
 default:
  ___assert_fail(19155, 18044, 2221, 19190);
 }
 $10 = $this + 16 | 0;
 if (!(HEAP8[$10 >> 0] & 1)) $22 = $10 + 1 | 0; else $22 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $17;
 HEAP32[$vararg_buffer + 4 >> 2] = $$0$i;
 $18 = $vararg_buffer + 8 | 0;
 HEAP32[$18 >> 2] = $0;
 HEAP32[$18 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $22;
 _fprintf($2 | 0, 19284, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 52 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 40 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
 __ZdlPv($__nd);
 return;
}

function __ZN15google_breakpad13StabsToModule20StartCompilationUnitEPKcyS2_($this, $name, $0, $1, $build_directory) {
 $this = $this | 0;
 $name = $name | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $build_directory = $build_directory | 0;
 var $12 = 0, $16 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $this + 32 | 0;
 if (HEAP8[$3 >> 0] | 0) ___assert_fail(17136, 17158, 74, 17188);
 HEAP8[$3 >> 0] = 1;
 HEAP32[$this + 56 >> 2] = $name;
 HEAP32[$this + 52 >> 2] = __ZN15google_breakpad6Module8FindFileEPKc(HEAP32[$this + 4 >> 2] | 0, $name) | 0;
 $12 = $this + 40 | 0;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $16 = $2;
 HEAP32[$16 >> 2] = $0;
 HEAP32[$16 + 4 >> 2] = $1;
 $20 = $this + 24 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) == (HEAP32[$this + 28 >> 2] | 0)) {
  __ZNSt3__16vectorIyNS_9allocatorIyEEE21__push_back_slow_pathIKyEEvRT_($this + 20 | 0, $2);
  STACKTOP = sp;
  return 1;
 } else {
  $25 = $21;
  HEAP32[$25 >> 2] = $0;
  HEAP32[$25 + 4 >> 2] = $1;
  HEAP32[$20 >> 2] = $21 + 8;
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $5 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 48 >> 2] & 31]($1, 28892, 28924, $__atoms) | 0;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9600) | 0;
 HEAP32[$__decimal_point >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] & 127]($5) | 0;
 HEAP32[$__thousands_sep >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 16 >> 2] & 127]($5) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 63]($agg$result, $5);
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $5 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 32 >> 2] & 31]($1, 28892, 28924, $__atoms) | 0;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9592) | 0;
 HEAP8[$__decimal_point >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] & 127]($5) | 0;
 HEAP8[$__thousands_sep >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 16 >> 2] & 127]($5) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 63]($agg$result, $5);
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $1 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $18 = 0;
  $19 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $18 = 0;
   $19 = 0;
   break;
  }
  if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $15 = ($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0;
   tempRet0 = $15 ? 2147483647 : -2147483648;
   STACKTOP = sp;
   return ($15 ? -1 : 0) | 0;
  } else {
   $18 = $5;
   $19 = $4;
  }
 } while (0);
 tempRet0 = $18;
 STACKTOP = sp;
 return $19 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$04 = 0, $0 = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $3 = 0, $__p$0$ph = 0, $__p$03 = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 $3 = $2 >> 2;
 if ($3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($3 >>> 0 < 2) {
  HEAP8[$this >> 0] = $2 >>> 1;
  $__p$0$ph = $this + 4 | 0;
 } else {
  $10 = $3 + 4 & -4;
  $12 = __Znwj($10 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $12;
  HEAP32[$this >> 2] = $10 | 1;
  HEAP32[$this + 4 >> 2] = $3;
  $__p$0$ph = $12;
 }
 $18 = ($__last - $0 | 0) >>> 2;
 if (($__first | 0) != ($__last | 0)) {
  $$04 = $__first;
  $__p$03 = $__p$0$ph;
  while (1) {
   HEAP32[$__p$03 >> 2] = HEAP32[$$04 >> 2];
   $$04 = $$04 + 4 | 0;
   if (($$04 | 0) == ($__last | 0)) break; else $__p$03 = $__p$03 + 4 | 0;
  }
 }
 HEAP32[$__p$0$ph + ($18 << 2) >> 2] = 0;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule11FileContextC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS_6ModuleEb($this, $filename, $module, $handle_inter_cu_refs) {
 $this = $this | 0;
 $filename = $filename | 0;
 $module = $module | 0;
 $handle_inter_cu_refs = $handle_inter_cu_refs | 0;
 var $10 = 0, $13 = 0, $7 = 0, $8 = 0, dest = 0, stop = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $filename);
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = $this + 16;
 HEAP32[$this + 24 >> 2] = $module;
 HEAP8[$this + 28 >> 0] = $handle_inter_cu_refs & 1;
 $7 = __Znwj(44) | 0;
 $8 = $7 + 16 | 0;
 dest = $7;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF32[$8 >> 2] = 1.0;
 $10 = $7 + 24 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$7 + 28 >> 2] = 0;
 HEAP32[$7 + 20 >> 2] = $10;
 $13 = $7 + 36 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$7 + 40 >> 2] = 0;
 HEAP32[$7 + 32 >> 2] = $13;
 HEAP32[$this + 32 >> 2] = $7;
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $$0 = 0, $$1 = 0, $2 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 if (($this | 0) == ($thrown_type | 0)) $$1 = 1; else if (!$thrown_type) $$1 = 0; else {
  $2 = ___dynamic_cast($thrown_type, 584, 600, 0) | 0;
  if (!$2) $$1 = 0; else {
   dest = $info;
   stop = dest + 56 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$info >> 2] = $2;
   HEAP32[$info + 8 >> 2] = $this;
   HEAP32[$info + 12 >> 2] = -1;
   HEAP32[$info + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 31]($2, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
   if ((HEAP32[$info + 24 >> 2] | 0) == 1) {
    HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$1 = $$0;
  }
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN15google_breakpad16DwarfCFIToModuleD2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 2716;
 $1 = HEAP32[$this + 16 >> 2] | 0;
 if ($1) {
  __ZNSt3__16__treeINS_12__value_typeIyNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_NS_4lessIS8_EENS6_INS_4pairIKS8_S8_EEEEEEEENS_19__map_value_compareIySG_NS9_IyEELb1EEENS6_ISG_EEE7destroyEPNS_11__tree_nodeISG_PvEE($1 + 28 | 0, HEAP32[$1 + 32 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1 + 16 | 0, HEAP32[$1 + 20 >> 2] | 0);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this + 52 | 0, HEAP32[$this + 56 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 40 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 28 | 0);
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $5 = HEAP32[$this + 12 >> 2] | 0;
  $6 = $this + 16 + ($5 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this + 16 | 0, $info, $adjustedPtr, $path_below);
  if (($5 | 0) > 1) {
   $9 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0, $info, $adjustedPtr, $path_below);
    if (HEAP8[$9 >> 0] | 0) break L1;
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $6 >>> 0);
  }
 } while (0);
 return;
}

function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$i1 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 if (($2 | 0) != ($0 | 0)) {
  $$0$i1 = $2;
  do {
   $$0$i1 = $$0$i1 + -24 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_((HEAP32[$3 >> 2] | 0) + -24 | 0, $$0$i1);
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -24;
  } while (($$0$i1 | 0) != ($0 | 0));
 }
 $11 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $11;
 $13 = $__v + 8 | 0;
 $14 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$13 >> 2] = $14;
 $16 = $this + 8 | 0;
 $17 = $__v + 12 | 0;
 $18 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = $18;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $st, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $5 = 0, $n$02 = 0, $p$03 = 0, $tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmp = sp;
 HEAP32[$to_nxt >> 2] = $to;
 $2 = _uselocale(HEAP32[$this + 8 >> 2] | 0) | 0;
 $3 = _wcrtomb($tmp, 0, $st) | 0;
 if ($2) _uselocale($2 | 0) | 0;
 switch ($3 | 0) {
 case 0:
 case -1:
  {
   $$0 = 2;
   break;
  }
 default:
  {
   $5 = $3 + -1 | 0;
   if ($5 >>> 0 > ($to_end - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) $$0 = 1; else if (!$5) $$0 = 0; else {
    $n$02 = $5;
    $p$03 = $tmp;
    while (1) {
     $13 = HEAP8[$p$03 >> 0] | 0;
     $14 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $14 + 1;
     HEAP8[$14 >> 0] = $13;
     $n$02 = $n$02 + -1 | 0;
     if (!$n$02) {
      $$0 = 0;
      break;
     } else $p$03 = $p$03 + 1 | 0;
    }
   }
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 65535 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6 & 65535;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad6mach_o6Reader13SectionMapper13HandleSectionERKNS0_7SectionE($this, $section) {
 $this = $this | 0;
 $section = $section | 0;
 var $10 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0;
 $2 = $section + 8 | 0;
 $3 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_(HEAP32[$this + 4 >> 2] | 0, $2) | 0;
 $4 = $section;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3 + 8 | 0, $2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3 + 20 | 0, $section + 20 | 0) | 0;
 $17 = $3 + 32 | 0;
 $18 = $section + 32 | 0;
 HEAP32[$17 >> 2] = HEAP32[$18 >> 2];
 HEAP32[$17 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
 HEAP32[$17 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
 HEAP32[$17 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
 HEAP8[$17 + 16 >> 0] = HEAP8[$18 + 16 >> 0] | 0;
 return 1;
}

function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $13 = 0;
  $14 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  if (($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $13 = -1;
   $14 = -1;
  } else {
   $13 = tempRet0;
   $14 = $6;
  }
 } while (0);
 tempRet0 = $13;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZNK15google_breakpad6mach_o6Reader18MapSegmentSectionsERKNS0_7SegmentEPNSt3__13mapINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_7SectionENS5_4lessISC_EENSA_INS5_4pairIKSC_SD_EEEEEE($this, $segment, $section_map) {
 $this = $this | 0;
 $segment = $segment | 0;
 $section_map = $section_map | 0;
 var $0 = 0, $4 = 0, $mapper = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $mapper = sp;
 $0 = $section_map + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN15google_breakpad6mach_o7SectionEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($section_map, HEAP32[$0 >> 2] | 0);
 HEAP32[$section_map + 8 >> 2] = 0;
 HEAP32[$section_map >> 2] = $0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$mapper >> 2] = 5324;
 HEAP32[$mapper + 4 >> 2] = $section_map;
 $4 = __ZNK15google_breakpad6mach_o6Reader19WalkSegmentSectionsERKNS0_7SegmentEPNS1_14SectionHandlerE($this, $segment, $mapper) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$04 = 0, $0 = 0, $10 = 0, $15 = 0, $2 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($2 >>> 0 < 11) {
  HEAP8[$this >> 0] = $2 << 1;
  $__p$0$ph = $this + 1 | 0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$this + 8 >> 2] = $10;
  HEAP32[$this >> 2] = $9 | 1;
  HEAP32[$this + 4 >> 2] = $2;
  $__p$0$ph = $10;
 }
 $15 = $__last - $0 | 0;
 if (($__first | 0) != ($__last | 0)) {
  $$04 = $__first;
  $__p$03 = $__p$0$ph;
  while (1) {
   HEAP8[$__p$03 >> 0] = HEAP8[$$04 >> 0] | 0;
   $$04 = $$04 + 1 | 0;
   if (($$04 | 0) == ($__last | 0)) break; else $__p$03 = $__p$03 + 1 | 0;
  }
 }
 HEAP8[$__p$0$ph + $15 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $7 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $7 = 10;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $7 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($7 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $7, $__n - $7 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 1 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _memmove($14 | 0, $__s | 0, $__n | 0) | 0;
  HEAP8[$14 + $__n >> 0] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $14 = 0, $15 = 0, $24 = 0, $25 = 0, $3 = 0, $7 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $14 = 10;
  $7 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $14 = ($3 & -2) + -1 | 0;
  $7 = $3 & 255;
 }
 if (!($7 & 1)) $15 = ($7 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 if (($14 - $15 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $14, $__n - $14 + $15 | 0, $15, $15, 0, $__n, $__s); else if ($__n) {
  if (!($7 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
  _memcpy($24 + $15 | 0, $__s | 0, $__n | 0) | 0;
  $25 = $15 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $25 << 1; else HEAP32[$this + 4 >> 2] = $25;
  HEAP8[$24 + $25 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $10 = 0, $25 = 0, $6 = 0, $7 = 0, $9 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s, $this);
 L1 : do if (HEAP8[$__s >> 0] | 0) {
  $6 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  $7 = $6;
  do if ($6) {
   $9 = $7 + 24 | 0;
   $10 = HEAP32[$9 >> 2] | 0;
   if (($10 | 0) == (HEAP32[$7 + 28 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 52 >> 2] & 31]($7, $__c & 255) | 0) == -1) break; else break L1; else {
    HEAP32[$9 >> 2] = $10 + 1;
    HEAP8[$10 >> 0] = $__c;
    break L1;
   }
  } while (0);
  $25 = $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
  HEAP32[$25 >> 2] = HEAP32[$25 >> 2] | 1;
 } while (0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $28 = 0, $4 = 0, $8 = 0;
 if ($__n) {
  $1 = HEAP8[$this >> 0] | 0;
  if (!($1 & 1)) {
   $15 = 10;
   $8 = $1;
  } else {
   $4 = HEAP32[$this >> 2] | 0;
   $15 = ($4 & -2) + -1 | 0;
   $8 = $4 & 255;
  }
  if (!($8 & 1)) $16 = ($8 & 255) >>> 1; else $16 = HEAP32[$this + 4 >> 2] | 0;
  if (($15 - $16 | 0) >>> 0 < $__n >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $15, $__n - $15 + $16 | 0, $16, $16, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $8;
  if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
  _memset($27 + $16 | 0, $__c | 0, $__n | 0) | 0;
  $28 = $16 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $28 << 1; else HEAP32[$this + 4 >> 2] = $28;
  HEAP8[$27 + $28 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad15DwarfCUToModule13SpecificationEEENS_19__map_value_compareIyS5_NS_4lessIyEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return;
 __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad15DwarfCUToModule13SpecificationEEENS_19__map_value_compareIyS5_NS_4lessIyEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad15DwarfCUToModule13SpecificationEEENS_19__map_value_compareIyS5_NS_4lessIyEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 48 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 36 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 24 | 0);
 __ZdlPv($__nd);
 return;
}

function __ZN15google_breakpad13StabsToModule18EndCompilationUnitEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $16 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $this + 32 | 0;
 if (!(HEAP8[$3 >> 0] | 0)) ___assert_fail(17209, 17158, 84, 17230);
 HEAP8[$3 >> 0] = 0;
 $7 = $this + 40 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 56 >> 2] = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) {
  STACKTOP = sp;
  return 1;
 }
 $16 = $2;
 HEAP32[$16 >> 2] = $0;
 HEAP32[$16 + 4 >> 2] = $1;
 $20 = $this + 24 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) == (HEAP32[$this + 28 >> 2] | 0)) {
  __ZNSt3__16vectorIyNS_9allocatorIyEEE21__push_back_slow_pathIKyEEvRT_($this + 20 | 0, $2);
  STACKTOP = sp;
  return 1;
 } else {
  $25 = $21;
  HEAP32[$25 >> 2] = $0;
  HEAP32[$25 + 4 >> 2] = $1;
  HEAP32[$20 >> 2] = $21 + 8;
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 L1 : while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 63]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   $$0 = -1;
   break;
  }
  switch ($10 | 0) {
  case 1:
   break;
  case 2:
   {
    $$0 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 L1 : while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 63]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   $$0 = -1;
   break;
  }
  switch ($10 | 0) {
  case 1:
   break;
  case 2:
   {
    $$0 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter24UnrecognizedAugmentationEyRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($this, $0, $1, $aug) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $aug = $aug | 0;
 var $10 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[_stderr >> 2] | 0;
 $3 = $this + 4 | 0;
 if (!(HEAP8[$3 >> 0] & 1)) $24 = $3 + 1 | 0; else $24 = HEAP32[$this + 12 >> 2] | 0;
 $10 = $this + 16 | 0;
 if (!(HEAP8[$10 >> 0] & 1)) $29 = $10 + 1 | 0; else $29 = HEAP32[$this + 24 >> 2] | 0;
 $23 = (HEAP8[$aug >> 0] & 1) == 0 ? $aug + 1 | 0 : HEAP32[$aug + 8 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $24;
 $25 = $vararg_buffer + 8 | 0;
 HEAP32[$25 >> 2] = $0;
 HEAP32[$25 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $29;
 HEAP32[$vararg_buffer + 20 >> 2] = $23;
 _fprintf($2 | 0, 19724, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $7 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $7 = 10;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $7 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($7 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $7, $__n - $7 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 1 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _memmove($14 | 0, $__s | 0, $__n | 0) | 0;
  HEAP8[$14 + $__n >> 0] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$01 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $3 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$01 = $__s;
  $__i$02 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $3 + 1;
    $storemerge = HEAP8[$3 >> 0] | 0;
   } else {
    $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
    if (($11 | 0) == -1) {
     $__i$0$lcssa = $__i$02;
     break L1;
    }
    $storemerge = $11 & 255;
   }
   HEAP8[$$01 >> 0] = $storemerge;
   $14 = $__i$02 + 1 | 0;
   if (($14 | 0) < ($__n | 0)) {
    $$01 = $$01 + 1 | 0;
    $__i$02 = $14;
   } else {
    $__i$0$lcssa = $14;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $7 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $7 = 1;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $7 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($7 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $7, $__n - $7 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 4 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _wmemmove($14, $__s, $__n) | 0;
  HEAP32[$14 + ($__n << 2) >> 2] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __Z29breakpad_swap_segment_commandP15segment_command($sc) {
 $sc = $sc | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $5 = 0, $8 = 0;
 HEAP32[$sc >> 2] = _llvm_bswap_i32(HEAP32[$sc >> 2] | 0) | 0;
 $2 = $sc + 4 | 0;
 HEAP32[$2 >> 2] = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
 $5 = $sc + 24 | 0;
 HEAP32[$5 >> 2] = _llvm_bswap_i32(HEAP32[$5 >> 2] | 0) | 0;
 $8 = $sc + 28 | 0;
 HEAP32[$8 >> 2] = _llvm_bswap_i32(HEAP32[$8 >> 2] | 0) | 0;
 $11 = $sc + 32 | 0;
 HEAP32[$11 >> 2] = _llvm_bswap_i32(HEAP32[$11 >> 2] | 0) | 0;
 $14 = $sc + 36 | 0;
 HEAP32[$14 >> 2] = _llvm_bswap_i32(HEAP32[$14 >> 2] | 0) | 0;
 $17 = $sc + 40 | 0;
 HEAP32[$17 >> 2] = _llvm_bswap_i32(HEAP32[$17 >> 2] | 0) | 0;
 $20 = $sc + 44 | 0;
 HEAP32[$20 >> 2] = _llvm_bswap_i32(HEAP32[$20 >> 2] | 0) | 0;
 $23 = $sc + 48 | 0;
 HEAP32[$23 >> 2] = _llvm_bswap_i32(HEAP32[$23 >> 2] | 0) | 0;
 $26 = $sc + 52 | 0;
 HEAP32[$26 >> 2] = _llvm_bswap_i32(HEAP32[$26 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$01 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $3 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$01 = $__s;
  $__i$02 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $3 + 4;
    $storemerge = HEAP32[$3 >> 2] | 0;
   } else {
    $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
    if (($11 | 0) == -1) {
     $__i$0$lcssa = $__i$02;
     break L1;
    } else $storemerge = $11;
   }
   HEAP32[$$01 >> 2] = $storemerge;
   $13 = $__i$02 + 1 | 0;
   if (($13 | 0) < ($__n | 0)) {
    $$01 = $$01 + 4 | 0;
    $__i$02 = $13;
   } else {
    $__i$0$lcssa = $13;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $14 = 0, $15 = 0, $24 = 0, $25 = 0, $3 = 0, $7 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $14 = 10;
  $7 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $14 = ($3 & -2) + -1 | 0;
  $7 = $3 & 255;
 }
 if (!($7 & 1)) $15 = ($7 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 if (($14 - $15 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $14, $__n - $14 + $15 | 0, $15, $15, 0, $__n, $__s); else if ($__n) {
  if (!($7 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
  _memcpy($24 + $15 | 0, $__s | 0, $__n | 0) | 0;
  $25 = $15 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $25 << 1; else HEAP32[$this + 4 >> 2] = $25;
  HEAP8[$24 + $25 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $2 = 0, $3 = 0, $6 = 0, label = 0;
 L1 : do if (($__lo2 | 0) == ($__hi2 | 0)) {
  $$02$lcssa = $__lo1;
  label = 6;
 } else {
  $$018 = $__lo2;
  $$027 = $__lo1;
  while (1) {
   if (($$027 | 0) == ($__hi1 | 0)) {
    $$0 = -1;
    break L1;
   }
   $2 = HEAP8[$$027 >> 0] | 0;
   $3 = HEAP8[$$018 >> 0] | 0;
   if ($2 << 24 >> 24 < $3 << 24 >> 24) {
    $$0 = -1;
    break L1;
   }
   if ($3 << 24 >> 24 < $2 << 24 >> 24) {
    $$0 = 1;
    break L1;
   }
   $6 = $$027 + 1 | 0;
   $$018 = $$018 + 1 | 0;
   if (($$018 | 0) == ($__hi2 | 0)) {
    $$02$lcssa = $6;
    label = 6;
    break;
   } else $$027 = $6;
  }
 } while (0);
 if ((label | 0) == 6) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $2 = 0, $3 = 0, $6 = 0, label = 0;
 L1 : do if (($__lo2 | 0) == ($__hi2 | 0)) {
  $$02$lcssa = $__lo1;
  label = 6;
 } else {
  $$018 = $__lo2;
  $$027 = $__lo1;
  while (1) {
   if (($$027 | 0) == ($__hi1 | 0)) {
    $$0 = -1;
    break L1;
   }
   $2 = HEAP32[$$027 >> 2] | 0;
   $3 = HEAP32[$$018 >> 2] | 0;
   if (($2 | 0) < ($3 | 0)) {
    $$0 = -1;
    break L1;
   }
   if (($3 | 0) < ($2 | 0)) {
    $$0 = 1;
    break L1;
   }
   $6 = $$027 + 4 | 0;
   $$018 = $$018 + 4 | 0;
   if (($$018 | 0) == ($__hi2 | 0)) {
    $$02$lcssa = $6;
    label = 6;
    break;
   } else $$027 = $6;
  }
 } while (0);
 if ((label | 0) == 6) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1;
 return $$0 | 0;
}

function __ZN15google_breakpad16DwarfCFIToModule8Reporter23ExpressionsNotSupportedEjRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($this, $offset, $reg) {
 $this = $this | 0;
 $offset = $offset | 0;
 $reg = $reg | 0;
 var $0 = 0, $1 = 0, $21 = 0, $22 = 0, $23 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $22 = $1 + 1 | 0; else $22 = HEAP32[$this + 12 >> 2] | 0;
 $8 = $this + 16 | 0;
 if (!(HEAP8[$8 >> 0] & 1)) $23 = $8 + 1 | 0; else $23 = HEAP32[$this + 24 >> 2] | 0;
 $21 = (HEAP8[$reg >> 0] & 1) == 0 ? $reg + 1 | 0 : HEAP32[$reg + 8 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $22;
 HEAP32[$vararg_buffer + 4 >> 2] = $23;
 HEAP32[$vararg_buffer + 8 >> 2] = $offset;
 HEAP32[$vararg_buffer + 12 >> 2] = $21;
 _fprintf($0 | 0, 13513, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule8Reporter21UndefinedNotSupportedEjRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($this, $offset, $reg) {
 $this = $this | 0;
 $offset = $offset | 0;
 $reg = $reg | 0;
 var $0 = 0, $1 = 0, $21 = 0, $22 = 0, $23 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $22 = $1 + 1 | 0; else $22 = HEAP32[$this + 12 >> 2] | 0;
 $8 = $this + 16 | 0;
 if (!(HEAP8[$8 >> 0] & 1)) $23 = $8 + 1 | 0; else $23 = HEAP32[$this + 24 >> 2] | 0;
 $21 = (HEAP8[$reg >> 0] & 1) == 0 ? $reg + 1 | 0 : HEAP32[$reg + 8 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $22;
 HEAP32[$vararg_buffer + 4 >> 2] = $23;
 HEAP32[$vararg_buffer + 8 >> 2] = $offset;
 HEAP32[$vararg_buffer + 12 >> 2] = $21;
 _fprintf($0 | 0, 13353, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9444) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $3);
 STACKTOP = sp;
 return HEAP32[$__b >> 2] | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9444) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $3);
 STACKTOP = sp;
 return HEAP32[$__b >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $3);
 STACKTOP = sp;
 return HEAP32[$__b >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $3);
 STACKTOP = sp;
 return HEAP32[$__b >> 2] | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
 __ZdlPv($__nd);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9444) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $3);
 STACKTOP = sp;
 return HEAP32[$__b >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($0, 9452) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $3);
 STACKTOP = sp;
 return HEAP32[$__b >> 2] | 0;
}

function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $5 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9444) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 48 >> 2] & 31]($1, 28892, 28918, $__atoms) | 0;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9600) | 0;
 HEAP32[$__thousands_sep >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 16 >> 2] & 127]($5) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 63]($agg$result, $5);
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $5 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9452) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 32 >> 2] & 31]($1, 28892, 28918, $__atoms) | 0;
 $5 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9592) | 0;
 HEAP8[$__thousands_sep >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 16 >> 2] & 127]($5) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 63]($agg$result, $5);
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEjj($this, $__pos, $__n) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__n = $__n | 0;
 var $0 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $8 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $8 = ($0 & 255) >>> 1; else $8 = HEAP32[$this + 4 >> 2] | 0;
 if ($8 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($__n) {
  if ($2) $19 = $this + 1 | 0; else $19 = HEAP32[$this + 8 >> 2] | 0;
  $13 = $8 - $__pos | 0;
  $15 = $13 >>> 0 < $__n >>> 0 ? $13 : $__n;
  if (($13 | 0) == ($15 | 0)) $23 = $0; else {
   _memmove($19 + $__pos | 0, $19 + ($15 + $__pos) | 0, $13 - $15 | 0) | 0;
   $23 = HEAP8[$this >> 0] | 0;
  }
  $21 = $8 - $15 | 0;
  if (!($23 & 1)) HEAP8[$this >> 0] = $21 << 1; else HEAP32[$this + 4 >> 2] = $21;
  HEAP8[$19 + $21 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $2 = 0, $23 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 164;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 if ($2) {
  HEAP32[$__b >> 2] = $15;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $23 = $15; else {
   FUNCTION_TABLE_vi[HEAP32[$0 >> 2] & 255]($$pr);
   $23 = HEAP32[$__b >> 2] | 0;
  }
 }
 HEAP32[$0 >> 2] = 175;
 HEAP32[$__n >> 2] = $23 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $2 = 0, $23 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 164;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 if ($2) {
  HEAP32[$__b >> 2] = $15;
  $23 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $23 = $15; else {
   FUNCTION_TABLE_vi[HEAP32[$0 >> 2] & 255]($$pr);
   $23 = HEAP32[$__b >> 2] | 0;
  }
 }
 HEAP32[$0 >> 2] = 175;
 HEAP32[$__n >> 2] = $23 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$02 = 0, $0 = 0, $1 = 0, $15 = 0, $3 = 0, $6 = 0, $__i$0$lcssa = 0, $__i$01 = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$02 = $__s;
  $__i$01 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    $6 = HEAP32[$$02 >> 2] | 0;
    HEAP32[$0 >> 2] = $3 + 4;
    HEAP32[$3 >> 2] = $6;
   } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 31]($this, HEAP32[$$02 >> 2] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$01;
    break L1;
   }
   $15 = $__i$01 + 1 | 0;
   if (($15 | 0) < ($__n | 0)) {
    $$02 = $$02 + 4 | 0;
    $__i$01 = $15;
   } else {
    $__i$0$lcssa = $15;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter15CPUTypeMismatchEiiii($this, $cpu_type, $cpu_subtype, $expected_cpu_type, $expected_cpu_subtype) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 $expected_cpu_type = $expected_cpu_type | 0;
 $expected_cpu_subtype = $expected_cpu_subtype | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 HEAP32[$vararg_buffer + 4 >> 2] = $cpu_type;
 HEAP32[$vararg_buffer + 8 >> 2] = $cpu_subtype;
 HEAP32[$vararg_buffer + 12 >> 2] = $expected_cpu_type;
 HEAP32[$vararg_buffer + 16 >> 2] = $expected_cpu_subtype;
 _fprintf($0 | 0, 22984, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$02 = 0, $0 = 0, $1 = 0, $16 = 0, $3 = 0, $6 = 0, $__i$0$lcssa = 0, $__i$01 = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$02 = $__s;
  $__i$01 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    $6 = HEAP8[$$02 >> 0] | 0;
    HEAP32[$0 >> 2] = $3 + 1;
    HEAP8[$3 >> 0] = $6;
   } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 31]($this, HEAPU8[$$02 >> 0] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$01;
    break L1;
   }
   $16 = $__i$01 + 1 | 0;
   if (($16 | 0) < ($__n | 0)) {
    $$02 = $$02 + 1 | 0;
    $__i$01 = $16;
   } else {
    $__i$0$lcssa = $16;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_($agg$result, $__lhs, $__rhs) {
 $agg$result = $agg$result | 0;
 $__lhs = $__lhs | 0;
 $__rhs = $__rhs | 0;
 var $0 = 0, $15 = 0, $2 = 0, $7 = 0, $8 = 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $0 = HEAP8[$__lhs >> 0] | 0;
 $2 = ($0 & 1) == 0;
 $7 = $2 ? ($0 & 255) >>> 1 : HEAP32[$__lhs + 4 >> 2] | 0;
 $8 = HEAP8[$__rhs >> 0] | 0;
 $15 = ($8 & 1) == 0 ? ($8 & 255) >>> 1 : HEAP32[$__rhs + 4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($agg$result, $2 ? $__lhs + 1 | 0 : HEAP32[$__lhs + 8 >> 2] | 0, $7, $15 + $7 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($agg$result, (HEAP8[$__rhs >> 0] & 1) == 0 ? $__rhs + 1 | 0 : HEAP32[$__rhs + 8 >> 2] | 0, $15) | 0;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this, $__pos1, $__n1, $__s, $__n2) {
 $this = $this | 0;
 $__pos1 = $__pos1 | 0;
 $__n1 = $__n1 | 0;
 $__s = $__s | 0;
 $__n2 = $__n2 | 0;
 var $0 = 0, $10 = 0, $12 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $8 = 0, $__r$0 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $8 = ($0 & 255) >>> 1; else $8 = HEAP32[$this + 4 >> 2] | 0;
 if (($__n2 | 0) == -1 | $8 >>> 0 < $__pos1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 $10 = $8 - $__pos1 | 0;
 $12 = $10 >>> 0 < $__n1 >>> 0 ? $10 : $__n1;
 if ($2) $17 = $this + 1 | 0; else $17 = HEAP32[$this + 8 >> 2] | 0;
 $18 = $12 >>> 0 > $__n2 >>> 0;
 $20 = _memcmp($17 + $__pos1 | 0, $__s, $18 ? $__n2 : $12) | 0;
 if (!$20) if ($12 >>> 0 < $__n2 >>> 0) $__r$0 = -1; else return $18 & 1 | 0; else $__r$0 = $20;
 return $__r$0 | 0;
}

function _scalbn($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $$0 = 0, $1 = 0.0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $5 = 0, $8 = 0.0, $9 = 0, $y$0 = 0.0;
 if (($n | 0) > 1023) {
  $1 = $x * 8988465674311579538646525.0e283;
  $2 = $n + -1023 | 0;
  if (($2 | 0) > 1023) {
   $5 = $n + -2046 | 0;
   $$0 = ($5 | 0) > 1023 ? 1023 : $5;
   $y$0 = $1 * 8988465674311579538646525.0e283;
  } else {
   $$0 = $2;
   $y$0 = $1;
  }
 } else if (($n | 0) < -1022) {
  $8 = $x * 2.2250738585072014e-308;
  $9 = $n + 1022 | 0;
  if (($9 | 0) < -1022) {
   $12 = $n + 2044 | 0;
   $$0 = ($12 | 0) < -1022 ? -1022 : $12;
   $y$0 = $8 * 2.2250738585072014e-308;
  } else {
   $$0 = $9;
   $y$0 = $8;
  }
 } else {
  $$0 = $n;
  $y$0 = $x;
 }
 $15 = _bitshift64Shl($$0 + 1023 | 0, 0, 52) | 0;
 $16 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $15;
 HEAP32[tempDoublePtr + 4 >> 2] = $16;
 return +($y$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter20CIEPointerOutOfRangeEyy($this, $0, $1, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[_stderr >> 2] | 0;
 $5 = $this + 4 | 0;
 if (!(HEAP8[$5 >> 0] & 1)) $19 = $5 + 1 | 0; else $19 = HEAP32[$this + 12 >> 2] | 0;
 $12 = $this + 16 | 0;
 if (!(HEAP8[$12 >> 0] & 1)) $24 = $12 + 1 | 0; else $24 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $19;
 $20 = $vararg_buffer + 8 | 0;
 HEAP32[$20 >> 2] = $0;
 HEAP32[$20 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $24;
 $25 = $vararg_buffer + 24 | 0;
 HEAP32[$25 >> 2] = $2;
 HEAP32[$25 + 4 >> 2] = $3;
 _fprintf($4 | 0, 19428, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN15google_breakpad6Module4FileEEENS_19__map_value_compareIS9_SE_NSB_17CompareStringPtrsELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN15google_breakpad6mach_o6Reader8Reporter19LoadCommandsOverrunEjjj($this, $claimed, $i, $type) {
 $this = $this | 0;
 $claimed = $claimed | 0;
 $i = $i | 0;
 $type = $type | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 HEAP32[$vararg_buffer + 4 >> 2] = $claimed;
 HEAP32[$vararg_buffer + 8 >> 2] = $i;
 _fprintf($0 | 0, 23180, $vararg_buffer | 0) | 0;
 if (!$type) {
  _fwrite(23270, 51, 1, $0 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer3 >> 2] = $type;
 _fprintf($0 | 0, 23256, $vararg_buffer3 | 0) | 0;
 _fwrite(23270, 51, 1, $0 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule22ProcessAttributeSignedEN12dwarf2reader14DwarfAttributeENS1_9DwarfFormEx($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $3 = 0, $8 = 0;
 if (($attr | 0) != 19) return;
 L4 : do if (($0 | 0) < 32769) {
  switch ($0 | 0) {
  case 11:
   break;
  default:
   break L4;
  }
  $3 = HEAP32[$this + 8 >> 2] | 0;
  if (!$3) ___assert_fail(15030, 21517, 119, 26244);
  HEAP32[$3 + 8 >> 2] = HEAP32[1131];
  return;
 } else {
  switch ($0 | 0) {
  case 32769:
   break;
  default:
   break L4;
  }
  $8 = HEAP32[$this + 8 >> 2] | 0;
  if (!$8) ___assert_fail(15030, 21517, 119, 26244);
  HEAP32[$8 + 8 >> 2] = HEAP32[1132];
  return;
 } while (0);
 $13 = HEAP32[$this + 8 >> 2] | 0;
 if (!$13) ___assert_fail(15030, 21517, 119, 26244);
 HEAP32[$13 + 8 >> 2] = HEAP32[1130];
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $6 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $3 = $__v + 4 | 0;
 $6 = (HEAP32[$1 >> 2] | 0) - $0 | 0;
 $10 = (HEAP32[$3 >> 2] | 0) + (0 - ($6 >> 2) << 2) | 0;
 HEAP32[$3 >> 2] = $10;
 _memcpy($10 | 0, $0 | 0, $6 | 0) | 0;
 $11 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $11;
 $13 = $__v + 8 | 0;
 $14 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$13 >> 2] = $14;
 $16 = $this + 8 | 0;
 $17 = $__v + 12 | 0;
 $18 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = $18;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 return;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter20MisplacedSectionDataERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_($this, $section, $segment) {
 $this = $this | 0;
 $section = $section | 0;
 $segment = $segment | 0;
 var $0 = 0, $1 = 0, $14 = 0, $21 = 0, $22 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $22 = $1 + 1 | 0; else $22 = HEAP32[$this + 12 >> 2] | 0;
 $14 = (HEAP8[$section >> 0] & 1) == 0 ? $section + 1 | 0 : HEAP32[$section + 8 >> 2] | 0;
 $21 = (HEAP8[$segment >> 0] & 1) == 0 ? $segment + 1 | 0 : HEAP32[$segment + 8 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $22;
 HEAP32[$vararg_buffer + 4 >> 2] = $14;
 HEAP32[$vararg_buffer + 8 >> 2] = $21;
 _fprintf($0 | 0, 23603, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter12RestoreInCIEEyy($this, $0, $1, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[_stderr >> 2] | 0;
 $5 = $this + 4 | 0;
 if (!(HEAP8[$5 >> 0] & 1)) $19 = $5 + 1 | 0; else $19 = HEAP32[$this + 12 >> 2] | 0;
 $12 = $this + 16 | 0;
 if (!(HEAP8[$12 >> 0] & 1)) $24 = $12 + 1 | 0; else $24 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $19;
 $20 = $vararg_buffer + 8 | 0;
 HEAP32[$20 >> 2] = $0;
 HEAP32[$20 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $24;
 $25 = $vararg_buffer + 24 | 0;
 HEAP32[$25 >> 2] = $2;
 HEAP32[$25 + 4 >> 2] = $3;
 _fprintf($4 | 0, 20097, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $12 = 0, $14 = 0, $2 = 0, $21 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 164;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $12 = (HEAP32[$__n >> 2] | 0) - $6 | 0;
 $14 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$14) __ZSt17__throw_bad_allocv();
 if ($2) {
  HEAP32[$__b >> 2] = $14;
  $21 = $14;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $14;
  if (!$$pr) $21 = $14; else {
   FUNCTION_TABLE_vi[HEAP32[$0 >> 2] & 255]($$pr);
   $21 = HEAP32[$__b >> 2] | 0;
  }
 }
 HEAP32[$0 >> 2] = 175;
 HEAP32[$__n >> 2] = $21 + $12;
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + $$;
 return;
}

function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this, $__wb, $__we, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__wb = $__wb | 0;
 $__we = $__we | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $1 = 0, $11 = 0, $12 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__nar = sp + 16 | 0;
 $__ne = sp + 12 | 0;
 $mb = sp;
 $__nb = sp + 8 | 0;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $1 = $mb;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$__nb >> 2] = $__nar;
 $9 = (HEAP32[$__we >> 2] | 0) - $__wb >> 2;
 $11 = _uselocale(HEAP32[$this >> 2] | 0) | 0;
 $12 = _mbsrtowcs($__wb, $__nb, $9, $mb) | 0;
 if ($11) _uselocale($11 | 0) | 0;
 HEAP32[$__we >> 2] = $__wb + ($12 << 2);
 STACKTOP = sp;
 return;
}

function _wcrtomb($s, $wc, $st) {
 $s = $s | 0;
 $wc = $wc | 0;
 $st = $st | 0;
 var $$0 = 0;
 if (!$s) {
  $$0 = 1;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 128) {
  HEAP8[$s >> 0] = $wc;
  $$0 = 1;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 2048) {
  HEAP8[$s >> 0] = $wc >>> 6 | 192;
  HEAP8[$s + 1 >> 0] = $wc & 63 | 128;
  $$0 = 2;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 55296 | ($wc & -8192 | 0) == 57344) {
  HEAP8[$s >> 0] = $wc >>> 12 | 224;
  HEAP8[$s + 1 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc & 63 | 128;
  $$0 = 3;
  return $$0 | 0;
 }
 if (($wc + -65536 | 0) >>> 0 < 1048576) {
  HEAP8[$s >> 0] = $wc >>> 18 | 240;
  HEAP8[$s + 1 >> 0] = $wc >>> 12 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 3 >> 0] = $wc & 63 | 128;
  $$0 = 4;
  return $$0 | 0;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter8BadCIEIdEyy($this, $0, $1, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[_stderr >> 2] | 0;
 $5 = $this + 4 | 0;
 if (!(HEAP8[$5 >> 0] & 1)) $19 = $5 + 1 | 0; else $19 = HEAP32[$this + 12 >> 2] | 0;
 $12 = $this + 16 | 0;
 if (!(HEAP8[$12 >> 0] & 1)) $24 = $12 + 1 | 0; else $24 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $19;
 $20 = $vararg_buffer + 8 | 0;
 HEAP32[$20 >> 2] = $0;
 HEAP32[$20 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $24;
 $25 = $vararg_buffer + 24 | 0;
 HEAP32[$25 >> 2] = $2;
 HEAP32[$25 + 4 >> 2] = $3;
 _fprintf($4 | 0, 19523, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $1 = 0, $10 = 0, $12 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 HEAP8[$this >> 0] = 16;
 $1 = $s;
 $2 = $1;
 $3 = HEAPU8[$2 >> 0] | HEAPU8[$2 + 1 >> 0] << 8 | HEAPU8[$2 + 2 >> 0] << 16 | HEAPU8[$2 + 3 >> 0] << 24;
 $5 = $1 + 4 | 0;
 $6 = HEAPU8[$5 >> 0] | HEAPU8[$5 + 1 >> 0] << 8 | HEAPU8[$5 + 2 >> 0] << 16 | HEAPU8[$5 + 3 >> 0] << 24;
 $7 = $this + 1 | 0;
 $8 = $7;
 HEAP8[$8 >> 0] = $3;
 HEAP8[$8 + 1 >> 0] = $3 >> 8;
 HEAP8[$8 + 2 >> 0] = $3 >> 16;
 HEAP8[$8 + 3 >> 0] = $3 >> 24;
 $10 = $7 + 4 | 0;
 HEAP8[$10 >> 0] = $6;
 HEAP8[$10 + 1 >> 0] = $6 >> 8;
 HEAP8[$10 + 2 >> 0] = $6 >> 16;
 HEAP8[$10 + 3 >> 0] = $6 >> 24;
 HEAP8[$this + 9 >> 0] = 0;
 $12 = $this + 12 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
 __ZdlPv($__nd);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 10020, 10052) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 30301, 30309) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function _frexp($x, $e) {
 $x = +$x;
 $e = $e | 0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $2 = 0, $4 = 0, $7 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $2 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $4 = $2 & 2047;
 switch ($4 | 0) {
 case 0:
  {
   if ($x != 0.0) {
    $7 = +_frexp($x * 18446744073709551616.0, $e);
    $$01 = $7;
    $storemerge = (HEAP32[$e >> 2] | 0) + -64 | 0;
   } else {
    $$01 = $x;
    $storemerge = 0;
   }
   HEAP32[$e >> 2] = $storemerge;
   $$0 = $$01;
   return +$$0;
  }
 case 2047:
  {
   $$0 = $x;
   return +$$0;
  }
 default:
  {
   HEAP32[$e >> 2] = $4 + -1022;
   HEAP32[tempDoublePtr >> 2] = $0;
   HEAP32[tempDoublePtr + 4 >> 2] = $1 & -2146435073 | 1071644672;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
   return +$$0;
  }
 }
 return +(0.0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter23UnusablePointerEncodingEyh($this, $0, $1, $encoding) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $encoding = $encoding | 0;
 var $10 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[_stderr >> 2] | 0;
 $3 = $this + 4 | 0;
 if (!(HEAP8[$3 >> 0] & 1)) $18 = $3 + 1 | 0; else $18 = HEAP32[$this + 12 >> 2] | 0;
 $10 = $this + 16 | 0;
 if (!(HEAP8[$10 >> 0] & 1)) $23 = $10 + 1 | 0; else $23 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $18;
 $19 = $vararg_buffer + 8 | 0;
 HEAP32[$19 >> 2] = $0;
 HEAP32[$19 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $23;
 HEAP32[$vararg_buffer + 20 >> 2] = $encoding & 255;
 _fprintf($2 | 0, 19949, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter22InvalidPointerEncodingEyh($this, $0, $1, $encoding) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $encoding = $encoding | 0;
 var $10 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[_stderr >> 2] | 0;
 $3 = $this + 4 | 0;
 if (!(HEAP8[$3 >> 0] & 1)) $18 = $3 + 1 | 0; else $18 = HEAP32[$this + 12 >> 2] | 0;
 $10 = $this + 16 | 0;
 if (!(HEAP8[$10 >> 0] & 1)) $23 = $10 + 1 | 0; else $23 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $18;
 $19 = $vararg_buffer + 8 | 0;
 HEAP32[$19 >> 2] = $0;
 HEAP32[$19 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $23;
 HEAP32[$vararg_buffer + 20 >> 2] = $encoding & 255;
 _fprintf($2 | 0, 19829, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first, $last, $cv) {
 $first = $first | 0;
 $last = $last | 0;
 $cv = $cv | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $1 = 0, $10 = 0, $12 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 HEAP32[$cv >> 2] = 0;
 if (($first | 0) == ($last | 0)) $$2 = $first; else {
  $1 = HEAP8[$first >> 0] | 0;
  if ($1 << 24 >> 24 == 114) {
   HEAP32[$cv >> 2] = 4;
   $3 = $first + 1 | 0;
   $$0 = $3;
   $5 = HEAP8[$3 >> 0] | 0;
   $7 = 4;
  } else {
   $$0 = $first;
   $5 = $1;
   $7 = 0;
  }
  if ($5 << 24 >> 24 == 86) {
   $6 = $7 | 2;
   HEAP32[$cv >> 2] = $6;
   $8 = $$0 + 1 | 0;
   $$1 = $8;
   $10 = HEAP8[$8 >> 0] | 0;
   $12 = $6;
  } else {
   $$1 = $$0;
   $10 = $5;
   $12 = $7;
  }
  if ($10 << 24 >> 24 == 75) {
   HEAP32[$cv >> 2] = $12 | 1;
   $$2 = $$1 + 1 | 0;
  } else $$2 = $$1;
 }
 return $$2 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZN15google_breakpad15DwarfCUToModuleC2EPNS0_11FileContextEPNS0_19LineToModuleHandlerEPNS0_15WarningReporterE($this, $file_context, $line_reader, $reporter) {
 $this = $this | 0;
 $file_context = $file_context | 0;
 $line_reader = $line_reader | 0;
 $reporter = $reporter | 0;
 var $1 = 0, $9 = 0;
 HEAP32[$this >> 2] = 4208;
 HEAP32[$this + 4 >> 2] = $line_reader;
 $1 = __Znwj(24) | 0;
 HEAP32[$1 >> 2] = $file_context;
 HEAP32[$1 + 4 >> 2] = $reporter;
 HEAP32[$1 + 8 >> 2] = HEAP32[1130];
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = $1;
 $9 = __Znwj(12) | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = $9;
 HEAP8[$this + 16 >> 0] = 0;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 return;
}

function __ZNSt3__113__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_($__first, $__last, $__value_, $__comp) {
 $__first = $__first | 0;
 $__last = $__last | 0;
 $__value_ = $__value_ | 0;
 $__comp = $__comp | 0;
 var $$0$ph = 0, $$0$ph$lcssa = 0, $$lcssa = 0, $4 = 0, $6 = 0, $__len$0 = 0, $__len$0$lcssa7 = 0, $__len$0$ph = 0;
 $4 = HEAP32[$__value_ >> 2] | 0;
 $$0$ph = $__first;
 $__len$0$ph = $__last - $__first >> 2;
 L1 : while (1) {
  $__len$0 = $__len$0$ph;
  while (1) {
   if (!$__len$0) {
    $$0$ph$lcssa = $$0$ph;
    break L1;
   }
   $6 = ($__len$0 | 0) / 2 | 0;
   if ((HEAP32[$$0$ph + ($6 << 2) >> 2] | 0) >>> 0 < $4 >>> 0) {
    $$lcssa = $6;
    $__len$0$lcssa7 = $__len$0;
    break;
   } else $__len$0 = $6;
  }
  $$0$ph = $$0$ph + ($$lcssa + 1 << 2) | 0;
  $__len$0$ph = $__len$0$lcssa7 + -1 - $$lcssa | 0;
 }
 return $$0$ph$lcssa | 0;
}

function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($agg$result, $__lhs, $__rhs) {
 $agg$result = $agg$result | 0;
 $__lhs = $__lhs | 0;
 $__rhs = $__rhs | 0;
 var $10 = 0, $2 = 0, $3 = 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $2 = _strlen($__lhs | 0) | 0;
 $3 = HEAP8[$__rhs >> 0] | 0;
 $10 = ($3 & 1) == 0 ? ($3 & 255) >>> 1 : HEAP32[$__rhs + 4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($agg$result, $__lhs, $2, $10 + $2 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($agg$result, (HEAP8[$__rhs >> 0] & 1) == 0 ? $__rhs + 1 | 0 : HEAP32[$__rhs + 8 >> 2] | 0, $10) | 0;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter19UnrecognizedVersionEyi($this, $0, $1, $version) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $version = $version | 0;
 var $10 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[_stderr >> 2] | 0;
 $3 = $this + 4 | 0;
 if (!(HEAP8[$3 >> 0] & 1)) $17 = $3 + 1 | 0; else $17 = HEAP32[$this + 12 >> 2] | 0;
 $10 = $this + 16 | 0;
 if (!(HEAP8[$10 >> 0] & 1)) $22 = $10 + 1 | 0; else $22 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $17;
 $18 = $vararg_buffer + 8 | 0;
 HEAP32[$18 >> 2] = $0;
 HEAP32[$18 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $22;
 HEAP32[$vararg_buffer + 20 >> 2] = $version;
 _fprintf($2 | 0, 19626, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN16MacFileUtilities7MachoID11UUIDCommandEiiPh($this, $cpu_type, $cpu_subtype, $bytes) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 $bytes = $bytes | 0;
 var $$0 = 0, $0 = 0, $uuid_cmd = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $uuid_cmd = sp;
 HEAP32[$uuid_cmd >> 2] = 0;
 $0 = __ZN16MacFileUtilities7MachoID10WalkHeaderEiiPFbPNS_11MachoWalkerEP12load_commandibPvES5_($this, $cpu_type, $cpu_subtype, 33, $uuid_cmd) | 0;
 if (!($0 & (HEAP32[$uuid_cmd >> 2] | 0) == 27)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 dest = $bytes;
 src = $uuid_cmd + 8 | 0;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($agg$result, $__lhs, $__rhs) {
 $agg$result = $agg$result | 0;
 $__lhs = $__lhs | 0;
 $__rhs = $__rhs | 0;
 var $10 = 0, $2 = 0, $4 = 0, $9 = 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $2 = HEAP8[$__lhs >> 0] | 0;
 $4 = ($2 & 1) == 0;
 $9 = $4 ? ($2 & 255) >>> 1 : HEAP32[$__lhs + 4 >> 2] | 0;
 $10 = _strlen($__rhs | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($agg$result, $4 ? $__lhs + 1 | 0 : HEAP32[$__lhs + 8 >> 2] | 0, $9, $9 + $10 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($agg$result, $__rhs, $10) | 0;
 return;
}

function __ZN12dwarf2reader13DIEDispatcher22ProcessAttributeStringEyNS_14DwarfAttributeENS_9DwarfFormERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($this, $0, $1, $attr, $form, $data) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $data = $data | 0;
 var $12 = 0, $13 = 0, $15 = 0, $25 = 0, $7 = 0;
 $7 = (HEAP32[$this + 24 >> 2] | 0) + -1 + (HEAP32[$this + 20 >> 2] | 0) | 0;
 $12 = HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($7 >>> 8 << 2) >> 2] | 0;
 $13 = $7 & 255;
 $15 = $12 + ($13 << 4) | 0;
 if ((HEAP32[$15 >> 2] | 0) == ($0 | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == ($1 | 0) : 0) {
  $25 = HEAP32[$12 + ($13 << 4) + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$25 >> 2] | 0) + 24 >> 2] & 31]($25, $attr, $form, $data);
  return;
 } else ___assert_fail(17746, 17677, 184, 17869);
}

function __ZN15google_breakpad15DwarfCUToModule11FuncHandler13EndAttributesEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $12 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = $this + 56 | 0;
 __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler20ComputeQualifiedNameEv($0, $this);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($1, $0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $2 = HEAP8[$1 >> 0] | 0;
 if (!($2 & 1)) $10 = ($2 & 255) >>> 1; else $10 = HEAP32[$this + 60 >> 2] | 0;
 if ($10) {
  STACKTOP = sp;
  return 1;
 }
 $12 = HEAP32[$this + 92 >> 2] | 0;
 if (!$12) {
  STACKTOP = sp;
  return 1;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($1, $12) | 0;
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__16__treeINS_12__value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return;
 __ZNSt3__16__treeINS_12__value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 20 | 0);
 __ZdlPv($__nd);
 return;
}

function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($this, $__x, $__a) {
 $this = $this | 0;
 $__x = $__x | 0;
 $__a = $__a | 0;
 var $0 = 0, $2 = 0, $5 = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $2 = HEAP32[$__a >> 2] | 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = $2;
 $5 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($2, 24) | 0;
 HEAP32[$0 >> 2] = $5;
 HEAP32[$this >> 2] = $5;
 HEAP32[$this + 8 >> 2] = $5 + 24;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($5, $__x);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($5 + 12 | 0, $__x + 12 | 0);
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 24;
 return;
}

function __ZN12dwarf2reader13DIEDispatcher22ProcessAttributeBufferEyNS_14DwarfAttributeENS_9DwarfFormEPKcy($this, $0, $1, $attr, $form, $data, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $data = $data | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $14 = 0, $15 = 0, $17 = 0, $27 = 0, $9 = 0;
 $9 = (HEAP32[$this + 24 >> 2] | 0) + -1 + (HEAP32[$this + 20 >> 2] | 0) | 0;
 $14 = HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($9 >>> 8 << 2) >> 2] | 0;
 $15 = $9 & 255;
 $17 = $14 + ($15 << 4) | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($0 | 0) ? (HEAP32[$17 + 4 >> 2] | 0) == ($1 | 0) : 0) {
  $27 = HEAP32[$14 + ($15 << 4) + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$27 >> 2] | 0) + 20 >> 2] & 15]($27, $attr, $form, $data, $2, $3);
  return;
 } else ___assert_fail(17746, 17677, 174, 17846);
}

function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb, $__ne, $__iob) {
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__iob = $__iob | 0;
 var $$0 = 0, $3 = 0, label = 0;
 L1 : do switch (HEAP32[$__iob + 4 >> 2] & 176 | 0) {
 case 16:
  {
   $3 = HEAP8[$__nb >> 0] | 0;
   switch ($3 << 24 >> 24) {
   case 43:
   case 45:
    {
     $$0 = $__nb + 1 | 0;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($__ne - $__nb | 0) > 1 & $3 << 24 >> 24 == 48) {
    switch (HEAP8[$__nb + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      label = 7;
      break L1;
     }
    }
    $$0 = $__nb + 2 | 0;
   } else label = 7;
   break;
  }
 case 32:
  {
   $$0 = $__ne;
   break;
  }
 default:
  label = 7;
 } while (0);
 if ((label | 0) == 7) $$0 = $__nb;
 return $$0 | 0;
}

function __ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($this, $buffer, $size, $offset) {
 $this = $this | 0;
 $buffer = $buffer | 0;
 $size = $size | 0;
 $offset = $offset | 0;
 var $$0 = 0, $$01 = 0, $1 = 0, $6 = 0, $result$0$off0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $$0 = (_pread(HEAP32[$this >> 2] | 0, $buffer | 0, $size | 0, $offset | 0) | 0) == ($size | 0);
  return $$0 | 0;
 }
 if (($offset | 0) < 0) {
  $$0 = 0;
  return $$0 | 0;
 }
 $6 = HEAP32[$this + 8 >> 2] | 0;
 do if (($offset + $size | 0) >>> 0 > $6 >>> 0) if ($6 >>> 0 > $offset >>> 0) {
  $$01 = $6 - $offset | 0;
  $result$0$off0 = 0;
  break;
 } else {
  $$0 = 0;
  return $$0 | 0;
 } else {
  $$01 = $size;
  $result$0$off0 = 1;
 } while (0);
 _memcpy($buffer | 0, $1 + $offset | 0, $$01 | 0) | 0;
 $$0 = $result$0$off0;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first, $last) {
 $first = $first | 0;
 $last = $last | 0;
 var $$0 = 0, $$1 = 0, $$first = 0, $5 = 0, $t$0$pn = 0;
 L1 : do if (($first | 0) == ($last | 0)) $$1 = $first; else {
  $$first = (HEAP8[$first >> 0] | 0) == 110 ? $first + 1 | 0 : $first;
  if (($$first | 0) == ($last | 0)) $$1 = $first; else {
   $5 = HEAP8[$$first >> 0] | 0;
   if ($5 << 24 >> 24 == 48) {
    $$1 = $$first + 1 | 0;
    break;
   }
   if (($5 + -49 & 255) < 9) {
    $t$0$pn = $$first;
    while (1) {
     $$0 = $t$0$pn + 1 | 0;
     if (($$0 | 0) == ($last | 0)) {
      $$1 = $last;
      break L1;
     }
     if (((HEAP8[$$0 >> 0] | 0) + -48 | 0) >>> 0 < 10) $t$0$pn = $$0; else {
      $$1 = $$0;
      break;
     }
    }
   } else $$1 = $first;
  }
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) {
  $6 = $3;
  do {
   $5 = $6 + -16 | 0;
   HEAP32[$2 >> 2] = $5;
   __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($5);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($1 | 0));
 }
 $9 = HEAP32[$this >> 2] | 0;
 if ($9) __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[HEAP32[$this + 16 >> 2] >> 2] | 0, $9, (HEAP32[$this + 12 >> 2] | 0) - $9 | 0);
 return;
}

function __ZNSt3__113__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0) {
  $2 = $this + 4 | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (($3 | 0) != ($0 | 0)) {
   $6 = $3;
   do {
    $5 = $6 + -16 | 0;
    HEAP32[$2 >> 2] = $5;
    __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($5);
    $6 = HEAP32[$2 >> 2] | 0;
   } while (($6 | 0) != ($0 | 0));
  }
  $9 = HEAP32[$this >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[$this + 12 >> 2] | 0, $9, (HEAP32[$this + 8 >> 2] | 0) - $9 | 0);
 }
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this | 0;
 var $12 = 0, $21 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($__s, $this);
  if (HEAP8[$__s >> 0] | 0) {
   $12 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($12) | 0) == -1) {
    $21 = $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
    HEAP32[$21 >> 2] = HEAP32[$21 >> 2] | 1;
   }
  }
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
 }
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this | 0;
 var $12 = 0, $21 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($__s, $this);
  if (HEAP8[$__s >> 0] | 0) {
   $12 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($12) | 0) == -1) {
    $21 = $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
    HEAP32[$21 >> 2] = HEAP32[$21 >> 2] | 1;
   }
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 }
 STACKTOP = sp;
 return $this | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $3 = 0, $9 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $12 = $3;
 } else $12 = $1;
 if (!(HEAP32[$this + 48 >> 2] & 8)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $9 = $this + 16 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $13 = $this + 12 | 0;
 if ($10 >>> 0 < $12 >>> 0) {
  $14 = HEAP32[$13 >> 2] | 0;
  HEAP32[$9 >> 2] = $12;
  $17 = $14;
  $18 = $12;
 } else {
  $17 = HEAP32[$13 >> 2] | 0;
  $18 = $10;
 }
 if ($17 >>> 0 >= $18 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 $$0 = HEAPU8[$17 >> 0] | 0;
 return $$0 | 0;
}

function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZN12dwarf2reader13DIEDispatcher25ProcessAttributeSignatureEyNS_14DwarfAttributeENS_9DwarfFormEy($this, $0, $1, $attr, $form, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $14 = 0, $15 = 0, $17 = 0, $27 = 0, $9 = 0;
 $9 = (HEAP32[$this + 24 >> 2] | 0) + -1 + (HEAP32[$this + 20 >> 2] | 0) | 0;
 $14 = HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($9 >>> 8 << 2) >> 2] | 0;
 $15 = $9 & 255;
 $17 = $14 + ($15 << 4) | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($0 | 0) ? (HEAP32[$17 + 4 >> 2] | 0) == ($1 | 0) : 0) {
  $27 = HEAP32[$14 + ($15 << 4) + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 31]($27, $attr, $form, $2, $3);
  return;
 } else ___assert_fail(17746, 17677, 194, 17892);
}

function __ZN12dwarf2reader13DIEDispatcher25ProcessAttributeReferenceEyNS_14DwarfAttributeENS_9DwarfFormEy($this, $0, $1, $attr, $form, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $14 = 0, $15 = 0, $17 = 0, $27 = 0, $9 = 0;
 $9 = (HEAP32[$this + 24 >> 2] | 0) + -1 + (HEAP32[$this + 20 >> 2] | 0) | 0;
 $14 = HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($9 >>> 8 << 2) >> 2] | 0;
 $15 = $9 & 255;
 $17 = $14 + ($15 << 4) | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($0 | 0) ? (HEAP32[$17 + 4 >> 2] | 0) == ($1 | 0) : 0) {
  $27 = HEAP32[$14 + ($15 << 4) + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$27 >> 2] | 0) + 16 >> 2] & 31]($27, $attr, $form, $2, $3);
  return;
 } else ___assert_fail(17746, 17677, 163, 17820);
}

function __ZN12dwarf2reader13DIEDispatcher24ProcessAttributeUnsignedEyNS_14DwarfAttributeENS_9DwarfFormEy($this, $0, $1, $attr, $form, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $14 = 0, $15 = 0, $17 = 0, $27 = 0, $9 = 0;
 $9 = (HEAP32[$this + 24 >> 2] | 0) + -1 + (HEAP32[$this + 20 >> 2] | 0) | 0;
 $14 = HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($9 >>> 8 << 2) >> 2] | 0;
 $15 = $9 & 255;
 $17 = $14 + ($15 << 4) | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($0 | 0) ? (HEAP32[$17 + 4 >> 2] | 0) == ($1 | 0) : 0) {
  $27 = HEAP32[$14 + ($15 << 4) + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$27 >> 2] | 0) + 8 >> 2] & 31]($27, $attr, $form, $2, $3);
  return;
 } else ___assert_fail(17746, 17677, 143, 17772);
}

function __ZN12dwarf2reader13DIEDispatcher22ProcessAttributeSignedEyNS_14DwarfAttributeENS_9DwarfFormEx($this, $0, $1, $attr, $form, $2, $3) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $14 = 0, $15 = 0, $17 = 0, $27 = 0, $9 = 0;
 $9 = (HEAP32[$this + 24 >> 2] | 0) + -1 + (HEAP32[$this + 20 >> 2] | 0) | 0;
 $14 = HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($9 >>> 8 << 2) >> 2] | 0;
 $15 = $9 & 255;
 $17 = $14 + ($15 << 4) | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($0 | 0) ? (HEAP32[$17 + 4 >> 2] | 0) == ($1 | 0) : 0) {
  $27 = HEAP32[$14 + ($15 << 4) + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$27 >> 2] | 0) + 12 >> 2] & 31]($27, $attr, $form, $2, $3);
  return;
 } else ___assert_fail(17746, 17677, 153, 17797);
}

function __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad14AbstractOriginEEENS_19__map_value_compareIyS4_NS_4lessIyEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return;
 __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad14AbstractOriginEEENS_19__map_value_compareIyS4_NS_4lessIyEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIyN15google_breakpad14AbstractOriginEEENS_19__map_value_compareIyS4_NS_4lessIyEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 24 | 0);
 __ZdlPv($__nd);
 return;
}

function __Z28breakpad_swap_mach_header_64P14mach_header_64($mh) {
 $mh = $mh | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $20 = 0, $5 = 0, $8 = 0;
 HEAP32[$mh >> 2] = _llvm_bswap_i32(HEAP32[$mh >> 2] | 0) | 0;
 $2 = $mh + 4 | 0;
 HEAP32[$2 >> 2] = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
 $5 = $mh + 8 | 0;
 HEAP32[$5 >> 2] = _llvm_bswap_i32(HEAP32[$5 >> 2] | 0) | 0;
 $8 = $mh + 12 | 0;
 HEAP32[$8 >> 2] = _llvm_bswap_i32(HEAP32[$8 >> 2] | 0) | 0;
 $11 = $mh + 16 | 0;
 HEAP32[$11 >> 2] = _llvm_bswap_i32(HEAP32[$11 >> 2] | 0) | 0;
 $14 = $mh + 20 | 0;
 HEAP32[$14 >> 2] = _llvm_bswap_i32(HEAP32[$14 >> 2] | 0) | 0;
 $17 = $mh + 24 | 0;
 HEAP32[$17 >> 2] = _llvm_bswap_i32(HEAP32[$17 >> 2] | 0) | 0;
 $20 = $mh + 28 | 0;
 HEAP32[$20 >> 2] = _llvm_bswap_i32(HEAP32[$20 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $27 = 0, $31 = 0, $4 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] & 127]($21) | 0) == -1) {
   $27 = HEAP32[$0 >> 2] | 0;
   $31 = $27 + ((HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
   HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
  }
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $27 = 0, $31 = 0, $4 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] & 127]($21) | 0) == -1) {
   $27 = HEAP32[$0 >> 2] | 0;
   $31 = $27 + ((HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) + 16) | 0;
   HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
  }
 }
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule8Reporter15UnnamedRegisterEji($this, $offset, $reg) {
 $this = $this | 0;
 $offset = $offset | 0;
 $reg = $reg | 0;
 var $0 = 0, $1 = 0, $15 = 0, $16 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $15 = $1 + 1 | 0; else $15 = HEAP32[$this + 12 >> 2] | 0;
 $8 = $this + 16 | 0;
 if (!(HEAP8[$8 >> 0] & 1)) $16 = $8 + 1 | 0; else $16 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $15;
 HEAP32[$vararg_buffer + 4 >> 2] = $16;
 HEAP32[$vararg_buffer + 8 >> 2] = $offset;
 HEAP32[$vararg_buffer + 12 >> 2] = $reg;
 _fprintf($0 | 0, 13249, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __Z22breakpad_swap_fat_archP8fat_archj($fa, $narchs) {
 $fa = $fa | 0;
 $narchs = $narchs | 0;
 var $1 = 0, $10 = 0, $13 = 0, $4 = 0, $7 = 0, $i$01 = 0;
 if (!$narchs) return; else $i$01 = 0;
 do {
  $1 = $fa + ($i$01 * 20 | 0) | 0;
  HEAP32[$1 >> 2] = _llvm_bswap_i32(HEAP32[$1 >> 2] | 0) | 0;
  $4 = $fa + ($i$01 * 20 | 0) + 4 | 0;
  HEAP32[$4 >> 2] = _llvm_bswap_i32(HEAP32[$4 >> 2] | 0) | 0;
  $7 = $fa + ($i$01 * 20 | 0) + 8 | 0;
  HEAP32[$7 >> 2] = _llvm_bswap_i32(HEAP32[$7 >> 2] | 0) | 0;
  $10 = $fa + ($i$01 * 20 | 0) + 12 | 0;
  HEAP32[$10 >> 2] = _llvm_bswap_i32(HEAP32[$10 >> 2] | 0) | 0;
  $13 = $fa + ($i$01 * 20 | 0) + 16 | 0;
  HEAP32[$13 >> 2] = _llvm_bswap_i32(HEAP32[$13 >> 2] | 0) | 0;
  $i$01 = $i$01 + 1 | 0;
 } while (($i$01 | 0) != ($narchs | 0));
 return;
}

function _strtold_l($s, $p, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $loc = $loc | 0;
 var $0 = 0, $1 = 0, $12 = 0, $4 = 0.0, $f$i$i = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i$i = sp;
 dest = $f$i$i;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f$i$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f$i$i + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f$i$i + 44 >> 2] = $s;
 HEAP32[$f$i$i + 76 >> 2] = -1;
 ___shlim($f$i$i, 0);
 $4 = +___floatscan($f$i$i, 2, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f$i$i + 108 >> 2] | 0) | 0;
 if (!$p) {
  STACKTOP = sp;
  return +$4;
 }
 HEAP32[$p >> 2] = ($12 | 0) != 0 ? $s + $12 | 0 : $s;
 STACKTOP = sp;
 return +$4;
}

function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $12 = 0, $15 = 0, $20 = 0, $9 = 0, $mem$0 = 0;
 if (!$oldmem) {
  $mem$0 = _malloc($bytes) | 0;
  return $mem$0 | 0;
 }
 if ($bytes >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $9 = _try_realloc_chunk($oldmem + -8 | 0, $bytes >>> 0 < 11 ? 16 : $bytes + 11 & -8) | 0;
 if ($9) {
  $mem$0 = $9 + 8 | 0;
  return $mem$0 | 0;
 }
 $12 = _malloc($bytes) | 0;
 if (!$12) {
  $mem$0 = 0;
  return $mem$0 | 0;
 }
 $15 = HEAP32[$oldmem + -4 >> 2] | 0;
 $20 = ($15 & -8) - (($15 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($12 | 0, $oldmem | 0, ($20 >>> 0 < $bytes >>> 0 ? $20 : $bytes) | 0) | 0;
 _free($oldmem);
 $mem$0 = $12;
 return $mem$0 | 0;
}

function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) HEAP32[$__err >> 2] = 4;
  $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo8Reporter17EarlyEHTerminatorEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[_stderr >> 2] | 0;
 $3 = $this + 4 | 0;
 if (!(HEAP8[$3 >> 0] & 1)) $17 = $3 + 1 | 0; else $17 = HEAP32[$this + 12 >> 2] | 0;
 $10 = $this + 16 | 0;
 if (!(HEAP8[$10 >> 0] & 1)) $22 = $10 + 1 | 0; else $22 = HEAP32[$this + 24 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $17;
 $18 = $vararg_buffer + 8 | 0;
 HEAP32[$18 >> 2] = $0;
 HEAP32[$18 + 4 >> 2] = $1;
 HEAP32[$vararg_buffer + 16 >> 2] = $22;
 _fprintf($2 | 0, 19339, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) {
  $6 = $3;
  do {
   $5 = $6 + -16 | 0;
   HEAP32[$2 >> 2] = $5;
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($1 | 0));
 }
 $9 = HEAP32[$this >> 2] | 0;
 if ($9) __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[HEAP32[$this + 16 >> 2] >> 2] | 0, $9, (HEAP32[$this + 12 >> 2] | 0) - $9 | 0);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0) {
  $2 = $this + 4 | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (($3 | 0) != ($0 | 0)) {
   $6 = $3;
   do {
    $5 = $6 + -16 | 0;
    HEAP32[$2 >> 2] = $5;
    __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
    $6 = HEAP32[$2 >> 2] | 0;
   } while (($6 | 0) != ($0 | 0));
  }
  $9 = HEAP32[$this >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[$this + 12 >> 2] | 0, $9, (HEAP32[$this + 8 >> 2] | 0) - $9 | 0);
 }
 return;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 15]($8, $info, $dst_ptr, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $0 = 0, $1 = 0, $6 = 0, $9 = 0;
 $0 = $info + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  HEAP32[$0 >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
 } else {
  if (($1 | 0) != ($adjustedPtr | 0)) {
   $9 = $info + 36 | 0;
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $6 = $info + 24 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 2) HEAP32[$6 >> 2] = $path_below;
 } while (0);
 return;
}

function __ZN12dwarf2reader15CompilationUnitC2ERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4pairIPKcyEENS1_4lessIS8_EENS6_INS9_IKS8_SC_EEEEEEyPNS_10ByteReaderEPNS_13Dwarf2HandlerE($this, $sections, $0, $1, $reader, $handler) {
 $this = $this | 0;
 $sections = $sections | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reader = $reader | 0;
 $handler = $handler | 0;
 var $10 = 0, $3 = 0;
 HEAP32[$this >> 2] = 4792;
 $3 = $this + 40 | 0;
 HEAP32[$3 >> 2] = $0;
 HEAP32[$3 + 4 >> 2] = $1;
 HEAP32[$this + 68 >> 2] = $reader;
 HEAP32[$this + 72 >> 2] = $sections;
 HEAP32[$this + 76 >> 2] = $handler;
 $10 = $this + 80 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 return;
}

function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 7412;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 $6 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 9520) | 0;
 __ZNSt3__16localeD2Ev($1);
 HEAP32[$this + 36 >> 2] = $6;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 127]($6) | 0) & 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 7540;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 $6 = __ZNKSt3__16locale9use_facetERNS0_2idE($1, 9512) | 0;
 __ZNSt3__16localeD2Ev($1);
 HEAP32[$this + 36 >> 2] = $6;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 127]($6) | 0) & 1;
 STACKTOP = sp;
 return;
}

function __ZN16MacFileUtilities11MachoWalker13CurrentHeaderEP14mach_header_64Pi($this, $header, $offset) {
 $this = $this | 0;
 $header = $header | 0;
 $offset = $offset | 0;
 var $$0 = 0, $1 = 0;
 $1 = HEAP32[$this + 20 >> 2] | 0;
 if (!$1) {
  $$0 = 0;
  return $$0 | 0;
 };
 HEAP32[$header >> 2] = HEAP32[$1 >> 2];
 HEAP32[$header + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$header + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$header + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 HEAP32[$header + 16 >> 2] = HEAP32[$1 + 16 >> 2];
 HEAP32[$header + 20 >> 2] = HEAP32[$1 + 20 >> 2];
 HEAP32[$header + 24 >> 2] = HEAP32[$1 + 24 >> 2];
 HEAP32[$header + 28 >> 2] = HEAP32[$1 + 28 >> 2];
 HEAP32[$offset >> 2] = HEAP32[$this + 28 >> 2];
 $$0 = 1;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this | 0;
 var $8 = 0;
 if (!(HEAP8[2384] | 0)) if (___cxa_guard_acquire(2384) | 0) {
  if (!(HEAP8[2392] | 0)) if (___cxa_guard_acquire(2392) | 0) {
   $8 = 12352;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 12640);
   ___cxa_atexit(172, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2392);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12352, 12640) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12364, 12652) | 0;
  HEAP32[3166] = 12352;
  ___cxa_guard_release(2384);
 }
 return HEAP32[3166] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this | 0;
 var $8 = 0;
 if (!(HEAP8[2368] | 0)) if (___cxa_guard_acquire(2368) | 0) {
  if (!(HEAP8[2376] | 0)) if (___cxa_guard_acquire(2376) | 0) {
   $8 = 12060;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 12348);
   ___cxa_atexit(171, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2376);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(12060, 30737) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(12072, 30740) | 0;
  HEAP32[3087] = 12060;
  ___cxa_guard_release(2368);
 }
 return HEAP32[3087] | 0;
}

function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 return _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
}

function __ZN15google_breakpad15DwarfCUToModule22ProcessAttributeStringEN12dwarf2reader14DwarfAttributeENS1_9DwarfFormERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $attr, $form, $data) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $data = $data | 0;
 var $1 = 0, $4 = 0, $9 = 0;
 switch ($attr | 0) {
 case 3:
  {
   $1 = HEAP32[$this + 8 >> 2] | 0;
   if (!$1) ___assert_fail(15030, 21517, 119, 26244);
   $4 = HEAP32[$1 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$4 >> 2] | 0) + 8 >> 2] & 63]($4, $data);
   return;
  }
 case 27:
  {
   $9 = HEAP32[$this + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 63]($9, $data);
   return;
  }
 default:
  return;
 }
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this, $__sz) {
 $this = $this | 0;
 $__sz = $__sz | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $6 = $1 - $2 >> 2;
 if ($6 >>> 0 < $__sz >>> 0) __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__sz - $6 | 0); else if ($6 >>> 0 > $__sz >>> 0) {
  $10 = $2 + ($__sz << 2) | 0;
  if (($1 | 0) != ($10 | 0)) {
   $13 = $1;
   while (1) {
    $12 = $13 + -4 | 0;
    if (($12 | 0) == ($10 | 0)) {
     $$lcssa = $12;
     break;
    } else $13 = $12;
   }
   HEAP32[$0 >> 2] = $$lcssa;
  }
 }
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($this, $__s, $__sz, $__reserve) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 $__reserve = $__reserve | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__reserve >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__reserve >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__reserve + 16 & -16;
  $7 = _malloc($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function _vasprintf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $2 = 0, $5 = 0, $9 = 0, $ap2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap2 = sp;
 $0 = _malloc(240) | 0;
 do if (!$0) $$0 = -1; else {
  HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
  $2 = _vsnprintf($0, 240, $fmt, $ap2) | 0;
  if ($2 >>> 0 < 240) {
   $5 = _realloc($0, $2 + 1 | 0) | 0;
   HEAP32[$s >> 2] = ($5 | 0) != 0 ? $5 : $0;
   $$0 = $2;
   break;
  }
  _free($0);
  if (($2 | 0) < 0) $$0 = -1; else {
   $9 = $2 + 1 | 0;
   $10 = _malloc($9) | 0;
   HEAP32[$s >> 2] = $10;
   if (!$10) $$0 = -1; else $$0 = _vsnprintf($10, $9, $fmt, $ap) | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 15]($4, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIiPN12dwarf2reader13CallFrameInfo4RuleEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIiPN12dwarf2reader13CallFrameInfo4RuleEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIiPN12dwarf2reader13CallFrameInfo4RuleEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN15google_breakpad15DwarfCUToModule11FuncHandler24ProcessAttributeUnsignedEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $4 = 0;
 switch ($attr | 0) {
 case 32:
  {
   HEAP8[$this + 96 >> 0] = 1;
   return;
  }
 case 17:
  {
   $4 = $this + 72 | 0;
   HEAP32[$4 >> 2] = $0;
   HEAP32[$4 + 4 >> 2] = $1;
   return;
  }
 case 18:
  {
   HEAP32[$this + 88 >> 2] = $form;
   $10 = $this + 80 | 0;
   HEAP32[$10 >> 2] = $0;
   HEAP32[$10 + 4 >> 2] = $1;
   return;
  }
 case 60:
  {
   HEAP8[$this + 24 >> 0] = (($0 | 0) != 0 | ($1 | 0) != 0) & 1;
   return;
  }
 default:
  return;
 }
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 31]($8, $info, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $1 = 0, $10 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $$pre$i$i$i = HEAP32[$2 >> 2] | 0;
 if (($$pre$i$i$i | 0) != ($1 | 0)) {
  $5 = $$pre$i$i$i;
  while (1) {
   $4 = $5 + -4 | 0;
   if (($4 | 0) == ($1 | 0)) {
    $$lcssa = $4;
    break;
   } else $5 = $4;
  }
  HEAP32[$2 >> 2] = $$lcssa;
 }
 $7 = HEAP32[$this >> 2] | 0;
 do if ($7) {
  $10 = HEAP32[$this + 16 >> 2] | 0;
  if (($10 | 0) == ($7 | 0)) {
   HEAP8[$10 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv($7);
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nb, $__ne, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $0 = 0, $1 = 0, $fmt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $fmt = sp;
 HEAP8[$fmt >> 0] = 37;
 $0 = $fmt + 1 | 0;
 HEAP8[$0 >> 0] = $__fmt;
 $1 = $fmt + 2 | 0;
 HEAP8[$1 >> 0] = $__mod;
 HEAP8[$fmt + 3 >> 0] = 0;
 if ($__mod << 24 >> 24) {
  HEAP8[$0 >> 0] = $__mod;
  HEAP8[$1 >> 0] = $__fmt;
 }
 HEAP32[$__ne >> 2] = $__nb + (_strftime_l($__nb | 0, (HEAP32[$__ne >> 2] | 0) - $__nb | 0, $fmt | 0, $__tm | 0, HEAP32[$this >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIjPN15google_breakpad6Module4FileEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIjPN15google_breakpad6Module4FileEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIjPN15google_breakpad6Module4FileEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$012 = 0, $13 = 0, $__i$03 = 0;
 L1 : do if (!(HEAP8[$this + 44 >> 0] | 0)) if (($__n | 0) > 0) {
  $$012 = $__s;
  $__i$03 = 0;
  while (1) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 31]($this, HEAP32[$$012 >> 2] | 0) | 0) == -1) {
    $$0 = $__i$03;
    break L1;
   }
   $13 = $__i$03 + 1 | 0;
   if (($13 | 0) < ($__n | 0)) {
    $$012 = $$012 + 4 | 0;
    $__i$03 = $13;
   } else {
    $$0 = $13;
    break;
   }
  }
 } else $$0 = 0; else $$0 = _fwrite($__s | 0, 4, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0; while (0);
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$012 = 0, $14 = 0, $__i$03 = 0;
 L1 : do if (!(HEAP8[$this + 44 >> 0] | 0)) if (($__n | 0) > 0) {
  $$012 = $__s;
  $__i$03 = 0;
  while (1) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 31]($this, HEAPU8[$$012 >> 0] | 0) | 0) == -1) {
    $$0 = $__i$03;
    break L1;
   }
   $14 = $__i$03 + 1 | 0;
   if (($14 | 0) < ($__n | 0)) {
    $$012 = $$012 + 1 | 0;
    $__i$03 = $14;
   } else {
    $$0 = $14;
    break;
   }
  }
 } else $$0 = 0; else $$0 = _fwrite($__s | 0, 1, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0; while (0);
 return $$0 | 0;
}

function _strtoll($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $4 = 0, $6 = 0, $7 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 $4 = $f$i + 8 | 0;
 HEAP32[$4 >> 2] = ($s | 0) < 0 ? -1 : $s + 2147483647 | 0;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $6 = ___intscan($f$i, $base, 1, 0, -2147483648) | 0;
 $7 = tempRet0;
 if (!$p) {
  tempRet0 = $7;
  STACKTOP = sp;
  return $6 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$4 >> 2] | 0));
 tempRet0 = $7;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZN15google_breakpad16DwarfCFIToModule17ValExpressionRuleEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $0, $1, $reg, $expression) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 $expression = $expression | 0;
 var $2 = 0, $4 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $4 = HEAP32[$this + 12 >> 2] | 0;
 $7 = HEAP32[(HEAP32[$4 >> 2] | 0) + 16 >> 2] | 0;
 $9 = HEAP32[$this + 20 >> 2] | 0;
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($2, $this, $reg);
 FUNCTION_TABLE_viii[$7 & 15]($4, $9, $2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($this, $__str, $__pos, $__n, $__a) {
 $this = $this | 0;
 $__str = $__str | 0;
 $__pos = $__pos | 0;
 $__n = $__n | 0;
 $__a = $__a | 0;
 var $0 = 0, $14 = 0, $2 = 0, $7 = 0;
 $0 = HEAP8[$__str >> 0] | 0;
 $2 = ($0 & 1) == 0;
 $7 = $2 ? ($0 & 255) >>> 1 : HEAP32[$__str + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this); else {
  $14 = $7 - $__pos | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, ($2 ? $__str + 1 | 0 : HEAP32[$__str + 8 >> 2] | 0) + $__pos | 0, $14 >>> 0 < $__n >>> 0 ? $14 : $__n);
  return;
 }
}

function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $6 = 0, $7 = 0, $i$01 = 0;
 HEAP32[$this >> 2] = 9428;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$1 >> 2] | 0) != ($3 | 0)) {
  $6 = $3;
  $i$01 = 0;
  do {
   $7 = HEAP32[$6 + ($i$01 << 2) >> 2] | 0;
   if ($7) __ZNSt3__114__shared_count16__release_sharedEv($7) | 0;
   $i$01 = $i$01 + 1 | 0;
   $6 = HEAP32[$0 >> 2] | 0;
  } while ($i$01 >>> 0 < (HEAP32[$1 >> 2] | 0) - $6 >> 2 >>> 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 144 | 0);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule14ExpressionRuleEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $0, $1, $reg, $expression) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 $expression = $expression | 0;
 var $2 = 0, $4 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $4 = HEAP32[$this + 12 >> 2] | 0;
 $7 = HEAP32[(HEAP32[$4 >> 2] | 0) + 16 >> 2] | 0;
 $9 = HEAP32[$this + 20 >> 2] | 0;
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($2, $this, $reg);
 FUNCTION_TABLE_viii[$7 & 15]($4, $9, $2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $3 = 0, $8 = 0, $9 = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 do if (!$__cap) $8 = 0; else {
  $3 = $__a + 112 | 0;
  if ($__cap >>> 0 < 29 & (HEAP8[$3 >> 0] | 0) == 0) {
   HEAP8[$3 >> 0] = 1;
   $8 = $__a;
   break;
  } else {
   $8 = __Znwj($__cap << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$this >> 2] = $8;
 $9 = $8 + ($__start << 2) | 0;
 HEAP32[$this + 8 >> 2] = $9;
 HEAP32[$this + 4 >> 2] = $9;
 HEAP32[$this + 12 >> 2] = $8 + ($__cap << 2);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $0 = 0, $1 = 0, $13 = 0, $3 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP8[$0 >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $13 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this, $3 ? $0 + 1 | 0 : HEAP32[$this + 20 >> 2] | 0, $3 ? ($1 & 255) >>> 1 : HEAP32[$this + 16 >> 2] | 0) | 0;
 HEAP32[$agg$result >> 2] = HEAP32[$13 >> 2];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[$13 + 4 >> 2];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[$13 + 8 >> 2];
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 return;
}

function _strtoull($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $4 = 0, $6 = 0, $7 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 $4 = $f$i + 8 | 0;
 HEAP32[$4 >> 2] = ($s | 0) < 0 ? -1 : $s + 2147483647 | 0;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $6 = ___intscan($f$i, $base, 1, -1, -1) | 0;
 $7 = tempRet0;
 if (!$p) {
  tempRet0 = $7;
  STACKTOP = sp;
  return $6 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$4 >> 2] | 0));
 tempRet0 = $7;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($this, $__s, $__sz, $__reserve) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 $__reserve = $__reserve | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__reserve >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__reserve >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__reserve + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter20MisplacedSegmentDataERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $15 = $1 + 1 | 0; else $15 = HEAP32[$this + 12 >> 2] | 0;
 $14 = (HEAP8[$name >> 0] & 1) == 0 ? $name + 1 | 0 : HEAP32[$name + 8 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $15;
 HEAP32[$vararg_buffer + 4 >> 2] = $14;
 _fprintf($0 | 0, 23530, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad6Module18AddStackFrameEntryEPNS0_15StackFrameEntryE($this, $stack_frame_entry) {
 $this = $this | 0;
 $stack_frame_entry = $stack_frame_entry | 0;
 var $0 = 0, $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $stack_frame_entry;
 $1 = $this + 84 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) == (HEAP32[$this + 88 >> 2] | 0)) {
  __ZNSt3__16vectorIPN15google_breakpad6Module15StackFrameEntryENS_9allocatorIS4_EEE21__push_back_slow_pathIKS4_EEvRT_($this + 80 | 0, $0);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$2 >> 2] = $stack_frame_entry;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 4;
  STACKTOP = sp;
  return;
 }
}

function __ZN15google_breakpad6mach_o6Reader8Reporter15SectionsMissingERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $15 = $1 + 1 | 0; else $15 = HEAP32[$this + 12 >> 2] | 0;
 $14 = (HEAP8[$name >> 0] & 1) == 0 ? $name + 1 | 0 : HEAP32[$name + 8 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $15;
 HEAP32[$vararg_buffer + 4 >> 2] = $14;
 _fprintf($0 | 0, 23432, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __Z25breakpad_swap_mach_headerP11mach_header($mh) {
 $mh = $mh | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $5 = 0, $8 = 0;
 HEAP32[$mh >> 2] = _llvm_bswap_i32(HEAP32[$mh >> 2] | 0) | 0;
 $2 = $mh + 4 | 0;
 HEAP32[$2 >> 2] = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
 $5 = $mh + 8 | 0;
 HEAP32[$5 >> 2] = _llvm_bswap_i32(HEAP32[$5 >> 2] | 0) | 0;
 $8 = $mh + 12 | 0;
 HEAP32[$8 >> 2] = _llvm_bswap_i32(HEAP32[$8 >> 2] | 0) | 0;
 $11 = $mh + 16 | 0;
 HEAP32[$11 >> 2] = _llvm_bswap_i32(HEAP32[$11 >> 2] | 0) | 0;
 $14 = $mh + 20 | 0;
 HEAP32[$14 >> 2] = _llvm_bswap_i32(HEAP32[$14 >> 2] | 0) | 0;
 $17 = $mh + 24 | 0;
 HEAP32[$17 >> 2] = _llvm_bswap_i32(HEAP32[$17 >> 2] | 0) | 0;
 return;
}

function ___toread($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $15 = 0, $2 = 0, $21 = 0, $6 = 0, $8 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = $f + 20 | 0;
 $8 = $f + 44 | 0;
 if ((HEAP32[$6 >> 2] | 0) >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, 0, 0) | 0;
 HEAP32[$f + 16 >> 2] = 0;
 HEAP32[$f + 28 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $15 = HEAP32[$f >> 2] | 0;
 if (!($15 & 20)) {
  $21 = HEAP32[$8 >> 2] | 0;
  HEAP32[$f + 8 >> 2] = $21;
  HEAP32[$f + 4 >> 2] = $21;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!($15 & 4)) {
  $$0 = -1;
  return $$0 | 0;
 }
 HEAP32[$f >> 2] = $15 | 32;
 $$0 = -1;
 return $$0 | 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($this) {
 $this = $this | 0;
 var $$pre1 = 0, $0 = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $10 = ($0 & 255) >>> 1;
  $14 = $this + 1 | 0;
 } else {
  $10 = HEAP32[$this + 4 >> 2] | 0;
  $14 = HEAP32[$this + 8 >> 2] | 0;
 }
 $11 = ($10 | 0) != 0 & 1;
 $$pre1 = $10 - $11 | 0;
 if (($10 | 0) == ($11 | 0)) $16 = $0; else {
  _memmove($14 | 0, $14 + $11 | 0, $$pre1 | 0) | 0;
  $16 = HEAP8[$this >> 0] | 0;
 }
 if (!($16 & 1)) HEAP8[$this >> 0] = $$pre1 << 1; else HEAP32[$this + 4 >> 2] = $$pre1;
 HEAP8[$14 + $$pre1 >> 0] = 0;
 return;
}

function _memcmp($vl, $vr, $n) {
 $vl = $vl | 0;
 $vr = $vr | 0;
 $n = $n | 0;
 var $$03 = 0, $$lcssa = 0, $$lcssa19 = 0, $1 = 0, $11 = 0, $2 = 0, $l$04 = 0, $r$05 = 0, label = 0;
 if (!$n) {
  $11 = 0;
  return $11 | 0;
 } else {
  $$03 = $n;
  $l$04 = $vl;
  $r$05 = $vr;
 }
 while (1) {
  $1 = HEAP8[$l$04 >> 0] | 0;
  $2 = HEAP8[$r$05 >> 0] | 0;
  if ($1 << 24 >> 24 != $2 << 24 >> 24) {
   $$lcssa = $1;
   $$lcssa19 = $2;
   break;
  }
  $$03 = $$03 + -1 | 0;
  if (!$$03) {
   $11 = 0;
   label = 5;
   break;
  } else {
   $l$04 = $l$04 + 1 | 0;
   $r$05 = $r$05 + 1 | 0;
  }
 }
 if ((label | 0) == 5) return $11 | 0;
 $11 = ($$lcssa & 255) - ($$lcssa19 & 255) | 0;
 return $11 | 0;
}

function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) {
  $6 = $3;
  do {
   $5 = $6 + -24 | 0;
   HEAP32[$2 >> 2] = $5;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($1 | 0));
 }
 $9 = HEAP32[$this >> 2] | 0;
 if ($9) __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[HEAP32[$this + 16 >> 2] >> 2] | 0, $9, (HEAP32[$this + 12 >> 2] | 0) - $9 | 0);
 return;
}

function __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0) {
  $2 = $this + 4 | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (($3 | 0) != ($0 | 0)) {
   $6 = $3;
   do {
    $5 = $6 + -24 | 0;
    HEAP32[$2 >> 2] = $5;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
    $6 = HEAP32[$2 >> 2] | 0;
   } while (($6 | 0) != ($0 | 0));
  }
  $9 = HEAP32[$this >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[$this + 12 >> 2] | 0, $9, (HEAP32[$this + 8 >> 2] | 0) - $9 | 0);
 }
 return;
}

function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, $id) {
 $this = $this | 0;
 $f = $f | 0;
 $id = $id | 0;
 var $0 = 0, $11 = 0, $12 = 0, $15 = 0, $3 = 0;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = $this + 8 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $11 = $3; else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($0, $id + 1 | 0);
  $11 = HEAP32[$0 >> 2] | 0;
 }
 $12 = HEAP32[$11 + ($id << 2) >> 2] | 0;
 if (!$12) $15 = $11; else {
  __ZNSt3__114__shared_count16__release_sharedEv($12) | 0;
  $15 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$15 + ($id << 2) >> 2] = $f;
 return;
}

function __ZN15google_breakpad17DwarfLineToModuleD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4488;
 __ZNSt3__16__treeINS_12__value_typeIjPN15google_breakpad6Module4FileEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this + 36 | 0, HEAP32[$this + 40 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 24 | 0, HEAP32[$this + 28 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $6 = 0, $7 = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 if (!$__cap) $6 = 0; else $6 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[$__a >> 2] | 0, $__cap << 4) | 0;
 HEAP32[$this >> 2] = $6;
 $7 = $6 + ($__start << 4) | 0;
 HEAP32[$this + 8 >> 2] = $7;
 HEAP32[$this + 4 >> 2] = $7;
 HEAP32[$this + 12 >> 2] = $6 + ($__cap << 4);
 return;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__sz + 16 & -16;
  $7 = _malloc($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return;
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
 __ZdlPv($__nd);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $info, $adjustedPtr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2);
 return;
}

function __ZN15google_breakpad15DwarfCUToModuleD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 4208;
 $1 = HEAP32[$this + 32 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 36 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~((($5 + -24 - $3 | 0) >>> 0) / 24 | 0) * 24 | 0);
  __ZdlPv($1);
 }
 $12 = HEAP32[$this + 12 >> 2] | 0;
 if ($12) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($12);
 }
 $15 = HEAP32[$this + 8 >> 2] | 0;
 if (!$15) return;
 __ZN15google_breakpad15DwarfCUToModule9CUContextD2Ev($15);
 __ZdlPv($15);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $0 = 0, $2 = 0, $8 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $8 = ($0 & 255) >>> 1; else $8 = HEAP32[$this + 4 >> 2] | 0;
 do if ($8 >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n - $8 | 0, $__c) | 0; else if ($2) {
  HEAP8[$this + 1 + $__n >> 0] = 0;
  HEAP8[$this >> 0] = $__n << 1;
  break;
 } else {
  HEAP8[(HEAP32[$this + 8 >> 2] | 0) + $__n >> 0] = 0;
  HEAP32[$this + 4 >> 2] = $__n;
  break;
 } while (0);
 return;
}

function __ZN16MacFileUtilities7MachoID3MD5EiiPh($this, $cpu_type, $cpu_subtype, $identifier) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 $identifier = $identifier | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = $this + 4196 | 0;
 HEAP32[$0 >> 2] = 15;
 HEAP32[$0 + 4 >> 2] = 0;
 $1 = $this + 4108 | 0;
 __ZN15google_breakpad7MD5InitEPNS_10MD5ContextE($1);
 if (!(__ZN16MacFileUtilities7MachoID10WalkHeaderEiiPFbPNS_11MachoWalkerEP12load_commandibPvES5_($this, $cpu_type, $cpu_subtype, 34, $this) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 __ZN15google_breakpad8MD5FinalEPhPNS_10MD5ContextE($identifier, $1);
 $$0 = 1;
 return $$0 | 0;
}

function __ZN15google_breakpad6FileID15MachoIdentifierEiiPh($this, $cpu_type, $cpu_subtype, $identifier) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 $identifier = $identifier | 0;
 var $$0 = 0, $macho = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4208 | 0;
 $macho = sp;
 __ZN16MacFileUtilities7MachoIDC2EPKc($macho, $this);
 if (__ZN16MacFileUtilities7MachoID11UUIDCommandEiiPh($macho, $cpu_type, $cpu_subtype, $identifier) | 0) $$0 = 1; else $$0 = __ZN16MacFileUtilities7MachoID3MD5EiiPh($macho, $cpu_type, $cpu_subtype, $identifier) | 0;
 __ZN16MacFileUtilities7MachoIDD2Ev($macho);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15google_breakpad11DumpSymbolsD2Ev($this) {
 $this = $this | 0;
 var $13 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 52 | 0);
 $2 = HEAP32[$this + 36 >> 2] | 0;
 $4 = $2;
 if ($2) {
  $5 = $this + 40 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -32 - $4 | 0) >>> 5) << 5);
  __ZdlPv($2);
 }
 $13 = HEAP32[$this + 32 >> 2] | 0;
 if ($13) __ZdaPv($13);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 20 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 return;
}

function _wmemmove($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $5 = 0;
 $5 = ($n | 0) == 0;
 if ($d - $s >> 2 >>> 0 < $n >>> 0) {
  if ($5) return $d | 0; else $$in = $n;
  do {
   $$in = $$in + -1 | 0;
   HEAP32[$d + ($$in << 2) >> 2] = HEAP32[$s + ($$in << 2) >> 2];
  } while (($$in | 0) != 0);
  return $d | 0;
 } else {
  if ($5) return $d | 0; else {
   $$025 = $s;
   $$07 = $d;
   $$16 = $n;
  }
  while (1) {
   $$16 = $$16 + -1 | 0;
   HEAP32[$$07 >> 2] = HEAP32[$$025 >> 2];
   if (!$$16) break; else {
    $$025 = $$025 + 4 | 0;
    $$07 = $$07 + 4 | 0;
   }
  }
  return $d | 0;
 }
 return 0;
}

function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 7476;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $1);
 __ZNSt3__16localeD2Ev($1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 7604;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $1);
 __ZNSt3__16localeD2Ev($1);
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad17DwarfLineToModuleD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4488;
 __ZNSt3__16__treeINS_12__value_typeIjPN15google_breakpad6Module4FileEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this + 36 | 0, HEAP32[$this + 40 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 24 | 0, HEAP32[$this + 28 >> 2] | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 return;
}

function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $1 = 0;
 L1 : do if (($low | 0) == ($high | 0)) $$0$lcssa = $high; else {
  $$01 = $low;
  while (1) {
   $1 = HEAP32[$$01 >> 2] | 0;
   if ($1 >>> 0 >= 128) {
    $$0$lcssa = $$01;
    break L1;
   }
   if (!((HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16)) {
    $$0$lcssa = $$01;
    break L1;
   }
   $$01 = $$01 + 4 | 0;
   if (($$01 | 0) == ($high | 0)) {
    $$0$lcssa = $high;
    break;
   }
  }
 } while (0);
 return $$0$lcssa | 0;
}

function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $6 = 0, $7 = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 if (!$__cap) $6 = 0; else $6 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[$__a >> 2] | 0, $__cap << 4) | 0;
 HEAP32[$this >> 2] = $6;
 $7 = $6 + ($__start << 4) | 0;
 HEAP32[$this + 8 >> 2] = $7;
 HEAP32[$this + 4 >> 2] = $7;
 HEAP32[$this + 12 >> 2] = $6 + ($__cap << 4);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__sz + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 2) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__sz + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $8;
 }
 _wmemcpy($__p$0, $__s, $__sz) | 0;
 HEAP32[$__p$0 + ($__sz << 2) >> 2] = 0;
 return;
}

function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $2 = 0, $4 = 0, $5 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 do if ($0) {
  $2 = $this + 4 | 0;
  $$pre$i$i = HEAP32[$2 >> 2] | 0;
  if (($$pre$i$i | 0) != ($0 | 0)) {
   $5 = $$pre$i$i;
   while (1) {
    $4 = $5 + -4 | 0;
    if (($4 | 0) == ($0 | 0)) {
     $$lcssa = $4;
     break;
    } else $5 = $4;
   }
   HEAP32[$2 >> 2] = $$lcssa;
  }
  if (($this + 16 | 0) == ($0 | 0)) {
   HEAP8[$this + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv($0);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $6 = 0, $7 = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 if (!$__cap) $6 = 0; else $6 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[$__a >> 2] | 0, $__cap * 24 | 0) | 0;
 HEAP32[$this >> 2] = $6;
 $7 = $6 + ($__start * 24 | 0) | 0;
 HEAP32[$this + 8 >> 2] = $7;
 HEAP32[$this + 4 >> 2] = $7;
 HEAP32[$this + 12 >> 2] = $6 + ($__cap * 24 | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 11) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__n + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $7;
 }
 _memset($__p$0 | 0, $__c | 0, $__n | 0) | 0;
 HEAP8[$__p$0 + $__n >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 2) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__n + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $8;
 }
 _wmemset($__p$0, $__c, $__n) | 0;
 HEAP32[$__p$0 + ($__n << 2) >> 2] = 0;
 return;
}

function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this, $low, $high, $vec) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $vec = $vec | 0;
 var $$015 = 0, $$06 = 0, $11 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$015 = $low;
  $$06 = $vec;
  while (1) {
   $4 = HEAP32[$$015 >> 2] | 0;
   if ($4 >>> 0 < 128) $11 = HEAPU16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($4 << 1) >> 1] | 0; else $11 = 0;
   HEAP16[$$06 >> 1] = $11;
   $$015 = $$015 + 4 | 0;
   if (($$015 | 0) == ($high | 0)) break; else $$06 = $$06 + 2 | 0;
  }
 }
 return $low + ($2 << 2) | 0;
}

function _NXFindBestFatArch($cputype, $cpusubtype, $fat_archs, $nfat_archs) {
 $cputype = $cputype | 0;
 $cpusubtype = $cpusubtype | 0;
 $fat_archs = $fat_archs | 0;
 $nfat_archs = $nfat_archs | 0;
 var $$0 = 0, $3 = 0, $f$01 = 0, label = 0;
 if (!$nfat_archs) {
  $$0 = 0;
  return $$0 | 0;
 } else $f$01 = 0;
 while (1) {
  $3 = $fat_archs + ($f$01 * 20 | 0) | 0;
  $f$01 = $f$01 + 1 | 0;
  if ((HEAP32[$3 >> 2] | 0) == ($cputype | 0)) {
   $$0 = $3;
   label = 4;
   break;
  }
  if ($f$01 >>> 0 >= $nfat_archs >>> 0) {
   $$0 = 0;
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) return $$0 | 0;
 return 0;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $info, $adjustedPtr, $path_below);
 }
 return;
}

function __ZL5UsageiPPKc($argv) {
 $argv = $argv | 0;
 var $0 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 _fwrite(24394, 50, 1, $0 | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$argv >> 2];
 _fprintf($0 | 0, 24445, $vararg_buffer | 0) | 0;
 _fwrite(24508, 56, 1, $0 | 0) | 0;
 _fwrite(24565, 56, 1, $0 | 0) | 0;
 _fwrite(24622, 69, 1, $0 | 0) | 0;
 _fwrite(24692, 33, 1, $0 | 0) | 0;
 _fwrite(24726, 53, 1, $0 | 0) | 0;
 _fwrite(24780, 11, 1, $0 | 0) | 0;
 _fwrite(24792, 11, 1, $0 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $1 = 0;
 L1 : do if (($low | 0) == ($high | 0)) $$0$lcssa = $high; else {
  $$01 = $low;
  while (1) {
   $1 = HEAP32[$$01 >> 2] | 0;
   if ($1 >>> 0 < 128) if ((HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16) {
    $$0$lcssa = $$01;
    break L1;
   }
   $$01 = $$01 + 4 | 0;
   if (($$01 | 0) == ($high | 0)) {
    $$0$lcssa = $high;
    break;
   }
  }
 } while (0);
 return $$0$lcssa | 0;
}

function _strcmp($l, $r) {
 $l = $l | 0;
 $r = $r | 0;
 var $$014 = 0, $$05 = 0, $$lcssa = 0, $$lcssa2 = 0, $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = HEAP8[$l >> 0] | 0;
 $1 = HEAP8[$r >> 0] | 0;
 if ($0 << 24 >> 24 == 0 ? 1 : $0 << 24 >> 24 != $1 << 24 >> 24) {
  $$lcssa = $0;
  $$lcssa2 = $1;
 } else {
  $$014 = $l;
  $$05 = $r;
  do {
   $$014 = $$014 + 1 | 0;
   $$05 = $$05 + 1 | 0;
   $6 = HEAP8[$$014 >> 0] | 0;
   $7 = HEAP8[$$05 >> 0] | 0;
  } while (!($6 << 24 >> 24 == 0 ? 1 : $6 << 24 >> 24 != $7 << 24 >> 24));
  $$lcssa = $6;
  $$lcssa2 = $7;
 }
 return ($$lcssa & 255) - ($$lcssa2 & 255) | 0;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter19LoadCommandTooShortEjj($this, $i, $type) {
 $this = $this | 0;
 $i = $i | 0;
 $type = $type | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 HEAP32[$vararg_buffer + 4 >> 2] = $i;
 HEAP32[$vararg_buffer + 8 >> 2] = $type;
 _fprintf($0 | 0, 23322, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN16MacFileUtilities11MachoWalkerC2EPKcPFbPS0_P12load_commandibPvES6_($this, $path, $callback, $context) {
 $this = $this | 0;
 $path = $path | 0;
 $callback = $callback | 0;
 $context = $context | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$this >> 2] = -1;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = $callback;
 HEAP32[$this + 16 >> 2] = $context;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP32[$this + 28 >> 2] = 0;
 HEAP32[$this >> 2] = _open($path | 0, 0, sp | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNK12dwarf2reader10ByteReader13ReadFourBytesEPKc($this, $signed_buffer) {
 $this = $this | 0;
 $signed_buffer = $signed_buffer | 0;
 var $$0$in = 0, $1 = 0, $10 = 0, $4 = 0, $7 = 0;
 $1 = HEAPU8[$signed_buffer >> 0] | 0;
 $4 = HEAPU8[$signed_buffer + 1 >> 0] | 0;
 $7 = HEAPU8[$signed_buffer + 2 >> 0] | 0;
 $10 = HEAPU8[$signed_buffer + 3 >> 0] | 0;
 if ((HEAP32[$this + 20 >> 2] | 0) == 1) {
  $$0$in = $4 << 8 | $1 | $7 << 16 | $10 << 24;
  tempRet0 = 0;
  return $$0$in | 0;
 } else {
  $$0$in = $4 << 16 | $1 << 24 | $7 << 8 | $10;
  tempRet0 = 0;
  return $$0$in | 0;
 }
 return 0;
}

function __ZN15google_breakpad16DwarfCFIToModule13UndefinedRuleEyi($this, $0, $1, $reg) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 var $2 = 0, $4 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $4 = HEAP32[$this + 12 >> 2] | 0;
 $7 = HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] | 0;
 $9 = HEAP32[$this + 20 >> 2] | 0;
 __ZN15google_breakpad16DwarfCFIToModule12RegisterNameEi($2, $this, $reg);
 FUNCTION_TABLE_viii[$7 & 15]($4, $9, $2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag, $arg, $func) {
 $flag = $flag | 0;
 $arg = $arg | 0;
 $func = $func | 0;
 _pthread_mutex_lock(12968) | 0;
 if ((HEAP32[$flag >> 2] | 0) == 1) do _pthread_cond_wait(12996, 12968) | 0; while ((HEAP32[$flag >> 2] | 0) == 1);
 if (!(HEAP32[$flag >> 2] | 0)) {
  HEAP32[$flag >> 2] = 1;
  _pthread_mutex_unlock(12968) | 0;
  FUNCTION_TABLE_vi[$func & 255]($arg);
  _pthread_mutex_lock(12968) | 0;
  HEAP32[$flag >> 2] = -1;
  _pthread_mutex_unlock(12968) | 0;
  _pthread_cond_broadcast(12996) | 0;
 } else _pthread_mutex_unlock(12968) | 0;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcj($this, $__c, $__pos) {
 $this = $this | 0;
 $__c = $__c | 0;
 $__pos = $__pos | 0;
 var $$0$i = 0, $0 = 0, $11 = 0, $13 = 0, $16 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $11 = ($0 & 255) >>> 1;
  $13 = $this + 1 | 0;
 } else {
  $11 = HEAP32[$this + 4 >> 2] | 0;
  $13 = HEAP32[$this + 8 >> 2] | 0;
 }
 if ($11 >>> 0 > $__pos >>> 0) {
  $16 = _memchr($13 + $__pos | 0, $__c & 255, $11 - $__pos | 0) | 0;
  if (!$16) $$0$i = -1; else $$0$i = $16 - $13 | 0;
 } else $$0$i = -1;
 return $$0$i | 0;
}

function __ZN15google_breakpad6Module8FindFileEPKc($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $1 = 0, $name_string = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $name_string = sp;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($name_string, $name, _strlen($name | 0) | 0);
 $1 = __ZN15google_breakpad6Module8FindFileERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($this, $name_string) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name_string);
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__16__treeIPN15google_breakpad6Module8FunctionENS2_15FunctionCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeIPN15google_breakpad6Module8FunctionENS2_15FunctionCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeIPN15google_breakpad6Module8FunctionENS2_15FunctionCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $3 = 0, $4 = 0;
 HEAP32[$this >> 2] = HEAP32[$0 >> 2];
 HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = $this + 12 | 0;
 $4 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $3 = 0, $4 = 0, $7 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0;
 if (($__lo | 0) == ($__hi | 0)) $__h$0$lcssa = 0; else {
  $__h$02 = 0;
  $__p$01 = $__lo;
  while (1) {
   $3 = (HEAP32[$__p$01 >> 2] | 0) + ($__h$02 << 4) | 0;
   $4 = $3 & -268435456;
   $7 = ($4 >>> 24 | $4) ^ $3;
   $__p$01 = $__p$01 + 4 | 0;
   if (($__p$01 | 0) == ($__hi | 0)) {
    $__h$0$lcssa = $7;
    break;
   } else $__h$02 = $7;
  }
 }
 return $__h$0$lcssa | 0;
}

function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $4 = 0, $5 = 0, $8 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0;
 if (($__lo | 0) == ($__hi | 0)) $__h$0$lcssa = 0; else {
  $__h$02 = 0;
  $__p$01 = $__lo;
  while (1) {
   $4 = (HEAP8[$__p$01 >> 0] | 0) + ($__h$02 << 4) | 0;
   $5 = $4 & -268435456;
   $8 = ($5 >>> 24 | $5) ^ $4;
   $__p$01 = $__p$01 + 1 | 0;
   if (($__p$01 | 0) == ($__hi | 0)) {
    $__h$0$lcssa = $8;
    break;
   } else $__h$02 = $8;
  }
 }
 return $__h$0$lcssa | 0;
}

function __ZN15google_breakpad15DwarfCUToModule11FileContext22AddSectionToSectionMapERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcy($this, $name, $contents, $0, $1) {
 $this = $this | 0;
 $name = $name | 0;
 $contents = $contents | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0, $6 = 0;
 $3 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4pairIPKcyEENS_4lessIS6_EENS4_INS7_IKS6_SA_EEEEEixERSD_($this + 12 | 0, $name) | 0;
 HEAP32[$3 >> 2] = $contents;
 $6 = $3 + 8 | 0;
 HEAP32[$6 >> 2] = $0;
 HEAP32[$6 + 4 >> 2] = $1;
 return;
}

function __ZNSt3__16__treeIPN15google_breakpad6Module6ExternENS2_13ExternCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeIPN15google_breakpad6Module6ExternENS2_13ExternCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeIPN15google_breakpad6Module6ExternENS2_13ExternCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$015 = 0, $$06 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$015 = $low;
  $$06 = $dest;
  while (1) {
   $4 = HEAP32[$$015 >> 2] | 0;
   HEAP8[$$06 >> 0] = $4 >>> 0 < 128 ? $4 & 255 : $dfault;
   $$015 = $$015 + 4 | 0;
   if (($$015 | 0) == ($high | 0)) break; else $$06 = $$06 + 1 | 0;
  }
 }
 return $low + ($2 << 2) | 0;
}

function __ZNK12dwarf2reader10ByteReader14UsableEncodingENS_20DwarfPointerEncodingE($this, $encoding) {
 $this = $this | 0;
 $encoding = $encoding | 0;
 var $$0 = 0;
 switch ($encoding & 112 | 0) {
 case 0:
  {
   $$0 = 1;
   break;
  }
 case 16:
  {
   $$0 = (HEAP8[$this + 26 >> 0] | 0) != 0;
   break;
  }
 case 32:
  {
   $$0 = (HEAP8[$this + 27 >> 0] | 0) != 0;
   break;
  }
 case 48:
  {
   $$0 = (HEAP8[$this + 28 >> 0] | 0) != 0;
   break;
  }
 case 64:
  {
   $$0 = (HEAP8[$this + 29 >> 0] | 0) != 0;
   break;
  }
 default:
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZN16MacFileUtilities7MachoID12UUIDWalkerCBEPNS_11MachoWalkerEP12load_commandibPv($walker, $cmd, $offset, $swap, $context) {
 $walker = $walker | 0;
 $cmd = $cmd | 0;
 $offset = $offset | 0;
 $swap = $swap | 0;
 $context = $context | 0;
 var $$0 = 0;
 if ((HEAP32[$cmd >> 2] | 0) != 27) {
  $$0 = 1;
  return $$0 | 0;
 }
 if (!((__ZN16MacFileUtilities11MachoWalker9ReadBytesEPvji($walker, $context, 24, $offset) | 0) & $swap)) {
  $$0 = 0;
  return $$0 | 0;
 }
 __Z26breakpad_swap_uuid_commandP21breakpad_uuid_command($context);
 $$0 = 0;
 return $$0 | 0;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter18UnsupportedCPUTypeEi($this, $cpu_type) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 HEAP32[$vararg_buffer + 4 >> 2] = $cpu_type;
 _fprintf($0 | 0, 23807, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i$i = 0, $1 = 0;
 if ($__n >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $1 = $this + 128 | 0;
 if ($__n >>> 0 < 29 & (HEAP8[$1 >> 0] | 0) == 0) {
  HEAP8[$1 >> 0] = 1;
  $$0$i$i = $this + 16 | 0;
 } else $$0$i$i = __Znwj($__n << 2) | 0;
 HEAP32[$this + 4 >> 2] = $$0$i$i;
 HEAP32[$this >> 2] = $$0$i$i;
 HEAP32[$this + 8 >> 2] = $$0$i$i + ($__n << 2);
 return;
}

function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9520) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) {}
 return;
}

function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9512) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) {}
 return;
}

function __ZNK15google_breakpad6Module20GetStackFrameEntriesEPNSt3__16vectorIPNS0_15StackFrameEntryENS1_9allocatorIS4_EEEE($this, $vec) {
 $this = $this | 0;
 $vec = $vec | 0;
 var $0 = 0;
 $0 = $this + 80 | 0;
 if (($0 | 0) == ($vec | 0)) return;
 __ZNSt3__16vectorIPN15google_breakpad6Module15StackFrameEntryENS_9allocatorIS4_EEE6assignIPS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_($vec, HEAP32[$0 >> 2] | 0, HEAP32[$this + 84 >> 2] | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 HEAP8[$this >> 0] = 8;
 $0 = $this + 1 | 0;
 $1 = HEAPU8[$s >> 0] | HEAPU8[$s + 1 >> 0] << 8 | HEAPU8[$s + 2 >> 0] << 16 | HEAPU8[$s + 3 >> 0] << 24;
 HEAP8[$0 >> 0] = $1;
 HEAP8[$0 + 1 >> 0] = $1 >> 8;
 HEAP8[$0 + 2 >> 0] = $1 >> 16;
 HEAP8[$0 + 3 >> 0] = $1 >> 24;
 HEAP8[$this + 5 >> 0] = 0;
 $3 = $this + 12 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 if (!(HEAP8[$__str >> 0] & 1)) {
  HEAP32[$this >> 2] = HEAP32[$__str >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$__str + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$__str + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this, HEAP32[$__str + 8 >> 2] | 0, HEAP32[$__str + 4 >> 2] | 0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0, $2 = 0;
 HEAP8[$this >> 0] = 10;
 $0 = $this + 1 | 0;
 HEAP8[$0 >> 0] = HEAP8[$s >> 0] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[$s + 1 >> 0] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[$s + 2 >> 0] | 0;
 HEAP8[$0 + 3 >> 0] = HEAP8[$s + 3 >> 0] | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$s + 4 >> 0] | 0;
 HEAP8[$this + 6 >> 0] = 0;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 return;
}

function __Znwj($size) {
 $size = $size | 0;
 var $$lcssa = 0, $$size = 0, $1 = 0, $3 = 0, $5 = 0, $7 = 0;
 $$size = ($size | 0) == 0 ? 1 : $size;
 $1 = _malloc($$size) | 0;
 L1 : do if (!$1) {
  while (1) {
   $3 = __ZSt15get_new_handlerv() | 0;
   if (!$3) break;
   FUNCTION_TABLE_v[$3 & 3]();
   $5 = _malloc($$size) | 0;
   if ($5) {
    $$lcssa = $5;
    break L1;
   }
  }
  $7 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$7 >> 2] = 5584;
  ___cxa_throw($7 | 0, 552, 73);
 } else $$lcssa = $1; while (0);
 return $$lcssa | 0;
}

function ___string_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $0 = 0, $1 = 0, $11 = 0, $2 = 0, $3 = 0, $k$0 = 0, $k$0$len = 0;
 $0 = $f + 84 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $len + 256 | 0;
 $3 = _memchr($1, 0, $2) | 0;
 $k$0 = ($3 | 0) == 0 ? $2 : $3 - $1 | 0;
 $k$0$len = $k$0 >>> 0 < $len >>> 0 ? $k$0 : $len;
 _memcpy($buf | 0, $1 | 0, $k$0$len | 0) | 0;
 HEAP32[$f + 4 >> 2] = $1 + $k$0$len;
 $11 = $1 + $k$0 | 0;
 HEAP32[$f + 8 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 return $k$0$len | 0;
}

function ___towrite($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = HEAP32[$f >> 2] | 0;
 if (!($6 & 8)) {
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $13 = HEAP32[$f + 44 >> 2] | 0;
  HEAP32[$f + 28 >> 2] = $13;
  HEAP32[$f + 20 >> 2] = $13;
  HEAP32[$f + 16 >> 2] = $13 + (HEAP32[$f + 48 >> 2] | 0);
  $$0 = 0;
  return $$0 | 0;
 } else {
  HEAP32[$f >> 2] = $6 | 32;
  $$0 = -1;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$04 = 0, $2 = 0, $4 = 0, $9 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$04 = $low;
  do {
   $4 = HEAP32[$$04 >> 2] | 0;
   if ($4 >>> 0 < 128) $9 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($4 << 2) >> 2] | 0; else $9 = $4;
   HEAP32[$$04 >> 2] = $9;
   $$04 = $$04 + 4 | 0;
  } while (($$04 | 0) != ($high | 0));
 }
 return $low + ($2 << 2) | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$04 = 0, $2 = 0, $4 = 0, $9 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$04 = $low;
  do {
   $4 = HEAP32[$$04 >> 2] | 0;
   if ($4 >>> 0 < 128) $9 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($4 << 2) >> 2] | 0; else $9 = $4;
   HEAP32[$$04 >> 2] = $9;
   $$04 = $$04 + 4 | 0;
  } while (($$04 | 0) != ($high | 0));
 }
 return $low + ($2 << 2) | 0;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__113__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($this + 32 | 0);
 __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($this + 16 | 0);
 __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this);
 return;
}

function __ZN12dwarf2reader13DIEDispatcher20StartCompilationUnitEyhhyh($this, $0, $1, $address_size, $offset_size, $2, $3, $dwarf_version) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $address_size = $address_size | 0;
 $offset_size = $offset_size | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $dwarf_version = $dwarf_version | 0;
 var $5 = 0;
 $5 = HEAP32[$this + 28 >> 2] | 0;
 return FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] & 15]($5, $0, $1, $address_size, $offset_size, $2, $3, $dwarf_version) | 0;
}

function __ZNSt3__18ios_base4initEPv($this, $sb) {
 $this = $this | 0;
 $sb = $sb | 0;
 var $8 = 0, dest = 0, stop = 0;
 HEAP32[$this + 24 >> 2] = $sb;
 HEAP32[$this + 16 >> 2] = ($sb | 0) == 0 & 1;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 4098;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 6;
 $8 = $this + 28 | 0;
 dest = $this + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__16localeC2Ev($8);
 return;
}

function __ZN16MacFileUtilities11MachoWalkerC2EPvjPFbPS0_P12load_commandibS1_ES1_($this, $memory, $size, $callback, $context) {
 $this = $this | 0;
 $memory = $memory | 0;
 $size = $size | 0;
 $callback = $callback | 0;
 $context = $context | 0;
 HEAP32[$this >> 2] = -1;
 HEAP32[$this + 4 >> 2] = $memory;
 HEAP32[$this + 8 >> 2] = $size;
 HEAP32[$this + 12 >> 2] = $callback;
 HEAP32[$this + 16 >> 2] = $context;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP32[$this + 28 >> 2] = 0;
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$013 = 0, $$04 = 0, $1 = 0;
 if (($low | 0) != ($high | 0)) {
  $$013 = $low;
  $$04 = $dest;
  while (1) {
   $1 = HEAP8[$$013 >> 0] | 0;
   HEAP8[$$04 >> 0] = $1 << 24 >> 24 > -1 ? $1 : $dfault;
   $$013 = $$013 + 1 | 0;
   if (($$013 | 0) == ($high | 0)) break; else $$04 = $$04 + 1 | 0;
  }
 }
 return $high | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var $1 = 0, $3 = 0;
 if (($this | 0) != ($__str | 0)) {
  $1 = HEAP8[$__str >> 0] | 0;
  $3 = ($1 & 1) == 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this, $3 ? $__str + 1 | 0 : HEAP32[$__str + 8 >> 2] | 0, $3 ? ($1 & 255) >>> 1 : HEAP32[$__str + 4 >> 2] | 0);
 }
 return;
}

function __ZN12dwarf2reader8LineInfoC2EPKcyPNS_10ByteReaderEPNS_15LineInfoHandlerE($this, $buffer, $0, $1, $reader, $handler) {
 $this = $this | 0;
 $buffer = $buffer | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reader = $reader | 0;
 $handler = $handler | 0;
 var $6 = 0;
 HEAP32[$this >> 2] = 4808;
 HEAP32[$this + 4 >> 2] = $handler;
 HEAP32[$this + 8 >> 2] = $reader;
 HEAP32[$this + 56 >> 2] = $buffer;
 $6 = $this + 64 | 0;
 HEAP32[$6 >> 2] = $0;
 HEAP32[$6 + 4 >> 2] = $1;
 HEAP32[$this + 48 >> 2] = 0;
 return;
}

function __ZN12dwarf2reader10ByteReaderC2ENS_10EndiannessE($this, $endian) {
 $this = $this | 0;
 $endian = $endian | 0;
 var $0 = 0, $2 = 0;
 HEAP32[$this >> 2] = 4656;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = $endian;
 $2 = $this + 24 | 0;
 HEAP8[$2 >> 0] = 0;
 HEAP8[$2 + 1 >> 0] = 0;
 HEAP8[$2 + 2 >> 0] = 0;
 HEAP8[$2 + 3 >> 0] = 0;
 HEAP8[$2 + 4 >> 0] = 0;
 HEAP8[$2 + 5 >> 0] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $2 = 0, dest = 0, src = 0, stop = 0;
 HEAP8[$this >> 0] = 20;
 dest = $this + 1 | 0;
 src = $s;
 stop = dest + 10 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$this + 11 >> 0] = 0;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $2 = 0, dest = 0, src = 0, stop = 0;
 HEAP8[$this >> 0] = 18;
 dest = $this + 1 | 0;
 src = $s;
 stop = dest + 9 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$this + 10 >> 0] = 0;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 return;
}

function _vsscanf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $4 = 0, $f = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 dest = $f;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$f + 32 >> 2] = 26;
 HEAP32[$f + 44 >> 2] = $s;
 HEAP32[$f + 76 >> 2] = -1;
 HEAP32[$f + 84 >> 2] = $s;
 $4 = _MUSL_vfscanf($f, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = HEAP32[$f >> 2];
 HEAP32[$this + 4 >> 2] = HEAP32[$f + 4 >> 2];
 HEAP32[$this + 8 >> 2] = HEAP32[$f + 8 >> 2];
 HEAP32[$f >> 2] = 0;
 HEAP32[$f + 4 >> 2] = 0;
 HEAP32[$f + 8 >> 2] = 0;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$02 = 0, $1 = 0, $8 = 0;
 if (($low | 0) != ($high | 0)) {
  $$02 = $low;
  do {
   $1 = HEAP8[$$02 >> 0] | 0;
   if ($1 << 24 >> 24 > -1) $8 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $8 = $1;
   HEAP8[$$02 >> 0] = $8;
   $$02 = $$02 + 1 | 0;
  } while (($$02 | 0) != ($high | 0));
 }
 return $high | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$02 = 0, $1 = 0, $8 = 0;
 if (($low | 0) != ($high | 0)) {
  $$02 = $low;
  do {
   $1 = HEAP8[$$02 >> 0] | 0;
   if ($1 << 24 >> 24 > -1) $8 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $8 = $1;
   HEAP8[$$02 >> 0] = $8;
   $$02 = $$02 + 1 | 0;
  } while (($$02 | 0) != ($high | 0));
 }
 return $high | 0;
}

function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s, $__n, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__n = $__n | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsnprintf($__s, $__n, $__format, $__va) | 0;
 if ($0) _uselocale($0 | 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule17NamedScopeHandler13EndAttributesEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler20ComputeQualifiedNameEv($0, $this);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this + 56 | 0, $0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 STACKTOP = sp;
 return 1;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter26LoadCommandRegionTruncatedEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 _fprintf($0 | 0, 23109, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 if (!(HEAP8[$__str >> 0] & 1)) {
  HEAP32[$this >> 2] = HEAP32[$__str >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$__str + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$__str + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, HEAP32[$__str + 8 >> 2] | 0, HEAP32[$__str + 4 >> 2] | 0);
 return;
}

function __ZN15google_breakpad6mach_o9FatReader8Reporter19MisplacedObjectFileEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 _fprintf($0 | 0, 22839, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function ___cxa_can_catch($catchType, $excpType, $thrown) {
 $catchType = $catchType | 0;
 $excpType = $excpType | 0;
 $thrown = $thrown | 0;
 var $4 = 0, $temp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $temp = sp;
 HEAP32[$temp >> 2] = HEAP32[$thrown >> 2];
 $4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$catchType >> 2] | 0) + 16 >> 2] & 31]($catchType, $excpType, $temp) | 0;
 if ($4) HEAP32[$thrown >> 2] = HEAP32[$temp >> 2];
 STACKTOP = sp;
 return $4 & 1 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0;
 $0 = $this + 8 | 0;
 $2 = _uselocale(HEAP32[$0 >> 2] | 0) | 0;
 $3 = _mbtowc(0, 0, 4) | 0;
 if ($2) _uselocale($2 | 0) | 0;
 if (!$3) {
  $6 = HEAP32[$0 >> 2] | 0;
  if (!$6) $$0 = 1; else {
   $8 = _uselocale($6 | 0) | 0;
   if (!$8) $$0 = 0; else {
    _uselocale($8 | 0) | 0;
    $$0 = 0;
   }
  }
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter20MisplacedSymbolTableEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 _fprintf($0 | 0, 23696, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN16MacFileUtilities7MachoIDC2EPKc($this, $path) {
 $this = $this | 0;
 $path = $path | 0;
 var $vararg_buffer = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 dest = $this + 4096 | 0;
 stop = dest + 108 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$vararg_buffer >> 2] = $path;
 _snprintf($this, 4096, 22629, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this, $ev) {
 $this = $this | 0;
 $ev = $ev | 0;
 var $1 = 0, $2 = 0, $3 = 0, $i$01 = 0;
 $1 = HEAP32[$this + 40 >> 2] | 0;
 $2 = $this + 32 | 0;
 $3 = $this + 36 | 0;
 if ($1) {
  $i$01 = $1;
  do {
   $i$01 = $i$01 + -1 | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$2 >> 2] | 0) + ($i$01 << 2) >> 2] & 15]($ev, $this, HEAP32[(HEAP32[$3 >> 2] | 0) + ($i$01 << 2) >> 2] | 0);
  } while (($i$01 | 0) != 0);
 }
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP8[$this + 128 >> 0] = 0;
 if ($__n) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this, $__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
 }
 return;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter15HeaderTruncatedEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 _fprintf($0 | 0, 23057, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad6Module12AddFunctionsENSt3__111__wrap_iterIPPNS0_8FunctionEEES6_($this, $begin, $end) {
 $this = $this | 0;
 $begin = $begin | 0;
 $end = $end | 0;
 var $1 = 0, $2 = 0, $5 = 0;
 $1 = HEAP32[$begin >> 2] | 0;
 $2 = HEAP32[$end >> 2] | 0;
 if (($1 | 0) == ($2 | 0)) return; else $5 = $1;
 do {
  __ZN15google_breakpad6Module11AddFunctionEPNS0_8FunctionE($this, HEAP32[$5 >> 2] | 0);
  $5 = $5 + 4 | 0;
 } while (($5 | 0) != ($2 | 0));
 return;
}

function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[ptr + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[ptr + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[ptr + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[ptr + 7 >> 0];
}

function __ZN15google_breakpad6mach_o9FatReader8Reporter9BadHeaderEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 _fprintf($0 | 0, 22721, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN15google_breakpad6mach_o9FatReader8Reporter8TooShortEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 _fprintf($0 | 0, 22785, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var $1 = 0, $3 = 0;
 if (($this | 0) != ($__str | 0)) {
  $1 = HEAP8[$__str >> 0] | 0;
  $3 = ($1 & 1) == 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $3 ? $__str + 1 | 0 : HEAP32[$__str + 8 >> 2] | 0, $3 ? ($1 & 255) >>> 1 : HEAP32[$__str + 4 >> 2] | 0) | 0;
 }
 return $this | 0;
}

function __ZN15google_breakpad6mach_o6Reader8Reporter9BadHeaderEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = HEAP32[_stderr >> 2] | 0;
 $1 = $this + 4 | 0;
 if (!(HEAP8[$1 >> 0] & 1)) $8 = $1 + 1 | 0; else $8 = HEAP32[$this + 12 >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = $8;
 _fprintf($0 | 0, 22946, $vararg_buffer | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0;
 HEAP32[$this >> 2] = 4108;
 $0 = $this + 56 | 0;
 HEAP32[$0 >> 2] = 4128;
 $1 = $this + 4 | 0;
 HEAP32[$1 >> 2] = 4144;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 36 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp | 0;
 var $$field = 0, $$field2 = 0, $0 = 0, $10 = 0, $3 = 0;
 $0 = $__vp + 4 | 0;
 $$field = HEAP32[$0 >> 2] | 0;
 $$field2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = (HEAP32[$__vp >> 2] | 0) + ($$field2 >> 1) | 0;
 if (!($$field2 & 1)) $10 = $$field; else $10 = HEAP32[(HEAP32[$3 >> 2] | 0) + $$field >> 2] | 0;
 FUNCTION_TABLE_vi[$10 & 255]($3);
 return;
}

function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vasprintf($__s, $__format, $__va) | 0;
 if ($0) _uselocale($0 | 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsscanf($__s, $__format, $__va) | 0;
 if ($0) _uselocale($0 | 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0, $2 = 0;
 HEAP8[$this >> 0] = 6;
 $0 = $this + 1 | 0;
 HEAP8[$0 >> 0] = HEAP8[$s >> 0] | 0;
 HEAP8[$0 + 1 >> 0] = HEAP8[$s + 1 >> 0] | 0;
 HEAP8[$0 + 2 >> 0] = HEAP8[$s + 2 >> 0] | 0;
 HEAP8[$this + 4 >> 0] = 0;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule17NamedScopeHandlerD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4436;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 56 | 0);
 HEAP32[$this >> 2] = 4332;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZdlPv($this);
 return;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function __ZN15google_breakpad15DwarfCUToModule11FuncHandlerD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4384;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 56 | 0);
 HEAP32[$this >> 2] = 4332;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $__wch = $__wch | 0;
 var $4 = 0;
 $4 = $__sp + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] & 15]($agg$result, $this, HEAP32[$4 >> 2] | 0, HEAP32[$4 + 4 >> 2] | 0, 0, $__wch);
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$012 = 0, $$03 = 0;
 if (($low | 0) != ($high | 0)) {
  $$012 = $low;
  $$03 = $dest;
  while (1) {
   HEAP8[$$03 >> 0] = HEAP8[$$012 >> 0] | 0;
   $$012 = $$012 + 1 | 0;
   if (($$012 | 0) == ($high | 0)) break; else $$03 = $$03 + 1 | 0;
  }
 }
 return $high | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$012 = 0, $$03 = 0;
 if (($low | 0) != ($high | 0)) {
  $$012 = $low;
  $$03 = $dest;
  while (1) {
   HEAP32[$$03 >> 2] = HEAP8[$$012 >> 0];
   $$012 = $$012 + 1 | 0;
   if (($$012 | 0) == ($high | 0)) break; else $$03 = $$03 + 4 | 0;
  }
 }
 return $high | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo13ValOffsetRuleeqERKNS0_4RuleE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $12 = 0;
 $0 = ___dynamic_cast($rhs, 312, 320, 0) | 0;
 if (!$0) {
  $12 = 0;
  return $12 | 0;
 }
 if ((HEAP32[$this + 4 >> 2] | 0) != (HEAP32[$0 + 4 >> 2] | 0)) {
  $12 = 0;
  return $12 | 0;
 }
 $12 = (HEAP32[$this + 8 >> 2] | 0) == (HEAP32[$0 + 8 >> 2] | 0);
 return $12 | 0;
}

function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9520) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 9512) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo10OffsetRuleeqERKNS0_4RuleE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $12 = 0;
 $0 = ___dynamic_cast($rhs, 312, 336, 0) | 0;
 if (!$0) {
  $12 = 0;
  return $12 | 0;
 }
 if ((HEAP32[$this + 4 >> 2] | 0) != (HEAP32[$0 + 4 >> 2] | 0)) {
  $12 = 0;
  return $12 | 0;
 }
 $12 = (HEAP32[$this + 8 >> 2] | 0) == (HEAP32[$0 + 8 >> 2] | 0);
 return $12 | 0;
}

function __ZN12dwarf2reader10ByteReader14SetAddressSizeEh($this, $size) {
 $this = $this | 0;
 $size = $size | 0;
 var $1 = 0, $2 = 0;
 HEAP8[$this + 24 >> 0] = $size;
 $1 = $size << 24 >> 24 == 4;
 switch ($size << 24 >> 24) {
 case 4:
 case 8:
  {
   $2 = $this + 12 | 0;
   HEAP32[$2 >> 2] = $1 ? 28 : 29;
   HEAP32[$2 + 4 >> 2] = $1 ? 0 : 0;
   return;
  }
 default:
  ___assert_fail(17405, 17428, 57, 17459);
 }
}

function __ZN15google_breakpad11DumpSymbols15SetArchitectureEii($this, $cpu_type, $cpu_subtype) {
 $this = $this | 0;
 $cpu_type = $cpu_type | 0;
 $cpu_subtype = $cpu_subtype | 0;
 var $$0 = 0, $0 = 0;
 $0 = __ZN15google_breakpad11DumpSymbols28FindBestMatchForArchitectureEii($this, $cpu_type, $cpu_subtype) | 0;
 if (!$0) {
  $$0 = 0;
  return $$0 | 0;
 }
 HEAP32[$this + 48 >> 2] = $0;
 $$0 = 1;
 return $$0 | 0;
}

function _copysign($x, $y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $6 = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $6 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $1 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $0;
 HEAP32[tempDoublePtr + 4 >> 2] = $6;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZSt9terminatev() {
 var $0 = 0, $17 = 0, $2 = 0, $5 = 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2) {
   $5 = $2 + 48 | 0;
   if ((HEAP32[$5 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$5 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$2 + 12 >> 2] | 0);
  }
 }
 $17 = HEAP32[1393] | 0;
 HEAP32[1393] = $17 + 0;
 __ZSt11__terminatePFvvE($17);
}

function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this | 0;
 var $__p$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p$i = sp;
 if ((HEAP32[$this >> 2] | 0) != -1) {
  HEAP32[$__p$i >> 2] = $this;
  HEAP32[$__p$i + 4 >> 2] = 165;
  HEAP32[$__p$i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this, $__p$i, 166);
 }
 STACKTOP = sp;
 return (HEAP32[$this + 4 >> 2] | 0) + -1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function ___uflow($f) {
 $f = $f | 0;
 var $$0 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 if (!(HEAP32[$f + 8 >> 2] | 0)) if (!(___toread($f) | 0)) label = 3; else $$0 = -1; else label = 3;
 if ((label | 0) == 3) if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 31]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  HEAP32[$1 >> 2] = 0;
  $1 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNK15google_breakpad17AssemblerLanguage17MakeQualifiedNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_($agg$result, $this, $parent_name, $name) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $parent_name = $parent_name | 0;
 $name = $name | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $name);
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule13RegisterNames6X86_64Ev($agg$result) {
 $agg$result = $agg$result | 0;
 __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2IPKPKcEET_NS_9enable_ifIXaasr21__is_forward_iteratorISE_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESE_E4typeE($agg$result, 2972, 3240);
 return;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZN15google_breakpad16DwarfCFIToModule13RegisterNames5ARM64Ev($agg$result) {
 $agg$result = $agg$result | 0;
 __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2IPKPKcEET_NS_9enable_ifIXaasr21__is_forward_iteratorISE_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESE_E4typeE($agg$result, 3656, 4040);
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule13RegisterNames4I386Ev($agg$result) {
 $agg$result = $agg$result | 0;
 __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2IPKPKcEET_NS_9enable_ifIXaasr21__is_forward_iteratorISE_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESE_E4typeE($agg$result, 2772, 2972);
 return;
}

function __ZN15google_breakpad16DwarfCFIToModule13RegisterNames3ARMEv($agg$result) {
 $agg$result = $agg$result | 0;
 __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2IPKPKcEET_NS_9enable_ifIXaasr21__is_forward_iteratorISE_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESE_E4typeE($agg$result, 3240, 3656);
 return;
}

function __ZN12dwarf2reader8LineInfoD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $5 = 0;
 HEAP32[$this >> 2] = 4808;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if (!$1) {
  __ZdlPv($this);
  return;
 }
 $3 = HEAP32[$1 >> 2] | 0;
 if ($3) {
  $5 = $1 + 4 | 0;
  if ((HEAP32[$5 >> 2] | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $3;
  __ZdlPv($3);
 }
 __ZdlPv($1);
 __ZdlPv($this);
 return;
}

function ___shlim($f, $lim) {
 $f = $f | 0;
 $lim = $lim | 0;
 var $4 = 0, $5 = 0, $7 = 0;
 HEAP32[$f + 104 >> 2] = $lim;
 $4 = HEAP32[$f + 4 >> 2] | 0;
 $5 = HEAP32[$f + 8 >> 2] | 0;
 $7 = $5 - $4 | 0;
 HEAP32[$f + 108 >> 2] = $7;
 if (($lim | 0) != 0 & ($7 | 0) > ($lim | 0)) {
  HEAP32[$f + 100 >> 2] = $4 + $lim;
  return;
 } else {
  HEAP32[$f + 100 >> 2] = $5;
  return;
 }
}

function __ZNSt3__15ctypeIcEC2EPKtbj($this, $tab, $del, $refs) {
 $this = $this | 0;
 $tab = $tab | 0;
 $del = $del | 0;
 $refs = $refs | 0;
 var $2 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 9468;
 $2 = $this + 8 | 0;
 HEAP32[$2 >> 2] = $tab;
 HEAP8[$this + 12 >> 0] = $del & 1;
 if (!$tab) HEAP32[$2 >> 2] = HEAP32[(___ctype_b_loc() | 0) >> 2];
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo13ValOffsetRule6HandleEPNS0_7HandlerEyi($this, $handler, $0, $1, $reg) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 return FUNCTION_TABLE_iiiiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 24 >> 2] & 63]($handler, $0, $1, $reg, HEAP32[$this + 4 >> 2] | 0, HEAP32[$this + 8 >> 2] | 0) | 0;
}

function __ZN15google_breakpad6Module8Function16CompareByAddressEPKS1_S3_($x, $y) {
 $x = $x | 0;
 $y = $y | 0;
 var $1 = 0, $13 = 0, $6 = 0, $8 = 0;
 $1 = $x + 16 | 0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $8 = $y + 16 | 0;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 return $6 >>> 0 < $13 >>> 0 | (($6 | 0) == ($13 | 0) ? (HEAP32[$1 >> 2] | 0) >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0 : 0) | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo10OffsetRule6HandleEPNS0_7HandlerEyi($this, $handler, $0, $1, $reg) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 return FUNCTION_TABLE_iiiiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 20 >> 2] & 63]($handler, $0, $1, $reg, HEAP32[$this + 4 >> 2] | 0, HEAP32[$this + 8 >> 2] | 0) | 0;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZL25StackFrameEntryComparatorPKN15google_breakpad6Module15StackFrameEntryES3_($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $0 = 0, $11 = 0, $5 = 0, $6 = 0;
 $0 = $a;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $b;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 return $5 >>> 0 < $11 >>> 0 | (($5 | 0) == ($11 | 0) ? (HEAP32[$0 >> 2] | 0) >>> 0 < (HEAP32[$6 >> 2] | 0) >>> 0 : 0) | 0;
}

function __ZN15google_breakpad15DwarfCUToModule20StartCompilationUnitEyhhyh($this, $0, $1, $address_size, $offset_size, $2, $3, $dwarf_version) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $address_size = $address_size | 0;
 $offset_size = $offset_size | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $dwarf_version = $dwarf_version | 0;
 return ($dwarf_version & 255) > 1 | 0;
}

function _wmemcpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$014 = 0, $$023 = 0, $$05 = 0;
 if (!$n) return $d | 0; else {
  $$014 = $n;
  $$023 = $s;
  $$05 = $d;
 }
 while (1) {
  $$014 = $$014 + -1 | 0;
  HEAP32[$$05 >> 2] = HEAP32[$$023 >> 2];
  if (!$$014) break; else {
   $$023 = $$023 + 4 | 0;
   $$05 = $$05 + 4 | 0;
  }
 }
 return $d | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 4;
  $$0 = HEAP32[$6 >> 2] | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 1;
  $$0 = HEAPU8[$6 >> 0] | 0;
 }
 return $$0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler24ProcessAttributeUnsignedEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (($attr | 0) != 60) return;
 HEAP8[$this + 24 >> 0] = (($0 | 0) != 0 | ($1 | 0) != 0) & 1;
 return;
}

function __ZN15google_breakpad13StabsToModule7WarningEPKcz($this, $format, $varargs) {
 $this = $this | 0;
 $format = $format | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 HEAP32[$args >> 2] = $varargs;
 _vfprintf(HEAP32[_stderr >> 2] | 0, $format | 0, $args | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function __ZN15google_breakpad11DumpSymbols18DumperLineToModule20StartCompilationUnitERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($this, $compilation_dir) {
 $this = $this | 0;
 $compilation_dir = $compilation_dir | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this + 4 | 0, $compilation_dir) | 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($this, $n) {
 $this = $this | 0;
 $n = $n | 0;
 var $$0 = 0, $1 = 0, $3 = 0, $4 = 0;
 $1 = $n + 15 & -16;
 $3 = $this + 4096 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($this + 4096 - $4 | 0) >>> 0 < $1 >>> 0) $$0 = _malloc($1) | 0; else {
  HEAP32[$3 >> 2] = $4 + $1;
  $$0 = $4;
 }
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($this, $__pos, $__s) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($this, $__pos, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 8116;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 8052;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2408] | 0)) if (___cxa_guard_acquire(2408) | 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(12716, 12680, _wcslen(12680) | 0);
  ___cxa_atexit(174, 12716, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2408);
 }
 return 12716;
}

function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2456] | 0)) if (___cxa_guard_acquire(2456) | 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(12956, 12908, _wcslen(12908) | 0);
  ___cxa_atexit(174, 12956, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2456);
 }
 return 12956;
}

function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2440] | 0)) if (___cxa_guard_acquire(2440) | 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(12884, 12800, _wcslen(12800) | 0);
  ___cxa_atexit(174, 12884, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2440);
 }
 return 12884;
}

function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2424] | 0)) if (___cxa_guard_acquire(2424) | 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(12776, 12740, _wcslen(12740) | 0);
  ___cxa_atexit(174, 12776, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2424);
 }
 return 12776;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this, $s, 17);
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this, $s, 14);
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this, $s, 13);
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this, $s, 12);
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($this, $s) {
 $this = $this | 0;
 $s = $s | 0;
 var $0 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this, $s, 11);
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 return;
}

function __ZNK12dwarf2reader10ByteReader13ValidEncodingENS_20DwarfPointerEncodingE($this, $encoding) {
 $this = $this | 0;
 $encoding = $encoding | 0;
 var $$0 = 0;
 switch ($encoding | 0) {
 case 80:
 case 255:
  {
   $$0 = 1;
   break;
  }
 default:
  if (($encoding & 7) >>> 0 > 4) $$0 = 0; else $$0 = ($encoding & 112) >>> 0 < 65;
 }
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($this, $p, $n) {
 $this = $this | 0;
 $p = $p | 0;
 $n = $n | 0;
 var $7 = 0;
 if ($this >>> 0 <= $p >>> 0 & ($this + 4096 | 0) >>> 0 >= $p >>> 0) {
  $7 = $this + 4096 | 0;
  if (($p + ($n + 15 & -16) | 0) == (HEAP32[$7 >> 2] | 0)) HEAP32[$7 >> 2] = $p;
 } else _free($p);
 return;
}

function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $8 = 0;
 $8 = _catopen(((HEAP8[$__nm >> 0] & 1) == 0 ? $__nm + 1 | 0 : HEAP32[$__nm + 8 >> 2] | 0) | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $8 = 0;
 $8 = _catopen(((HEAP8[$__nm >> 0] & 1) == 0 ? $__nm + 1 | 0 : HEAP32[$__nm + 8 >> 2] | 0) | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZN15google_breakpad6Module4Line16CompareByAddressERKS1_S3_($x, $y) {
 $x = $x | 0;
 $y = $y | 0;
 var $0 = 0, $11 = 0, $5 = 0, $6 = 0;
 $0 = $x;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $y;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 return $5 >>> 0 < $11 >>> 0 | (($5 | 0) == ($11 | 0) ? (HEAP32[$0 >> 2] | 0) >>> 0 < (HEAP32[$6 >> 2] | 0) >>> 0 : 0) | 0;
}

function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(6460) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(6628) | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(6800) | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(6968) | 0;
 return;
}

function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 8340;
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this, 0);
 __ZNSt3__16localeD2Ev($this + 28 | 0);
 _free(HEAP32[$this + 32 >> 2] | 0);
 _free(HEAP32[$this + 36 >> 2] | 0);
 _free(HEAP32[$this + 48 >> 2] | 0);
 _free(HEAP32[$this + 60 >> 2] | 0);
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKc($this, $__pos1, $__n1, $__s) {
 $this = $this | 0;
 $__pos1 = $__pos1 | 0;
 $__n1 = $__n1 | 0;
 $__s = $__s | 0;
 return __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this, $__pos1, $__n1, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo12RegisterRule6HandleEPNS0_7HandlerEyi($this, $handler, $0, $1, $reg) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 return FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 28 >> 2] & 63]($handler, $0, $1, $reg, HEAP32[$this + 4 >> 2] | 0) | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function _sn_write($f, $s, $l) {
 $f = $f | 0;
 $s = $s | 0;
 $l = $l | 0;
 var $2 = 0, $3 = 0, $6 = 0, $l$ = 0;
 $2 = $f + 20 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $6 = (HEAP32[$f + 16 >> 2] | 0) - $3 | 0;
 $l$ = $6 >>> 0 > $l >>> 0 ? $l : $6;
 _memcpy($3 | 0, $s | 0, $l$ | 0) | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $l$;
 return $l | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2448] | 0)) if (___cxa_guard_acquire(2448) | 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(12896, 30782, 11);
  ___cxa_atexit(173, 12896, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2448);
 }
 return 12896;
}

function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2432] | 0)) if (___cxa_guard_acquire(2432) | 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(12788, 30761, 20);
  ___cxa_atexit(173, 12788, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2432);
 }
 return 12788;
}

function dynCall_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 return FUNCTION_TABLE_iiiiiiiiii[index & 1](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0) | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2400] | 0)) if (___cxa_guard_acquire(2400) | 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(12668, 30743, 8);
  ___cxa_atexit(173, 12668, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2400);
 }
 return 12668;
}

function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this | 0;
 if (!(HEAP8[2416] | 0)) if (___cxa_guard_acquire(2416) | 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(12728, 30752, 8);
  ___cxa_atexit(173, 12728, ___dso_handle | 0) | 0;
  ___cxa_guard_release(2416);
 }
 return 12728;
}

function __ZN12dwarf2reader8LineInfoD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $5 = 0;
 HEAP32[$this >> 2] = 4808;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if (!$1) return;
 $3 = HEAP32[$1 >> 2] | 0;
 if ($3) {
  $5 = $1 + 4 | 0;
  if ((HEAP32[$5 >> 2] | 0) != ($3 | 0)) HEAP32[$5 >> 2] = $3;
  __ZdlPv($3);
 }
 __ZdlPv($1);
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo17ValExpressionRule6HandleEPNS0_7HandlerEyi($this, $handler, $0, $1, $reg) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 return FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 36 >> 2] & 63]($handler, $0, $1, $reg, $this + 4 | 0) | 0;
}

function __ZNSt3__18numpunctIwEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 9656;
 HEAP32[$this + 8 >> 2] = 46;
 HEAP32[$this + 12 >> 2] = 44;
 $4 = $this + 16 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 return;
}

function _abort_message($format, $varargs) {
 $format = $format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $list = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $list = sp;
 HEAP32[$list >> 2] = $varargs;
 $0 = HEAP32[_stderr >> 2] | 0;
 _vfprintf($0 | 0, $format | 0, $list | 0) | 0;
 _fputc(10, $0 | 0) | 0;
 _abort();
}

function __ZNK12dwarf2reader13CallFrameInfo14ExpressionRule6HandleEPNS0_7HandlerEyi($this, $handler, $0, $1, $reg) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 return FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 32 >> 2] & 63]($handler, $0, $1, $reg, $this + 4 | 0) | 0;
}

function __ZNSt3__18numpunctIcEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 9616;
 HEAP8[$this + 8 >> 0] = 46;
 HEAP8[$this + 9 >> 0] = 44;
 $4 = $this + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo13ValOffsetRule4CopyEv($this) {
 $this = $this | 0;
 var $0 = 0, $3 = 0, $8 = 0, $9 = 0;
 $0 = __Znwj(12) | 0;
 HEAP32[$0 >> 2] = 4860;
 $3 = $this + 4 | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $0 + 4 | 0;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 return $0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandlerD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4332;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $1 + -1;
 if (!$1) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 255]($this);
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo10OffsetRule4CopyEv($this) {
 $this = $this | 0;
 var $0 = 0, $3 = 0, $8 = 0, $9 = 0;
 $0 = __Znwj(12) | 0;
 HEAP32[$0 >> 2] = 4824;
 $3 = $this + 4 | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $0 + 4 | 0;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 return $0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporterD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4268;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule11FuncHandler22ProcessAttributeSignedEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEx($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (($attr | 0) != 32) return;
 HEAP8[$this + 96 >> 0] = 1;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo13UndefinedRule6HandleEPNS0_7HandlerEyi($this, $handler, $0, $1, $reg) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 return FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 12 >> 2] & 31]($handler, $0, $1, $reg) | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo13SameValueRule6HandleEPNS0_7HandlerEyi($this, $handler, $0, $1, $reg) {
 $this = $this | 0;
 $handler = $handler | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $reg = $reg | 0;
 return FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$handler >> 2] | 0) + 16 >> 2] & 31]($handler, $0, $1, $reg) | 0;
}

function __ZN15google_breakpad16DwarfCFIToModule8ReporterD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 2688;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN15google_breakpad6FileIDC2EPKc($this, $path) {
 $this = $this | 0;
 $path = $path | 0;
 var $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = $path;
 _snprintf($this, 4096, 22629, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo12RegisterRuleeqERKNS0_4RuleE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $7 = 0;
 $0 = ___dynamic_cast($rhs, 312, 368, 0) | 0;
 if (!$0) {
  $7 = 0;
  return $7 | 0;
 }
 $7 = (HEAP32[$this + 4 >> 2] | 0) == (HEAP32[$0 + 4 >> 2] | 0);
 return $7 | 0;
}

function __ZN12dwarf2reader8LineInfo5StartEv($this) {
 $this = $this | 0;
 var $6 = 0;
 __ZN12dwarf2reader8LineInfo10ReadHeaderEv($this);
 __ZN12dwarf2reader8LineInfo9ReadLinesEv($this);
 $6 = (HEAP32[$this + 72 >> 2] | 0) - (HEAP32[$this + 56 >> 2] | 0) | 0;
 tempRet0 = (($6 | 0) < 0) << 31 >> 31;
 return $6 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this + 12 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4144;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function __ZN12dwarf2reader13CallFrameInfo8ReporterD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4724;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandlerD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4332;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 return;
}

function __ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $3 = 0;
 $3 = $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0;
 __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
 __ZdlPv($3);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter9SetCUNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this + 24 | 0, $name) | 0;
 return;
}

function _snprintf($s, $n, $fmt, $varargs) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsnprintf($s, $n, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporterD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4268;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob | 0;
 var $$0 = 0;
 switch (HEAP32[$iob + 4 >> 2] & 74 | 0) {
 case 64:
  {
   $$0 = 8;
   break;
  }
 case 8:
  {
   $$0 = 16;
   break;
  }
 case 0:
  {
   $$0 = 0;
   break;
  }
 default:
  $$0 = 10;
 }
 return $$0 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 FUNCTION_TABLE_viiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}

function __ZN15google_breakpad16DwarfCFIToModule8ReporterD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 2688;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4144;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $5 = 0;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) $5 = 1; else {
  $3 = _uselocale($1 | 0) | 0;
  if (!$3) $5 = 4; else {
   _uselocale($3 | 0) | 0;
   $5 = 4;
  }
 }
 return $5 | 0;
}

function __ZN15google_breakpad7MD5InitEPNS_10MD5ContextE($ctx) {
 $ctx = $ctx | 0;
 HEAP32[$ctx >> 2] = 1732584193;
 HEAP32[$ctx + 4 >> 2] = -271733879;
 HEAP32[$ctx + 8 >> 2] = -1732584194;
 HEAP32[$ctx + 12 >> 2] = 271733878;
 HEAP32[$ctx + 16 >> 2] = 0;
 HEAP32[$ctx + 20 >> 2] = 0;
 return;
}

function __ZN15google_breakpad15DwarfCUToModule17NamedScopeHandlerD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4436;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 56 | 0);
 __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandlerD2Ev($this);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo8ReporterD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4724;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function _wmemset($d, $c, $n) {
 $d = $d | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$012 = 0, $$03 = 0;
 if (!$n) return $d | 0; else {
  $$012 = $n;
  $$03 = $d;
 }
 while (1) {
  $$012 = $$012 + -1 | 0;
  HEAP32[$$03 >> 2] = $c;
  if (!$$012) break; else $$03 = $$03 + 4 | 0;
 }
 return $d | 0;
}

function __ZN15google_breakpad15DwarfCUToModule11FuncHandlerD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4384;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 56 | 0);
 __ZN15google_breakpad15DwarfCUToModule17GenericDIEHandlerD2Ev($this);
 return;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function _sprintf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsprintf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _sscanf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsscanf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this, 0, -1, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo17ValExpressionRule4CopyEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(16) | 0;
 HEAP32[$0 >> 2] = 4896;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 4 | 0, $this + 4 | 0);
 return $0 | 0;
}

function __ZN15google_breakpad16DwarfCFIToModule3EndEv($this) {
 $this = $this | 0;
 var $2 = 0;
 $2 = $this + 16 | 0;
 __ZN15google_breakpad6Module18AddStackFrameEntryEPNS0_15StackFrameEntryE(HEAP32[$this + 4 >> 2] | 0, HEAP32[$2 >> 2] | 0);
 HEAP32[$2 >> 2] = 0;
 return 1;
}

function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(5724, 2) | 0)) {
  $3 = _pthread_getspecific(HEAP32[1430] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(25268, sp);
 return 0;
}

function __ZNK12dwarf2reader13CallFrameInfo14ExpressionRule4CopyEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(16) | 0;
 HEAP32[$0 >> 2] = 5040;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 4 | 0, $this + 4 | 0);
 return $0 | 0;
}

function __ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9332) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9296) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9260) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9224) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8932) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8900) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8868) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8776) | 0);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $end = $end | 0;
 $mx = $mx | 0;
 var $3 = 0;
 $3 = $end - $frm | 0;
 return ($3 >>> 0 < $mx >>> 0 ? $3 : $mx) | 0;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8684) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8624) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8564) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8492) | 0);
 return;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0;
 HEAP32[$this >> 2] = 9536;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) != (__ZNSt3__16__clocEv() | 0)) _freelocale(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
}

function __ZNKSt3__15ctypeIwE5do_isEtw($this, $m, $c) {
 $this = $this | 0;
 $m = $m | 0;
 $c = $c | 0;
 var $6 = 0;
 if ($c >>> 0 < 128) $6 = (HEAP16[(HEAP32[(___ctype_b_loc() | 0) >> 2] | 0) + ($c << 1) >> 1] & $m) << 16 >> 16 != 0; else $6 = 0;
 return $6 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($p);
 if (!(_pthread_setspecific(HEAP32[1430] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(25422, sp);
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, _wcslen($__s) | 0) | 0;
}

function dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 return FUNCTION_TABLE_iiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0) | 0;
}

function __ZN12dwarf2reader10DIEHandler22ProcessAttributeBufferENS_14DwarfAttributeENS_9DwarfFormEPKcy($this, $attr, $form, $data, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $data = $data | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $6 = 0;
 if ($c << 24 >> 24 > -1) $6 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($c << 24 >> 24 << 2) >> 2] & 255; else $6 = $c;
 return $6 | 0;
}

function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
}

function __ZNKSt3__16locale9use_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0, $1 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = __ZNSt3__16locale2id5__getEv($x) | 0;
 return HEAP32[(HEAP32[$0 + 8 >> 2] | 0) + ($1 << 2) >> 2] | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $6 = 0;
 if ($c << 24 >> 24 > -1) $6 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + (($c & 255) << 2) >> 2] & 255; else $6 = $c;
 return $6 | 0;
}

function __Z26breakpad_swap_uuid_commandP21breakpad_uuid_command($uc) {
 $uc = $uc | 0;
 var $2 = 0;
 HEAP32[$uc >> 2] = _llvm_bswap_i32(HEAP32[$uc >> 2] | 0) | 0;
 $2 = $uc + 4 | 0;
 HEAP32[$2 >> 2] = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
 return;
}

function dynCall_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 return FUNCTION_TABLE_iiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6) | 0;
}

function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 10248, _wcslen(10248) | 0);
 return;
}

function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 10228, _wcslen(10228) | 0);
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __Z26breakpad_swap_load_commandP12load_command($lc) {
 $lc = $lc | 0;
 var $2 = 0;
 HEAP32[$lc >> 2] = _llvm_bswap_i32(HEAP32[$lc >> 2] | 0) | 0;
 $2 = $lc + 4 | 0;
 HEAP32[$2 >> 2] = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function __Z24breakpad_swap_fat_headerP10fat_header($fh) {
 $fh = $fh | 0;
 var $2 = 0;
 HEAP32[$fh >> 2] = _llvm_bswap_i32(HEAP32[$fh >> 2] | 0) | 0;
 $2 = $fh + 4 | 0;
 HEAP32[$2 >> 2] = _llvm_bswap_i32(HEAP32[$2 >> 2] | 0) | 0;
 return;
}

function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 28 | 0);
 STACKTOP = sp;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__15ctypeIwE10do_toupperEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $4 = 0;
 if ($c >>> 0 < 128) $4 = HEAP32[(HEAP32[(___ctype_toupper_loc() | 0) >> 2] | 0) + ($c << 2) >> 2] | 0; else $4 = $c;
 return $4 | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $4 = 0;
 if ($c >>> 0 < 128) $4 = HEAP32[(HEAP32[(___ctype_tolower_loc() | 0) >> 2] | 0) + ($c << 2) >> 2] | 0; else $4 = $c;
 return $4 | 0;
}

function __ZN16MacFileUtilities7MachoID9UpdateMD5EPhj($this, $bytes, $size) {
 $this = $this | 0;
 $bytes = $bytes | 0;
 $size = $size | 0;
 __ZN15google_breakpad9MD5UpdateEPNS_10MD5ContextEPKhj($this + 4108 | 0, $bytes, $size);
 return;
}

function __ZN15google_breakpad11DumpSymbols18DumperLineToModuleD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16locale8__globalEv() {
 if (!(HEAP8[2296] | 0)) if (___cxa_guard_acquire(2296) | 0) {
  __ZNSt3__16locale5__imp11make_globalEv() | 0;
  HEAP32[2556] = 10220;
  ___cxa_guard_release(2296);
 }
 return HEAP32[2556] | 0;
}

function __ZNSt3__16locale7classicEv() {
 if (!(HEAP8[2128] | 0)) if (___cxa_guard_acquire(2128) | 0) {
  __ZNSt3__16locale5__imp12make_classicEv() | 0;
  HEAP32[2554] = 10212;
  ___cxa_guard_release(2128);
 }
 return HEAP32[2554] | 0;
}

function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 16 | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 12 | 0);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo17ValExpressionRuleD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4896;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 30516, 5);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9576) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9584) | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 30511, 4);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9520) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9512) | 0);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZN12dwarf2reader13CallFrameInfo14ExpressionRuleD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5040;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZN12dwarf2reader10DIEHandler25ProcessAttributeSignatureENS_14DwarfAttributeENS_9DwarfFormEy($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZN12dwarf2reader10DIEHandler25ProcessAttributeReferenceENS_14DwarfAttributeENS_9DwarfFormEy($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZN15google_breakpad6mach_o9FatReader8ReporterD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5236;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function runPostSets() {}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZN12dwarf2reader10DIEHandler22ProcessAttributeSignedENS_14DwarfAttributeENS_9DwarfFormEx($this, $attr, $form, $0, $1) {
 $this = $this | 0;
 $attr = $attr | 0;
 $form = $form | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZN15google_breakpad6mach_o6Reader8ReporterD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5264;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9188) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9124) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9060) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8996) | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(5720, 162) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(25372, sp);
}

function __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_iiiiid(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = +a5;
 return FUNCTION_TABLE_iiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, +a5) | 0;
}

function __ZN15google_breakpad11DumpSymbols18DumperLineToModuleD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5212;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9600) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9592) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9412) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9372) | 0);
 return;
}

function __ZNSt3__16localeC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[(__ZNSt3__16locale8__globalEv() | 0) >> 2] | 0;
 HEAP32[$this >> 2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8420) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(8380) | 0);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo17ValExpressionRuleD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 4896;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9444) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(9452) | 0);
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo12RegisterRule4CopyEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 5004;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZN15google_breakpad6Module14SetLoadAddressEy($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = $this + 48 | 0;
 HEAP32[$3 >> 2] = $0;
 HEAP32[$3 + 4 >> 2] = $1;
 return;
}

function __ZN12dwarf2reader13CallFrameInfo14ExpressionRuleD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5040;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZN15google_breakpad6mach_o9FatReader8ReporterD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5236;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__16__clocEv() {
 if (!(HEAP8[1808] | 0)) if (___cxa_guard_acquire(1808) | 0) {
  HEAP32[2504] = _newlocale(2147483647, 30279, 0) | 0;
  ___cxa_guard_release(1808);
 }
 return HEAP32[2504] | 0;
}

function __ZN15google_breakpad6mach_o6Reader8ReporterD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5264;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__16locale5__imp11make_globalEv() {
 var $1 = 0;
 $1 = HEAP32[(__ZNSt3__16locale7classicEv() | 0) >> 2] | 0;
 HEAP32[2555] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return 10220;
}

function _isxdigit($c) {
 $c = $c | 0;
 var $3 = 0, $4 = 0;
 if (($c + -48 | 0) >>> 0 < 10) {
  $4 = 1;
  $3 = $4 & 1;
  return $3 | 0;
 }
 $4 = (($c | 32) + -97 | 0) >>> 0 < 6;
 $3 = $4 & 1;
 return $3 | 0;
}

function __ZN15google_breakpad15DwarfCUToModule12StartRootDIEEyN12dwarf2reader8DwarfTagE($this, $0, $1, $tag) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $tag = $tag | 0;
 return ($tag | 0) == 17 | 0;
}

function _wcslen($s) {
 $s = $s | 0;
 var $$0 = 0, $$0$lcssa = 0;
 $$0 = $s;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) {
  $$0$lcssa = $$0;
  break;
 } else $$0 = $$0 + 4 | 0;
 return $$0$lcssa - $s >> 2 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) _free(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function __ZN15google_breakpad6mach_o6Reader18LoadCommandHandler14UnknownCommandEjRKNS_10ByteBufferE($this, $type, $contents) {
 $this = $this | 0;
 $type = $type | 0;
 $contents = $contents | 0;
 return 1;
}

function __ZNSt3__16localeC2ERKS0_($this, $l) {
 $this = $this | 0;
 $l = $l | 0;
 var $0 = 0;
 $0 = HEAP32[$l >> 2] | 0;
 HEAP32[$this >> 2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule15WarningReporter30set_uncovered_warnings_enabledEb($this, $value) {
 $this = $this | 0;
 $value = $value | 0;
 HEAP8[$this + 38 >> 0] = $value & 1;
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 9468;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if ($1) if (HEAP8[$this + 12 >> 0] | 0) __ZdaPv($1);
 return;
}

function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (($0 | 0) != (__ZNSt3__16__clocEv() | 0)) _freelocale(HEAP32[$this >> 2] | 0);
 return;
}

function b6(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 abort(6);
 return 0;
}

function __ZN12dwarf2reader13CallFrameInfo7Handler24LanguageSpecificDataAreaEyb($this, $0, $1, $indirect) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $indirect = $indirect | 0;
 return 1;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9656;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 return;
}

function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9616;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo7Handler18PersonalityRoutineEyb($this, $0, $1, $indirect) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $indirect = $indirect | 0;
 return 1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 8116;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 8052;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo13UndefinedRuleeqERKNS0_4RuleE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 return (___dynamic_cast($rhs, 312, 400, 0) | 0) != 0 | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo13SameValueRuleeqERKNS0_4RuleE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 return (___dynamic_cast($rhs, 312, 384, 0) | 0) != 0 | 0;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function b14(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(14);
 return 0;
}

function __ZSt11__terminatePFvvE($func) {
 $func = $func | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 FUNCTION_TABLE_v[$func & 3]();
 _abort_message(25332, sp);
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZN16MacFileUtilities11MachoWalkerD2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (($0 | 0) == -1) return;
 _close($0 | 0) | 0;
 return;
}

function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 1;
 return;
}

function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this | 0;
 if ($this) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 return;
}

function __ZNSt3__18ios_base5clearEj($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 HEAP32[$this + 16 >> 2] = (HEAP32[$this + 24 >> 2] | 0) == 0 | $state;
 return;
}

function _strtoull_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoull($s, $p, $base) | 0;
 return $0 | 0;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 31](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEwc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c >>> 0 < 128 ? $c & 255 : $dfault) | 0;
}

function __ZN12dwarf2reader13CallFrameInfo13ValOffsetRule9SetOffsetEx($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$this + 8 >> 2] = $0;
 return;
}

function _strtoll_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoll($s, $p, $base) | 0;
 return $0 | 0;
}

function ___cxa_is_pointer_type($type) {
 $type = $type | 0;
 var $3 = 0;
 if (!$type) $3 = 0; else $3 = (___dynamic_cast($type, 584, 632, 0) | 0) != 0;
 return $3 & 1 | 0;
}

function __ZNKSt3__15ctypeIcE9do_narrowEcc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c << 24 >> 24 > -1 ? $c : $dfault) | 0;
}

function __ZN12dwarf2reader10DIEHandler16FindChildHandlerEyNS_8DwarfTagE($this, $0, $1, $tag) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $tag = $tag | 0;
 return 0;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 return ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
}

function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[2360] | 0;
 HEAP32[2360] = $0 + 1;
 HEAP32[$this + 4 >> 2] = $0 + 1;
 return;
}

function __ZNK15google_breakpad15DwarfCUToModule15WarningReporter26uncovered_warnings_enabledEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 38 >> 0] | 0) != 0 | 0;
}

function b12(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(12);
}

function _strchr($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $0 = 0;
 $0 = ___strchrnul($s, $c) | 0;
 return ((HEAP8[$0 >> 0] | 0) == ($c & 255) << 24 >> 24 ? $0 : 0) | 0;
}

function __ZN12dwarf2reader13CallFrameInfo13ValOffsetRule15SetBaseRegisterEj($this, $reg) {
 $this = $this | 0;
 $reg = $reg | 0;
 HEAP32[$this + 4 >> 2] = $reg;
 return;
}

function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 return;
}

function __ZNK12dwarf2reader13CallFrameInfo13UndefinedRule4CopyEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(4) | 0;
 HEAP32[$0 >> 2] = 4932;
 return $0 | 0;
}

function __ZNK12dwarf2reader13CallFrameInfo13SameValueRule4CopyEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(4) | 0;
 HEAP32[$0 >> 2] = 4968;
 return $0 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 8116;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 8052;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 15](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNKSt3__18messagesIwE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}

function __ZNKSt3__18messagesIcE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 return;
}

function b0(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(0);
 return 0;
}

function __ZN15google_breakpad16DwarfCFIToModuleD0Ev($this) {
 $this = $this | 0;
 __ZN15google_breakpad16DwarfCFIToModuleD2Ev($this);
 __ZdlPv($this);
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZN15google_breakpad15DwarfCUToModuleD0Ev($this) {
 $this = $this | 0;
 __ZN15google_breakpad15DwarfCUToModuleD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function __ZN15google_breakpad13StabsToModuleD0Ev($this) {
 $this = $this | 0;
 __ZN15google_breakpad13StabsToModuleD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function b3(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(3);
}

function __ZSt17__throw_bad_allocv() {
 var $0 = 0;
 $0 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw($0 | 0, 552, 73);
}

function __ZN12dwarf2reader13DIEDispatcherD0Ev($this) {
 $this = $this | 0;
 __ZN12dwarf2reader13DIEDispatcherD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this | 0;
 ___assert_fail(26994, 25138, 1175, 30490);
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 ___assert_fail(25109, 25138, 1164, 25224);
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 31](a1 | 0, a2 | 0) | 0;
}

function __ZNSt3__16localeD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$this >> 2] | 0) | 0;
 return;
}

function _wctomb($s, $wc) {
 $s = $s | 0;
 $wc = $wc | 0;
 var $$0 = 0;
 if (!$s) $$0 = 0; else $$0 = _wcrtomb($s, $wc, 0) | 0;
 return $$0 | 0;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this | 0;
 ___assert_fail(30381, 30404, 314, 30490);
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 ___assert_fail(25245, 30404, 303, 25224);
}

function b8(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(8);
 return 0;
}

function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr;
 while (HEAP8[curr >> 0] | 0) curr = curr + 1 | 0;
 return curr - ptr | 0;
}

function b4(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(4);
 return 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _mbrlen($s, $n, $st) {
 $s = $s | 0;
 $n = $n | 0;
 $st = $st | 0;
 return _mbrtowc(0, $s, $n, ($st | 0) != 0 ? $st : 5564) | 0;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 0) | 0;
}

function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __GLOBAL__sub_I_iostream_cpp() {
 __ZNSt3__18ios_base4InitC2Ev(0);
 ___cxa_atexit(163, 28367, ___dso_handle | 0) | 0;
 return;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 63](a1 | 0, a2 | 0);
}

function b16(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(16);
}

function _vsprintf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 return _vsnprintf($s, 2147483647, $fmt, $ap) | 0;
}

function __ZN12dwarf2reader13CallFrameInfo4Rule9SetOffsetEx($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 1) | 0;
}

function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 1) | 0;
}

function _mbsinit($st) {
 $st = $st | 0;
 var $4 = 0;
 if (!$st) $4 = 1; else $4 = (HEAP32[$st >> 2] | 0) == 0;
 return $4 & 1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function _do_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 return ___string_read($f, $buf, $len) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNK15google_breakpad15DwarfCUToModule11FileContext11section_mapEv($this) {
 $this = $this | 0;
 return $this + 12 | 0;
}

function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16locale5__imp12make_classicEv() {
 __ZNSt3__16locale5__impC2Ej(2136, 1);
 HEAP32[2553] = 2136;
 return 10212;
}

function __ZN12dwarf2reader13CallFrameInfo4Rule15SetBaseRegisterEj($this, $reg) {
 $this = $this | 0;
 $reg = $reg | 0;
 return;
}

function b18(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(18);
 return 0;
}

function _llvm_bswap_i32(x) {
 x = x | 0;
 return (x & 255) << 24 | (x >> 8 & 255) << 16 | (x >> 16 & 255) << 8 | x >>> 24 | 0;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}

function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function b9(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = +p4;
 abort(9);
 return 0;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN15google_breakpad11DumpSymbols17LoadCommandDumperD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 127](a1 | 0) | 0;
}

function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 12 >> 2] | 0;
}

function __ZN15google_breakpad6mach_o6Reader13SectionMapperD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}

function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 9 >> 0] | 0;
}

function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 8 >> 0] | 0;
}

function __ZN12dwarf2reader13CallFrameInfo13ValOffsetRuleD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo13UndefinedRuleD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo13SameValueRuleD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__15ctypeIwE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c << 24 >> 24 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo12RegisterRuleD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function b2(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(2);
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[1399] | 0;
 HEAP32[1399] = $0 + 0;
 return $0 | 0;
}

function __ZN12dwarf2reader13CallFrameInfo10OffsetRuleD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function b15(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(15);
 return 0;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZN15google_breakpad17AssemblerLanguageD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function __ZN12dwarf2reader13CallFrameInfo7Handler13SignalHandlerEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNK15google_breakpad17AssemblerLanguage12HasFunctionsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZN15google_breakpad6mach_o6Reader18LoadCommandHandlerD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN15google_breakpad15DwarfCUToModule13EndAttributesEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZnwjRKSt9nothrow_t($size, $0) {
 $size = $size | 0;
 $0 = $0 | 0;
 return __Znwj($size) | 0;
}

function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__15ctypeIcE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c | 0;
}

function __ZN15google_breakpad12JavaLanguageD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZN15google_breakpad6mach_o6Reader14SectionHandlerD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN15google_breakpad11CPPLanguageD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 1;
}

function b19(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(19);
}

function __ZN12dwarf2reader10ByteReaderD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _isspace($c) {
 $c = $c | 0;
 return (($c | 0) == 32 | ($c + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function _isdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return ($c + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNK15google_breakpad8Language12HasFunctionsEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZN12dwarf2reader10DIEHandler13EndAttributesEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt9bad_allocC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 5584;
 return;
}

function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}

function b1(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(1);
 return 0;
}

function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN12dwarf2reader13CallFrameInfo4RuleD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN12dwarf2reader10DIEHandler6FinishEv($this) {
 $this = $this | 0;
 return;
}

function _isxdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return _isxdigit($c) | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _copysignl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_copysign($x, $y));
}

function _scalbnl($x, $n) {
 $x = +$x;
 $n = $n | 0;
 return +(+_scalbn($x, $n));
}

function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg | 0;
 return;
}

function __ZN16MacFileUtilities7MachoIDD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN15google_breakpad8LanguageD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN12dwarf2reader10ByteReaderD2Ev($this) {
 $this = $this | 0;
 return;
}

function b11(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(11);
}

function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 3]();
}

function _frexpl($x, $e) {
 $x = +$x;
 $e = $e | 0;
 return +(+_frexp($x, $e));
}

function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 25317;
}

function _isupper($c) {
 $c = $c | 0;
 return ($c + -65 | 0) >>> 0 < 26 | 0;
}

function _fmodl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_fmod($x, $y));
}

function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this | 0;
 return;
}

function b17(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(17);
 return 0;
}

function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function __Znaj($size) {
 $size = $size | 0;
 return __Znwj($size) | 0;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZdaPv($ptr) {
 $ptr = $ptr | 0;
 __ZdlPv($ptr);
 return;
}

function __ZNSt9type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9exceptionD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 _free($ptr);
 return;
}

function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function b7(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(7);
}

function b10(p0) {
 p0 = p0 | 0;
 abort(10);
 return 0;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function _NXGetLocalArchInfo() {
 return 5088;
}

function stackSave() {
 return STACKTOP | 0;
}

function b5(p0) {
 p0 = p0 | 0;
 abort(5);
}

function b13() {
 abort(13);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZN15google_breakpad13StabsToModule18EndCompilationUnitEy,__ZN15google_breakpad13StabsToModule11EndFunctionEy,__ZN15google_breakpad6mach_o6Reader18LoadCommandHandler14UnknownCommandEjRKNS_10ByteBufferE,__ZN15google_breakpad11DumpSymbols17LoadCommandDumper13SymtabCommandERKNS_10ByteBufferES4_,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,_do_read,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,__ZN15google_breakpad15DwarfCUToModule24ProcessAttributeUnsignedEN12dwarf2reader14DwarfAttributeENS1_9DwarfFormEy,__ZN15google_breakpad15DwarfCUToModule22ProcessAttributeSignedEN12dwarf2reader14DwarfAttributeENS1_9DwarfFormEx,__ZN12dwarf2reader10DIEHandler25ProcessAttributeReferenceENS_14DwarfAttributeENS_9DwarfFormEy,__ZN12dwarf2reader10DIEHandler25ProcessAttributeSignatureENS_14DwarfAttributeENS_9DwarfFormEy,__ZN15google_breakpad15DwarfCUToModule15WarningReporter20UnknownSpecificationEyy,__ZN15google_breakpad15DwarfCUToModule15WarningReporter21UnknownAbstractOriginEyy,__ZN15google_breakpad15DwarfCUToModule15WarningReporter25UnhandledInterCUReferenceEyy,__ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler24ProcessAttributeUnsignedEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy,__ZN12dwarf2reader10DIEHandler22ProcessAttributeSignedENS_14DwarfAttributeENS_9DwarfFormEx,__ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler25ProcessAttributeReferenceEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy,__ZN15google_breakpad15DwarfCUToModule11FuncHandler24ProcessAttributeUnsignedEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy,__ZN15google_breakpad15DwarfCUToModule11FuncHandler22ProcessAttributeSignedEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEx,__ZN15google_breakpad15DwarfCUToModule11FuncHandler25ProcessAttributeReferenceEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormEy,__ZN12dwarf2reader13CallFrameInfo8Reporter20CIEPointerOutOfRangeEyy,__ZN12dwarf2reader13CallFrameInfo8Reporter8BadCIEIdEyy,__ZN12dwarf2reader13CallFrameInfo8Reporter12RestoreInCIEEyy,__ZN15google_breakpad6mach_o6Reader8Reporter15CPUTypeMismatchEiiii,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2];
var FUNCTION_TABLE_viiiiiii = [b3,__ZN12dwarf2reader13DIEDispatcher24ProcessAttributeUnsignedEyNS_14DwarfAttributeENS_9DwarfFormEy,__ZN12dwarf2reader13DIEDispatcher22ProcessAttributeSignedEyNS_14DwarfAttributeENS_9DwarfFormEx,__ZN12dwarf2reader13DIEDispatcher25ProcessAttributeReferenceEyNS_14DwarfAttributeENS_9DwarfFormEy,__ZN12dwarf2reader13DIEDispatcher25ProcessAttributeSignatureEyNS_14DwarfAttributeENS_9DwarfFormEy,b3,b3,b3];
var FUNCTION_TABLE_iiiiiid = [b4,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b4];
var FUNCTION_TABLE_vi = [b5,__ZN15google_breakpad16DwarfCFIToModule8ReporterD2Ev,__ZN15google_breakpad16DwarfCFIToModule8ReporterD0Ev,__ZN15google_breakpad16DwarfCFIToModuleD2Ev,__ZN15google_breakpad16DwarfCFIToModuleD0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZN15google_breakpad15DwarfCUToModuleD2Ev,__ZN15google_breakpad15DwarfCUToModuleD0Ev,__ZN15google_breakpad15DwarfCUToModule6FinishEv,__ZN15google_breakpad15DwarfCUToModule15WarningReporterD2Ev,__ZN15google_breakpad15DwarfCUToModule15WarningReporterD0Ev,__ZN15google_breakpad15DwarfCUToModule17GenericDIEHandlerD2Ev,__ZN15google_breakpad15DwarfCUToModule17GenericDIEHandlerD0Ev,__ZN12dwarf2reader10DIEHandler6FinishEv,__ZN15google_breakpad15DwarfCUToModule11FuncHandlerD2Ev,__ZN15google_breakpad15DwarfCUToModule11FuncHandlerD0Ev,__ZN15google_breakpad15DwarfCUToModule11FuncHandler6FinishEv,__ZN15google_breakpad15DwarfCUToModule17NamedScopeHandlerD2Ev,__ZN15google_breakpad15DwarfCUToModule17NamedScopeHandlerD0Ev,__ZN15google_breakpad17DwarfLineToModuleD2Ev
,__ZN15google_breakpad17DwarfLineToModuleD0Ev,__ZN15google_breakpad8LanguageD2Ev,__ZN15google_breakpad11CPPLanguageD0Ev,__ZN15google_breakpad12JavaLanguageD0Ev,__ZN15google_breakpad17AssemblerLanguageD0Ev,__ZN15google_breakpad13StabsToModuleD2Ev,__ZN15google_breakpad13StabsToModuleD0Ev,__ZN12dwarf2reader10ByteReaderD2Ev,__ZN12dwarf2reader10ByteReaderD0Ev,__ZN12dwarf2reader13DIEDispatcherD2Ev,__ZN12dwarf2reader13DIEDispatcherD0Ev,__ZN12dwarf2reader13CallFrameInfo8ReporterD2Ev,__ZN12dwarf2reader13CallFrameInfo8ReporterD0Ev,__ZN12dwarf2reader15CompilationUnitD2Ev,__ZN12dwarf2reader15CompilationUnitD0Ev,__ZN12dwarf2reader8LineInfoD2Ev,__ZN12dwarf2reader8LineInfoD0Ev,__ZN12dwarf2reader13CallFrameInfo4RuleD2Ev,__ZN12dwarf2reader13CallFrameInfo10OffsetRuleD0Ev,__ZN12dwarf2reader13CallFrameInfo13ValOffsetRuleD0Ev,__ZN12dwarf2reader13CallFrameInfo17ValExpressionRuleD2Ev,__ZN12dwarf2reader13CallFrameInfo17ValExpressionRuleD0Ev,__ZN12dwarf2reader13CallFrameInfo13UndefinedRuleD0Ev,__ZN12dwarf2reader13CallFrameInfo13SameValueRuleD0Ev,__ZN12dwarf2reader13CallFrameInfo12RegisterRuleD0Ev,__ZN12dwarf2reader13CallFrameInfo14ExpressionRuleD2Ev,__ZN12dwarf2reader13CallFrameInfo14ExpressionRuleD0Ev,__ZN15google_breakpad6mach_o6Reader18LoadCommandHandlerD2Ev,__ZN15google_breakpad11DumpSymbols17LoadCommandDumperD0Ev,__ZN15google_breakpad11DumpSymbols18DumperLineToModuleD2Ev
,__ZN15google_breakpad11DumpSymbols18DumperLineToModuleD0Ev,__ZN15google_breakpad6mach_o9FatReader8ReporterD2Ev,__ZN15google_breakpad6mach_o9FatReader8ReporterD0Ev,__ZN15google_breakpad6mach_o9FatReader8Reporter9BadHeaderEv,__ZN15google_breakpad6mach_o9FatReader8Reporter19MisplacedObjectFileEv,__ZN15google_breakpad6mach_o9FatReader8Reporter8TooShortEv,__ZN15google_breakpad6mach_o6Reader8ReporterD2Ev,__ZN15google_breakpad6mach_o6Reader8ReporterD0Ev,__ZN15google_breakpad6mach_o6Reader8Reporter9BadHeaderEv,__ZN15google_breakpad6mach_o6Reader8Reporter15HeaderTruncatedEv,__ZN15google_breakpad6mach_o6Reader8Reporter26LoadCommandRegionTruncatedEv,__ZN15google_breakpad6mach_o6Reader8Reporter20MisplacedSymbolTableEv,__ZN15google_breakpad6mach_o6Reader14SectionHandlerD2Ev,__ZN15google_breakpad6mach_o6Reader13SectionMapperD0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__111__stdoutbufIcED0Ev,__ZNSt3__110__stdinbufIcED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev
,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev
,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,__ZNSt3__18ios_base4InitD2Ev,__ZNSt3__112__do_nothingEPv,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor,___cxx_global_array_dtor46,___cxx_global_array_dtor61,___cxx_global_array_dtor85,___cxx_global_array_dtor109,___cxx_global_array_dtor112,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,_free,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiiiiii = [b6,__ZN15google_breakpad16DwarfCFIToModule5EntryEjyyhRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj];
var FUNCTION_TABLE_vii = [b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZN15google_breakpad15DwarfCUToModule15WarningReporter9SetCUNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE,__ZN15google_breakpad15DwarfCUToModule15WarningReporter30set_uncovered_warnings_enabledEb,__ZN15google_breakpad15DwarfCUToModule15WarningReporter14MissingSectionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE,__ZN15google_breakpad15DwarfCUToModule15WarningReporter17UncoveredFunctionERKNS_6Module8FunctionE,__ZN15google_breakpad15DwarfCUToModule15WarningReporter13UncoveredLineERKNS_6Module4LineE,__ZN12dwarf2reader13CallFrameInfo4Rule15SetBaseRegisterEj,__ZN12dwarf2reader13CallFrameInfo13ValOffsetRule15SetBaseRegisterEj,__ZN15google_breakpad11DumpSymbols18DumperLineToModule20StartCompilationUnitERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE,__ZN15google_breakpad6mach_o6Reader8Reporter15SectionsMissingERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN15google_breakpad6mach_o6Reader8Reporter20MisplacedSegmentDataERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN15google_breakpad6mach_o6Reader8Reporter18UnsupportedCPUTypeEi,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv
,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiiii = [b8,__ZN15google_breakpad16DwarfCFIToModule10OffsetRuleEyiil,__ZN15google_breakpad16DwarfCFIToModule13ValOffsetRuleEyiil,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_iiiiid = [b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9];
var FUNCTION_TABLE_ii = [b10,__ZN15google_breakpad16DwarfCFIToModule3EndEv,__ZN12dwarf2reader13CallFrameInfo7Handler13SignalHandlerEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZN15google_breakpad15DwarfCUToModule13EndAttributesEv,__ZNK15google_breakpad15DwarfCUToModule15WarningReporter26uncovered_warnings_enabledEv,__ZN12dwarf2reader10DIEHandler13EndAttributesEv,__ZN15google_breakpad15DwarfCUToModule11FuncHandler13EndAttributesEv,__ZN15google_breakpad15DwarfCUToModule17NamedScopeHandler13EndAttributesEv,__ZNK15google_breakpad8Language12HasFunctionsEv,__ZNK15google_breakpad17AssemblerLanguage12HasFunctionsEv,__ZNK12dwarf2reader13CallFrameInfo10OffsetRule4CopyEv,__ZNK12dwarf2reader13CallFrameInfo13ValOffsetRule4CopyEv,__ZNK12dwarf2reader13CallFrameInfo17ValExpressionRule4CopyEv,__ZNK12dwarf2reader13CallFrameInfo13UndefinedRule4CopyEv,__ZNK12dwarf2reader13CallFrameInfo13SameValueRule4CopyEv,__ZNK12dwarf2reader13CallFrameInfo12RegisterRule4CopyEv,__ZNK12dwarf2reader13CallFrameInfo14ExpressionRule4CopyEv,__ZNKSt9bad_alloc4whatEv,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv
,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv
,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_viii = [b11,__ZN15google_breakpad16DwarfCFIToModule8Reporter15UnnamedRegisterEji,__ZN15google_breakpad16DwarfCFIToModule8Reporter21UndefinedNotSupportedEjRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE,__ZN15google_breakpad16DwarfCFIToModule8Reporter23ExpressionsNotSupportedEjRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE,__ZN15google_breakpad15DwarfCUToModule15WarningReporter17BadLineInfoOffsetEy,__ZN15google_breakpad15DwarfCUToModule15WarningReporter15UnnamedFunctionEy,__ZN15google_breakpad15DwarfCUToModule15WarningReporter13DemangleErrorERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi,__ZN15google_breakpad17DwarfLineToModule9DefineDirERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj,__ZN15google_breakpad13StabsToModule7WarningEPKcz,__ZN12dwarf2reader13DIEDispatcher6EndDIEEy,__ZN12dwarf2reader13CallFrameInfo8Reporter17EarlyEHTerminatorEy,__ZN12dwarf2reader13CallFrameInfo4Rule9SetOffsetEx,__ZN12dwarf2reader13CallFrameInfo13ValOffsetRule9SetOffsetEx,__ZN15google_breakpad6mach_o6Reader8Reporter19LoadCommandTooShortEjj,__ZN15google_breakpad6mach_o6Reader8Reporter20MisplacedSectionDataERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_,__ZN16MacFileUtilities7MachoID9UpdateMD5EPhj];
var FUNCTION_TABLE_viiiiiiii = [b12,__ZN15google_breakpad17DwarfLineToModule10DefineFileERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEijyy,__ZN15google_breakpad17DwarfLineToModule7AddLineEyyjjj,__ZN12dwarf2reader13DIEDispatcher22ProcessAttributeBufferEyNS_14DwarfAttributeENS_9DwarfFormEPKcy];
var FUNCTION_TABLE_v = [b13,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b13];
var FUNCTION_TABLE_iiiiiiiii = [b14,__ZN15google_breakpad15DwarfCUToModule20StartCompilationUnitEyhhyh,__ZN12dwarf2reader13DIEDispatcher20StartCompilationUnitEyhhyh,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b14,b14,b14];
var FUNCTION_TABLE_iiiii = [b15,__ZN15google_breakpad16DwarfCFIToModule13UndefinedRuleEyi,__ZN15google_breakpad16DwarfCFIToModule13SameValueRuleEyi,__ZN12dwarf2reader13CallFrameInfo7Handler18PersonalityRoutineEyb,__ZN12dwarf2reader13CallFrameInfo7Handler24LanguageSpecificDataAreaEyb,__ZN15google_breakpad15DwarfCUToModule16FindChildHandlerEyN12dwarf2reader8DwarfTagE,__ZN15google_breakpad15DwarfCUToModule12StartRootDIEEyN12dwarf2reader8DwarfTagE,__ZN12dwarf2reader10DIEHandler16FindChildHandlerEyNS_8DwarfTagE,__ZN15google_breakpad15DwarfCUToModule17NamedScopeHandler16FindChildHandlerEyN12dwarf2reader8DwarfTagE,__ZN15google_breakpad13StabsToModule13StartFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy,__ZN15google_breakpad13StabsToModule6ExternERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy,__ZN12dwarf2reader13DIEDispatcher8StartDIEEyNS_8DwarfTagE,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_viiiiii = [b16,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZN12dwarf2reader10DIEHandler22ProcessAttributeBufferENS_14DwarfAttributeENS_9DwarfFormEPKcy,__ZN12dwarf2reader13DIEDispatcher22ProcessAttributeStringEyNS_14DwarfAttributeENS_9DwarfFormERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE,__ZN12dwarf2reader13CallFrameInfo8Reporter14BadInstructionEyNS0_9EntryKindEy,__ZN12dwarf2reader13CallFrameInfo8Reporter9NoCFARuleEyNS0_9EntryKindEy,__ZN12dwarf2reader13CallFrameInfo8Reporter15EmptyStateStackEyNS0_9EntryKindEy,__ZN12dwarf2reader13CallFrameInfo8Reporter15ClearingCFARuleEyNS0_9EntryKindEy,__ZN15google_breakpad11DumpSymbols18DumperLineToModule11ReadProgramEPKcyPNS_6ModuleEPNSt3__16vectorINS4_4LineENS6_9allocatorIS8_EEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE];
var FUNCTION_TABLE_iii = [b17,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNK12dwarf2reader13CallFrameInfo10OffsetRuleeqERKNS0_4RuleE,__ZNK12dwarf2reader13CallFrameInfo13ValOffsetRuleeqERKNS0_4RuleE,__ZNK12dwarf2reader13CallFrameInfo17ValExpressionRuleeqERKNS0_4RuleE,__ZNK12dwarf2reader13CallFrameInfo13UndefinedRuleeqERKNS0_4RuleE,__ZNK12dwarf2reader13CallFrameInfo13SameValueRuleeqERKNS0_4RuleE,__ZNK12dwarf2reader13CallFrameInfo12RegisterRuleeqERKNS0_4RuleE,__ZNK12dwarf2reader13CallFrameInfo14ExpressionRuleeqERKNS0_4RuleE,__ZN15google_breakpad11DumpSymbols17LoadCommandDumper14SegmentCommandERKNS_6mach_o7SegmentE,__ZN15google_breakpad6mach_o6Reader13SectionMapper13HandleSectionERKNS0_7SectionE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,__ZN15google_breakpad6Module8Function16CompareByAddressEPKS1_S3_,__ZN15google_breakpad6Module4Line16CompareByAddressERKS1_S3_,__ZNK12dwarf2reader10ByteReader13ReadFourBytesEPKc
,__ZNK12dwarf2reader10ByteReader14ReadEightBytesEPKc,__ZL25StackFrameEntryComparatorPKN15google_breakpad6Module15StackFrameEntryES3_,b17];
var FUNCTION_TABLE_iiiiii = [b18,__ZN15google_breakpad16DwarfCFIToModule12RegisterRuleEyii,__ZN15google_breakpad16DwarfCFIToModule14ExpressionRuleEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZN15google_breakpad16DwarfCFIToModule17ValExpressionRuleEyiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZN15google_breakpad13StabsToModule20StartCompilationUnitEPKcyS2_,__ZN15google_breakpad13StabsToModule4LineEyPKci,__ZNK12dwarf2reader13CallFrameInfo10OffsetRule6HandleEPNS0_7HandlerEyi,__ZNK12dwarf2reader13CallFrameInfo13ValOffsetRule6HandleEPNS0_7HandlerEyi,__ZNK12dwarf2reader13CallFrameInfo17ValExpressionRule6HandleEPNS0_7HandlerEyi,__ZNK12dwarf2reader13CallFrameInfo13UndefinedRule6HandleEPNS0_7HandlerEyi,__ZNK12dwarf2reader13CallFrameInfo13SameValueRule6HandleEPNS0_7HandlerEyi,__ZNK12dwarf2reader13CallFrameInfo12RegisterRule6HandleEPNS0_7HandlerEyi,__ZNK12dwarf2reader13CallFrameInfo14ExpressionRule6HandleEPNS0_7HandlerEyi,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j
,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZN16MacFileUtilities7MachoID12UUIDWalkerCBEPNS_11MachoWalkerEP12load_commandibPv,__ZN16MacFileUtilities7MachoID8WalkerCBEPNS_11MachoWalkerEP12load_commandibPv,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_viiii = [b19,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZN15google_breakpad15DwarfCUToModule22ProcessAttributeStringEN12dwarf2reader14DwarfAttributeENS1_9DwarfFormERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN15google_breakpad15DwarfCUToModule17GenericDIEHandler22ProcessAttributeStringEN12dwarf2reader14DwarfAttributeENS2_9DwarfFormERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE,__ZNK15google_breakpad11CPPLanguage17MakeQualifiedNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_,__ZNK15google_breakpad12JavaLanguage17MakeQualifiedNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_,__ZNK15google_breakpad17AssemblerLanguage17MakeQualifiedNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_,__ZN12dwarf2reader13CallFrameInfo8Reporter10IncompleteEyNS0_9EntryKindE,__ZN12dwarf2reader13CallFrameInfo8Reporter19UnrecognizedVersionEyi,__ZN12dwarf2reader13CallFrameInfo8Reporter24UnrecognizedAugmentationEyRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE,__ZN12dwarf2reader13CallFrameInfo8Reporter22InvalidPointerEncodingEyh,__ZN12dwarf2reader13CallFrameInfo8Reporter23UnusablePointerEncodingEyh,__ZN15google_breakpad6mach_o6Reader8Reporter19LoadCommandsOverrunEjjj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19];

  return { _malloc: _malloc, ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _bitshift64Ashr: _bitshift64Ashr, _i64Subtract: _i64Subtract, _memset: _memset, ___cxa_demangle: ___cxa_demangle, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _llvm_bswap_i32: _llvm_bswap_i32, _bitshift64Shl: _bitshift64Shl, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_iiiiiiiiii: dynCall_iiiiiiiiii, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _bitshift64Ashr = Module["_bitshift64Ashr"] = asm["_bitshift64Ashr"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






